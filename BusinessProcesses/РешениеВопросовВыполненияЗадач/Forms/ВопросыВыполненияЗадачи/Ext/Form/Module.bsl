
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Параметры.Задача) Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	ЗадачаПараметр = Параметры.Задача;
	СписокВопросов.Параметры.УстановитьЗначениеПараметра("ПредметРассмотрения", ЗадачаПараметр);
	
	ИспользоватьВремяВСрокахЗадач = ПолучитьФункциональнуюОпцию("ИспользоватьДатуИВремяВСрокахЗадач");
	
	ФорматДатыДляКолонок = ?(ИспользоватьВремяВСрокахЗадач, 
		"ДФ='dd.MM.yy H:mm'",
		"ДФ='dd.MM.yy'");
	
	Элементы.СписокВопросовДата.Формат = ФорматДатыДляКолонок;
	Элементы.СписокВопросовСтарыйСрок.Формат = ФорматДатыДляКолонок;
	Элементы.СписокВопросовНовыйСрок.Формат = ФорматДатыДляКолонок;
	
	Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = 'Вопросы выполнения задачи: %1'; en = 'Issues of task execution : %1'"),
		ЗадачаПараметр);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ЗаданВопросАвторуЗадачи" И Параметр = ЗадачаПараметр 
		ИЛИ ИмяСобытия = "ЗадачаВыполнена" Тогда
		Элементы.СписокВопросов.Обновить();
	КонецЕсли;
		
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокВопросовПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Отказ = Истина;
	
	ЗначенияЗаполнения = Новый Структура;
	ЗначенияЗаполнения.Вставить("Задача", ЗадачаПараметр);
	ЗначенияЗаполнения.Вставить("ВидВопроса", ПредопределенноеЗначение("Перечисление.ВидыВопросовВыполненияЗадач.Иное"));
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ЗначенияЗаполнения", ЗначенияЗаполнения);
	
	ОткрытьФорму("БизнесПроцесс.РешениеВопросовВыполненияЗадач.ФормаОбъекта", ПараметрыФормы, Элемент);
	
КонецПроцедуры

#КонецОбласти


