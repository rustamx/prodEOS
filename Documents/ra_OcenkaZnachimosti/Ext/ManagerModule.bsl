#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Процедура АктуализироватьМассивОбязательныхРеквизитов(МассивРеквизитов, ДокументОбъект) Экспорт
	
	Если Документы.ra_Nesootvetstvie.ЭтоАудитПроцессов(ДокументОбъект.Nesootvetstvie) Тогда
		
		ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(МассивРеквизитов, "Organizaciya");
		ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(МассивРеквизитов, "TipNesootvetstviya");
		ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(МассивРеквизитов, "VidNesootvetstviya");
				
	КонецЕсли;
		
КонецПроцедуры

#Область Печать

Процедура ДобавитьКомандыПечати(КомандыПечати, СтруктураПараметров = Неопределено) Экспорт
	
	ра_ОбщегоНазначения.ВыполнитьЗаполнениеКомандПечатиДокументаЕОС(КомандыПечати, СтруктураПараметров);
	
КонецПроцедуры

#КонецОбласти

#Область УправлениеДоступом

// Проверяет наличие метода.
// 
Функция ЕстьМетодЗаполнитьДескрипторыОбъекта() Экспорт
	
	Возврат Истина;
	
КонецФункции

// Заполняет переданную таблицу дескрипторов объекта.
// 
Процедура ЗаполнитьДескрипторыОбъекта(ОбъектДоступа, ТаблицаДескрипторов, ПротоколРасчетаПрав = Неопределено) Экспорт
	
	Документы.ra_Nesootvetstvie.ЗаполнитьДескрипторыПроизводныхДокументов(ОбъектДоступа, ТаблицаДескрипторов, ПротоколРасчетаПрав = Неопределено);
	
КонецПроцедуры

// Заполняет переданный дескриптор доступа
//
Процедура ЗаполнитьОсновнойДескриптор(ОбъектДоступа, ДескрипторДоступа) Экспорт
	
	Документы.ra_Nesootvetstvie.ЗаполнитьОсновнойДескриптор(ОбъектДоступа, ДескрипторДоступа);
	
КонецПроцедуры

// Возвращает строку, содержащую перечисление полей доступа через запятую
// Это перечисление используется в дальнейшем для передачи в метод 
// ОбщегоНазначения.ЗначенияРеквизитовОбъекта()
Функция ПолучитьПоляДоступа() Экспорт
	
	Возврат Документы.ra_Nesootvetstvie.ПолучитьПоляДоступаПроизводногоДокумента();
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область ИнтеграцияBitrix

Функция ЕстьМетодЗаголовокФормы() Экспорт
	
	Возврат Истина;
	
КонецФункции

Функция ЗаголовокФормы(ДокументОбъект) Экспорт
	
	КоличествоОценокЗначимости = КоличествоОценокЗначимости(ДокументОбъект.Nesootvetstvie);
	
	Если КоличествоОценокЗначимости > 0 Тогда
		Возврат НСтр("ru = 'Уточнение оценки значимости'; en = 'Refinement of significance assessment'");
	Иначе
		Возврат ДокументОбъект.Метаданные().Синоним;
	КонецЕсли;
	
КонецФункции

Процедура СформироватьМассивДанныхGetList(Результат, ПолноеИмя, ПараметрыЗапросаHTTP) Экспорт
	
	ОбъектМетаданных = Метаданные.Документы.ra_OcenkaZnachimosti;
	
	ТаблицаРеквизитов = ра_ОбменДанными.ПолучитьТаблицуРеквизитовОбъекта(ОбъектМетаданных);
	
	АктуализироватьТаблицуРеквизитов(ТаблицаРеквизитов);
	
	ТекстЗапросаВложенныеТаблицы = ПолучитьТекстЗапросаВложенныеТаблицы();
	ТекстЗапросаСоединений = ПолучитьТекстЗапросаСоединений();
	
	Запрос = ра_ОбменДанными.ПолучитьЗапрос(ТаблицаРеквизитов, ПараметрыЗапросаHTTP, ПолноеИмя, ТекстЗапросаВложенныеТаблицы, ТекстЗапросаСоединений);
	
	МассивДанных = ра_ОбменДанными.СформироватьМассивДанныхИзЗапроса(Запрос);
	
	//Добавим слова "рублей" и "дней" для полей
	Для каждого Элемент Из МассивДанных Цикл
		Элемент.SdvigGrafika____Presentation = Элемент.SdvigGrafika____Presentation + " " + НСтр("ru = 'дней'; en = 'days'");
		Элемент.StoimostUstraneniyaNesootvetstviya____Presentation = Элемент.StoimostUstraneniyaNesootvetstviya____Presentation + " " + НСтр("ru = 'рублей'; en = 'rubles'");
	КонецЦикла;
	
	Результат.Вставить("value", МассивДанных);
	
	НастройкаФормы = ПараметрыЗапросаHTTP.Получить("$form_settings");
	Если ЗначениеЗаполнено(НастройкаФормы) И НастройкаФормы Тогда
		МассивКолонок = ПолучитьПолучитьМассивКолонокСписка();
		МассивКнопок = ПолучитьМассивКнопок(Запрос.Параметры);
		МассивФильтров = ПолучитьМассивФильтровСписка();
		Результат.Вставить("form_settings", МассивКолонок);
		Результат.Вставить("button_settings", МассивКнопок);
		Результат.Вставить("filter_settings", МассивФильтров);
	КонецЕсли;
	
КонецПроцедуры

Процедура АктуализироватьТаблицуРеквизитов(ТаблицаРеквизитов)
	
КонецПроцедуры

Функция ПолучитьТекстЗапросаВложенныеТаблицы() Экспорт
	
	Возврат "";
	
КонецФункции

Функция ПолучитьТекстЗапросаСоединений() Экспорт
	
	Возврат "";
	
КонецФункции

Функция СформироватьМассивДанныхРолевойМодели(ДокументОбъект, ПараметрыФормирования = Неопределено) Экспорт
	
	Возврат Обработки.ра_ФормыБитрикс.Создать().ОписаниеФормы(ДокументОбъект.Метаданные(), ДокументОбъект);
	
КонецФункции

Функция ПолучитьМассивКнопок(ДокументОбъект) Экспорт
	
	МассивКнопок = Новый Массив;
	
	ВидФормы = "ФормаОбъекта";
	Несоответствие = Документы.ra_Nesootvetstvie.ПустаяСсылка();
	Если ТипЗнч(ДокументОбъект) = Тип("Структура") Тогда
		ВидФормы = "ФормаСписка";
		Если ДокументОбъект.Свойство("Nesootvetstvie") Тогда
			Несоответствие = ДокументОбъект.Nesootvetstvie;
		КонецЕсли;
	Иначе
		Несоответствие = ДокументОбъект.Nesootvetstvie;
	КонецЕсли;
	
	Если ВидФормы = "ФормаОбъекта" Тогда
		
		ИмяКнопки = "Check";
		ОписаниеКнопки = НСтр("ru = 'Проверить'; en = 'Check'");
		КнопкаПроверить = ра_ОбменДанными.ПолучитьСтруктуруНастроекКнопки(ИмяКнопки, ОписаниеКнопки);
		КнопкаПроверить.Availability = Истина;
		КнопкаПроверить.Visibility = КнопкаПроверить.Availability;
		
		ИмяКнопки = "Save";
		ОписаниеКнопки = НСтр("ru = 'Сохранить'; en = 'Save'");
		КнопкаОтправить = ра_ОбменДанными.ПолучитьСтруктуруНастроекКнопки(ИмяКнопки, ОписаниеКнопки);
		КнопкаОтправить.Availability = Истина;
		КнопкаОтправить.Visibility = КнопкаОтправить.Availability;
		
		МассивКнопок.Добавить(КнопкаПроверить);
		МассивКнопок.Добавить(КнопкаОтправить);
		
	Иначе
		Полномочия = РегистрыСведений.ra_KomandyNesootvetstvij.ПолномочияТекущегоПользователя(Несоответствие);
		
		РезультатыПроверки = Документы.ra_Nesootvetstvie.ПроверитьНаличиеПроизводныхДокументов(Несоответствие,
			Новый Структура("ra_OtchetONesootvetstviiCHast1,ra_AktObUstraneniiNesootvetstviya"));
		
		КоличествоОценокЗначимости = КоличествоОценокЗначимости(Несоответствие);
		
		ИмяКнопки = "Estimate";
		Если КоличествоОценокЗначимости = 0 Тогда
			ОписаниеКнопки = НСтр("ru = 'Оценить'; en = 'Estimate'");
		Иначе
			ОписаниеКнопки = НСтр("ru = 'Уточнение оценки значимости'; en = 'Refinement of significance assessment'");
		КонецЕсли;
		КнопкаОценить = ра_ОбменДанными.ПолучитьСтруктуруНастроекКнопки(ИмяКнопки, ОписаниеКнопки);
		
		Если Документы.ra_Nesootvetstvie.ЭтоАудитПроцессов(Несоответствие) Тогда
			КнопкаОценить.Availability = Полномочия.ПервыйЛидер И КоличествоОценокЗначимости = 0 И Не РезультатыПроверки.Свойство("ra_OtchetONesootvetstviiCHast1");
		Иначе
			КнопкаОценить.Availability = Полномочия.ПервыйЛидер И
				(Не РезультатыПроверки.Свойство("ra_OtchetONesootvetstviiCHast1") И КоличествоОценокЗначимости = 0
					Или РезультатыПроверки.Свойство("ra_AktObUstraneniiNesootvetstviya") И КоличествоОценокЗначимости = 1);
		КонецЕсли;
		КнопкаОценить.Visibility = КнопкаОценить.Availability;
		
		МассивКнопок.Добавить(КнопкаОценить);
		
	КонецЕсли;
	
	Возврат МассивКнопок;
	
КонецФункции

Функция ПолучитьПолучитьМассивКолонокСписка() Экспорт
	
	МетаданныеДокумента = Метаданные.Документы.ra_OcenkaZnachimosti;
	
	ТаблицаНастроек = ра_ОбменДанными.СформироватьПустуюТаблицуНастроек();
	
	РеквизитыОбъекта = МетаданныеДокумента.Реквизиты;
	СтандартныеРеквизитыОбъекта = МетаданныеДокумента.СтандартныеРеквизиты;
	
	ра_ОбменДанными.ДобавитьСтрокуВТаблицуНастроек(ТаблицаНастроек, РеквизитыОбъекта.TipNesootvetstviya);
	ра_ОбменДанными.ДобавитьСтрокуВТаблицуНастроек(ТаблицаНастроек, РеквизитыОбъекта.VliyanieNaEhkspluataciyu);
	ра_ОбменДанными.ДобавитьСтрокуВТаблицуНастроек(ТаблицаНастроек, РеквизитыОбъекта.SdvigGrafika);
	ра_ОбменДанными.ДобавитьСтрокуВТаблицуНастроек(ТаблицаНастроек, РеквизитыОбъекта.VliyanieNaGrafik);
	ра_ОбменДанными.ДобавитьСтрокуВТаблицуНастроек(ТаблицаНастроек, РеквизитыОбъекта.StoimostUstraneniyaNesootvetstviya);
	ра_ОбменДанными.ДобавитьСтрокуВТаблицуНастроек(ТаблицаНастроек, РеквизитыОбъекта.VliyanieNaByudzhet);
	ра_ОбменДанными.ДобавитьСтрокуВТаблицуНастроек(ТаблицаНастроек, РеквизитыОбъекта.Povtoryaemost);
	ра_ОбменДанными.ДобавитьСтрокуВТаблицуНастроек(ТаблицаНастроек, РеквизитыОбъекта.Organizaciya);
	ра_ОбменДанными.ДобавитьСтрокуВТаблицуНастроек(ТаблицаНастроек, Метаданные.РегистрыСведений.ra_OcenkiZnachimostiNesootvetstvij.Ресурсы.ObemRabot);
	ра_ОбменДанными.ДобавитьСтрокуВТаблицуНастроек(ТаблицаНастроек, РеквизитыОбъекта.ZnachimostNesootvetstviya);
	ра_ОбменДанными.ДобавитьСтрокуВТаблицуНастроек(ТаблицаНастроек, СтандартныеРеквизитыОбъекта.Дата);
	
	МассивДанных = ра_ОбменДанными.СформироватьМассивДанныхИзТаблицыНастроек(ТаблицаНастроек);
	
	Возврат МассивДанных;
	
КонецФункции

Функция ПолучитьМассивФильтровСписка() Экспорт
	
	МассивДанных = Новый Массив;
	
	Возврат МассивДанных;
	
КонецФункции

Функция ПолучитьМассивЗаголовков(МассивДанных = Неопределено) Экспорт
	
	МассивЗаголовков = Новый Массив;
	
	ТаблицаЗаголовков = Новый ТаблицаЗначений;
	ТаблицаЗаголовков.Колонки.Добавить("Name");
	ТаблицаЗаголовков.Колонки.Добавить("Description");
	
	НоваяСтрока = ТаблицаЗаголовков.Добавить();
	НоваяСтрока.Name = "InfluenceOnWorkingCapacity";
	НоваяСтрока.Description = НСтр("ru = 'ВЛИЯНИЕ НА РАБОТОСПОСОБНОСТЬ'; en = 'INFLUENCE ON WORKING CAPACITY'");
	
	НоваяСтрока = ТаблицаЗаголовков.Добавить();
	НоваяСтрока.Name = "InfluenceOnChart";
	НоваяСтрока.Description = НСтр("ru = 'ВЛИЯЕТ НА ГРАФИК'; en = 'INFLUENCE ON CHART'");
	
	НоваяСтрока = ТаблицаЗаголовков.Добавить();
	НоваяСтрока.Name = "EstimatedCost";
	НоваяСтрока.Description = НСтр("ru = 'ОЦЕНОЧНАЯ СТОИМОСТЬ УСТРАНЕНИЯ'; en = 'ESTIMATED COST OF ELIMINATION'");
	
	Для Каждого ТекЭлемент Из МассивДанных Цикл
		
		Если ТекЭлемент.Name = "VidNesootvetstviya" И ТекЭлемент.Visibility
			ИЛИ ТекЭлемент.Name = "NachaloPerioda" И ТекЭлемент.Visibility
			ИЛИ ТекЭлемент.Name = "DataVyyavleniya" И ТекЭлемент.Visibility 
			ИЛИ ТекЭлемент.Name = "PeriodOcenkiPovtoryaemosti" И ТекЭлемент.Visibility Тогда 
			
			НоваяСтрока = ТаблицаЗаголовков.Добавить();
			НоваяСтрока.Name = "Estimation";
			НоваяСтрока.Description = НСтр("ru = 'ОЦЕНКА ПОВТОРЯЕМОСТИ'; en = 'ESTIMATION OF REPEATABILITY'");
		
		КонецЕсли;
		
	КонецЦикла;
	
	НоваяСтрока = ТаблицаЗаголовков.Добавить();
	НоваяСтрока.Name = "InfluenceOnWorkingCapacityYes";
	НоваяСтрока.Description = НСтр("ru = 'Влияет на работоспособность'; en = 'Influence on working capacity'");
	
	НоваяСтрока = ТаблицаЗаголовков.Добавить();
	НоваяСтрока.Name = "InfluenceOnWorkingCapacityNo";
	НоваяСтрока.Description = НСтр("ru = 'Не влияет на работоспособность'; en = 'Not influence on working capacity'");
	
	НоваяСтрока = ТаблицаЗаголовков.Добавить();
	НоваяСтрока.Name = "InfluenceOnChartYes";
	НоваяСтрока.Description = НСтр("ru = 'Влияет на график'; en = 'Influence on chart'");
	
	НоваяСтрока = ТаблицаЗаголовков.Добавить();
	НоваяСтрока.Name = "InfluenceOnChartNo";
	НоваяСтрока.Description = НСтр("ru = 'Не влияет на график'; en = 'Not influence on chart'");
	
	НоваяСтрока = ТаблицаЗаголовков.Добавить();
	НоваяСтрока.Name = "InfluenceOnBudgetYes";
	НоваяСтрока.Description = НСтр("ru = 'Влияет на бюджет'; en = 'Influence on budget'");
	
	НоваяСтрока = ТаблицаЗаголовков.Добавить();
	НоваяСтрока.Name = "InfluenceOnBudgetNo";
	НоваяСтрока.Description = НСтр("ru = 'Не влияет на бюджет'; en = 'Not influence on budget'");
	
	ТаблицаЗаголовков.Свернуть("Name,Description");
	Для Каждого ТекСтрока Из ТаблицаЗаголовков Цикл
		МассивЗаголовков.Добавить(Новый Структура("Name,Description", ТекСтрока.Name, ТекСтрока.Description));
	КонецЦикла;
	
	Возврат МассивЗаголовков;
	
КонецФункции

//V2

Функция ЕстьМетодДополнитьОписаниеМетаданных() Экспорт
	
	Возврат Истина;
	
КонецФункции

Процедура ДополнитьОписаниеМетаданных(ОбработкаОбъект, Данные, ПараметрыФормирования) Экспорт
	
	Nesootvetstvie = Данные.Nesootvetstvie.Метаданные();
	ОбработкаОбъект.ДобавитьПоле("PovtornyeNesootvetstviya", Nesootvetstvie.СтандартныеРеквизиты.Date);
	ОбработкаОбъект.ДобавитьПоле("PovtornyeNesootvetstviya", Nesootvetstvie.Реквизиты.PodrobnoeOpisanie);
	
	//Служебное поле для отображения влияния типа на эксплуатацию
	ОбработкаОбъект.ДобавитьПоле("",
		Новый Структура("Имя,Синоним,Тип", "TipNesootvetstviyaZnachimyi", НСтр("ru = ''; en = ''"), Новый ОписаниеТипов("ПеречислениеСсылка.ra_TipyNesootvetstvij")));
	
	ОбработкаОбъект.ЗаместитьДанные("TipNesootvetstviyaZnachimyi", Перечисления.ra_TipyNesootvetstvij.Tip3);
	
	ОбработкаОбъект.ДобавитьИсключения("Ссылка,ПометкаУдаления,Проведен,ВидДокумента");
		
	Если Документы.ra_Nesootvetstvie.ЭтоАудитПроцессов(Данные.Nesootvetstvie) Тогда
		
		ОбработкаОбъект.УстановитьВидимость("ObemRabot", Истина);
		ОбработкаОбъект.УстановитьДоступность("ObemRabot", Истина);
		
	Иначе
		
		ОбработкаОбъект.ЗаместитьДанные("PovtornyeNesootvetstviya", ДополнитьПовторныеНесоответствия(Данные));
		
		ОбработкаОбъект.УстановитьВидимость(
			"DataVyyavleniya,
			|NachaloPerioda,
			|Organizaciya,
			// ТСК Близнюк С.И.; 04.12.2018; task#1660{
			|KlassifikatorMTRiO,
			|UchityvatKlassifikatorMTRiO,
			// ТСК Близнюк С.И.; 04.12.2018; task#1660}
			|PeriodOcenkiPovtoryaemosti,
			|SdvigGrafika,
			|StoimostUstraneniyaNesootvetstviya,
			|TipNesootvetstviya,
			|VidNesootvetstviya,
			|VliyanieNaEhkspluataciyu,
			|VliyanieNaGrafik,
			|VliyanieNaByudzhet,
			|PovtornyeNesootvetstviya,
			|PovtornyeNesootvetstviya.Date,
			|PovtornyeNesootvetstviya.Nesootvetstvie,
			|PovtornyeNesootvetstviya.PodrobnoeOpisanie,
			|PovtornyeNesootvetstviya.Povtornoe", Истина);
		
		ЭтоНовый = Не ОбщегоНазначения.СсылкаСуществует(Данные.Ссылка);
		
		ОбработкаОбъект.УстановитьДоступность(
			"NachaloPerioda,
			|SdvigGrafika,
			// ТСК Близнюк С.И.; 04.12.2018; task#1660{
			|UchityvatKlassifikatorMTRiO,
			// ТСК Близнюк С.И.; 04.12.2018; task#1660}
			|TipNesootvetstviya,
			|VliyanieNaEhkspluataciyu,
			|VliyanieNaGrafik,
			|PovtornyeNesootvetstviya.Povtornoe", ЭтоНовый);
		
		//В первой Оценке значимости не должно быть полей с оценкой ввода стоимости устранения
		ОбработкаОбъект.УстановитьДоступность(
			"StoimostUstraneniyaNesootvetstviya", ЭтоНовый И КоличествоОценокЗначимости(Данные.Nesootvetstvie) = 1);
		
		ОбработкаОбъект.УстановитьСиноним("PeriodOcenkiPovtoryaemosti", НСтр("ru = 'Период оценки, дней'; en = 'Assessment period, days'"));
		
	КонецЕсли;
	
	ОбязательныеРеквизиты = ОбработкаОбъект.ОбязательныеРеквизиты();
	АктуализироватьМассивОбязательныхРеквизитов(ОбязательныеРеквизиты, Данные);
	ОбработкаОбъект.УстановитьОбязательность(ОбязательныеРеквизиты, Истина);
	
КонецПроцедуры

Функция ДополнитьПовторныеНесоответствия(Данные)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Результат = Данные.PovtornyeNesootvetstviya.Выгрузить();
	Результат.Колонки.Добавить("Date");
	Результат.Колонки.Добавить("PodrobnoeOpisanie");
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылки", Результат.ВыгрузитьКолонку("Nesootvetstvie"));
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ra_Nesootvetstvie.Ссылка КАК Ссылка,
	|	ra_Nesootvetstvie.Дата КАК Date,
	|	ra_Nesootvetstvie.PodrobnoeOpisanie КАК PodrobnoeOpisanie
	|ИЗ
	|	Документ.ra_Nesootvetstvie КАК ra_Nesootvetstvie
	|ГДЕ
	|	ra_Nesootvetstvie.Ссылка В(&Ссылки)";
	ДанныеНесоответствий = Запрос.Выполнить().Выгрузить();
	
	Для Каждого СтрокаТаблицы Из Результат Цикл
		ДанныеНесоответствия = ДанныеНесоответствий.Найти(СтрокаТаблицы.Nesootvetstvie, "Ссылка");
		Если ДанныеНесоответствия <> Неопределено Тогда
			ЗаполнитьЗначенияСвойств(СтрокаТаблицы, ДанныеНесоответствия);
		КонецЕсли;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция КоличествоОценокЗначимости(Несоответствие)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Несоответствие", Несоответствие);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЕСТЬNULL(КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ra_OcenkaZnachimosti.Ссылка), 0) КАК Количество
	|ИЗ
	|	Документ.ra_OcenkaZnachimosti КАК ra_OcenkaZnachimosti
	|ГДЕ
	|	ra_OcenkaZnachimosti.Nesootvetstvie = &Несоответствие
	|	И ra_OcenkaZnachimosti.ПометкаУдаления = ЛОЖЬ";
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	Возврат Выборка.Количество;
	
КонецФункции

#КонецОбласти

#КонецЕсли