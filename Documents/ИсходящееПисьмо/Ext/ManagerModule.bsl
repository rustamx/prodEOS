
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ПрограммныйИнтерфейс

// УправлениеДоступом

// Возвращает строку, содержащую перечисление полей доступа через запятую
// Это перечисление используется в дальнейшем для передачи в метод 
// ОбщегоНазначения.ЗначенияРеквизитовОбъекта()
Функция ПолучитьПоляДоступа() Экспорт
	
	Возврат "Ссылка, Папка";
	
КонецФункции

// Заполняет переданный дескриптор доступа
//
Процедура ЗаполнитьОсновнойДескриптор(ОбъектДоступа, ДескрипторДоступа) Экспорт
	
	// Папка
	ДокументооборотПраваДоступа.ЗаполнитьПапкуДескриптораОбъекта(ОбъектДоступа, ДескрипторДоступа);
	
КонецПроцедуры

Функция ЕстьМетодПолучитьПравилаОбработкиНастроекПравПапки() Экспорт
	
	Возврат Истина;
	
КонецФункции

// Возвращает таблицу значений с правилами обработки настроек прав папки,
// которые следует применять для расчета прав объекта
// 
Функция ПолучитьПравилаОбработкиНастроекПравПапки() Экспорт
	
	ТаблицаПравил = ДокументооборотПраваДоступа.ТаблицаПравилОбработкиНастроекПапки();
	
	Стр = ТаблицаПравил.Добавить();
	Стр.Настройка = "ЧтениеПапокИПисем";
	Стр.Чтение = Истина;
	
	Стр = ТаблицаПравил.Добавить();
	Стр.Настройка = "ДобавлениеПапокИПисем";
	Стр.Добавление = Истина;
	
	Стр = ТаблицаПравил.Добавить();
	Стр.Настройка = "ИзменениеПапокИПисем";
	Стр.Изменение = Истина;
	
	Стр = ТаблицаПравил.Добавить();
	Стр.Настройка = "ПометкаУдаленияПапокИПисем";
	Стр.Удаление = Истина;
	
	Возврат ТаблицаПравил;
	
КонецФункции

// Конец УправлениеДоступом

Функция ПолучитьСписокПочтовыхАдресовКонтрагента(Контрагент)
	
	Результат = Новый СписокЗначений;
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	КонтрагентыКонтактнаяИнформация.Представление,
		|	КонтрагентыКонтактнаяИнформация.Ссылка,
		|	КонтрагентыКонтактнаяИнформация.Вид
		|ИЗ
		|	Справочник.Контрагенты.КонтактнаяИнформация КАК КонтрагентыКонтактнаяИнформация
		|ГДЕ
		|	КонтрагентыКонтактнаяИнформация.Ссылка = &Ссылка
		|	И КонтрагентыКонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты)");
	Запрос.УстановитьПараметр("Ссылка", Контрагент);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Если ЗначениеЗаполнено(Выборка.Представление) Тогда
			ПредставлениеАдреса = Выборка.Представление + ВКавычках(Выборка.Вид, "(", ")");
			СтруктураАдреса = Новый Структура("Адрес, Контакт, ОтображаемоеИмя");
			СтруктураАдреса.Адрес = Выборка.Представление;
			СтруктураАдреса.Контакт = Контрагент;
			СтруктураАдреса.ОтображаемоеИмя = Строка(Контрагент);
			Результат.Добавить(СтруктураАдреса, ПредставлениеАдреса, Истина);
		КонецЕсли;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

// Возвращает текст письма в виде HTML
Функция ПолучитьHTMLПредставлениеСодержанияПисьма(РеквизитыПисьма) Экспорт
	
	ТекстHTML = "";
	
	Если РеквизитыПисьма.ТипТекста = Перечисления.ТипыТекстовПочтовыхСообщений.HTML Тогда
		
		ТекстHTML = РегистрыСведений.HTMLПредставленияСодержанияПисем.Прочитать(РеквизитыПисьма.Ссылка);
		
		Если ТекстHTML = Неопределено Тогда
			
			ТекстHTML = РеквизитыПисьма.ТекстПисьмаHTMLХранилище.Получить();
			
			Если ТекстHTML = Неопределено Тогда
				
				ТекстHTML = РеквизитыПисьма.ТекстХранилище.Получить();
				
				Если ТекстHTML = Неопределено Тогда
					
					ТекстHTML = "";
					
				Иначе
					
					РаботаС_HTML.ДобавитьТегиКСсылкам(ТекстHTML);
					
					РегистрыСведений.HTMLПредставленияСодержанияПисем.Записать(РеквизитыПисьма.Ссылка, ТекстHTML);
					
				КонецЕсли;
				
			Иначе
				
				РаботаС_HTML.ДобавитьТегиКСсылкам(ТекстHTML);
				
				РегистрыСведений.HTMLПредставленияСодержанияПисем.Записать(РеквизитыПисьма.Ссылка, ТекстHTML);
				
			КонецЕсли;
			
		КонецЕсли;
		
	Иначе
		
		ТекстHTML = РегистрыСведений.HTMLПредставленияСодержанияПисем.Прочитать(РеквизитыПисьма.Ссылка);
		
		Если ТекстHTML = Неопределено Тогда
			
			ПростойТекст = РеквизитыПисьма.ТекстХранилище.Получить();
			
			Если ПростойТекст = Неопределено Тогда
				
				ТекстHTML = "";
				
			Иначе
				
				ТекстHTML = РаботаС_HTML.ПолучитьHTMLИзТекста(ПростойТекст, РеквизитыПисьма.Кодировка);
				
				РаботаС_HTML.ДобавитьТегиКСсылкам(ТекстHTML);
				
				РегистрыСведений.HTMLПредставленияСодержанияПисем.Записать(РеквизитыПисьма.Ссылка, ТекстHTML);
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	РаботаС_HTML.ПрименитьНастройкиОтображениеПисьма(ТекстHTML);
	
	Возврат ТекстHTML;
	
КонецФункции

// Возвращает имя предмета процесса по умолчанию
//
Функция ПолучитьИмяПредметаПоУмолчанию(Ссылка) Экспорт
	
	Возврат НСтр("ru='Исходящее письмо'; en = 'Outgoing email'");
	
КонецФункции

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияПолейПредставления(Поля, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Поля.Добавить("Тема");
	Поля.Добавить("Дата");
	
КонецПроцедуры

Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Представление = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru='%1 от %2'; en = '%1 of %2'"), Данные.Тема, Строка(Данные.Дата));
	
КонецПроцедуры

Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
	
	Если Параметры.Свойство("Ключ") Тогда
		Письмо = Параметры.Ключ;
		ПодготовленоКОтправке = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Письмо, "ПодготовленоКОтправке");
		Если ЗначениеЗаполнено(ПодготовленоКОтправке) Тогда
			Попытка
				ЗаблокироватьДанныеДляРедактирования(Письмо);
				
				ПисьмоОбъект = Письмо.ПолучитьОбъект();
				ПисьмоОбъект.ПодготовленоКОтправке = Дата(1, 1, 1);
				ПисьмоОбъект.ОтправкаОтменена = Истина;
				ПисьмоОбъект.Записать();
				
				СтандартнаяОбработка = Ложь;
				ВыбраннаяФорма = "ФормаДокумента";
				Параметры.Вставить("ОтправкаОтменена", Истина);
				
			Исключение
				// Письмо заблокировано другим пользователем или в данные момент отправляется,
				// поэтому обновлять реквизит ПодготовленоКОтправке не надо.
			КонецПопытки;
		КонецЕсли;
	КонецЕсли;
	
	Если Параметры.Свойство("Основание")
		И ДелопроизводствоКлиентСервер.ЭтоКонтрагент(Параметры.Основание) Тогда
		СписокПочтовыхАдресов = ПолучитьСписокПочтовыхАдресовКонтрагента(Параметры.Основание);
		Если СписокПочтовыхАдресов.Количество() > 0 Тогда
			Параметры.Вставить("СписокПочтовыхАдресов", СписокПочтовыхАдресов);
			Если СписокПочтовыхАдресов.Количество() > 1 Тогда
				СтандартнаяОбработка = Ложь;
				ВыбраннаяФорма = "ФормаВыбораПочтовогоАдресаКонтрагента";
			Иначе
				СтандартнаяОбработка = Ложь;
				ВыбраннаяФорма = "ФормаДокумента";
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
