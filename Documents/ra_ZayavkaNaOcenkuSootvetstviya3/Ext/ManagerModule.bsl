#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Процедура АктуализироватьМассивОбязательныхРеквизитов(МассивРеквизитов, ДокументОбъект) Экспорт
	
	МассивРеквизитов.Очистить();
	
	//РезультатСоответствует = ДокументОбъект.RezultatProvedeniya = Перечисления.ra_SootvetstvuetIliNet.Sootvetstvuet;
	//
	//ТекущийПользователь = ПользователиКлиентСервер.ТекущийПользователь();
	//СтруктураРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ТекущийПользователь, "ра_Организация.ра_СпециализированнаяОрганизация,ра_Организация.ра_ЭксплуатирующаяОрганизация");
	//ЭтоСпециализированнаяОрганизация = СтруктураРеквизитов["ра_Организацияра_СпециализированнаяОрганизация"];
	//ЭтоЭксплуатирующаяОрганизация = СтруктураРеквизитов["ра_Организацияра_ЭксплуатирующаяОрганизация"];
	//
	//Если ДокументОбъект.Status = Перечисления.ra_StatusyZayavokNaOcenkuSootvetstviya.Zaregistrirovana Тогда
	//	
	//	//"Дата заявки" и "Дата регистрации" всегда обязательны для заполнения
	//	МассивРеквизитов.Добавить("DataZayavki");
	//			
	//	Если ДокументОбъект.FormaOS = Перечисления.ra_FormyOcenkiSootvetstviya.InspekcionnyjKontrol Тогда
	//		
	//		МассивРеквизитов.Добавить("DataRegistracii");
	//		МассивРеквизитов.Добавить("DataPismaOProvedeniiIK");
	//		МассивРеквизитов.Добавить("NomerPismaOProvedeniiIK");
	//		МассивРеквизитов.Добавить("NomerSertifikata");
	//		МассивРеквизитов.Добавить("SkhemaSertifikacii");
	//		МассивРеквизитов.Добавить("DataProgrammy");
	//		МассивРеквизитов.Добавить("NomerProgrammy");
	//		
	//	ИначеЕсли ДокументОбъект.FormaOS = Перечисления.ra_FormyOcenkiSootvetstviya.AttestacionnyeIspytaniya Тогда
	//		
	//		МассивРеквизитов.Добавить("Zayavitel");
	//		МассивРеквизитов.Добавить("Ispolnitel");
	//		
	//		Если ДокументОбъект.VidIspytanij = Перечисления.ra_VidyIspytanij.Attestacionnye Тогда
	//			МассивРеквизитов.Добавить("DataRegistracii");
	//			МассивРеквизитов.Добавить("ObektOcenkiSootvetstviyaObektAttestacionnyhIspytanij");
	//			МассивРеквизитов.Добавить("InformaciyaObObekteOcenkiSootvetstviya");
	//		Иначе
	//			МассивРеквизитов.Добавить("PrikazIliDokumentOsnovanie");
	//			МассивРеквизитов.Добавить("ObektOcenkiSootvetstviyaProdukciya");
	//			МассивРеквизитов.Добавить("KodOKPD2");
	//			МассивРеквизитов.Добавить("KKS_Certifikaciya");
	//			МассивРеквизитов.Добавить("VidProdukciiVSootvetstviiSNP_071_18");
	//			МассивРеквизитов.Добавить("PrikazIliDokumentOsnovanie");
	//											
	//			Если ДокументОбъект.VidIspytanij = Перечисления.ra_VidyIspytanij.PredvaritelnyeKompleksnyeAvtonomnye Тогда
	//				МассивРеквизитов.Добавить("ElementyObektaOcenkiSootvetstviya");
	//			КонецЕсли;
	//		КонецЕсли;
	//		
	//	ИначеЕсли ДокументОбъект.FormaOS = Перечисления.ra_FormyOcenkiSootvetstviya.PoryadokObyazatelnojSertifikacii Тогда
	//		
	//		МассивРеквизитов.Добавить("DataRegistracii");
	//		МассивРеквизитов.Добавить("Zayavitel");
	//		МассивРеквизитов.Добавить("Ispolnitel");
	//		МассивРеквизитов.Добавить("Izgotovitel");
	//		МассивРеквизитов.Добавить("KodOKPD2");
	//		МассивРеквизитов.Добавить("PerechenProdukciiPo277Prikazu");
	//		МассивРеквизитов.Добавить("VidProdukciiVSootvetstviiSNP_071_18");
	//		МассивРеквизитов.Добавить("DataPrinyatiyaResheniya");
	//		МассивРеквизитов.Добавить("NomerResheniyaPoZayavke");
	//		МассивРеквизитов.Добавить("ResheniePoZayavkeOpisanie");
	//		МассивРеквизитов.Добавить("ObektOcenkiSootvetstviyaProdukciya_Certifikaciya");
	//		МассивРеквизитов.Добавить("PredlagaemayaZayavitelemSkhemaSertifikacii");
	//		
	//	ИначеЕсли ДокументОбъект.FormaOS = Перечисления.ra_FormyOcenkiSootvetstviya.Priemka Тогда 
	//		
	//		МассивРеквизитов.Добавить("DataRegistracii");
	//		МассивРеквизитов.Добавить("Zayavitel");
	//		МассивРеквизитов.Добавить("Ispolnitel");
	//		МассивРеквизитов.Добавить("ObektOcenkiSootvetstviyaProdukciya");
	//		МассивРеквизитов.Добавить("KodOKPD2");
	//		МассивРеквизитов.Добавить("VidProdukciiVSootvetstviiSNP_071_18");
	//		МассивРеквизитов.Добавить("NomerZaprosaNaProvedenieOcenkiSootvetstviya");
	//		МассивРеквизитов.Добавить("KKS_Certifikaciya");
	//														
	//		Если ЭтоСпециализированнаяОрганизация Тогда
	//			МассивРеквизитов.Добавить("EkspluatiruyushchayaOrganizaciya");
	//			МассивРеквизитов.Добавить("NomerPorucheniyaEhkspluatiruyushchejOrganizacii");
	//			Если НЕ ЭтоЭксплуатирующаяОрганизация Тогда
	//				МассивРеквизитов.Добавить("DataPorucheniyaEhkspluatiruyushchejOrganizacii");
	//			КонецЕсли;
	//		КонецЕсли;
	//					
	//	ИначеЕсли ДокументОбъект.FormaOS = Перечисления.ra_FormyOcenkiSootvetstviya.Registraciya Тогда 
	//		
	//		МассивРеквизитов.Добавить("DataRegistracii");
	//		МассивРеквизитов.Добавить("Zayavitel");
	//		МассивРеквизитов.Добавить("Ispolnitel");
	//		МассивРеквизитов.Добавить("ObektOcenkiSootvetstviyaProdukciya");
	//		МассивРеквизитов.Добавить("KodOKPD2");
	//		МассивРеквизитов.Добавить("VidProdukciiVSootvetstviiSNP_071_18");
	//		МассивРеквизитов.Добавить("KKS_Certifikaciya");
	//		
	//	ИначеЕсли ДокументОбъект.FormaOS = Перечисления.ra_FormyOcenkiSootvetstviya.EkspertizaTD Тогда
	//		
	//		МассивРеквизитов.Добавить("DataRegistracii");
	//		МассивРеквизитов.Добавить("Zayavitel");
	//		МассивРеквизитов.Добавить("Ispolnitel");
	//		МассивРеквизитов.Добавить("VidProdukciiPoGostu");
	//		МассивРеквизитов.Добавить("ObektyOcenkiSootvetstviyaTD");
	//		МассивРеквизитов.Добавить("KodOKPD2");
	//		МассивРеквизитов.Добавить("UpolnomochennoeLicoOtZayavitelyaNaEkspertizuTD");
	//		МассивРеквизитов.Добавить("DolzhnostUpolnomochennogoLicaOtZayavitelyaNaEkspertizuTD");
	//		МассивРеквизитов.Добавить("RukovoditelOrganizaciiZayavitelyaNaEhkspertizuTD");
	//		МассивРеквизитов.Добавить("DolzhnostRukovoditelyaOrganizaciiZayavitelyaNaEhkspretizuTD");
	//					
	//	ИначеЕсли ДокументОбъект.FormaOS = Перечисления.ra_FormyOcenkiSootvetstviya.ReshenieOPrimeneniiImportnojProdukcii Тогда
	//		
	//		МассивРеквизитов.Добавить("Zayavitel");
	//		МассивРеквизитов.Добавить("Ispolnitel");
	//		МассивРеквизитов.Добавить("DogovorPostavki");
	//		МассивРеквизитов.Добавить("ObektOcenkiSootvetstviyaProdukciya");
	//		МассивРеквизитов.Добавить("KodOKPD2");
	//		МассивРеквизитов.Добавить("VidProdukciiVSootvetstviiSNP_071_18");
	//		
	//	КонецЕсли;
	//	
	//ИначеЕсли ДокументОбъект.Status = Перечисления.ra_StatusyZayavokNaOcenkuSootvetstviya.Zakryta Тогда
	//	
	//	Запрос = Новый Запрос("
	//	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	//	|	Ссылка
	//	|ИЗ
	//	|	Справочник.Пользователи
	//	|ГДЕ
	//	|	НЕ ПометкаУдаления И НЕ Недействителен И ра_ОтветственныйЗаКачествоДопустивший
	//	|	И ра_Организация = &Организация");
	//	
	//	Запрос.УстановитьПараметр("Организация", ДокументОбъект.Zayavitel);
	//	РезультатЗапроса = Запрос.Выполнить();
	//							
	//	Если Не РезультатЗапроса.Пустой() И НЕ РезультатСоответствует Тогда
	//		МассивРеквизитов.Добавить("OtvetstvennyjDopustivshij");
	//	КонецЕсли;
	//			
	//	Если ДокументОбъект.FormaOS = Перечисления.ra_FormyOcenkiSootvetstviya.InspekcionnyjKontrol Тогда
	//		
	//		МассивРеквизитов.Добавить("DataPrinyatiyaResheniya");
	//		МассивРеквизитов.Добавить("RezultatProvedeniya");
	//		МассивРеквизитов.Добавить("RezultatProvedeniyaInspekcionnogoKontrolya");
	//		
	//	ИначеЕсли ДокументОбъект.FormaOS = Перечисления.ra_FormyOcenkiSootvetstviya.AttestacionnyeIspytaniya Тогда
	//		
	//		МассивРеквизитов.Добавить("RezultatProvedeniya");
	//		МассивРеквизитов.Добавить("StatusDokumenta");
	//					
	//		Если ДокументОбъект.VidIspytanij = Перечисления.ra_VidyIspytanij.Attestacionnye Тогда
	//			МассивРеквизитов.Добавить("DataAttestacionnogoOtcheta");
	//			МассивРеквизитов.Добавить("NomerAttestacionnogoOtcheta");
	//			Если РезультатСоответствует Тогда
	//				МассивРеквизитов.Добавить("DataVydachiSvidetelstvaObAttestacii");
	//				МассивРеквизитов.Добавить("NomerSvidetelstvaObAttestacii");
	//			КонецЕсли;
	//		Иначе
	//			МассивРеквизитов.Добавить("DataPrinyatiyaResheniya");
	//			МассивРеквизитов.Добавить("NomerAktaIspytanij");
	//			МассивРеквизитов.Добавить("DataProtokolaIspytaniy");
	//			МассивРеквизитов.Добавить("NomerProtokolaIspytaniy");
	//		КонецЕсли;
	//		
	//	ИначеЕсли ДокументОбъект.FormaOS = Перечисления.ra_FormyOcenkiSootvetstviya.PoryadokObyazatelnojSertifikacii Тогда
	//					
	//		РешениеПровестиСертификацию = ДокументОбъект.ReshenieOSertifikacii = Перечисления.ra_ResheniyaOSertifikacii.ProvestiSertifikaciyu;
	//		МассивРеквизитов.Добавить("StatusDokumenta");
	//		
	//		Если РешениеПровестиСертификацию Тогда
	//		
	//			МассивРеквизитов.Добавить("RezultatProvedeniya");
	//			МассивРеквизитов.Добавить("RezultatProvedeniyaOpisanie");
	//			МассивРеквизитов.Добавить("DataZaklucheniyaOrganizaciiPoSertifikacii");
	//			МассивРеквизитов.Добавить("NomerZaklucheniya");
	//			МассивРеквизитов.Добавить("InformaciyaObEkspertahPoSertifikaciiPodgotovivshihZaklyuchenie");
	//			МассивРеквизитов.Добавить("InformaciyaOTekhnicheskihEkspertahUchastvovavshihVRabotahPoSertifikacii");
	//			МассивРеквизитов.Добавить("InformaciyaOProvedennyhSertifikacionnyhIspytaniyah");
	//			МассивРеквизитов.Добавить("InformaciyaOPriznannyhRezultatahIspytanij");
	//			МассивРеквизитов.Добавить("InformaciyaOPolnotePredstavlennyhDokumentov"); 
	//			МассивРеквизитов.Добавить("InformaciyaOPravilnostiIPolnotePodtverzhdennyhHarakteristik");
	//			МассивРеквизитов.Добавить("ReshenieOrganaPoSertifikacii");
	//			МассивРеквизитов.Добавить("DataResheniyaOVydache");
	//			МассивРеквизитов.Добавить("NomerResheniyaOVydacheSertifikata");
	//						
	//			Если РезультатСоответствует Тогда
	//				МассивРеквизитов.Добавить("NomerSertifikata");
	//				МассивРеквизитов.Добавить("SrokSertificataS");
	//			
	//				Если ДокументОбъект.SkhemaSertifikacii <> Перечисления.ra_SkhemySertifikacii.C6_IspytaniyaPartii
	//					И ДокументОбъект.SkhemaSertifikacii <> Перечисления.ra_SkhemySertifikacii.C7_IspytanieKazhdogoObrazca Тогда
	//					МассивРеквизитов.Добавить("SrokSertificataPo");
	//				КонецЕсли;
	//			КонецЕсли;
	//			
	//		КонецЕсли;
	//		
	//	ИначеЕсли ДокументОбъект.FormaOS = Перечисления.ra_FormyOcenkiSootvetstviya.Priemka Тогда
	//		
	//		МассивРеквизитов.Добавить("DataPrinyatiyaResheniya");
	//		МассивРеквизитов.Добавить("NomerDokumenta");
	//					
	//		Если РезультатСоответствует Тогда
	//			МассивРеквизитов.Добавить("NomerAktaOPriemke");
	//			МассивРеквизитов.Добавить("DataAktaOPriemke");
	//			МассивРеквизитов.Добавить("SeriynieNomera");
	//		КонецЕсли;
	//					
	//	ИначеЕсли ДокументОбъект.FormaOS = Перечисления.ra_FormyOcenkiSootvetstviya.Registraciya Тогда
	//		
	//		МассивРеквизитов.Добавить("RezultatProvedeniya");
	//		МассивРеквизитов.Добавить("NomerDokumenta");
	//		МассивРеквизитов.Добавить("DataPrinyatiyaResheniya");
	//		
	//	ИначеЕсли ДокументОбъект.FormaOS = Перечисления.ra_FormyOcenkiSootvetstviya.EkspertizaTD Тогда
	//		
	//		МассивРеквизитов.Добавить("RezultatProvedeniya");
	//		МассивРеквизитов.Добавить("RezultatProvedeniyaOpisanie"); // ??
	//		МассивРеквизитов.Добавить("StatusDokumenta");
	//		
	//	ИначеЕсли ДокументОбъект.FormaOS = Перечисления.ra_FormyOcenkiSootvetstviya.ReshenieOPrimeneniiImportnojProdukcii Тогда
	//		
	//		МассивРеквизитов.Добавить("DataPrinyatiyaResheniya");
	//		МассивРеквизитов.Добавить("NomerResheniyaOPrimeneniiImportnojProdukcii");
	//		МассивРеквизитов.Добавить("RezultatProvedeniya");
	//		МассивРеквизитов.Добавить("RostekhnadzorSoglasoval");
	//		
	//	КонецЕсли;
	//	
	//КонецЕсли;
	
КонецПроцедуры

#Область Печать

Процедура ДобавитьКомандыПечати(КомандыПечати, СтруктураПараметров = Неопределено) Экспорт
	
	ра_ОбщегоНазначения.ВыполнитьЗаполнениеКомандПечатиДокументаЕОС(КомандыПечати, СтруктураПараметров);
	
КонецПроцедуры

Функция ШаблонПодходитДляАвтозапускаБизнесПроцессаПоОбъекту(ШаблонСсылка, ПредметСсылка, Подписчик, ВидСобытия, Условие) Экспорт
	
	Возврат БизнесСобытияВызовСервера.ШаблонПодходитДляАвтозапускаБизнесПроцессаПоДокументу(ШаблонСсылка, 
		ПредметСсылка, Подписчик, ВидСобытия, Условие);
	
	//Возврат Истина;
	
КонецФункции

Функция ПолучитьМассивЭтапов(FormaOS) Экспорт
	
	МассивЭтапов = Новый Массив;
	
	Если FormaOS = Перечисления.ra_FormyOS.EkspertizaTD Тогда	
		МассивЭтапов.Добавить("ra_EHtapOcenkiSootvetstviyaPrinyatieResheniya");
		МассивЭтапов.Добавить("ra_EHtapOcenkiSootvetstviyaFormirovanieZadanij");
		МассивЭтапов.Добавить("ra_EHtapOcenkiSootvetstviyaVypolnenieZadanij");
		МассивЭтапов.Добавить("ra_EHtapOcenkiSootvetstviyaObsuzhdeniePredvRezultatov");
		МассивЭтапов.Добавить("ra_EHtapOcenkiSootvetstviyaOformlenieEhkspZaklyucheniya");	
	КонецЕсли;
	
	Возврат МассивЭтапов;	
		
КонецФункции

#КонецОбласти

#Область УправлениеДоступом

// Возвращает строку, содержащую перечисление полей доступа через запятую
// Это перечисление используется в дальнейшем для передачи в метод 
// ОбщегоНазначения.ЗначенияРеквизитовОбъекта()
Функция ПолучитьПоляДоступа() Экспорт
	
	Возврат "Ссылка,
			|ВидДокумента";
	
КонецФункции

// Заполняет переданный дескриптор доступа
//
Процедура ЗаполнитьОсновнойДескриптор(ОбъектДоступа, ДескрипторДоступа) Экспорт
	
	ДескрипторДоступа.ВидОбъекта = ОбъектДоступа.ВидДокумента;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ИнтеграцияBitrix

Процедура СформироватьМассивДанныхGetList(Результат, ПолноеИмя, ПараметрыЗапросаHTTP) Экспорт
	
	ОбъектМетаданных = Метаданные.Документы.ra_ZayavkaNaOcenkuSootvetstviya3;
	
	ТаблицаРеквизитов = ра_ОбменДанными.ПолучитьТаблицуРеквизитовОбъекта(ОбъектМетаданных);
	
	АктуализироватьТаблицуРеквизитов(ТаблицаРеквизитов);
	
	ТекстЗапросаВложенныеТаблицы = ПолучитьТекстЗапросаВложенныеТаблицы();
	ТекстЗапросаСоединений = ПолучитьТекстЗапросаСоединений();
	
	// ТСК Ткаченко И.Л.; 28.08.2018; task#1181;task#1183{
	Фильтр = ПараметрыЗапросаHTTP.Получить("$filter");
	
	Если ЗначениеЗаполнено(Фильтр) Тогда
		Фильтр = Фильтр + " and ПометкаУдаления eq Ложь";
	Иначе
		Фильтр = "ПометкаУдаления eq Ложь";  
	КонецЕсли;
	
	Для Каждого ТекСтрока Из ТаблицаРеквизитов Цикл
		Если ТекСтрока.Имя = "Status" Тогда 
			ТекСтрока.Имя = "xStatus";
			Фильтр = СтрЗаменить(Фильтр,"Status ","xStatus ");
		КонецЕсли;		
	КонецЦикла;	

	НовыеПараметры = Новый Соответствие(ПараметрыЗапросаHTTP);
	НовыеПараметры.Вставить("$filter", Фильтр);
	ПараметрыЗапросаHTTP = Новый ФиксированноеСоответствие(НовыеПараметры);
	// ТСК Ткаченко И.Л.; 28.08.2018; task#1181;task#1183}
	
	Запрос = ра_ОбменДанными.ПолучитьЗапрос(ТаблицаРеквизитов, ПараметрыЗапросаHTTP, ПолноеИмя, ТекстЗапросаВложенныеТаблицы, ТекстЗапросаСоединений);
	
	// ТСК Ткаченко И.Л.; 28.08.2018; task#1181;task#1183{
	Запрос.Текст = СтрЗаменить(Запрос.Текст,"xStatus","Status");
	// ТСК Ткаченко И.Л.; 28.08.2018; task#1181;task#1183}

	МассивДанных = ра_ОбменДанными.СформироватьМассивДанныхИзЗапроса(Запрос, ПараметрыЗапросаHTTP);
	Результат.Вставить("value", МассивДанных);
	
	НастройкаФормы = ПараметрыЗапросаHTTP.Получить("$form_settings");
	Если ЗначениеЗаполнено(НастройкаФормы) И НастройкаФормы Тогда
		МассивКолонок = ПолучитьПолучитьМассивКолонокСписка();
		МассивКнопок = ПолучитьМассивКнопок(Запрос.Параметры);
		МассивФильтров = ПолучитьМассивФильтровСписка();
		Результат.Вставить("form_settings", МассивКолонок);
		Результат.Вставить("button_settings", МассивКнопок);
		Результат.Вставить("filter_settings", МассивФильтров);
	КонецЕсли;
						
КонецПроцедуры

Процедура АктуализироватьТаблицуРеквизитов(ТаблицаРеквизитов)
	
	СтруктураРеквизита = Новый Структура("Имя,Тип,Выражение", "MainFile", "Справочник.Файлы", "ЕСТЬNULL(СправочникФайлы.Ссылка, ЗНАЧЕНИЕ(Справочник.Файлы.ПустаяСсылка))");
	ра_ОбменДанными.ДобавитьСтрокуВТаблицуРеквизитов(ТаблицаРеквизитов, СтруктураРеквизита);
	
	СтруктураРеквизита = Новый Структура("Имя,Тип,Выражение", "DocStatus", "Перечисление.СостоянияДокументов", "ЕСТЬNULL(РС_ИсторияСостояний.Состояние, ЗНАЧЕНИЕ(Перечисление.СостоянияДокументов.ПустаяСсылка))");
	ра_ОбменДанными.ДобавитьСтрокуВТаблицуРеквизитов(ТаблицаРеквизитов, СтруктураРеквизита);
	
	СтруктураРеквизита = Новый Структура("Имя,Тип,Выражение", "StatusIndex", "Число", "ЕСТЬNULL(РС_ИндексыСтатусовВидовОбъектов.ИндексСтатуса, 0)");
	ра_ОбменДанными.ДобавитьСтрокуВТаблицуРеквизитов(ТаблицаРеквизитов, СтруктураРеквизита);
	
	СтруктураРеквизита = Новый Структура("Имя,Тип,Выражение", "StatusTotal", "Число", "ЕСТЬNULL(РС_ИндексыСтатусовВидовОбъектов.ВсегоСтатусов, 0)");
	ра_ОбменДанными.ДобавитьСтрокуВТаблицуРеквизитов(ТаблицаРеквизитов, СтруктураРеквизита);
	
КонецПроцедуры

Функция ПолучитьТекстЗапросаВложенныеТаблицы() Экспорт
	
	Возврат "";
	
КонецФункции

Функция ПолучитьТекстЗапросаСоединений() Экспорт
	
	Возврат "	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Файлы КАК СправочникФайлы
			|	ПО ОсновнаяТаблица.Ссылка = СправочникФайлы.ВладелецФайла
			|		И СправочникФайлы.ра_ОсновнойФайл
			|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИсторияСостоянийДокументов.СрезПоследних КАК РС_ИсторияСостояний
			|	ПО ОсновнаяТаблица.Ссылка = РС_ИсторияСостояний.Документ
			|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ра_ИндексыСтатусовВидовОбъектов КАК РС_ИндексыСтатусовВидовОбъектов
			|	ПО ОсновнаяТаблица.ВидДокумента = РС_ИндексыСтатусовВидовОбъектов.ВидДокумента
			|	И РС_ИсторияСостояний.Состояние = РС_ИндексыСтатусовВидовОбъектов.СостояниеДокумента";
	
КонецФункции

Функция СформироватьМассивДанныхРолевойМодели(ДокументОбъект, ПараметрыФормирования = Неопределено) Экспорт
	
	ТаблицаНастроек = ра_ОбменДанными.ПолучитьТаблицуНастроекПолейПоУмолчанию(Метаданные.Документы.ra_ZayavkaNaOcenkuSootvetstviya3);
	
	//В данную переменную необходимо передавать удаляемые реквизиты. Разделитель - запятая.
	УдаляемыеРеквизиты = "Ссылка,ПометкаУдаления,Проведен";
	ра_ОбменДанными.УдалитьСтрокиИзТаблицыНастроек(ТаблицаНастроек, УдаляемыеРеквизиты);
	
	Страница = Неопределено;
	Если ПараметрыФормирования <> Неопределено Тогда
		ПараметрыФормирования.Свойство("Страница", Страница);
	Иначе
		Страница = "Main";
	КонецЕсли;
	
	АктуализироватьТаблицуНастроек(ТаблицаНастроек, ДокументОбъект, Страница);
	
	Если Страница <> Неопределено Тогда
		ТаблицаНастроек = ТаблицаНастроек.Скопировать(ТаблицаНастроек.НайтиСтроки(Новый Структура("Видимость", Истина)));
	КонецЕсли;
			
	ра_ОбменДанными.ЗаполнитьТаблицуНастроекЗначениямиИзОбъекта(ТаблицаНастроек, ДокументОбъект);
	
	Если Страница = "Result" Тогда
		
		//ДоступностьСтраницыResult = ДокументОбъект.Status = Перечисления.ra_StatusyZayavokNaOcenkuSootvetstviya.Zaregistrirovana;
		//
		//Запрос = Новый Запрос("
		//|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		//|	Ссылка
		//|ИЗ
		//|	Справочник.Пользователи
		//|ГДЕ
		//|	НЕ ПометкаУдаления И НЕ Недействителен И ра_ОтветственныйЗаКачествоДопустивший
		//|	И ра_Организация = &Организация");
		//
		//Запрос.УстановитьПараметр("Организация", ДокументОбъект.Zayavitel);
		//РезультатЗапроса = Запрос.Выполнить();
		//
		//ОтветственныйДопустивший = Справочники.Пользователи.ПустаяСсылка();
		//ОтветственныйВидимость = Ложь;
		//ОтветственныйДоступность = Ложь;
		//				
		//Если Не РезультатЗапроса.Пустой() Тогда
		//				
		//	ОтветственныйВидимость = Истина;
		//	ОтветственныйОбязателен = Истина;
		//	
		//	Выборка = РезультатЗапроса.Выбрать();
		//	Если Выборка.Количество() = 1 Тогда
		//		Выборка.Следующий();
		//		ОтветственныйДопустивший = Выборка.Ссылка;
		//	Иначе
		//		ОтветственныйДоступность = Истина;
		//	КонецЕсли;
		//				
		//КонецЕсли;
		//
		//ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "Zayavitel", Ложь, Ложь, , Новый Структура("OtvetstvennyjDopustivshij", "ра_Организация"),,ДокументОбъект.Zayavitel);
		//ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "OtvetstvennyjDopustivshij", ОтветственныйВидимость, ОтветственныйДоступность И ДоступностьСтраницыResult, ОтветственныйОбязателен, , "FullTextSearch", ОтветственныйДопустивший, , Новый Структура("ChoiceParameters", Новый Структура("ра_ОтветственныйЗаКачествоДопустивший", Истина)));
		
	КонецЕсли;
	
	МассивДанных = ра_ОбменДанными.СформироватьМассивДанныхИзТаблицыНастроек(ТаблицаНастроек);
	
	Возврат МассивДанных;
	
КонецФункции

Процедура АктуализироватьТаблицуНастроек(ТаблицаНастроек, ДокументОбъект, Страница)
	
	Для каждого СтрокаНастроек Из ТаблицаНастроек Цикл
		СтрокаНастроек.Видимость = Ложь;
		СтрокаНастроек.Доступность = Ложь;
	КонецЦикла;
	
	//Если ДокументОбъект.FormaOS = Перечисления.ra_FormyOS.PoryadokObyazatelnojSertifikacii Тогда 
	//	ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "SkhemaSertifikacii", , Ложь);
	//КонецЕсли;
	//ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "FormaOS",,,, Новый Структура("Ispolnitel", "FormaOS"), "OutputAllElements");
	ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "FormaOS",,,,, "OutputAllElements");
	//ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "VidIspytanij",,,,,"OutputAllElements");
	
	Если Не ЗначениеЗаполнено(Страница) Тогда
		Страница = "Main";
	КонецЕсли;
		
	ДоступностьСтраницыMain = Истина;
	ДоступностьСтраницыResult = Ложь;	
	//ДоступностьСтатусаДокумента = ТекущийПользовательЛокальныйАдминистратор() ИЛИ НЕ ДокументОбъект.Status = Перечисления.ra_StatusyZayavokNaOcenkuSootvetstviya.Zakryta;
	//ОтветственныйОбязателен = Ложь;
		
	Если Страница = "Main" Тогда
		
		//ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "Status", Истина, Ложь, , ,"OutputAllElements");
		
		ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "Number", , ДоступностьСтраницыMain);
		ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "Date", , ДоступностьСтраницыMain, ДоступностьСтраницыMain);  //Дата заявки
		
		ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "Proekt", , ДоступностьСтраницыMain, Истина, , "FullTextSearch");
		
		Если ДокументОбъект.FormaOS = Перечисления.ra_FormyOS.EkspertizaTD Тогда 
			
			Если ДокументОбъект.VidZayavkiNaExpertizuTD = Перечисления.ra_VidyZayavokNaExpertizuTD.ExpertizaTD Тогда 
				
				ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "RegNomer", , ДоступностьСтраницыMain,,,,,НСтр("ru = 'Входящий (регистрационный) номер заявки на экспертизу ТД'; en = 'Incoming (registration) number of the application for examination of TD'"));
				ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "DataZayavki", , ДоступностьСтраницыMain, ДоступностьСтраницыMain,,,,НСтр("ru = 'Дата заявки на экспертизу технической документации'; en = 'Date of application for examination of technical documentation'"));
				ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "DataRegistracii", , ДоступностьСтраницыMain,,,,,НСтр("ru = 'Дата регистрации заявки на экспертизу технической документации'; en = 'Date of registration of the application for examination of technical documentation'"));
				ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "Zayavitel", , ДоступностьСтраницыMain, Истина);
				ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "Razrabotchik", , ДоступностьСтраницыMain, Истина);
				ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "Ispolnitel", , ДоступностьСтраницыMain, Истина,,,,НСтр("ru = 'Организация, осуществляющая оценку соответствия'; en = 'Organization engaged in conformity assessment'"));
				ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "ObektyOcenkiSootvetstviyaTD", , ДоступностьСтраницыMain, Истина);
				ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "VidProdukciiPoGostu", , ДоступностьСтраницыMain, Истина);
			    ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "KodOKPD2", , ДоступностьСтраницыMain, Истина);
				ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "KKS", , ДоступностьСтраницыMain, Истина);
				ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "GID_MTRIO", , ДоступностьСтраницыMain);
				ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "VidProdukciiVSootvetstviiSNP_071_18", , ДоступностьСтраницыMain, Истина, , "OutputAllElements");
				
			ИначеЕсли ДокументОбъект.VidZayavkiNaExpertizuTD = Перечисления.ra_VidyZayavokNaExpertizuTD.SoglasovanieIzmenenijVTD Тогда
				
				ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "RegNomer", , ДоступностьСтраницыMain,,,,,НСтр("ru = 'Входящий (регистрационный) номер письма о согласовании изменений, вносимых в технической документации'; en = 'Incoming (registration) number of the letter of approval of the changes made in the technical documentation'"));
				ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "DataZayavki", , ДоступностьСтраницыMain, ДоступностьСтраницыMain,,,,НСтр("ru = 'Дата письма о согласовании изменений, вносимых в технической документации'; en = 'Date of the letter of approval of the changes made in technical documentation'"));
				ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "DataRegistracii", , ДоступностьСтраницыMain,,,,,НСтр("ru = 'Дата регистрации письма о согласовании изменений, вносимых в технической документации'; en = 'Date of registration of the letter of approval of the changes made in technical documentation'"));
				ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "Zayavitel", , ДоступностьСтраницыMain, Истина);
				ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "Razrabotchik", , ДоступностьСтраницыMain, Истина);
				ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "Ispolnitel", , ДоступностьСтраницыMain, Истина,,,,НСтр("ru = 'Организация, осуществляющая оценку соответствия'; en = 'Organization engaged in conformity assessment'"));
				ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "ObektyOcenkiSootvetstviyaTD", , ДоступностьСтраницыMain, Истина);
				ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "VidProdukciiPoGostu", , ДоступностьСтраницыMain, Истина);
			    ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "KodOKPD2", , ДоступностьСтраницыMain, Истина);
				ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "KKS", , ДоступностьСтраницыMain, Истина);
				ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "GID_MTRIO", , ДоступностьСтраницыMain);
				ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "VidProdukciiVSootvetstviiSNP_071_18", , ДоступностьСтраницыMain, Истина, , "OutputAllElements");
				
			КонецЕсли;
			
		ИначеЕсли ДокументОбъект.FormaOS = Перечисления.ra_FormyOS.PriemochnyeIspytaniya Тогда
			
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "DataZayavki", , ДоступностьСтраницыMain, Истина,,,,НСтр("ru = 'Дата приказа или иного основания на проведение испытаний'; en = 'Date of order or other basis for testing'"));
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "NomerZayavki", , ДоступностьСтраницыMain, Истина,,,,НСтр("ru = 'Номер приказа или иного основания на проведение испытаний'; en = 'Number of the order or other basis for carrying out tests'"));
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "Zayavitel", , ДоступностьСтраницыMain, Истина);
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "Ispolnitel", , ДоступностьСтраницыMain, Истина,,,,НСтр("ru = 'Организация, осуществляющая оценку соответствия'; en = 'Organization engaged in conformity assessment'"));
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "ObektOcenkiSootvetstviyaProdukciya", , ДоступностьСтраницыMain, Истина, , "FullTextSearch");
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "VidProdukciiVSootvetstviiSNP_071_18", , ДоступностьСтраницыMain, Истина, , "OutputAllElements");
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "KodOKPD2", , ДоступностьСтраницыMain, Истина);
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "GID_MTRIO", , ДоступностьСтраницыMain);
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "KKS", , ДоступностьСтраницыMain, Истина);
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "KlassBezopasnosti", , ДоступностьСтраницыMain, Истина, , "OutputAllElements");
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "SeriynieNomera", , ДоступностьСтраницыMain, Истина);
				
		ИначеЕсли ДокументОбъект.FormaOS = Перечисления.ra_FormyOS.KvalifikacionnyeIspytaniya Тогда
			
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "DataZayavki", , ДоступностьСтраницыMain, Истина,,,,НСтр("ru = 'Дата приказа или иного основания на проведение испытаний'; en = 'Date of order or other basis for testing'"));
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "NomerZayavki", , ДоступностьСтраницыMain, Истина,,,,НСтр("ru = 'Номер приказа или иного основания на проведение испытаний'; en = 'Number of the order or other basis for carrying out tests'"));
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "Zayavitel", , ДоступностьСтраницыMain, Истина);
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "Ispolnitel", , ДоступностьСтраницыMain, Истина,,,,НСтр("ru = 'Организация, осуществляющая оценку соответствия'; en = 'Organization engaged in conformity assessment'"));
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "ObektOcenkiSootvetstviyaProdukciya", , ДоступностьСтраницыMain, Истина, , "FullTextSearch");
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "VidProdukciiVSootvetstviiSNP_071_18", , ДоступностьСтраницыMain, Истина, , "OutputAllElements");
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "KodOKPD2", , ДоступностьСтраницыMain, Истина);
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "GID_MTRIO", , ДоступностьСтраницыMain);
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "KKS", , ДоступностьСтраницыMain, Истина);
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "KlassBezopasnosti", , ДоступностьСтраницыMain, Истина, , "OutputAllElements");
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "SeriynieNomera", , ДоступностьСтраницыMain, Истина);
			
		ИначеЕсли ДокументОбъект.FormaOS = Перечисления.ra_FormyOS.PeriodicheskieIspytaniya Тогда
			
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "DataZayavki", , ДоступностьСтраницыMain, Истина,,,,НСтр("ru = 'Дата приказа или иного основания на проведение испытаний'; en = 'Date of order or other basis for testing'"));
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "NomerZayavki", , ДоступностьСтраницыMain, Истина,,,,НСтр("ru = 'Номер приказа или иного основания на проведение испытаний'; en = 'Number of the order or other basis for carrying out tests'"));
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "Zayavitel", , ДоступностьСтраницыMain, Истина);
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "Ispolnitel", , ДоступностьСтраницыMain, Истина,,,,НСтр("ru = 'Организация, осуществляющая оценку соответствия'; en = 'Organization engaged in conformity assessment'"));
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "ObektOcenkiSootvetstviyaProdukciya", , ДоступностьСтраницыMain, Истина, , "FullTextSearch");
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "VidProdukciiVSootvetstviiSNP_071_18", , ДоступностьСтраницыMain, Истина, , "OutputAllElements");
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "KodOKPD2", , ДоступностьСтраницыMain, Истина);
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "GID_MTRIO", , ДоступностьСтраницыMain);
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "KKS", , ДоступностьСтраницыMain, Истина);
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "KlassBezopasnosti", , ДоступностьСтраницыMain, Истина, , "OutputAllElements");
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "SeriynieNomera", , ДоступностьСтраницыMain, Истина);
			
		ИначеЕсли ДокументОбъект.FormaOS = Перечисления.ra_FormyOS.TipovyeIspytaniya Тогда
			
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "DataZayavki", , ДоступностьСтраницыMain, Истина,,,,НСтр("ru = 'Дата приказа или иного основания на проведение испытаний'; en = 'Date of order or other basis for testing'"));
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "NomerZayavki", , ДоступностьСтраницыMain, Истина,,,,НСтр("ru = 'Номер приказа или иного основания на проведение испытаний'; en = 'Number of the order or other basis for carrying out tests'"));
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "Zayavitel", , ДоступностьСтраницыMain, Истина);
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "Ispolnitel", , ДоступностьСтраницыMain, Истина,,,,НСтр("ru = 'Организация, осуществляющая оценку соответствия'; en = 'Organization engaged in conformity assessment'"));
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "ObektOcenkiSootvetstviyaProdukciya", , ДоступностьСтраницыMain, Истина, , "FullTextSearch");
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "VidProdukciiVSootvetstviiSNP_071_18", , ДоступностьСтраницыMain, Истина, , "OutputAllElements");
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "KodOKPD2", , ДоступностьСтраницыMain, Истина);
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "GID_MTRIO", , ДоступностьСтраницыMain);
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "KKS", , ДоступностьСтраницыMain, Истина);
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "KlassBezopasnosti", , ДоступностьСтраницыMain, Истина, , "OutputAllElements");
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "SeriynieNomera", , ДоступностьСтраницыMain, Истина);
			
		ИначеЕсли ДокументОбъект.FormaOS = Перечисления.ra_FormyOS.AttestacionnyeIspytaniya Тогда
			
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "DataZayavki", , ДоступностьСтраницыMain, Истина,,,,НСтр("ru = 'Дата заявки на проведение аттестационных испытаний'; en = 'Date of application for certification tests'"));
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "NomerZayavki", , ДоступностьСтраницыMain, Истина,,,,НСтр("ru = 'Номер заявки на проведение аттестационных испытаний'; en = 'Number of application for certification tests'"));
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "DataRegistracii", , ДоступностьСтраницыMain,Истина,,,,,НСтр("ru = 'Дата регистрации заявки на проведение аттестационных испытаний в головной материаловедческой организации'; en = 'Date of registration of the application for carrying out certification tests in the head material science organization'"));
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "RegNomer", , ДоступностьСтраницыMain,Истина,,,,НСтр("ru = 'Номер регистрации заявки на проведение аттестационных испытаний в головной материаловедческой организации'; en = 'Registration number of the application for carrying out certification tests in the head material science organization'"));
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "Zayavitel", , ДоступностьСтраницыMain, Истина);
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "Ispolnitel", , ДоступностьСтраницыMain, Истина,,,,НСтр("ru = 'Исполнитель'; en = 'Performer'"));
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "InformaciyaObObekteOcenkiSootvetstviya", , ДоступностьСтраницыMain, Истина,,,,НСтр("ru = 'Объект оценки соответствия (материал, технология, система неразрушающего контроля)'; en = 'Object of conformity assessment (material, technology, non-destructive testing system)'"));
			
		ИначеЕсли ДокументОбъект.FormaOS = Перечисления.ra_FormyOS.PredvaritelnyeAvtonomnyeIspytaniya Тогда
			
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "DataZayavki", , ДоступностьСтраницыMain, Истина,,,,НСтр("ru = 'Дата приказа или иного основания на проведение испытаний'; en = 'Date of order or other basis for testing'"));
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "NomerZayavki", , ДоступностьСтраницыMain, Истина,,,,НСтр("ru = 'Номер приказа или иного основания на проведение испытаний'; en = 'Number of the order or other basis for carrying out tests'"));
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "Zayavitel", , ДоступностьСтраницыMain, Истина);
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "Ispolnitel", , ДоступностьСтраницыMain, Истина,,,,НСтр("ru = 'Исполнитель'; en = 'Performer'"));
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "ObektOcenkiSootvetstviyaProdukciya", , ДоступностьСтраницыMain, Истина, , "FullTextSearch");
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "VidIspytanij", , ДоступностьСтраницыMain, Истина,,,,НСтр("ru = 'Тип испытаний (предварительные комплексные или предварительные автономные)'; en = 'Type of test (pre-complex or pre-autonomous)'"));
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "AvtoSystems", , ДоступностьСтраницыMain, Истина);
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "VidProdukciiVSootvetstviiSNP_071_18", , ДоступностьСтраницыMain, Истина, , "OutputAllElements");
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "KodOKPD2", , ДоступностьСтраницыMain, Истина);
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "GID_MTRIO", , ДоступностьСтраницыMain);
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "KKS", , ДоступностьСтраницыMain, Истина);
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "KlassBezopasnosti", , ДоступностьСтраницыMain, Истина, , "OutputAllElements",,НСтр("ru = 'Класс безопасности по НП-001-15'; en = 'Safety class according to NP-001-15'"));
			
		ИначеЕсли ДокументОбъект.FormaOS = Перечисления.ra_FormyOS.PredvaritelnyeKompleksnyeIspytaniya Тогда
			
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "DataZayavki", , ДоступностьСтраницыMain, Истина,,,,НСтр("ru = 'Дата приказа или иного основания на проведение испытаний'; en = 'Date of order or other basis for testing'"));
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "NomerZayavki", , ДоступностьСтраницыMain, Истина,,,,НСтр("ru = 'Номер приказа или иного основания на проведение испытаний'; en = 'Number of the order or other basis for carrying out tests'"));
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "Zayavitel", , ДоступностьСтраницыMain, Истина);
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "Ispolnitel", , ДоступностьСтраницыMain, Истина,,,,НСтр("ru = 'Исполнитель'; en = 'Performer'"));
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "ObektOcenkiSootvetstviyaProdukciya", , ДоступностьСтраницыMain, Истина, , "FullTextSearch");
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "VidIspytanij", , ДоступностьСтраницыMain, Истина,,,,НСтр("ru = 'Тип испытаний (предварительные комплексные или предварительные автономные)'; en = 'Type of test (pre-complex or pre-autonomous)'"));
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "AvtoSystems", , ДоступностьСтраницыMain);
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "VidProdukciiVSootvetstviiSNP_071_18", , ДоступностьСтраницыMain, Истина, , "OutputAllElements");
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "KodOKPD2", , ДоступностьСтраницыMain, Истина);
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "GID_MTRIO", , ДоступностьСтраницыMain);
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "KKS", , ДоступностьСтраницыMain, Истина);
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "KlassBezopasnosti", , ДоступностьСтраницыMain, Истина, , "OutputAllElements",,НСтр("ru = 'Класс безопасности по НП-001-15'; en = 'Safety class according to NP-001-15'"));
			
		ИначеЕсли ДокументОбъект.FormaOS = Перечисления.ra_FormyOS.PoryadokObyazatelnojSertifikacii Тогда
			
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "RegNomer", , ДоступностьСтраницыMain,,,,,НСтр("ru = 'Входящий (регистрационный) номер заявки на сертификацию'; en = 'Incoming (registration) number of the application for certification'"));
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "DataZayavki", , ДоступностьСтраницыMain, ДоступностьСтраницыMain,,,,НСтр("ru = 'Дата заявки на сертификацию'; en = 'Date of application for certification'"));
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "DataRegistracii", , ДоступностьСтраницыMain,,,,,НСтр("ru = 'Дата регистрации заявки на сертификацию'; en = 'Date of registration of the application for certification'"));
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "Zayavitel", , ДоступностьСтраницыMain, Истина);
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "Izgotovitel", , ДоступностьСтраницыMain, Истина,,,,НСтр("ru = 'Изготовитель'; en = 'Manufacturer"));
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "Ispolnitel", , ДоступностьСтраницыMain, Истина,,,,НСтр("ru = 'Исполнитель'; en = 'Performer'"));
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "ObektOcenkiSootvetstviyaProdukciya", , ДоступностьСтраницыMain, Истина, , "FullTextSearch");
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "KharakterProizvodstva", , ДоступностьСтраницыMain, Истина, , "OutputAllElements");
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "KodOKPD2", , ДоступностьСтраницыMain, Истина);
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "KKS", , ДоступностьСтраницыMain, Истина);
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "GID_MTRIO", , ДоступностьСтраницыMain);
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "VidProdukciiVSootvetstviiSNP_071_18", , ДоступностьСтраницыMain, Истина, , "OutputAllElements");
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "PerechenProdukciiPo277Prikazu", , ДоступностьСтраницыMain, Истина, , "FullTextSearch", , НСтр("ru = 'Позиция из перечня продукции, подлежащей обязательной сертификации, утвержденного приказом Ростехнадзора от 21.07.2017 № 277'; en = 'Position from the list of products subject to mandatory certification, approved by the order of Rostekhnadzor from 21.07.2017 № 277'")); 
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "PredlagaemayaZayavitelemSkhemaSertifikacii", , ДоступностьСтраницыMain, Истина, , "OutputAllElements");
				
		ИначеЕсли ДокументОбъект.FormaOS = Перечисления.ra_FormyOS.InspekcionnyjKontrol Тогда
			
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "RegNomer", , ДоступностьСтраницыMain,Истина,,,,НСтр("ru = 'Исходящий (регистрационный) номер письма о проведении инспекционной проверки'; en = 'Outgoing (registration) number of the letter of inspection'"));
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "Zayavitel", , ДоступностьСтраницыMain, Истина,,,,НСтр("ru = 'Держатель сертификата соответствия'; en = 'Holder of the certificate of conformity"));
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "Izgotovitel", , ДоступностьСтраницыMain, Истина,,,,НСтр("ru = 'Изготовитель'; en = 'Manufacturer"));
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "Ispolnitel", , ДоступностьСтраницыMain, Истина,,,,НСтр("ru = 'Исполнитель'; en = 'Performer'"));
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "ObektOcenkiSootvetstviyaProdukciya", , ДоступностьСтраницыMain, Истина, , "FullTextSearch");
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "KharakterProizvodstva", , ДоступностьСтраницыMain, Истина, , "OutputAllElements");
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "KodOKPD2", , ДоступностьСтраницыMain, Истина);
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "KKS", , ДоступностьСтраницыMain, Истина);
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "GID_MTRIO", , ДоступностьСтраницыMain);
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "VidProdukciiVSootvetstviiSNP_071_18", , ДоступностьСтраницыMain, Истина, , "OutputAllElements",,НСтр("ru = 'Вид продукции в соответствии с НП-071-18'; en = 'Product in accordance with NP-071-18'"));
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "PerechenProdukciiPo277Prikazu", , ДоступностьСтраницыMain, Истина, , "FullTextSearch", , НСтр("ru = 'Позиция из перечня продукции, подлежащей обязательной сертификации, утвержденного приказом Ростехнадзора от 21.07.2017 № 277'; en = 'Position from the list of products subject to mandatory certification, approved by the order of Rostekhnadzor from 21.07.2017 № 277'")); 
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "SkhemaSertifikaciiProdukcii", , ДоступностьСтраницыMain, Истина, , "OutputAllElements");
			
		ИначеЕсли ДокументОбъект.FormaOS = Перечисления.ra_FormyOS.Priemka Тогда
			
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "DataZayavki", , ДоступностьСтраницыMain, Истина,,,,НСтр("ru = 'Дата запроса на проведение оценки соответствия в форме приемки'; en = 'Date of request for conformity assessment in the acceptance form'"));
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "NomerZayavki", , ДоступностьСтраницыMain, Истина,,,,НСтр("ru = 'Номер запроса на проведение оценки соответствия в форме приемки'; en = 'Number of the request for conformity assessment in the form of acceptance'"));
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "DataRegistracii", , ДоступностьСтраницыMain,Истина,,,,,НСтр("ru = 'Дата регистрации запроса в эксплуатирующей организации'; en = 'Date of registration of the request in the operating organization'"));
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "RegNomer", , ДоступностьСтраницыMain,Истина,,,,НСтр("ru = 'Номер регистрации запроса в эксплуатирующей организации'; en = 'Number of registration request in the operating organization'"));
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "Zayavitel", , ДоступностьСтраницыMain, Истина);
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "Ispolnitel", , ДоступностьСтраницыMain, Истина,,,,НСтр("ru = 'Исполнитель (эксплуатирующая организация)'; en = 'Contractor (operator)'"));
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "Izgotovitel", , ДоступностьСтраницыMain, Истина,,,,НСтр("ru = 'Изготовитель или монтажная организация'; en = 'Manufacturer or installation company'"));
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "ObektOcenkiSootvetstviyaProdukciya", , ДоступностьСтраницыMain, Истина, , "FullTextSearch");
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "VidProdukciiVSootvetstviiSNP_071_18", , ДоступностьСтраницыMain, Истина, , "OutputAllElements",,НСтр("ru = 'Вид продукции в соответствии с НП-071-18'; en = 'Product in accordance with NP-071-18'"));
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "KodOKPD2", , ДоступностьСтраницыMain, Истина);
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "GID_MTRIO", , ДоступностьСтраницыMain);
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "KKS", , ДоступностьСтраницыMain, Истина);
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "KlassBezopasnosti", , ДоступностьСтраницыMain, Истина, , "OutputAllElements",,НСтр("ru = 'Класс безопасности по НП-001-15'; en = 'Safety class according to NP-001-15'"));
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "Dogovory", , ДоступностьСтраницыMain, Истина,,,,НСтр("ru = 'Дата(ы) и номер(а) договора'; en = 'Contract date(s) and number(s)'"));
			
		ИначеЕсли ДокументОбъект.FormaOS = Перечисления.ra_FormyOS.ReshenieOPrimeneniiImportnojProdukcii Тогда
			
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "Dogovory", , ДоступностьСтраницыMain, Истина);
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "Zayavitel", , ДоступностьСтраницыMain, Истина);
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "Ispolnitel", , ДоступностьСтраницыMain, Истина,,,,НСтр("ru = 'Исполнитель'; en = 'Performer'"));
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "Izgotovitel", , ДоступностьСтраницыMain, Истина,,,,НСтр("ru = 'Изготовитель'; en = 'Manufacturer"));
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "Postavshik", , ДоступностьСтраницыMain, Истина);
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "ObektOcenkiSootvetstviyaProdukciya", , ДоступностьСтраницыMain, Истина, , "FullTextSearch");
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "VidProdukciiVSootvetstviiSNP_071_18", , ДоступностьСтраницыMain, Истина, , "OutputAllElements",,НСтр("ru = 'Вид продукции в соответствии с НП-071-18'; en = 'Product in accordance with NP-071-18'"));
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "KodOKPD2", , ДоступностьСтраницыMain, Истина);
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "GID_MTRIO", , ДоступностьСтраницыMain);
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "KKS", , ДоступностьСтраницыMain, Истина);
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "KlassBezopasnosti", , ДоступностьСтраницыMain, Истина, , "OutputAllElements");
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "ZavodNomer", , ДоступностьСтраницыMain, Истина);
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "TU_TT", , ДоступностьСтраницыMain, Истина,,,,НСтр("ru = 'Дата и номер технических требований или технических условий на импортную продукцию'; en = 'Date and number of technical requirements or specifications for imported products'"));
			
		ИначеЕсли ДокументОбъект.FormaOS = Перечисления.ra_FormyOS.Registraciya Тогда
			
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "DataZayavki", , ДоступностьСтраницыMain, Истина,,,,НСтр("ru = 'Дата заявки с комплектом документов на регистрацию'; en = 'Date of application with a set of documents for registration'"));
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "NomerZayavki", , ДоступностьСтраницыMain, Истина,,,,НСтр("ru = 'Номер заявки с комплектом документов на регистрацию'; en = 'Application number with a set of documents for registration'"));
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "DataRegistracii", , ДоступностьСтраницыMain,Истина,,,,,НСтр("ru = 'Дата регистрации заявки с комплектом документов на регистрацию'; en = 'Date of registration of the application with a set of documents for registration'"));
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "RegNomer", , ДоступностьСтраницыMain,Истина,,,,НСтр("ru = 'Номер регистрации заявки с комплектом документов на регистрацию'; en = 'Registration number of the application with a set of documents for registration'"));
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "Zayavitel", , ДоступностьСтраницыMain, Истина);
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "Ispolnitel", , ДоступностьСтраницыMain, Истина,,,,НСтр("ru = 'Исполнитель'; en = 'Performer'"));
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "ObektOcenkiSootvetstviyaProdukciya", , ДоступностьСтраницыMain, Истина, , "FullTextSearch");
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "VidProdukciiVSootvetstviiSNP_071_18", , ДоступностьСтраницыMain, Истина, , "OutputAllElements",,НСтр("ru = 'Вид продукции в соответствии с НП-071-18'; en = 'Product in accordance with NP-071-18'"));
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "KodOKPD2", , ДоступностьСтраницыMain, Истина);
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "GID_MTRIO", , ДоступностьСтраницыMain);
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "KKS", , ДоступностьСтраницыMain, Истина);
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "KlassBezopasnosti", , ДоступностьСтраницыMain, Истина, , "OutputAllElements");
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "SeriynieNomera", , ДоступностьСтраницыMain, Истина);
			
		ИначеЕсли ДокументОбъект.FormaOS = Перечисления.ra_FormyOS.Kontrol Тогда
			
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "DataRegistracii", , ДоступностьСтраницыMain,Истина,,,,,НСтр("ru = 'Дата приказа или иного основания на проведение контроля'; en = 'Date of order or other basis for control'"));
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "RegNomer", , ДоступностьСтраницыMain,Истина,,,,НСтр("ru = 'Номер приказа или иного основания на проведение контроля'; en = 'Number of the order or other basis for carrying out control'"));
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "Zayavitel", , ДоступностьСтраницыMain, Истина);
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "Ispolnitel", , ДоступностьСтраницыMain, Истина,,,,НСтр("ru = 'Исполнитель'; en = 'Performer'"));
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "ObektOcenkiSootvetstviyaProdukciya", , ДоступностьСтраницыMain, Истина, , "FullTextSearch");
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "MetodKontrolya", , ДоступностьСтраницыMain, Истина, , "FullTextSearch", , НСтр("ru = 'Метод контроля'; en = 'Control method'"));
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "MetodikaKontrolya", , ДоступностьСтраницыMain, Истина, , "FullTextSearch");
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "VidProdukciiVSootvetstviiSNP_071_18", , ДоступностьСтраницыMain, Истина, , "OutputAllElements",,НСтр("ru = 'Вид продукции в соответствии с НП-071-18'; en = 'Product in accordance with NP-071-18'"));
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "KodOKPD2", , ДоступностьСтраницыMain, Истина);
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "GID_MTRIO", , ДоступностьСтраницыMain);
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "KKS", , ДоступностьСтраницыMain, Истина);
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "KlassBezopasnosti", , ДоступностьСтраницыMain, Истина, , "OutputAllElements");
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "SeriynieNomera", , ДоступностьСтраницыMain, Истина);
			
		КонецЕсли;
		
	ИначеЕсли Страница = "Result" Тогда
		
		//ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "Zayavitel");
		//ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "OtvetstvennyjDopustivshij");
		//						
		//ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "Status", Истина, Ложь, , ,"OutputAllElements");
		//
		//Если ДокументОбъект.FormaOS = Перечисления.ra_FormyOcenkiSootvetstviya.Registraciya Тогда
		//	
		//	ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "RezultatProvedeniya", , ДоступностьСтраницыResult, Истина, , "OutputAllElements");
		//	ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "RezultatProvedeniyaOpisanie", , ДоступностьСтраницыResult);
		//	ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "NomerDokumenta", , ДоступностьСтраницыResult, Истина, , , , НСтр("ru = 'Номер решения о регистрации / отказе в регистрации'; en = 'Number of the decision on registration / refusal of registration'"));
		//	// ТСК Близнюк С.И.; 13.09.2018; task#471{
		//	//ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "DataPrinyatiyaResheniya", , ДоступностьСтраницыResult, Истина);
		//	ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "DataPrinyatiyaResheniya", , ДоступностьСтраницыResult, Истина, , , , НСтр("ru = 'Дата решения о регистрации / отказе в регистрации'; en = 'Date of decision on registration / refusal of registration'"));
		//	ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "NomerResheniyaORegistracii", , ДоступностьСтраницыResult, , , , , НСтр("ru = 'Номер решения о регистрации / отказе в регистрации'; en = 'Number of the decision on registration / refusal of registration'"));
		//	// ТСК Близнюк С.И.; 13.09.2018; task#471}
		//	
		//ИначеЕсли ДокументОбъект.FormaOS = Перечисления.ra_FormyOcenkiSootvetstviya.Priemka Тогда
		//				
		//	ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "DataPrinyatiyaResheniya", , ДоступностьСтраницыResult, Истина, , , , НСтр("ru = 'Дата заключения о приемке'; en = 'Date of conclusion on acceptance'"));
		//	ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "RezultatProvedeniya", , ДоступностьСтраницыResult, , , "OutputAllElements");
		//	ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "RezultatProvedeniyaOpisanie", , ДоступностьСтраницыResult, , , , , НСтр("ru = 'Описание результата проведения оценки соответствия'; en = 'Conformity assessment result description'"));
		//	ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "NomerDokumenta", , ДоступностьСтраницыResult, Истина, , , , НСтр("ru = 'Номер заключения о приемке'; en = 'Number of conclusion on acceptance'"));
		//	//ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "NomerPlanaKachestva", , ДоступностьСтраницыResult, Истина, , , , НСтр("ru = 'Номер плана качества'; en = 'Number of quality plan'"));
		//	ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "NomerAktaOPriemke", , ДоступностьСтраницыResult И РезультатОценкиСоответствует, ДоступностьСтраницыResult И РезультатОценкиСоответствует, , , , НСтр("ru = 'Номер закрытого плана качества'; en = 'Quality plan closing number'"));
		//	ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "DataAktaOPriemke", , ДоступностьСтраницыResult И РезультатОценкиСоответствует, , , , , НСтр("ru = 'Дата закрытия плана качества'; en = 'Quality plan closing date'"));
		//	ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "SeriynieNomera", , ДоступностьСтраницыMain И РезультатОценкиСоответствует, ДоступностьСтраницыMain И РезультатОценкиСоответствует);
		//	
		//ИначеЕсли ДокументОбъект.FormaOS = Перечисления.ra_FormyOcenkiSootvetstviya.ReshenieOPrimeneniiImportnojProdukcii Тогда
		//	
		//	ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "NomerResheniyaOPrimeneniiImportnojProdukcii", , ДоступностьСтраницыResult, Истина);
		//	ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "RezultatProvedeniya", , ДоступностьСтраницыResult, Истина, , "OutputAllElements");
		//	ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "RezultatProvedeniyaOpisanie", , ДоступностьСтраницыResult, , , , , НСтр("ru = 'Комментарий к проведению оценки соответствия'; en = 'Conformity assessment result comment'"));
		//	// ТСК Близнюк С.И.; 13.09.2018; task#470{
		//	ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "DataPrinyatiyaResheniya", , ДоступностьСтраницыResult, Истина, , , , НСтр("ru = 'Дата решения о применении импортной продукции на ОИАЭ'; en = 'Date of decision on application of imported products on OIAE'"));
		//	ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "RostekhnadzorSoglasoval", , ДоступностьСтраницыResult, Истина, , "OutputAllElements");
		//	// ТСК Близнюк С.И.; 13.09.2018; task#470}
		//	
		//ИначеЕсли ДокументОбъект.FormaOS = Перечисления.ra_FormyOcenkiSootvetstviya.AttestacionnyeIspytaniya Тогда
		//	
		//	ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "RezultatProvedeniya", , ДоступностьСтраницыResult, Истина, , "OutputAllElements");
		//	ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "RezultatProvedeniyaOpisanie", , ДоступностьСтраницыResult, , , , , НСтр("ru = 'Описание результата проведения оценки соответствия'; en = 'Conformity assessment result description'"));
		//	ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "StatusDokumenta", , ДоступностьСтатусаДокумента, , , "OutputAllElements");
		//	
		//	Если ДокументОбъект.VidIspytanij = Перечисления.ra_VidyIspytanij.Attestacionnye Тогда 
		//		ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "DataAttestacionnogoOtcheta", , ДоступностьСтраницыResult, ДоступностьСтраницыResult);
		//		ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "NomerAttestacionnogoOtcheta", , ДоступностьСтраницыResult, ДоступностьСтраницыResult);
		//		ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "DataVydachiSvidetelstvaObAttestacii", , ДоступностьСтраницыResult И РезультатОценкиСоответствует, ДоступностьСтраницыResult И РезультатОценкиСоответствует);
		//		ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "NomerSvidetelstvaObAttestacii", , ДоступностьСтраницыResult И РезультатОценкиСоответствует, ДоступностьСтраницыResult И РезультатОценкиСоответствует);		
		//	Иначе
		//		ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "DataPrinyatiyaResheniya", , ДоступностьСтраницыResult, Истина);
		//		ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "NomerAktaIspytanij", , ДоступностьСтраницыResult);
		//		ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "DataPrinyatiyaResheniya", , ДоступностьСтраницыResult, Истина, , , , НСтр("ru = 'Дата акта испытаний'; en = 'Date of test report'"));
		//		ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "DataProtokolaIspytaniy", , ДоступностьСтраницыResult, ДоступностьСтраницыResult);
		//		ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "NomerProtokolaIspytaniy", , ДоступностьСтраницыResult, ДоступностьСтраницыResult);			
		//	КонецЕсли;
		//	
		//ИначеЕсли ДокументОбъект.FormaOS = Перечисления.ra_FormyOcenkiSootvetstviya.EkspertizaTD Тогда
		//	
		//	ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "DataPrinyatiyaResheniya", , ДоступностьСтраницыResult, , , , , НСтр("ru = 'Дата утверждения экспертного заключения'; en = 'Date of approval of the expert opinion'"));
		//	ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "NomerDokumenta", , ДоступностьСтраницыResult, , , , , НСтр("ru = 'Номер экспертного заключения'; en = 'Expert opinion number'"));
		//	ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "RezultatProvedeniya", , ДоступностьСтраницыResult, Истина, , "OutputAllElements");
		//	ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "RezultatProvedeniyaOpisanie", , ДоступностьСтраницыResult, , , , , НСтр("ru = 'Описание результата проведения экспертизы технической документации'; en = 'Description of the result of examination of technical documentation'"));
		//	ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "StatusDokumenta", , ДоступностьСтатусаДокумента, Истина);
		//	ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "KommentarijKRezultatuProvedeniyaEhkspertizy", , ДоступностьСтраницыResult);
		//	ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "SvedeniyaORukovoditeleEkspertnoyGruppy", , ДоступностьСтраницыMain);
		//	ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "SvedeniyaObEkspertahPoEkspertizeTehnicheskoyDokumentacii", , ДоступностьСтраницыMain);
		//	
		//ИначеЕсли ДокументОбъект.FormaOS = Перечисления.ra_FormyOcenkiSootvetstviya.PoryadokObyazatelnojSertifikacii Тогда
		//	
		//	ДоступностьСтраницыResult = ДоступностьСтраницыResult И ДокументОбъект.ReshenieOSertifikacii = Перечисления.ra_ResheniyaOSertifikacii.ProvestiSertifikaciyu;
		//	
		//	ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "StatusDokumenta", , ДоступностьСтатусаДокумента, , , "OutputAllElements");
		//	ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "KommentariiRezultatySertifikacii", , ДоступностьСтраницыResult, , , , , НСтр("ru = 'Комментарий к решению'; en = 'Comment on the solution'"));
		//	ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "DataResheniyaPoZayavke", , ДоступностьСтраницыResult);
		//	
		//	РезультатПроведенияСоответствует = ДокументОбъект.RezultatProvedeniya = Перечисления.ra_SootvetstvuetIliNet.Sootvetstvuet;
		//	
		//	ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "SrokSertificataS", , ДоступностьСтраницыResult И РезультатПроведенияСоответствует, ДоступностьСтраницыResult И РезультатПроведенияСоответствует);
		//	ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "SrokSertificataPo", , ДоступностьСтраницыResult И РезультатПроведенияСоответствует, ДоступностьСтраницыResult И РезультатПроведенияСоответствует);
		//	ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "NomerSertifikata", , ДоступностьСтраницыResult И РезультатПроведенияСоответствует, ДоступностьСтраницыResult И РезультатПроведенияСоответствует);
		//	ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "DataZaklucheniyaOrganizaciiPoSertifikacii", , ДоступностьСтраницыResult, Истина);
		//	ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "NomerZaklucheniya", , ДоступностьСтраницыResult, Истина, , , , НСтр("ru = 'Номер заключения органа по сертификации'; en = 'Number of the conclusion of the certification body'"));
		//	ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "InformaciyaOTekhnicheskihEkspertahUchastvovavshihVRabotahPoSertifikacii", , ДоступностьСтраницыResult, Истина);
		//	ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "InformaciyaOProvedennyhSertifikacionnyhIspytaniyah", , ДоступностьСтраницыResult, Истина);
		//	ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "InformaciyaOPriznannyhRezultatahIspytanij", , ДоступностьСтраницыResult, Истина);
		//	ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "ReshenieOrganaPoSertifikacii", , ДоступностьСтраницыResult, Истина);
		//	ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "DataResheniyaOVydache", , ДоступностьСтраницыResult, Истина);
		//	ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "NomerResheniyaOVydacheSertifikata", , ДоступностьСтраницыResult, Истина);
		//	ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "InformaciyaObEkspertahPoSertifikaciiPodgotovivshihZaklyuchenie", , ДоступностьСтраницыResult, Истина);
		//	
		//	Если ДокументОбъект.SkhemaSertifikacii = Перечисления.ra_SkhemySertifikacii.C4_IspytaniyaObrazcovProdukcii Тогда
		//		ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "AnalizSostoyaniyaProizvodstvaProizveden", , ДоступностьСтраницыResult);
		//		ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "InformaciyaORezultatahAnalizaProizvodstva", , ДоступностьСтраницыResult);
		//	КонецЕсли;
		//	Если ДокументОбъект.SkhemaSertifikacii = Перечисления.ra_SkhemySertifikacii.C5_IspytaniyaObrazcovProdukcii Тогда
		//		ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "SertifikaciyaSMKProvedena", , Ложь);     
		//		ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "InformaciyaOSertifikaciiSMK", , Ложь);
		//	КонецЕсли;
		//	Если ДокументОбъект.SkhemaSertifikacii = Перечисления.ra_SkhemySertifikacii.C6_IspytaniyaPartii
		//		ИЛИ ДокументОбъект.SkhemaSertifikacii = Перечисления.ra_SkhemySertifikacii.C7_IspytanieKazhdogoObrazca Тогда
		//		ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "SrokSertificataPo", Ложь, ДоступностьСтраницыResult И РезультатПроведенияСоответствует, Ложь);
		//		ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "SrokSertificataS", Истина, ДоступностьСтраницыResult И РезультатПроведенияСоответствует, Истина, , , , НСтр("ru = 'Дата выдачи сертифката'; en = 'Date of issue of the certificate'"));
		//	КонецЕсли;
		//	ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "InformaciyaOPolnotePredstavlennyhDokumentov", , ДоступностьСтраницыResult, Истина, , "OutputAllElements"); 
		//	ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "InformaciyaOPravilnostiIPolnotePodtverzhdennyhHarakteristik", , ДоступностьСтраницыResult, Истина, , "OutputAllElements");
		//	ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "KommentarijKInformacii" , ,
		//		(ДокументОбъект.InformaciyaOPolnotePredstavlennyhDokumentov = Перечисления.ra_VidyInformaciiOPolnotePredostavlennyhDokumentov.Inoe ИЛИ
		//		ДокументОбъект.InformaciyaOPravilnostiIPolnotePodtverzhdennyhHarakteristik = Перечисления.ra_VidyInformaciiOPravilnostiIPolnotyPodtverzhdennyhHarakteristik.Inoe) И ДоступностьСтраницыResult);
		//	ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "SvedeniyaObUsloviyahDejstviyaSertifikata", , ДоступностьСтраницыResult);
		//	ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "RezultatProvedeniya", , ДоступностьСтраницыResult, Истина, , "OutputAllElements");
		//	ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "RezultatProvedeniyaOpisanie", , ДоступностьСтраницыResult, Истина, , , , НСтр("ru = 'Описание результата проведения оценки соответствия'; en = 'Conformity assessment result description'"));
		//	
		//ИначеЕсли ДокументОбъект.FormaOS = Перечисления.ra_FormyOcenkiSootvetstviya.InspekcionnyjKontrol Тогда
		//	
		//	ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "DataPrinyatiyaResheniya", , ДоступностьСтраницыResult, Истина);
		//	ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "RezultatProvedeniya", , ДоступностьСтраницыResult, Истина, , "OutputAllElements");
		//	ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "RezultatProvedeniyaOpisanie", , ДоступностьСтраницыResult);
		//	// ТСК Близнюк С.И.; 11.09.2018; task#468{
		//	ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "RezultatProvedeniyaInspekcionnogoKontrolya", , ДоступностьСтраницыResult, Истина, , "OutputAllElements");
		//	// ТСК Близнюк С.И.; 11.09.2018; task#468}
		//	
		//КонецЕсли;
		
	КонецЕсли;
	
	МассивОбязательныхРеквизитов = ра_ОбменДанными.МассивОбязательныхРеквизитов(Метаданные.Документы.ra_ZayavkaNaOcenkuSootvetstviya3);
	
	ПараметрыПроверки = Новый Структура;
	ПараметрыПроверки.Вставить("FormaOS", ДокументОбъект.FormaOS);
	//ПараметрыПроверки.Вставить("SkhemaSertifikacii", ДокументОбъект.SkhemaSertifikacii);
	//ПараметрыПроверки.Вставить("VidIspytanij", ДокументОбъект.VidIspytanij);
	//ПараметрыПроверки.Вставить("RezultatProvedeniya", ДокументОбъект.RezultatProvedeniya);
	//ПараметрыПроверки.Вставить("ReshenieOSertifikacii", ДокументОбъект.ReshenieOSertifikacii);
	ПараметрыПроверки.Вставить("Zayavitel", ДокументОбъект.Zayavitel);
	//Если ДокументОбъект.Status = Перечисления.ra_StatusyZayavokNaOcenkuSootvetstviya.Zaregistrirovana
	//	Или ДокументОбъект.Status = Перечисления.ra_StatusyZayavokNaOcenkuSootvetstviya.Zakryta Тогда
	//	ПараметрыПроверки.Вставить("Status", Перечисления.ra_StatusyZayavokNaOcenkuSootvetstviya.Zakryta);
	//Иначе
	//	ПараметрыПроверки.Вставить("Status", Перечисления.ra_StatusyZayavokNaOcenkuSootvetstviya.Zaregistrirovana);
	//КонецЕсли;
	
	АктуализироватьМассивОбязательныхРеквизитов(МассивОбязательныхРеквизитов, ПараметрыПроверки);
	ра_ОбменДанными.УстановитьОбязателенДляЗаполнения(ТаблицаНастроек, МассивОбязательныхРеквизитов);
	
	Для каждого СтрокаНастроек Из ТаблицаНастроек Цикл
		Если Найти(СтрокаНастроек.Тип, "Enumeration_") Тогда
			СтрокаНастроек.ВидПоиска = "OutputAllElements";
			СтрокаНастроек.Опции = ра_ОбменДанными.ПолучитьЗначенияПеречисления(СтрокаНастроек.Тип);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Функция ПолучитьМассивКнопок(ДокументОбъект) Экспорт
	
	ВидФормы = "ФормаОбъекта";
	ДокументСылка = Документы.ra_ZayavkaNaOcenkuSootvetstviya3.ПустаяСсылка();
	Если ТипЗнч(ДокументОбъект) = Тип("Структура") Тогда
		ВидФормы = "ФормаСписка";
		Если ДокументОбъект.Свойство("ZayavkaNaOcenkuSootvetstviya") Тогда
			ДокументСылка = ДокументОбъект.ZayavkaNaOcenkuSootvetstviya;
		КонецЕсли;
	Иначе
		ДокументСылка = ДокументОбъект.Ссылка;
	КонецЕсли;
	
	МассивКнопок = Новый Массив;
			
	Если ВидФормы = "ФормаОбъекта" Тогда
		
		// ТСК Ткаченко И.Л.; 14.08.2018; task#955{
		//МассивКнопок.Добавить(КнопкаСохранить);
		ИмяКнопки = "Save";
		ОписаниеКнопки = НСтр("ru = 'Сохранить'; en = 'Save'");
		КнопкаСохранить = ра_ОбменДанными.ПолучитьСтруктуруНастроекКнопки(ИмяКнопки, ОписаниеКнопки);
		КнопкаСохранить.Вставить("ObjectTypeLink", "Document_ra_ZayavkaNaOcenkuSootvetstviya3");
		КнопкаСохранить.Вставить("ObjectGUID", Строка(ДокументСылка.УникальныйИдентификатор()));
		
		КнопкаСохранить.Availability = Истина;
		КнопкаСохранить.Visibility = КнопкаСохранить.Availability;
		
		МассивКнопок.Добавить(КнопкаСохранить);
		
		//ИмяКнопки = "Register";
		//ОписаниеКнопки = НСтр("ru = 'Зарегистрировать'; en = 'Register'");
		//Кнопка = ра_ОбменДанными.ПолучитьСтруктуруНастроекКнопки(ИмяКнопки, ОписаниеКнопки);
		//Кнопка.Вставить("ObjectTypeLink", "Document_ra_ZayavkaNaOcenkuSootvetstviya");
		//Кнопка.Вставить("ObjectGUID", Строка(ДокументСылка.УникальныйИдентификатор()));
		//
		//Кнопка.Availability = Статус = Перечисления.ra_StatusyZayavokNaOcenkuSootvetstviya.Zayavka;
		//Кнопка.Visibility   = Кнопка.Availability;
		//
		//МассивКнопок.Добавить(Кнопка);
		//
		//ИмяКнопки = "Complete";
		//ОписаниеКнопки = НСтр("ru = 'Завершить оценку'; en = 'Complete the assessment'");
		//Кнопка = ра_ОбменДанными.ПолучитьСтруктуруНастроекКнопки(ИмяКнопки, ОписаниеКнопки);
		//Кнопка.Вставить("ObjectTypeLink", "Document_ra_ZayavkaNaOcenkuSootvetstviya");
		//Кнопка.Вставить("ObjectGUID", Строка(ДокументСылка.УникальныйИдентификатор()));
		//
		//Кнопка.Availability = Статус = Перечисления.ra_StatusyZayavokNaOcenkuSootvetstviya.Zaregistrirovana;
		//Кнопка.Visibility   = Кнопка.Availability;
		//
		//МассивКнопок.Добавить(Кнопка);
		//
		//ИмяКнопки = "RegisterNonconformity";
		//ОписаниеКнопки = НСтр("ru = 'Зарегистрировать несоответствие'; en = 'Register a nonconformity'");
		//Кнопка = ра_ОбменДанными.ПолучитьСтруктуруНастроекКнопки(ИмяКнопки, ОписаниеКнопки);
		//Кнопка.Вставить("ObjectTypeLink", "Document_ra_ZayavkaNaOcenkuSootvetstviya");
		//Кнопка.Вставить("ObjectGUID", Строка(ДокументСылка.УникальныйИдентификатор()));
		//
		//// ТСК Близнюк С.И.; 11.09.2018; task#456{
		////Кнопка.Availability = ДокументОбъект.RezultatProvedeniya = Перечисления.ra_SootvetstvuetIliNet.NeSootvetstvuet;
		//Кнопка.Availability = ДокументОбъект.RezultatProvedeniya = Перечисления.ra_SootvetstvuetIliNet.NeSootvetstvuet 
		//	И ДокументОбъект.Zayavitel = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПользователиКлиентСервер.ТекущийПользователь(), "ра_Организация");
		//// ТСК Близнюк С.И.; 11.09.2018; task#456}
		//Кнопка.Visibility   = Кнопка.Availability;
		//
		//МассивКнопок.Добавить(Кнопка);
		
		Если ОбщегоНазначения.СсылкаСуществует(ДокументОбъект.Ссылка) Тогда
			ИмяКнопки = "Download";
			ОписаниеКнопки = НСтр("ru = 'Загрузить файл с компьютера;Перетащить с помощью Drag’n’Drop';
				|en = 'Load file from computer;Drag’n’Drop'");
			КнопкаЗагрузить = ра_ОбменДанными.ПолучитьСтруктуруНастроекКнопки(ИмяКнопки, ОписаниеКнопки);
			КнопкаЗагрузить.Availability = Истина;
			КнопкаЗагрузить.Visibility = КнопкаЗагрузить.Availability;
		Иначе
			ИмяКнопки = "Download";
			ОписаниеКнопки = НСтр("ru = 'После создания документа;вы сможете прикреплять к нему файлы';
				|en = 'After creating a document;you can attach files to it'");
			КнопкаЗагрузить = ра_ОбменДанными.ПолучитьСтруктуруНастроекКнопки(ИмяКнопки, ОписаниеКнопки);
			КнопкаЗагрузить.Availability = Ложь;
		КонецЕсли;
		
		МассивКнопок.Добавить(КнопкаЗагрузить);
		
		Если (ДокументОбъект.FormaOS <> Перечисления.ra_FormyOS.ReshenieOPrimeneniiImportnojProdukcii 
			И ДокументОбъект.FormaOS <> Перечисления.ra_FormyOS.InspekcionnyjKontrol) 
			ИЛИ (ДокументОбъект.FormaOS <> Перечисления.ra_FormyOS.ReshenieOPrimeneniiImportnojProdukcii 
			И ДокументОбъект.VidIspytanij = Перечисления.ra_VidyIspytanij.Attestacionnye) Тогда 
			
			ИмяКнопки = "AddSerialNumber";
			ОписаниеКнопки = НСтр("ru = 'Добавить';en = 'Add'");
			КнопкаДобавить = ра_ОбменДанными.ПолучитьСтруктуруНастроекКнопки(ИмяКнопки, ОписаниеКнопки);
			КнопкаДобавить.Availability = Ложь;
		КонецЕсли;
		МассивКнопок.Добавить(КнопкаДобавить);
		// ТСК Ткаченко И.Л.; 14.08.2018; task#955}
		
		Если ДокументОбъект.FormaOS = Перечисления.ra_FormyOS.EkspertizaTD Тогда
			ДоступностьКнопки = Истина;
			ОписаниеКнопки = НСтр("ru = 'Добавить строку';en = 'Add row'");
			
			ИмяКнопки = "SvedeniyaORukovoditeleEkspertnoyGruppy_AddRow";
			КнопкаДобавитьСтроку = ра_ОбменДанными.ПолучитьСтруктуруНастроекКнопки(ИмяКнопки, ОписаниеКнопки);
			КнопкаДобавитьСтроку.Availability = ДоступностьКнопки;
			КнопкаДобавитьСтроку.Visibility = КнопкаДобавитьСтроку.Availability;
			МассивКнопок.Добавить(КнопкаДобавитьСтроку);
			
			ИмяКнопки = "SvedeniyaObEkspertahPoEkspertizeTehnicheskoyDokumentacii_AddRow";
			КнопкаДобавитьСтроку = ра_ОбменДанными.ПолучитьСтруктуруНастроекКнопки(ИмяКнопки, ОписаниеКнопки);
			КнопкаДобавитьСтроку.Availability = ДоступностьКнопки;
			КнопкаДобавитьСтроку.Visibility = КнопкаДобавитьСтроку.Availability;
			МассивКнопок.Добавить(КнопкаДобавитьСтроку);
		КонецЕсли;
				
	ИначеЕсли ВидФормы = "ФормаСписка" Тогда
		
		ИмяКнопки = "ShowMore";
		ОписаниеКнопки = НСтр("ru = 'Показать еще'; en = 'Show more'");
		КнопкаПоказатьЕще = ра_ОбменДанными.ПолучитьСтруктуруНастроекКнопки(ИмяКнопки, ОписаниеКнопки);
		
		ИмяКнопки = "ExportToExcel";
		ОписаниеКнопки = НСтр("ru = 'Экспорт в Excel'; en = 'Export to Excel'");
		КнопкаЭкспортВExcel = ра_ОбменДанными.ПолучитьСтруктуруНастроекКнопки(ИмяКнопки, ОписаниеКнопки);
		
		ИмяКнопки = "Find";
		ОписаниеКнопки = НСтр("ru = 'Найти'; en = 'Find'");
		КнопкаНайти = ра_ОбменДанными.ПолучитьСтруктуруНастроекКнопки(ИмяКнопки, ОписаниеКнопки);
		
		ИмяКнопки = "Reset";
		ОписаниеКнопки = НСтр("ru = 'Сброс'; en = 'Reset'");
		КнопкаСброс = ра_ОбменДанными.ПолучитьСтруктуруНастроекКнопки(ИмяКнопки, ОписаниеКнопки);
		
		МассивКнопок.Добавить(КнопкаПоказатьЕще);
		МассивКнопок.Добавить(КнопкаЭкспортВExcel);
		МассивКнопок.Добавить(КнопкаНайти);
		МассивКнопок.Добавить(КнопкаСброс);
		
	КонецЕсли;
	
	Возврат МассивКнопок;
	
КонецФункции

Функция ПолучитьПолучитьМассивКолонокСписка() Экспорт
	
	МетаданныеДокумента = Метаданные.Документы.ra_ZayavkaNaOcenkuSootvetstviya3;
	
	ТаблицаНастроек = ра_ОбменДанными.СформироватьПустуюТаблицуНастроек();
	
	РеквизитыОбъекта = МетаданныеДокумента.Реквизиты;
	СтандартныеРеквизитыОбъекта = МетаданныеДокумента.СтандартныеРеквизиты;
	
	ра_ОбменДанными.ДобавитьСтрокуВТаблицуНастроек(ТаблицаНастроек, СтандартныеРеквизитыОбъекта.Дата);
	ра_ОбменДанными.ДобавитьСтрокуВТаблицуНастроек(ТаблицаНастроек, СтандартныеРеквизитыОбъекта.Номер);
	ра_ОбменДанными.ДобавитьСтрокуВТаблицуНастроек(ТаблицаНастроек, РеквизитыОбъекта.FormaOS);
	ра_ОбменДанными.ДобавитьСтрокуВТаблицуНастроек(ТаблицаНастроек, РеквизитыОбъекта.Proekt);
	ра_ОбменДанными.ДобавитьСтрокуВТаблицуНастроек(ТаблицаНастроек, РеквизитыОбъекта.Zayavitel);
	ра_ОбменДанными.ДобавитьСтрокуВТаблицуНастроек(ТаблицаНастроек, РеквизитыОбъекта.Ispolnitel);
		
	МассивДанных = ра_ОбменДанными.СформироватьМассивДанныхИзТаблицыНастроек(ТаблицаНастроек);
	
	Возврат МассивДанных;
	
КонецФункции

Функция ПолучитьМассивФильтровСписка() Экспорт
	
	МетаданныеДокумента = Метаданные.Документы.ra_ZayavkaNaOcenkuSootvetstviya3;
	
	ТаблицаНастроек = ра_ОбменДанными.СформироватьПустуюТаблицуНастроек();
	
	РеквизитыОбъекта = МетаданныеДокумента.Реквизиты;
	СтандартныеРеквизитыОбъекта = МетаданныеДокумента.СтандартныеРеквизиты;
	
	ра_ОбменДанными.ДобавитьСтрокуВТаблицуНастроек(ТаблицаНастроек, СтандартныеРеквизитыОбъекта.Номер);
	ра_ОбменДанными.ДобавитьСтрокуВТаблицуНастроек(ТаблицаНастроек, РеквизитыОбъекта.FormaOS);
	ра_ОбменДанными.ДобавитьСтрокуВТаблицуНастроек(ТаблицаНастроек, РеквизитыОбъекта.Proekt);
	ра_ОбменДанными.ДобавитьСтрокуВТаблицуНастроек(ТаблицаНастроек, РеквизитыОбъекта.Zayavitel);
	ра_ОбменДанными.ДобавитьСтрокуВТаблицуНастроек(ТаблицаНастроек, РеквизитыОбъекта.Ispolnitel);
	
	МассивДанных = ра_ОбменДанными.СформироватьМассивДанныхИзТаблицыНастроек(ТаблицаНастроек);
	
	Возврат МассивДанных;
	
КонецФункции

Функция ПолучитьМассивЗаголовков(МассивДанных = Неопределено) Экспорт
	
	МассивЗаголовков = Новый Массив;
	
	ТаблицаЗаголовков = Новый ТаблицаЗначений;
	ТаблицаЗаголовков.Колонки.Добавить("Name");
	ТаблицаЗаголовков.Колонки.Добавить("Description");
	
	Для Каждого ТекЭлемент Из МассивДанных Цикл
		Если ТекЭлемент.Name = "Dogovory" И ТекЭлемент.Visibility Тогда
			НоваяСтрока = ТаблицаЗаголовков.Добавить();
			НоваяСтрока.Name = "Contracts";
			НоваяСтрока.Description = НСтр("ru = 'ДОГОВОРЫ'; en = 'CONTRACTS'");
		КонецЕсли;
		
		Если ТекЭлемент.Name = "SeriynieNomera" И ТекЭлемент.Visibility Тогда
			НоваяСтрока = ТаблицаЗаголовков.Добавить();
			НоваяСтрока.Name = "SerialNumbers";
			НоваяСтрока.Description = НСтр("ru = 'СЕРИЙНЫЕ НОМЕРА'; en = 'SERIAL NUMBERS'");
		КонецЕсли;
		
		Если ТекЭлемент.Name = "ObektyOcenkiSootvetstviyaTD" И ТекЭлемент.Visibility Тогда
			НоваяСтрока = ТаблицаЗаголовков.Добавить();
			НоваяСтрока.Name = "ObjectsOfCA";
			НоваяСтрока.Description = НСтр("ru = 'ОБЪЕКТЫ ОЦЕНКИ СООТВЕТСТВИЯ (ТЕХНИЧЕСКАЯ ДОКУМЕНТАЦИЯ)'; en = 'OBJECTS OF CONFORMITY ASSESSMENT (TECHNICAL DOCUMENTATION)'");
		КонецЕсли;
	КонецЦикла;
	
	ТаблицаЗаголовков.Свернуть("Name,Description");
	
	Для Каждого ТекСтрока Из ТаблицаЗаголовков Цикл
		МассивЗаголовков.Добавить(Новый Структура("Name,Description", ТекСтрока.Name, ТекСтрока.Description));
	КонецЦикла;
	
	Возврат МассивЗаголовков;
	
КонецФункции

Процедура ЗаполнитьГлавноеМенюОбъекта(ОбъектБД,МассивПунктовМеню) Экспорт
	
	МассивПунктовМеню.Добавить(Новый Структура("Name,Description,Availability,Visibility","Main",НСтр("ru = 'Запрос на ОС'; en = 'Request a CA'"),Истина,Истина));
	//МассивПунктовМеню.Добавить(Новый Структура("Name,Description,Availability,Visibility","Result",НСтр("ru = 'РЕЗУЛЬТАТЫ'; en = 'RESULTS'"),Истина,ОбъектБД.Status <> Перечисления.ra_StatusyZayavokNaOcenkuSootvetstviya.Zayavka));
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ТекущийПользовательЛокальныйАдминистратор()
	
	ПрофильЛокальныйАдминистратор = Справочники.ПрофилиГруппДоступа.НайтиПоРеквизиту("ИдентификаторПоставляемыхДанных", Новый УникальныйИдентификатор(УправлениеДоступомПереопределяемый.ИдентификаторПрофиляАдминистратор1С()));
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПолномочияПользователей.Полномочия КАК Полномочия
	|ИЗ
	|	РегистрСведений.ПолномочияПользователей КАК ПолномочияПользователей
	|ГДЕ
	|	ПолномочияПользователей.Владелец = &Владелец
	|	И ПолномочияПользователей.Полномочия = &ПрофильЛокальныйАдминистратор";
	
	Запрос.УстановитьПараметр("ПрофильЛокальныйАдминистратор", ПрофильЛокальныйАдминистратор);
	Запрос.УстановитьПараметр("Владелец", ПараметрыСеанса.ТекущийПользователь);
	
	Возврат Не Запрос.Выполнить().Пустой();
	
КонецФункции

#КонецОбласти

#КонецЕсли