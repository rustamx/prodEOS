#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Процедура АктуализироватьМассивОбязательныхРеквизитов(МассивРеквизитов, ДокументОбъект) Экспорт
	
	МассивРеквизитов.Очистить();
	
	РезультатСоответствует = ДокументОбъект.RezultatProvedeniya = Перечисления.ra_SootvetstvuetIliNet.Sootvetstvuet;
	
	ТекущийПользователь = ПользователиКлиентСервер.ТекущийПользователь();
	СтруктураРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ТекущийПользователь, "ра_Организация.ра_СпециализированнаяОрганизация,ра_Организация.ра_ЭксплуатирующаяОрганизация");
	ЭтоСпециализированнаяОрганизация = СтруктураРеквизитов["ра_Организацияра_СпециализированнаяОрганизация"];
	ЭтоЭксплуатирующаяОрганизация = СтруктураРеквизитов["ра_Организацияра_ЭксплуатирующаяОрганизация"];
	
	Если ДокументОбъект.Status = Перечисления.ra_StatusyZayavokNaOcenkuSootvetstviya.Zaregistrirovana Тогда
		
		//"Дата заявки" и "Дата регистрации" всегда обязательны для заполнения
		МассивРеквизитов.Добавить("DataZayavki");
				
		Если ДокументОбъект.FormaOS = Перечисления.ra_FormyOcenkiSootvetstviya.InspekcionnyjKontrol Тогда
			
			МассивРеквизитов.Добавить("DataRegistracii");
			МассивРеквизитов.Добавить("DataPismaOProvedeniiIK");
			МассивРеквизитов.Добавить("NomerPismaOProvedeniiIK");
			МассивРеквизитов.Добавить("NomerSertifikata");
			МассивРеквизитов.Добавить("SkhemaSertifikacii");
			МассивРеквизитов.Добавить("DataProgrammy");
			МассивРеквизитов.Добавить("NomerProgrammy");
			
		ИначеЕсли ДокументОбъект.FormaOS = Перечисления.ra_FormyOcenkiSootvetstviya.AttestacionnyeIspytaniya Тогда
			
			МассивРеквизитов.Добавить("Zayavitel");
			МассивРеквизитов.Добавить("Ispolnitel");
			
			Если ДокументОбъект.VidIspytanij = Перечисления.ra_VidyIspytanij.Attestacionnye Тогда
				МассивРеквизитов.Добавить("DataRegistracii");
				МассивРеквизитов.Добавить("ObektOcenkiSootvetstviyaObektAttestacionnyhIspytanij");
				МассивРеквизитов.Добавить("InformaciyaObObekteOcenkiSootvetstviya");
			Иначе
				МассивРеквизитов.Добавить("PrikazIliDokumentOsnovanie");
				МассивРеквизитов.Добавить("ObektOcenkiSootvetstviyaProdukciya");
				МассивРеквизитов.Добавить("KodOKPD2");
				МассивРеквизитов.Добавить("KKS_Certifikaciya");
				МассивРеквизитов.Добавить("VidProdukciiVSootvetstviiSNP_071_18");
				МассивРеквизитов.Добавить("PrikazIliDokumentOsnovanie");
												
				Если ДокументОбъект.VidIspytanij = Перечисления.ra_VidyIspytanij.PredvaritelnyeKompleksnyeAvtonomnye Тогда
					МассивРеквизитов.Добавить("ElementyObektaOcenkiSootvetstviya");
				КонецЕсли;
			КонецЕсли;
			
		ИначеЕсли ДокументОбъект.FormaOS = Перечисления.ra_FormyOcenkiSootvetstviya.PoryadokObyazatelnojSertifikacii Тогда
			
			МассивРеквизитов.Добавить("DataRegistracii");
			МассивРеквизитов.Добавить("Zayavitel");
			МассивРеквизитов.Добавить("Ispolnitel");
			МассивРеквизитов.Добавить("Izgotovitel");
			МассивРеквизитов.Добавить("KodOKPD2");
			МассивРеквизитов.Добавить("PerechenProdukciiPo277Prikazu");
			МассивРеквизитов.Добавить("VidProdukciiVSootvetstviiSNP_071_18");
			МассивРеквизитов.Добавить("DataPrinyatiyaResheniya");
			МассивРеквизитов.Добавить("NomerResheniyaPoZayavke");
			МассивРеквизитов.Добавить("ResheniePoZayavkeOpisanie");
			МассивРеквизитов.Добавить("ObektOcenkiSootvetstviyaProdukciya_Certifikaciya");
			МассивРеквизитов.Добавить("PredlagaemayaZayavitelemSkhemaSertifikacii");
			
		ИначеЕсли ДокументОбъект.FormaOS = Перечисления.ra_FormyOcenkiSootvetstviya.Priemka Тогда 
			
			МассивРеквизитов.Добавить("DataRegistracii");
			МассивРеквизитов.Добавить("Zayavitel");
			МассивРеквизитов.Добавить("Ispolnitel");
			МассивРеквизитов.Добавить("ObektOcenkiSootvetstviyaProdukciya");
			МассивРеквизитов.Добавить("KodOKPD2");
			МассивРеквизитов.Добавить("VidProdukciiVSootvetstviiSNP_071_18");
			МассивРеквизитов.Добавить("NomerZaprosaNaProvedenieOcenkiSootvetstviya");
			МассивРеквизитов.Добавить("KKS_Certifikaciya");
															
			Если ЭтоСпециализированнаяОрганизация Тогда
				МассивРеквизитов.Добавить("EkspluatiruyushchayaOrganizaciya");
				МассивРеквизитов.Добавить("NomerPorucheniyaEhkspluatiruyushchejOrganizacii");
				Если НЕ ЭтоЭксплуатирующаяОрганизация Тогда
					МассивРеквизитов.Добавить("DataPorucheniyaEhkspluatiruyushchejOrganizacii");
				КонецЕсли;
			КонецЕсли;
						
		ИначеЕсли ДокументОбъект.FormaOS = Перечисления.ra_FormyOcenkiSootvetstviya.Registraciya Тогда 
			
			МассивРеквизитов.Добавить("DataRegistracii");
			МассивРеквизитов.Добавить("Zayavitel");
			МассивРеквизитов.Добавить("Ispolnitel");
			МассивРеквизитов.Добавить("ObektOcenkiSootvetstviyaProdukciya");
			МассивРеквизитов.Добавить("KodOKPD2");
			МассивРеквизитов.Добавить("VidProdukciiVSootvetstviiSNP_071_18");
			МассивРеквизитов.Добавить("KKS_Certifikaciya");
			
		ИначеЕсли ДокументОбъект.FormaOS = Перечисления.ra_FormyOcenkiSootvetstviya.EkspertizaTD Тогда
			
			МассивРеквизитов.Добавить("DataRegistracii");
			МассивРеквизитов.Добавить("Zayavitel");
			МассивРеквизитов.Добавить("Ispolnitel");
			МассивРеквизитов.Добавить("VidProdukciiPoGostu");
			МассивРеквизитов.Добавить("ObektyOcenkiSootvetstviyaTD");
			МассивРеквизитов.Добавить("KodOKPD2");
			МассивРеквизитов.Добавить("UpolnomochennoeLicoOtZayavitelyaNaEkspertizuTD");
			МассивРеквизитов.Добавить("DolzhnostUpolnomochennogoLicaOtZayavitelyaNaEkspertizuTD");
			МассивРеквизитов.Добавить("RukovoditelOrganizaciiZayavitelyaNaEhkspertizuTD");
			МассивРеквизитов.Добавить("DolzhnostRukovoditelyaOrganizaciiZayavitelyaNaEhkspretizuTD");
						
		ИначеЕсли ДокументОбъект.FormaOS = Перечисления.ra_FormyOcenkiSootvetstviya.ReshenieOPrimeneniiImportnojProdukcii Тогда
			
			МассивРеквизитов.Добавить("Zayavitel");
			МассивРеквизитов.Добавить("Ispolnitel");
			МассивРеквизитов.Добавить("DogovorPostavki");
			МассивРеквизитов.Добавить("ObektOcenkiSootvetstviyaProdukciya");
			МассивРеквизитов.Добавить("KodOKPD2");
			МассивРеквизитов.Добавить("VidProdukciiVSootvetstviiSNP_071_18");
			
		КонецЕсли;
		
	ИначеЕсли ДокументОбъект.Status = Перечисления.ra_StatusyZayavokNaOcenkuSootvetstviya.Zakryta Тогда
		
		Запрос = Новый Запрос("
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Ссылка
		|ИЗ
		|	Справочник.Пользователи
		|ГДЕ
		|	НЕ ПометкаУдаления И НЕ Недействителен И ра_ОтветственныйЗаКачествоДопустивший
		|	И ра_Организация = &Организация");
		
		Запрос.УстановитьПараметр("Организация", ДокументОбъект.Zayavitel);
		РезультатЗапроса = Запрос.Выполнить();
								
		Если Не РезультатЗапроса.Пустой() И НЕ РезультатСоответствует Тогда
			МассивРеквизитов.Добавить("OtvetstvennyjDopustivshij");
		КонецЕсли;
				
		Если ДокументОбъект.FormaOS = Перечисления.ra_FormyOcenkiSootvetstviya.InspekcionnyjKontrol Тогда
			
			МассивРеквизитов.Добавить("DataPrinyatiyaResheniya");
			МассивРеквизитов.Добавить("RezultatProvedeniya");
			МассивРеквизитов.Добавить("RezultatProvedeniyaInspekcionnogoKontrolya");
			
		ИначеЕсли ДокументОбъект.FormaOS = Перечисления.ra_FormyOcenkiSootvetstviya.AttestacionnyeIspytaniya Тогда
			
			МассивРеквизитов.Добавить("RezultatProvedeniya");
			МассивРеквизитов.Добавить("StatusDokumenta");
						
			Если ДокументОбъект.VidIspytanij = Перечисления.ra_VidyIspytanij.Attestacionnye Тогда
				МассивРеквизитов.Добавить("DataAttestacionnogoOtcheta");
				МассивРеквизитов.Добавить("NomerAttestacionnogoOtcheta");
				Если РезультатСоответствует Тогда
					МассивРеквизитов.Добавить("DataVydachiSvidetelstvaObAttestacii");
					МассивРеквизитов.Добавить("NomerSvidetelstvaObAttestacii");
				КонецЕсли;
			Иначе
				МассивРеквизитов.Добавить("DataPrinyatiyaResheniya");
				МассивРеквизитов.Добавить("NomerAktaIspytanij");
				МассивРеквизитов.Добавить("DataProtokolaIspytaniy");
				МассивРеквизитов.Добавить("NomerProtokolaIspytaniy");
			КонецЕсли;
			
		ИначеЕсли ДокументОбъект.FormaOS = Перечисления.ra_FormyOcenkiSootvetstviya.PoryadokObyazatelnojSertifikacii Тогда
						
			РешениеПровестиСертификацию = ДокументОбъект.ReshenieOSertifikacii = Перечисления.ra_ResheniyaOSertifikacii.ProvestiSertifikaciyu;
			МассивРеквизитов.Добавить("StatusDokumenta");
			
			Если РешениеПровестиСертификацию Тогда
			
				МассивРеквизитов.Добавить("RezultatProvedeniya");
				МассивРеквизитов.Добавить("RezultatProvedeniyaOpisanie");
				МассивРеквизитов.Добавить("DataZaklucheniyaOrganizaciiPoSertifikacii");
				МассивРеквизитов.Добавить("NomerZaklucheniya");
				МассивРеквизитов.Добавить("InformaciyaObEkspertahPoSertifikaciiPodgotovivshihZaklyuchenie");
				МассивРеквизитов.Добавить("InformaciyaOTekhnicheskihEkspertahUchastvovavshihVRabotahPoSertifikacii");
				МассивРеквизитов.Добавить("InformaciyaOProvedennyhSertifikacionnyhIspytaniyah");
				МассивРеквизитов.Добавить("InformaciyaOPriznannyhRezultatahIspytanij");
				МассивРеквизитов.Добавить("InformaciyaOPolnotePredstavlennyhDokumentov"); 
				МассивРеквизитов.Добавить("InformaciyaOPravilnostiIPolnotePodtverzhdennyhHarakteristik");
				МассивРеквизитов.Добавить("ReshenieOrganaPoSertifikacii");
				МассивРеквизитов.Добавить("DataResheniyaOVydache");
				МассивРеквизитов.Добавить("NomerResheniyaOVydacheSertifikata");
							
				Если РезультатСоответствует Тогда
					МассивРеквизитов.Добавить("NomerSertifikata");
					МассивРеквизитов.Добавить("SrokSertificataS");
				
					Если ДокументОбъект.SkhemaSertifikacii <> Перечисления.ra_SkhemySertifikacii.C6_IspytaniyaPartii
						И ДокументОбъект.SkhemaSertifikacii <> Перечисления.ra_SkhemySertifikacii.C7_IspytanieKazhdogoObrazca Тогда
						МассивРеквизитов.Добавить("SrokSertificataPo");
					КонецЕсли;
				КонецЕсли;
				
			КонецЕсли;
			
		ИначеЕсли ДокументОбъект.FormaOS = Перечисления.ra_FormyOcenkiSootvetstviya.Priemka Тогда
			
			МассивРеквизитов.Добавить("DataPrinyatiyaResheniya");
			МассивРеквизитов.Добавить("NomerDokumenta");
						
			Если РезультатСоответствует Тогда
				МассивРеквизитов.Добавить("NomerAktaOPriemke");
				МассивРеквизитов.Добавить("DataAktaOPriemke");
				МассивРеквизитов.Добавить("SeriynieNomera");
			КонецЕсли;
						
		ИначеЕсли ДокументОбъект.FormaOS = Перечисления.ra_FormyOcenkiSootvetstviya.Registraciya Тогда
			
			МассивРеквизитов.Добавить("RezultatProvedeniya");
			МассивРеквизитов.Добавить("NomerDokumenta");
			МассивРеквизитов.Добавить("DataPrinyatiyaResheniya");
			
		ИначеЕсли ДокументОбъект.FormaOS = Перечисления.ra_FormyOcenkiSootvetstviya.EkspertizaTD Тогда
			
			МассивРеквизитов.Добавить("RezultatProvedeniya");
			МассивРеквизитов.Добавить("RezultatProvedeniyaOpisanie"); // ??
			МассивРеквизитов.Добавить("StatusDokumenta");
			
		ИначеЕсли ДокументОбъект.FormaOS = Перечисления.ra_FormyOcenkiSootvetstviya.ReshenieOPrimeneniiImportnojProdukcii Тогда
			
			МассивРеквизитов.Добавить("DataPrinyatiyaResheniya");
			МассивРеквизитов.Добавить("NomerResheniyaOPrimeneniiImportnojProdukcii");
			МассивРеквизитов.Добавить("RezultatProvedeniya");
			МассивРеквизитов.Добавить("RostekhnadzorSoglasoval");
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#Область Печать

Процедура ДобавитьКомандыПечати(КомандыПечати, СтруктураПараметров = Неопределено) Экспорт
	
	ра_ОбщегоНазначения.ВыполнитьЗаполнениеКомандПечатиДокументаЕОС(КомандыПечати, СтруктураПараметров);
	
КонецПроцедуры

Функция ШаблонПодходитДляАвтозапускаБизнесПроцессаПоОбъекту(ШаблонСсылка, ПредметСсылка, Подписчик, ВидСобытия, Условие) Экспорт
	
	Возврат БизнесСобытияВызовСервера.ШаблонПодходитДляАвтозапускаБизнесПроцессаПоДокументу(ШаблонСсылка, 
		ПредметСсылка, Подписчик, ВидСобытия, Условие);
	
	//Возврат Истина;
	
КонецФункции

#КонецОбласти

#Область УправлениеДоступом

// Возвращает строку, содержащую перечисление полей доступа через запятую
// Это перечисление используется в дальнейшем для передачи в метод 
// ОбщегоНазначения.ЗначенияРеквизитовОбъекта()
Функция ПолучитьПоляДоступа() Экспорт
	
	Возврат "Ссылка,
			|ВидДокумента";
	
КонецФункции

// Заполняет переданный дескриптор доступа
//
Процедура ЗаполнитьОсновнойДескриптор(ОбъектДоступа, ДескрипторДоступа) Экспорт
	
	ДескрипторДоступа.ВидОбъекта = ОбъектДоступа.ВидДокумента;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ИнтеграцияBitrix

Процедура СформироватьМассивДанныхGetList(Результат, ПолноеИмя, ПараметрыЗапросаHTTP) Экспорт
	
	ОбъектМетаданных = Метаданные.Документы.ra_ZayavkaNaOcenkuSootvetstviya;
	
	ТаблицаРеквизитов = ра_ОбменДанными.ПолучитьТаблицуРеквизитовОбъекта(ОбъектМетаданных);
	
	АктуализироватьТаблицуРеквизитов(ТаблицаРеквизитов);
	
	ТекстЗапросаВложенныеТаблицы = ПолучитьТекстЗапросаВложенныеТаблицы();
	ТекстЗапросаСоединений = ПолучитьТекстЗапросаСоединений();
	
	// ТСК Ткаченко И.Л.; 28.08.2018; task#1181;task#1183{
	Фильтр = ПараметрыЗапросаHTTP.Получить("$filter");
	
	Если ЗначениеЗаполнено(Фильтр) Тогда
		Фильтр = Фильтр + " and ПометкаУдаления eq Ложь";
	Иначе
		Фильтр = "ПометкаУдаления eq Ложь";  
	КонецЕсли;
	
	Для Каждого ТекСтрока Из ТаблицаРеквизитов Цикл
		Если ТекСтрока.Имя = "Status" Тогда 
			ТекСтрока.Имя = "xStatus";
			Фильтр = СтрЗаменить(Фильтр,"Status ","xStatus ");
		КонецЕсли;		
	КонецЦикла;	

	НовыеПараметры = Новый Соответствие(ПараметрыЗапросаHTTP);
	НовыеПараметры.Вставить("$filter", Фильтр);
	ПараметрыЗапросаHTTP = Новый ФиксированноеСоответствие(НовыеПараметры);
	// ТСК Ткаченко И.Л.; 28.08.2018; task#1181;task#1183}
	
	Запрос = ра_ОбменДанными.ПолучитьЗапрос(ТаблицаРеквизитов, ПараметрыЗапросаHTTP, ПолноеИмя, ТекстЗапросаВложенныеТаблицы, ТекстЗапросаСоединений);
	
	// ТСК Ткаченко И.Л.; 28.08.2018; task#1181;task#1183{
	Запрос.Текст = СтрЗаменить(Запрос.Текст,"xStatus","Status");
	// ТСК Ткаченко И.Л.; 28.08.2018; task#1181;task#1183}

	МассивДанных = ра_ОбменДанными.СформироватьМассивДанныхИзЗапроса(Запрос, ПараметрыЗапросаHTTP);
	Результат.Вставить("value", МассивДанных);
	
	НастройкаФормы = ПараметрыЗапросаHTTP.Получить("$form_settings");
	Если ЗначениеЗаполнено(НастройкаФормы) И НастройкаФормы Тогда
		МассивКолонок = ПолучитьПолучитьМассивКолонокСписка();
		МассивКнопок = ПолучитьМассивКнопок(Запрос.Параметры);
		МассивФильтров = ПолучитьМассивФильтровСписка();
		Результат.Вставить("form_settings", МассивКолонок);
		Результат.Вставить("button_settings", МассивКнопок);
		Результат.Вставить("filter_settings", МассивФильтров);
	КонецЕсли;
						
КонецПроцедуры

Процедура АктуализироватьТаблицуРеквизитов(ТаблицаРеквизитов)
	
	СтруктураРеквизита = Новый Структура("Имя,Тип,Выражение", "MainFile", "Справочник.Файлы", "ЕСТЬNULL(СправочникФайлы.Ссылка, ЗНАЧЕНИЕ(Справочник.Файлы.ПустаяСсылка))");
	ра_ОбменДанными.ДобавитьСтрокуВТаблицуРеквизитов(ТаблицаРеквизитов, СтруктураРеквизита);
	
	СтруктураРеквизита = Новый Структура("Имя,Тип,Выражение", "DocStatus", "Перечисление.СостоянияДокументов", "ЕСТЬNULL(РС_ИсторияСостояний.Состояние, ЗНАЧЕНИЕ(Перечисление.СостоянияДокументов.ПустаяСсылка))");
	ра_ОбменДанными.ДобавитьСтрокуВТаблицуРеквизитов(ТаблицаРеквизитов, СтруктураРеквизита);
	
	СтруктураРеквизита = Новый Структура("Имя,Тип,Выражение", "StatusIndex", "Число", "ЕСТЬNULL(РС_ИндексыСтатусовВидовОбъектов.ИндексСтатуса, 0)");
	ра_ОбменДанными.ДобавитьСтрокуВТаблицуРеквизитов(ТаблицаРеквизитов, СтруктураРеквизита);
	
	СтруктураРеквизита = Новый Структура("Имя,Тип,Выражение", "StatusTotal", "Число", "ЕСТЬNULL(РС_ИндексыСтатусовВидовОбъектов.ВсегоСтатусов, 0)");
	ра_ОбменДанными.ДобавитьСтрокуВТаблицуРеквизитов(ТаблицаРеквизитов, СтруктураРеквизита);
	
КонецПроцедуры

Функция ПолучитьТекстЗапросаВложенныеТаблицы() Экспорт
	
	Возврат "";
	
КонецФункции

Функция ПолучитьТекстЗапросаСоединений() Экспорт
	
	Возврат "	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Файлы КАК СправочникФайлы
			|	ПО ОсновнаяТаблица.Ссылка = СправочникФайлы.ВладелецФайла
			|		И СправочникФайлы.ра_ОсновнойФайл
			|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИсторияСостоянийДокументов.СрезПоследних КАК РС_ИсторияСостояний
			|	ПО ОсновнаяТаблица.Ссылка = РС_ИсторияСостояний.Документ
			|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ра_ИндексыСтатусовВидовОбъектов КАК РС_ИндексыСтатусовВидовОбъектов
			|	ПО ОсновнаяТаблица.ВидДокумента = РС_ИндексыСтатусовВидовОбъектов.ВидДокумента
			|	И РС_ИсторияСостояний.Состояние = РС_ИндексыСтатусовВидовОбъектов.СостояниеДокумента";
	
КонецФункции

Функция СформироватьМассивДанныхРолевойМодели(ДокументОбъект, ПараметрыФормирования = Неопределено) Экспорт
	
	ТаблицаНастроек = ра_ОбменДанными.ПолучитьТаблицуНастроекПолейПоУмолчанию(Метаданные.Документы.ra_ZayavkaNaOcenkuSootvetstviya);
	
	//В данную переменную необходимо передавать удаляемые реквизиты. Разделитель - запятая.
	УдаляемыеРеквизиты = "Ссылка,ПометкаУдаления,Проведен";
	ра_ОбменДанными.УдалитьСтрокиИзТаблицыНастроек(ТаблицаНастроек, УдаляемыеРеквизиты);
	
	Страница = Неопределено;
	Если ПараметрыФормирования <> Неопределено Тогда
		ПараметрыФормирования.Свойство("Страница", Страница);
	Иначе
		Страница = "Main";
	КонецЕсли;
	
	АктуализироватьТаблицуНастроек(ТаблицаНастроек, ДокументОбъект, Страница);
	
	Если Страница <> Неопределено Тогда
		ТаблицаНастроек = ТаблицаНастроек.Скопировать(ТаблицаНастроек.НайтиСтроки(Новый Структура("Видимость", Истина)));
	КонецЕсли;
			
	ра_ОбменДанными.ЗаполнитьТаблицуНастроекЗначениямиИзОбъекта(ТаблицаНастроек, ДокументОбъект);
	
	Если Страница = "Result" Тогда
		
		ДоступностьСтраницыResult = ДокументОбъект.Status = Перечисления.ra_StatusyZayavokNaOcenkuSootvetstviya.Zaregistrirovana;
		
		Запрос = Новый Запрос("
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Ссылка
		|ИЗ
		|	Справочник.Пользователи
		|ГДЕ
		|	НЕ ПометкаУдаления И НЕ Недействителен И ра_ОтветственныйЗаКачествоДопустивший
		|	И ра_Организация = &Организация");
		
		Запрос.УстановитьПараметр("Организация", ДокументОбъект.Zayavitel);
		РезультатЗапроса = Запрос.Выполнить();
		
		ОтветственныйДопустивший = Справочники.Пользователи.ПустаяСсылка();
		ОтветственныйВидимость = Ложь;
		ОтветственныйДоступность = Ложь;
						
		Если Не РезультатЗапроса.Пустой() Тогда
						
			ОтветственныйВидимость = Истина;
			ОтветственныйОбязателен = Истина;
			
			Выборка = РезультатЗапроса.Выбрать();
			Если Выборка.Количество() = 1 Тогда
				Выборка.Следующий();
				ОтветственныйДопустивший = Выборка.Ссылка;
			Иначе
				ОтветственныйДоступность = Истина;
			КонецЕсли;
						
		КонецЕсли;
		
		ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "Zayavitel", Ложь, Ложь, , Новый Структура("OtvetstvennyjDopustivshij", "ра_Организация"),,ДокументОбъект.Zayavitel);
		ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "OtvetstvennyjDopustivshij", ОтветственныйВидимость, ОтветственныйДоступность И ДоступностьСтраницыResult, ОтветственныйОбязателен, , "FullTextSearch", ОтветственныйДопустивший, , Новый Структура("ChoiceParameters", Новый Структура("ра_ОтветственныйЗаКачествоДопустивший", Истина)));
		
	КонецЕсли;
	
	МассивДанных = ра_ОбменДанными.СформироватьМассивДанныхИзТаблицыНастроек(ТаблицаНастроек);
	
	Возврат МассивДанных;
	
КонецФункции

Процедура АктуализироватьТаблицуНастроек(ТаблицаНастроек, ДокументОбъект, Страница)
	
	Для каждого СтрокаНастроек Из ТаблицаНастроек Цикл
		СтрокаНастроек.Видимость = Ложь;
		СтрокаНастроек.Доступность = Ложь;
	КонецЦикла;
	
	Если ДокументОбъект.FormaOS = Перечисления.ra_FormyOcenkiSootvetstviya.PoryadokObyazatelnojSertifikacii Тогда 
		ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "SkhemaSertifikacii", , Ложь);
	КонецЕсли;
	ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "FormaOS",,,, Новый Структура("Ispolnitel", "FormaOS"), "OutputAllElements");
	ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "VidIspytanij",,,,,"OutputAllElements");
	
	Если Не ЗначениеЗаполнено(Страница) Тогда
		Страница = "Main";
	КонецЕсли;
		
	ДоступностьСтраницыMain = ДокументОбъект.Status = Перечисления.ra_StatusyZayavokNaOcenkuSootvetstviya.Zayavka;
	ДоступностьСтраницыResult = ДокументОбъект.Status = Перечисления.ra_StatusyZayavokNaOcenkuSootvetstviya.Zaregistrirovana;	
	ДоступностьСтатусаДокумента = ТекущийПользовательЛокальныйАдминистратор() ИЛИ НЕ ДокументОбъект.Status = Перечисления.ra_StatusyZayavokNaOcenkuSootvetstviya.Zakryta;
	РезультатОценкиСоответствует = ДокументОбъект.RezultatProvedeniya = Перечисления.ra_SootvetstvuetIliNet.Sootvetstvuet;
	ОтветственныйОбязателен = Ложь;
		
	ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "Number", , ДоступностьСтраницыMain);
	ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "Date", , ДоступностьСтраницыMain, ДоступностьСтраницыMain);  //Дата заявки
	
	ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "DataZayavki", , ДоступностьСтраницыMain, ДоступностьСтраницыMain);
	ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "DataRegistracii", , ДоступностьСтраницыMain, ДоступностьСтраницыMain);
		
	Если Страница = "Main" Тогда
		
		ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "Status", Истина, Ложь, , ,"OutputAllElements");
		
		Если ДокументОбъект.FormaOS = Перечисления.ra_FormyOcenkiSootvetstviya.Registraciya Тогда 
			
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "Zayavitel", , ДоступностьСтраницыMain, Истина);
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "Ispolnitel", , Ложь, Истина);
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "ObektOcenkiSootvetstviyaProdukciya", , ДоступностьСтраницыMain, Истина, , "FullTextSearch");
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "KodOKPD2", , ДоступностьСтраницыMain, Истина);
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "VidProdukciiVSootvetstviiSNP_071_18", , ДоступностьСтраницыMain, Истина, , "FullTextSearch");
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "GID_Certifikaciya", , ДоступностьСтраницыMain);
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "KKS_Certifikaciya", , ДоступностьСтраницыMain, Истина);
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "SeriynieNomera", , ДоступностьСтраницыMain);
			
		ИначеЕсли ДокументОбъект.FormaOS = Перечисления.ra_FormyOcenkiSootvetstviya.Priemka Тогда
			
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "DataRegistracii", , ДоступностьСтраницыMain, ДоступностьСтраницыMain, , , , НСтр("ru = 'Дата регистрации запроса в эксплуатирующую организацию'; en = 'Date of order to operation organization'"));
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "NomerZaprosaNaProvedenieOcenkiSootvetstviya", , ДоступностьСтраницыMain, ДоступностьСтраницыMain);
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "Zayavitel", , ДоступностьСтраницыMain, Истина);
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "Ispolnitel", , Ложь, Истина);
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "VidProdukciiVSootvetstviiSNP_071_18", , ДоступностьСтраницыMain, Истина, , "FullTextSearch");
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "ObektOcenkiSootvetstviyaProdukciya", , ДоступностьСтраницыMain, Истина, , "FullTextSearch");
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "KodOKPD2", , ДоступностьСтраницыMain, Истина);
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "GID_Certifikaciya", , ДоступностьСтраницыMain);
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "KKS_Certifikaciya", , ДоступностьСтраницыMain, Истина);
			
			ТекущийПользователь = ПользователиКлиентСервер.ТекущийПользователь();
			СтруктураРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ТекущийПользователь, "ра_Организация.ра_СпециализированнаяОрганизация,ра_Организация.ра_ЭксплуатирующаяОрганизация");
			ЭтоСпециализированнаяОрганизация = СтруктураРеквизитов["ра_Организацияра_СпециализированнаяОрганизация"];
			ЭтоЭксплуатирующаяОрганизация = СтруктураРеквизитов["ра_Организацияра_ЭксплуатирующаяОрганизация"];
			
			Если ЭтоСпециализированнаяОрганизация Тогда
				ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "EkspluatiruyushchayaOrganizaciya", , ДоступностьСтраницыMain, ДоступностьСтраницыMain И ЭтоСпециализированнаяОрганизация,,,,, Новый Структура("ChoiceParameters", Новый Структура("ра_ЭксплуатирующаяОрганизация", Истина)));
				ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "NomerPorucheniyaEhkspluatiruyushchejOrganizacii", , ДоступностьСтраницыMain и ЭтоСпециализированнаяОрганизация, ЭтоСпециализированнаяОрганизация);
				ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "DataZayavki", , ДоступностьСтраницыMain, ДоступностьСтраницыMain И ЭтоСпециализированнаяОрганизация, , , , НСтр("ru = 'Дата запроса на проведение оценки соответствия'; en = 'Conformity assessment request date'"));
				ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "DataPorucheniyaEhkspluatiruyushchejOrganizacii", , ДоступностьСтраницыMain, ДоступностьСтраницыMain И НЕ ЭтоЭксплуатирующаяОрганизация);
			КонецЕсли;
			
		ИначеЕсли ДокументОбъект.FormaOS = Перечисления.ra_FormyOcenkiSootvetstviya.ReshenieOPrimeneniiImportnojProdukcii Тогда
			
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "Zayavitel", , ДоступностьСтраницыMain, Истина);
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "Ispolnitel", , Ложь, Истина);
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "DogovorPostavki", , ДоступностьСтраницыMain, Истина);
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "ObektOcenkiSootvetstviyaProdukciya", , ДоступностьСтраницыMain, Истина, , "FullTextSearch");
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "KodOKPD2", , ДоступностьСтраницыMain, Истина);
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "VidProdukciiVSootvetstviiSNP_071_18", , ДоступностьСтраницыMain, Истина, , "FullTextSearch");
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "GID_Certifikaciya", , ДоступностьСтраницыMain);
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "KKS_Certifikaciya", , ДоступностьСтраницыMain, Истина);
			// ТСК Близнюк С.И.; 13.09.2018; task#470{
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "DataZayavki", , ДоступностьСтраницыMain, ДоступностьСтраницыMain, , , , НСтр("ru = 'Дата договора поставки'; en = 'Date of the contract delivery'"));
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "DataRegistracii", Ложь, Ложь);
			// ТСК Близнюк С.И.; 13.09.2018; task#470}
						
		ИначеЕсли ДокументОбъект.FormaOS = Перечисления.ra_FormyOcenkiSootvetstviya.AttestacionnyeIspytaniya Тогда 
			
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "Zayavitel", , ДоступностьСтраницыMain, Истина);
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "Ispolnitel", , Ложь, Истина);
				
			Если ДокументОбъект.VidIspytanij = Перечисления.ra_VidyIspytanij.Attestacionnye Тогда 
				
				ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "ObektOcenkiSootvetstviyaObektAttestacionnyhIspytanij", , ДоступностьСтраницыMain, Истина);
				ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "InformaciyaObObekteOcenkiSootvetstviya", , ДоступностьСтраницыMain, Истина);
				ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "ResheniePoZayavke", , ДоступностьСтраницыMain);
				ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "ResheniePoZayavkeOpisanie", , ДоступностьСтраницыMain);  
				//ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "StatusDokumenta", , ДоступностьСтатуса);
				
			Иначе
				
				ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "DataZayavki", , ДоступностьСтраницыMain, ДоступностьСтраницыMain, , , , НСтр("ru = 'Дата приказа или иного основания'; en = 'Date of order or other grounds'"));			
				ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "DataRegistracii", Ложь, Ложь);  			
				ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "PrikazIliDokumentOsnovanie", , ДоступностьСтраницыMain, Истина, , , , НСтр("ru = 'Номер приказа или иного основания'; en = 'Number of order or other basis'"));
				ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "ObektOcenkiSootvetstviyaProdukciya", , ДоступностьСтраницыMain, Истина, , "FullTextSearch");
				ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "KodOKPD2", , ДоступностьСтраницыMain, Истина);
				ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "VidProdukciiVSootvetstviiSNP_071_18", , ДоступностьСтраницыMain, Истина, , "FullTextSearch");
				ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "GID_Certifikaciya", , ДоступностьСтраницыMain);
				ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "KKS_Certifikaciya", , ДоступностьСтраницыMain, Истина);
				ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "SeriynieNomera", , ДоступностьСтраницыMain);
				
				Если ДокументОбъект.VidIspytanij = Перечисления.ra_VidyIspytanij.PredvaritelnyeKompleksnyeAvtonomnye Тогда 
					ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "TipIspytaniy", , ДоступностьСтраницыMain);
					ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "ElementyObektaOcenkiSootvetstviya", , ДоступностьСтраницыMain, Истина);			
				КонецЕсли;
				
			КонецЕсли;
			
		ИначеЕсли ДокументОбъект.FormaOS = Перечисления.ra_FormyOcenkiSootvetstviya.EkspertizaTD Тогда 
			
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "DataZayavki", , ДоступностьСтраницыMain, ДоступностьСтраницыMain);
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "DataRegistracii", , ДоступностьСтраницыMain, ДоступностьСтраницыMain);
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "Zayavitel", , ДоступностьСтраницыMain, Истина);
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "Ispolnitel", , Ложь, Истина);
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "VidProdukciiPoGostu", , ДоступностьСтраницыMain, Истина);
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "ObektyOcenkiSootvetstviyaTD", , ДоступностьСтраницыMain, Истина);
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "KodOKPD2", , ДоступностьСтраницыMain, Истина);
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "GID_Certifikaciya", , ДоступностьСтраницыMain);
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "KKS_Certifikaciya", , ДоступностьСтраницыMain);
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "UpolnomochennoeLicoOtZayavitelyaNaEkspertizuTD", , ДоступностьСтраницыMain, Истина);
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "DolzhnostUpolnomochennogoLicaOtZayavitelyaNaEkspertizuTD", , ДоступностьСтраницыMain, Истина);
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "RukovoditelOrganizaciiZayavitelyaNaEhkspertizuTD", , ДоступностьСтраницыMain, Истина);
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "RukovoditelOrganizaciiIspolnitelya", , ДоступностьСтраницыMain, Истина);
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "DolzhnostRukovoditelyaOrganizaciiZayavitelyaNaEhkspretizuTD", , ДоступностьСтраницыMain, Истина);
						
		ИначеЕсли ДокументОбъект.FormaOS = Перечисления.ra_FormyOcenkiSootvetstviya.PoryadokObyazatelnojSertifikacii Тогда
			
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "ReshenieOSertifikacii", , ДоступностьСтраницыMain);
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "KommentarijKResheniyuOProvedeniiSertifikacii", , ДоступностьСтраницыMain);
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "DataRegistracii", , ДоступностьСтраницыMain, ДоступностьСтраницыMain);
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "Zayavitel", , ДоступностьСтраницыMain, Истина);
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "Ispolnitel", , Ложь, Истина);
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "Izgotovitel", , ДоступностьСтраницыMain, Истина);
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "ObektOcenkiSootvetstviyaProdukciya_Certifikaciya", , ДоступностьСтраницыMain);
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "KodOKPD2", , ДоступностьСтраницыMain, Истина);
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "PerechenProdukciiPo277Prikazu", , ДоступностьСтраницыMain, Истина);
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "VidProdukciiVSootvetstviiSNP_071_18", , ДоступностьСтраницыMain, Истина , , "FullTextSearch");
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "GID_Certifikaciya", , ДоступностьСтраницыMain);
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "KKS_Certifikaciya", , ДоступностьСтраницыMain);
			Если Не (ДокументОбъект.SkhemaSertifikacii = Перечисления.ra_SkhemySertifikacii.C3_IspytaniyaObrazcovProdukcii Или
				ДокументОбъект.SkhemaSertifikacii = Перечисления.ra_SkhemySertifikacii.C4_IspytaniyaObrazcovProdukcii Или
				ДокументОбъект.SkhemaSertifikacii = Перечисления.ra_SkhemySertifikacii.C5_IspytaniyaObrazcovProdukcii) Тогда
				ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "SeriynieNomera", , ДоступностьСтраницыMain);
			КонецЕсли;
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "DataPrinyatiyaResheniya", , ДоступностьСтраницыMain, Истина);
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "NomerResheniyaPoZayavke", , ДоступностьСтраницыMain, Истина);
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "ResheniePoZayavkeOpisanie", , ДоступностьСтраницыMain, Истина);
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "PredlagaemayaZayavitelemSkhemaSertifikacii", , ДоступностьСтраницыMain, Истина);
			//ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "del_ResheniePoZayavkePerechislenie", , ДоступностьСтраницыMain);
			
		ИначеЕсли ДокументОбъект.FormaOS = Перечисления.ra_FormyOcenkiSootvetstviya.InspekcionnyjKontrol Тогда 
			
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "DataPismaOProvedeniiIK", , ДоступностьСтраницыMain, Истина);
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "NomerPismaOProvedeniiIK", , ДоступностьСтраницыMain, Истина);
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "NomerSertifikata", , ДоступностьСтраницыMain, Истина);
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "SkhemaSertifikacii", , ДоступностьСтраницыMain, Истина,,,,НСтр("ru = 'Схема условий действия сертификата'; en = 'Certificate validity scheme'"));
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "DataProgrammy", , ДоступностьСтраницыMain, Истина);
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "NomerProgrammy", , ДоступностьСтраницыMain, Истина);
			
		КонецЕсли;
		
	ИначеЕсли Страница = "Result" Тогда
		
		ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "Zayavitel");
		ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "OtvetstvennyjDopustivshij");
								
		ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "Status", Истина, Ложь, , ,"OutputAllElements");
		
		Если ДокументОбъект.FormaOS = Перечисления.ra_FormyOcenkiSootvetstviya.Registraciya Тогда
			
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "RezultatProvedeniya", , ДоступностьСтраницыResult, Истина, , "OutputAllElements");
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "RezultatProvedeniyaOpisanie", , ДоступностьСтраницыResult);
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "NomerDokumenta", , ДоступностьСтраницыResult, Истина, , , , НСтр("ru = 'Номер решения о регистрации / отказе в регистрации'; en = 'Number of the decision on registration / refusal of registration'"));
			// ТСК Близнюк С.И.; 13.09.2018; task#471{
			//ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "DataPrinyatiyaResheniya", , ДоступностьСтраницыResult, Истина);
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "DataPrinyatiyaResheniya", , ДоступностьСтраницыResult, Истина, , , , НСтр("ru = 'Дата решения о регистрации / отказе в регистрации'; en = 'Date of decision on registration / refusal of registration'"));
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "NomerResheniyaORegistracii", , ДоступностьСтраницыResult, , , , , НСтр("ru = 'Номер решения о регистрации / отказе в регистрации'; en = 'Number of the decision on registration / refusal of registration'"));
			// ТСК Близнюк С.И.; 13.09.2018; task#471}
			
		ИначеЕсли ДокументОбъект.FormaOS = Перечисления.ra_FormyOcenkiSootvetstviya.Priemka Тогда
						
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "DataPrinyatiyaResheniya", , ДоступностьСтраницыResult, Истина, , , , НСтр("ru = 'Дата заключения о приемке'; en = 'Date of conclusion on acceptance'"));
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "RezultatProvedeniya", , ДоступностьСтраницыResult, , , "OutputAllElements");
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "RezultatProvedeniyaOpisanie", , ДоступностьСтраницыResult, , , , , НСтр("ru = 'Описание результата проведения оценки соответствия'; en = 'Conformity assessment result description'"));
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "NomerDokumenta", , ДоступностьСтраницыResult, Истина, , , , НСтр("ru = 'Номер заключения о приемке'; en = 'Number of conclusion on acceptance'"));
			//ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "NomerPlanaKachestva", , ДоступностьСтраницыResult, Истина, , , , НСтр("ru = 'Номер плана качества'; en = 'Number of quality plan'"));
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "NomerAktaOPriemke", , ДоступностьСтраницыResult И РезультатОценкиСоответствует, ДоступностьСтраницыResult И РезультатОценкиСоответствует, , , , НСтр("ru = 'Номер закрытого плана качества'; en = 'Quality plan closing number'"));
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "DataAktaOPriemke", , ДоступностьСтраницыResult И РезультатОценкиСоответствует, , , , , НСтр("ru = 'Дата закрытия плана качества'; en = 'Quality plan closing date'"));
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "SeriynieNomera", , ДоступностьСтраницыMain И РезультатОценкиСоответствует, ДоступностьСтраницыMain И РезультатОценкиСоответствует);
			
		ИначеЕсли ДокументОбъект.FormaOS = Перечисления.ra_FormyOcenkiSootvetstviya.ReshenieOPrimeneniiImportnojProdukcii Тогда
			
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "NomerResheniyaOPrimeneniiImportnojProdukcii", , ДоступностьСтраницыResult, Истина);
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "RezultatProvedeniya", , ДоступностьСтраницыResult, Истина, , "OutputAllElements");
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "RezultatProvedeniyaOpisanie", , ДоступностьСтраницыResult, , , , , НСтр("ru = 'Комментарий к проведению оценки соответствия'; en = 'Conformity assessment result comment'"));
			// ТСК Близнюк С.И.; 13.09.2018; task#470{
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "DataPrinyatiyaResheniya", , ДоступностьСтраницыResult, Истина, , , , НСтр("ru = 'Дата решения о применении импортной продукции на ОИАЭ'; en = 'Date of decision on application of imported products on OIAE'"));
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "RostekhnadzorSoglasoval", , ДоступностьСтраницыResult, Истина, , "OutputAllElements");
			// ТСК Близнюк С.И.; 13.09.2018; task#470}
			
		ИначеЕсли ДокументОбъект.FormaOS = Перечисления.ra_FormyOcenkiSootvetstviya.AttestacionnyeIspytaniya Тогда
			
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "RezultatProvedeniya", , ДоступностьСтраницыResult, Истина, , "OutputAllElements");
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "RezultatProvedeniyaOpisanie", , ДоступностьСтраницыResult, , , , , НСтр("ru = 'Описание результата проведения оценки соответствия'; en = 'Conformity assessment result description'"));
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "StatusDokumenta", , ДоступностьСтатусаДокумента, , , "OutputAllElements");
			
			Если ДокументОбъект.VidIspytanij = Перечисления.ra_VidyIspytanij.Attestacionnye Тогда 
				ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "DataAttestacionnogoOtcheta", , ДоступностьСтраницыResult, ДоступностьСтраницыResult);
				ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "NomerAttestacionnogoOtcheta", , ДоступностьСтраницыResult, ДоступностьСтраницыResult);
				ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "DataVydachiSvidetelstvaObAttestacii", , ДоступностьСтраницыResult И РезультатОценкиСоответствует, ДоступностьСтраницыResult И РезультатОценкиСоответствует);
				ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "NomerSvidetelstvaObAttestacii", , ДоступностьСтраницыResult И РезультатОценкиСоответствует, ДоступностьСтраницыResult И РезультатОценкиСоответствует);		
			Иначе
				ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "DataPrinyatiyaResheniya", , ДоступностьСтраницыResult, Истина);
				ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "NomerAktaIspytanij", , ДоступностьСтраницыResult);
				ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "DataPrinyatiyaResheniya", , ДоступностьСтраницыResult, Истина, , , , НСтр("ru = 'Дата акта испытаний'; en = 'Date of test report'"));
				ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "DataProtokolaIspytaniy", , ДоступностьСтраницыResult, ДоступностьСтраницыResult);
				ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "NomerProtokolaIspytaniy", , ДоступностьСтраницыResult, ДоступностьСтраницыResult);			
			КонецЕсли;
			
		ИначеЕсли ДокументОбъект.FormaOS = Перечисления.ra_FormyOcenkiSootvetstviya.EkspertizaTD Тогда
			
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "DataPrinyatiyaResheniya", , ДоступностьСтраницыResult, , , , , НСтр("ru = 'Дата утверждения экспертного заключения'; en = 'Date of approval of the expert opinion'"));
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "NomerDokumenta", , ДоступностьСтраницыResult, , , , , НСтр("ru = 'Номер экспертного заключения'; en = 'Expert opinion number'"));
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "RezultatProvedeniya", , ДоступностьСтраницыResult, Истина, , "OutputAllElements");
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "RezultatProvedeniyaOpisanie", , ДоступностьСтраницыResult, , , , , НСтр("ru = 'Описание результата проведения экспертизы технической документации'; en = 'Description of the result of examination of technical documentation'"));
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "StatusDokumenta", , ДоступностьСтатусаДокумента, Истина);
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "KommentarijKRezultatuProvedeniyaEhkspertizy", , ДоступностьСтраницыResult);
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "SvedeniyaORukovoditeleEkspertnoyGruppy", , ДоступностьСтраницыMain);
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "SvedeniyaObEkspertahPoEkspertizeTehnicheskoyDokumentacii", , ДоступностьСтраницыMain);
			
		ИначеЕсли ДокументОбъект.FormaOS = Перечисления.ra_FormyOcenkiSootvetstviya.PoryadokObyazatelnojSertifikacii Тогда
			
			ДоступностьСтраницыResult = ДоступностьСтраницыResult И ДокументОбъект.ReshenieOSertifikacii = Перечисления.ra_ResheniyaOSertifikacii.ProvestiSertifikaciyu;
			
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "StatusDokumenta", , ДоступностьСтатусаДокумента, , , "OutputAllElements");
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "KommentariiRezultatySertifikacii", , ДоступностьСтраницыResult, , , , , НСтр("ru = 'Комментарий к решению'; en = 'Comment on the solution'"));
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "DataResheniyaPoZayavke", , ДоступностьСтраницыResult);
			
			РезультатПроведенияСоответствует = ДокументОбъект.RezultatProvedeniya = Перечисления.ra_SootvetstvuetIliNet.Sootvetstvuet;
			
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "SrokSertificataS", , ДоступностьСтраницыResult И РезультатПроведенияСоответствует, ДоступностьСтраницыResult И РезультатПроведенияСоответствует);
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "SrokSertificataPo", , ДоступностьСтраницыResult И РезультатПроведенияСоответствует, ДоступностьСтраницыResult И РезультатПроведенияСоответствует);
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "NomerSertifikata", , ДоступностьСтраницыResult И РезультатПроведенияСоответствует, ДоступностьСтраницыResult И РезультатПроведенияСоответствует);
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "DataZaklucheniyaOrganizaciiPoSertifikacii", , ДоступностьСтраницыResult, Истина);
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "NomerZaklucheniya", , ДоступностьСтраницыResult, Истина, , , , НСтр("ru = 'Номер заключения органа по сертификации'; en = 'Number of the conclusion of the certification body'"));
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "InformaciyaOTekhnicheskihEkspertahUchastvovavshihVRabotahPoSertifikacii", , ДоступностьСтраницыResult, Истина);
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "InformaciyaOProvedennyhSertifikacionnyhIspytaniyah", , ДоступностьСтраницыResult, Истина);
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "InformaciyaOPriznannyhRezultatahIspytanij", , ДоступностьСтраницыResult, Истина);
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "ReshenieOrganaPoSertifikacii", , ДоступностьСтраницыResult, Истина);
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "DataResheniyaOVydache", , ДоступностьСтраницыResult, Истина);
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "NomerResheniyaOVydacheSertifikata", , ДоступностьСтраницыResult, Истина);
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "InformaciyaObEkspertahPoSertifikaciiPodgotovivshihZaklyuchenie", , ДоступностьСтраницыResult, Истина);
			
			Если ДокументОбъект.SkhemaSertifikacii = Перечисления.ra_SkhemySertifikacii.C4_IspytaniyaObrazcovProdukcii Тогда
				ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "AnalizSostoyaniyaProizvodstvaProizveden", , ДоступностьСтраницыResult);
				ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "InformaciyaORezultatahAnalizaProizvodstva", , ДоступностьСтраницыResult);
			КонецЕсли;
			Если ДокументОбъект.SkhemaSertifikacii = Перечисления.ra_SkhemySertifikacii.C5_IspytaniyaObrazcovProdukcii Тогда
				ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "SertifikaciyaSMKProvedena", , Ложь);     
				ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "InformaciyaOSertifikaciiSMK", , Ложь);
			КонецЕсли;
			Если ДокументОбъект.SkhemaSertifikacii = Перечисления.ra_SkhemySertifikacii.C6_IspytaniyaPartii
				ИЛИ ДокументОбъект.SkhemaSertifikacii = Перечисления.ra_SkhemySertifikacii.C7_IspytanieKazhdogoObrazca Тогда
				ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "SrokSertificataPo", Ложь, ДоступностьСтраницыResult И РезультатПроведенияСоответствует, Ложь);
				ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "SrokSertificataS", Истина, ДоступностьСтраницыResult И РезультатПроведенияСоответствует, Истина, , , , НСтр("ru = 'Дата выдачи сертификата'; en = 'Date of issue of the certificate'"));
			КонецЕсли;
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "InformaciyaOPolnotePredstavlennyhDokumentov", , ДоступностьСтраницыResult, Истина, , "OutputAllElements"); 
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "InformaciyaOPravilnostiIPolnotePodtverzhdennyhHarakteristik", , ДоступностьСтраницыResult, Истина, , "OutputAllElements");
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "KommentarijKInformacii" , ,
				(ДокументОбъект.InformaciyaOPolnotePredstavlennyhDokumentov = Перечисления.ra_VidyInformaciiOPolnotePredostavlennyhDokumentov.Inoe ИЛИ
				ДокументОбъект.InformaciyaOPravilnostiIPolnotePodtverzhdennyhHarakteristik = Перечисления.ra_VidyInformaciiOPravilnostiIPolnotyPodtverzhdennyhHarakteristik.Inoe) И ДоступностьСтраницыResult);
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "SvedeniyaObUsloviyahDejstviyaSertifikata", , ДоступностьСтраницыResult);
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "RezultatProvedeniya", , ДоступностьСтраницыResult, Истина, , "OutputAllElements");
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "RezultatProvedeniyaOpisanie", , ДоступностьСтраницыResult, Истина, , , , НСтр("ru = 'Описание результата проведения оценки соответствия'; en = 'Conformity assessment result description'"));
			
		ИначеЕсли ДокументОбъект.FormaOS = Перечисления.ra_FormyOcenkiSootvetstviya.InspekcionnyjKontrol Тогда
			
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "DataPrinyatiyaResheniya", , ДоступностьСтраницыResult, Истина);
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "RezultatProvedeniya", , ДоступностьСтраницыResult, Истина, , "OutputAllElements");
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "RezultatProvedeniyaOpisanie", , ДоступностьСтраницыResult);
			// ТСК Близнюк С.И.; 11.09.2018; task#468{
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "RezultatProvedeniyaInspekcionnogoKontrolya", , ДоступностьСтраницыResult, Истина, , "OutputAllElements");
			// ТСК Близнюк С.И.; 11.09.2018; task#468}
			
		КонецЕсли;
		
	КонецЕсли;
	
	МассивОбязательныхРеквизитов = ра_ОбменДанными.МассивОбязательныхРеквизитов(Метаданные.Документы.ra_ZayavkaNaOcenkuSootvetstviya);
	
	ПараметрыПроверки = Новый Структура;
	ПараметрыПроверки.Вставить("FormaOS", ДокументОбъект.FormaOS);
	ПараметрыПроверки.Вставить("SkhemaSertifikacii", ДокументОбъект.SkhemaSertifikacii);
	ПараметрыПроверки.Вставить("VidIspytanij", ДокументОбъект.VidIspytanij);
	ПараметрыПроверки.Вставить("RezultatProvedeniya", ДокументОбъект.RezultatProvedeniya);
	ПараметрыПроверки.Вставить("ReshenieOSertifikacii", ДокументОбъект.ReshenieOSertifikacii);
	ПараметрыПроверки.Вставить("Zayavitel", ДокументОбъект.Zayavitel);
	Если ДокументОбъект.Status = Перечисления.ra_StatusyZayavokNaOcenkuSootvetstviya.Zaregistrirovana
		Или ДокументОбъект.Status = Перечисления.ra_StatusyZayavokNaOcenkuSootvetstviya.Zakryta Тогда
		ПараметрыПроверки.Вставить("Status", Перечисления.ra_StatusyZayavokNaOcenkuSootvetstviya.Zakryta);
	Иначе
		ПараметрыПроверки.Вставить("Status", Перечисления.ra_StatusyZayavokNaOcenkuSootvetstviya.Zaregistrirovana);
	КонецЕсли;
	
	АктуализироватьМассивОбязательныхРеквизитов(МассивОбязательныхРеквизитов, ПараметрыПроверки);
	ра_ОбменДанными.УстановитьОбязателенДляЗаполнения(ТаблицаНастроек, МассивОбязательныхРеквизитов);
	
	Для каждого СтрокаНастроек Из ТаблицаНастроек Цикл
		Если Найти(СтрокаНастроек.Тип, "Enumeration_") Тогда
			СтрокаНастроек.ВидПоиска = "OutputAllElements";
			СтрокаНастроек.Опции = ра_ОбменДанными.ПолучитьЗначенияПеречисления(СтрокаНастроек.Тип);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Функция ПолучитьМассивКнопок(ДокументОбъект) Экспорт
	
	ВидФормы = "ФормаОбъекта";
	ДокументСылка = Документы.ra_ZayavkaNaOcenkuSootvetstviya.ПустаяСсылка();
	Если ТипЗнч(ДокументОбъект) = Тип("Структура") Тогда
		ВидФормы = "ФормаСписка";
		Если ДокументОбъект.Свойство("ZayavkaNaOcenkuSootvetstviya") Тогда
			ДокументСылка = ДокументОбъект.ZayavkaNaOcenkuSootvetstviya;
		КонецЕсли;
	Иначе
		ДокументСылка = ДокументОбъект.Ссылка;
	КонецЕсли;
	
	МассивКнопок = Новый Массив;
			
	Если ВидФормы = "ФормаОбъекта" Тогда
		
		// ТСК Ткаченко И.Л.; 14.08.2018; task#955{
		//МассивКнопок.Добавить(КнопкаСохранить);
		ИмяКнопки = "Save";
		ОписаниеКнопки = НСтр("ru = 'Сохранить'; en = 'Save'");
		КнопкаСохранить = ра_ОбменДанными.ПолучитьСтруктуруНастроекКнопки(ИмяКнопки, ОписаниеКнопки);
		КнопкаСохранить.Вставить("ObjectTypeLink", "Document_ra_ZayavkaNaOcenkuSootvetstviya");
		КнопкаСохранить.Вставить("ObjectGUID", Строка(ДокументСылка.УникальныйИдентификатор()));
		
		Статус = ДокументОбъект.Status;
		
		КнопкаСохранить.Availability = Статус = Перечисления.ra_StatusyZayavokNaOcenkuSootvetstviya.Zayavka ИЛИ
			Статус = Перечисления.ra_StatusyZayavokNaOcenkuSootvetstviya.Zaregistrirovana;
		КнопкаСохранить.Visibility = КнопкаСохранить.Availability;
		
		МассивКнопок.Добавить(КнопкаСохранить);
		
		ИмяКнопки = "Register";
		ОписаниеКнопки = НСтр("ru = 'Зарегистрировать'; en = 'Register'");
		Кнопка = ра_ОбменДанными.ПолучитьСтруктуруНастроекКнопки(ИмяКнопки, ОписаниеКнопки);
		Кнопка.Вставить("ObjectTypeLink", "Document_ra_ZayavkaNaOcenkuSootvetstviya");
		Кнопка.Вставить("ObjectGUID", Строка(ДокументСылка.УникальныйИдентификатор()));
		
		Кнопка.Availability = Статус = Перечисления.ra_StatusyZayavokNaOcenkuSootvetstviya.Zayavka;
		Кнопка.Visibility   = Кнопка.Availability;
		
		МассивКнопок.Добавить(Кнопка);
		
		ИмяКнопки = "Complete";
		ОписаниеКнопки = НСтр("ru = 'Завершить оценку'; en = 'Complete the assessment'");
		Кнопка = ра_ОбменДанными.ПолучитьСтруктуруНастроекКнопки(ИмяКнопки, ОписаниеКнопки);
		Кнопка.Вставить("ObjectTypeLink", "Document_ra_ZayavkaNaOcenkuSootvetstviya");
		Кнопка.Вставить("ObjectGUID", Строка(ДокументСылка.УникальныйИдентификатор()));
		
		Кнопка.Availability = Статус = Перечисления.ra_StatusyZayavokNaOcenkuSootvetstviya.Zaregistrirovana;
		Кнопка.Visibility   = Кнопка.Availability;
		
		МассивКнопок.Добавить(Кнопка);
		
		ИмяКнопки = "RegisterNonconformity";
		ОписаниеКнопки = НСтр("ru = 'Зарегистрировать несоответствие'; en = 'Register a nonconformity'");
		Кнопка = ра_ОбменДанными.ПолучитьСтруктуруНастроекКнопки(ИмяКнопки, ОписаниеКнопки);
		Кнопка.Вставить("ObjectTypeLink", "Document_ra_ZayavkaNaOcenkuSootvetstviya");
		Кнопка.Вставить("ObjectGUID", Строка(ДокументСылка.УникальныйИдентификатор()));
		
		// ТСК Близнюк С.И.; 11.09.2018; task#456{
		//Кнопка.Availability = ДокументОбъект.RezultatProvedeniya = Перечисления.ra_SootvetstvuetIliNet.NeSootvetstvuet;
		Кнопка.Availability = ДокументОбъект.RezultatProvedeniya = Перечисления.ra_SootvetstvuetIliNet.NeSootvetstvuet 
			И ДокументОбъект.Zayavitel = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПользователиКлиентСервер.ТекущийПользователь(), "ра_Организация");
		// ТСК Близнюк С.И.; 11.09.2018; task#456}
		Кнопка.Visibility   = Кнопка.Availability;
		
		Если ОбщегоНазначения.СсылкаСуществует(ДокументОбъект.Ссылка) Тогда
			ИмяКнопки = "Download";
			ОписаниеКнопки = НСтр("ru = 'Загрузить файл с компьютера;Перетащить с помощью Drag’n’Drop';
				|en = 'Load file from computer;Drag’n’Drop'");
			КнопкаЗагрузить = ра_ОбменДанными.ПолучитьСтруктуруНастроекКнопки(ИмяКнопки, ОписаниеКнопки);
			ДоступностьКнопки = Статус = Перечисления.ra_StatusyZayavokNaOcenkuSootvetstviya.Zayavka ИЛИ
				Статус = Перечисления.ra_StatusyZayavokNaOcenkuSootvetstviya.Zaregistrirovana;
			КнопкаЗагрузить.Availability = ДоступностьКнопки;
			КнопкаЗагрузить.Visibility = КнопкаЗагрузить.Availability;
		Иначе
			ИмяКнопки = "Download";
			ОписаниеКнопки = НСтр("ru = 'После создания документа;вы сможете прикреплять к нему файлы';
				|en = 'After creating a document;you can attach files to it'");
			КнопкаЗагрузить = ра_ОбменДанными.ПолучитьСтруктуруНастроекКнопки(ИмяКнопки, ОписаниеКнопки);
			КнопкаЗагрузить.Availability = Ложь;
		КонецЕсли;
		
		МассивКнопок.Добавить(Кнопка);
		МассивКнопок.Добавить(КнопкаЗагрузить);
		
		Если (ДокументОбъект.FormaOS <> Перечисления.ra_FormyOcenkiSootvetstviya.ReshenieOPrimeneniiImportnojProdukcii 
			И ДокументОбъект.FormaOS <> Перечисления.ra_FormyOcenkiSootvetstviya.InspekcionnyjKontrol) 
			ИЛИ (ДокументОбъект.FormaOS <> Перечисления.ra_FormyOcenkiSootvetstviya.ReshenieOPrimeneniiImportnojProdukcii 
			И ДокументОбъект.VidIspytanij = Перечисления.ra_VidyIspytanij.Attestacionnye) Тогда 
			
			ИмяКнопки = "AddSerialNumber";
			ОписаниеКнопки = НСтр("ru = 'Добавить';en = 'Add'");
			КнопкаДобавить = ра_ОбменДанными.ПолучитьСтруктуруНастроекКнопки(ИмяКнопки, ОписаниеКнопки);
			КнопкаДобавить.Availability = Ложь;
		КонецЕсли;
		МассивКнопок.Добавить(КнопкаДобавить);
		// ТСК Ткаченко И.Л.; 14.08.2018; task#955}
		
		Если ДокументОбъект.FormaOS = Перечисления.ra_FormyOcenkiSootvetstviya.EkspertizaTD Тогда
			ДоступностьКнопки = ДокументОбъект.Status = Перечисления.ra_StatusyZayavokNaOcenkuSootvetstviya.Zaregistrirovana;
			ОписаниеКнопки = НСтр("ru = 'Добавить строку';en = 'Add row'");
			
			ИмяКнопки = "SvedeniyaORukovoditeleEkspertnoyGruppy_AddRow";
			КнопкаДобавитьСтроку = ра_ОбменДанными.ПолучитьСтруктуруНастроекКнопки(ИмяКнопки, ОписаниеКнопки);
			КнопкаДобавитьСтроку.Availability = ДоступностьКнопки;
			КнопкаДобавитьСтроку.Visibility = КнопкаДобавитьСтроку.Availability;
			МассивКнопок.Добавить(КнопкаДобавитьСтроку);
			
			ИмяКнопки = "SvedeniyaObEkspertahPoEkspertizeTehnicheskoyDokumentacii_AddRow";
			КнопкаДобавитьСтроку = ра_ОбменДанными.ПолучитьСтруктуруНастроекКнопки(ИмяКнопки, ОписаниеКнопки);
			КнопкаДобавитьСтроку.Availability = ДоступностьКнопки;
			КнопкаДобавитьСтроку.Visibility = КнопкаДобавитьСтроку.Availability;
			МассивКнопок.Добавить(КнопкаДобавитьСтроку);
		КонецЕсли;
				
	ИначеЕсли ВидФормы = "ФормаСписка" Тогда
		
		ИмяКнопки = "ShowMore";
		ОписаниеКнопки = НСтр("ru = 'Показать еще'; en = 'Show more'");
		КнопкаПоказатьЕще = ра_ОбменДанными.ПолучитьСтруктуруНастроекКнопки(ИмяКнопки, ОписаниеКнопки);
		
		ИмяКнопки = "ExportToExcel";
		ОписаниеКнопки = НСтр("ru = 'Экспорт в Excel'; en = 'Export to Excel'");
		КнопкаЭкспортВExcel = ра_ОбменДанными.ПолучитьСтруктуруНастроекКнопки(ИмяКнопки, ОписаниеКнопки);
		
		ИмяКнопки = "Find";
		ОписаниеКнопки = НСтр("ru = 'Найти'; en = 'Find'");
		КнопкаНайти = ра_ОбменДанными.ПолучитьСтруктуруНастроекКнопки(ИмяКнопки, ОписаниеКнопки);
		
		ИмяКнопки = "Reset";
		ОписаниеКнопки = НСтр("ru = 'Сброс'; en = 'Reset'");
		КнопкаСброс = ра_ОбменДанными.ПолучитьСтруктуруНастроекКнопки(ИмяКнопки, ОписаниеКнопки);
		
		МассивКнопок.Добавить(КнопкаПоказатьЕще);
		МассивКнопок.Добавить(КнопкаЭкспортВExcel);
		МассивКнопок.Добавить(КнопкаНайти);
		МассивКнопок.Добавить(КнопкаСброс);
		
	КонецЕсли;
	
	Возврат МассивКнопок;
	
КонецФункции

Функция ПолучитьПолучитьМассивКолонокСписка() Экспорт
	
	МетаданныеДокумента = Метаданные.Документы.ra_ZayavkaNaOcenkuSootvetstviya;
	
	ТаблицаНастроек = ра_ОбменДанными.СформироватьПустуюТаблицуНастроек();
	
	РеквизитыОбъекта = МетаданныеДокумента.Реквизиты;
	СтандартныеРеквизитыОбъекта = МетаданныеДокумента.СтандартныеРеквизиты;
	
	ра_ОбменДанными.ДобавитьСтрокуВТаблицуНастроек(ТаблицаНастроек, СтандартныеРеквизитыОбъекта.Дата);
	ра_ОбменДанными.ДобавитьСтрокуВТаблицуНастроек(ТаблицаНастроек, СтандартныеРеквизитыОбъекта.Номер);
	ра_ОбменДанными.ДобавитьСтрокуВТаблицуНастроек(ТаблицаНастроек, РеквизитыОбъекта.FormaOS);
	// ТСК Ткаченко И.Л.; 28.08.2018; task#1183{
	ра_ОбменДанными.ДобавитьСтрокуВТаблицуНастроек(ТаблицаНастроек, РеквизитыОбъекта.Status);
	// ТСК Ткаченко И.Л.; 28.08.2018; task#1183}
	ра_ОбменДанными.ДобавитьСтрокуВТаблицуНастроек(ТаблицаНастроек, РеквизитыОбъекта.Zayavitel);
	ра_ОбменДанными.ДобавитьСтрокуВТаблицуНастроек(ТаблицаНастроек, РеквизитыОбъекта.Ispolnitel);
		
	МассивДанных = ра_ОбменДанными.СформироватьМассивДанныхИзТаблицыНастроек(ТаблицаНастроек);
	
	Возврат МассивДанных;
	
КонецФункции

Функция ПолучитьМассивФильтровСписка() Экспорт
	
	МетаданныеДокумента = Метаданные.Документы.ra_ZayavkaNaOcenkuSootvetstviya;
	
	ТаблицаНастроек = ра_ОбменДанными.СформироватьПустуюТаблицуНастроек();
	
	РеквизитыОбъекта = МетаданныеДокумента.Реквизиты;
	СтандартныеРеквизитыОбъекта = МетаданныеДокумента.СтандартныеРеквизиты;
	
	ра_ОбменДанными.ДобавитьСтрокуВТаблицуНастроек(ТаблицаНастроек, СтандартныеРеквизитыОбъекта.Номер);
	ра_ОбменДанными.ДобавитьСтрокуВТаблицуНастроек(ТаблицаНастроек, РеквизитыОбъекта.FormaOS);
	ра_ОбменДанными.ДобавитьСтрокуВТаблицуНастроек(ТаблицаНастроек, РеквизитыОбъекта.Zayavitel);
	ра_ОбменДанными.ДобавитьСтрокуВТаблицуНастроек(ТаблицаНастроек, РеквизитыОбъекта.Ispolnitel);
	// ТСК Ткаченко И.Л.; 28.08.2018; task#1183{
	ра_ОбменДанными.ДобавитьСтрокуВТаблицуНастроек(ТаблицаНастроек, РеквизитыОбъекта.Status);
	ра_ОбменДанными.ДобавитьСтрокуВТаблицуНастроек(ТаблицаНастроек, РеквизитыОбъекта.StatusDokumenta);
	// ТСК Ткаченко И.Л.; 28.08.2018; task#1183}	
	
	МассивДанных = ра_ОбменДанными.СформироватьМассивДанныхИзТаблицыНастроек(ТаблицаНастроек);
	
	Возврат МассивДанных;
	
КонецФункции

Функция ПолучитьМассивЗаголовков(МассивДанных = Неопределено) Экспорт
	
	МассивЗаголовков = Новый Массив;
	
	ТаблицаЗаголовков = Новый ТаблицаЗначений;
	ТаблицаЗаголовков.Колонки.Добавить("Name");
	ТаблицаЗаголовков.Колонки.Добавить("Description");
	
	Для Каждого ТекЭлемент Из МассивДанных Цикл
		Если ТекЭлемент.Name = "SeriynieNomera" И ТекЭлемент.Visibility Тогда
			НоваяСтрока = ТаблицаЗаголовков.Добавить();
			НоваяСтрока.Name = "SerialNumbers";
			НоваяСтрока.Description = НСтр("ru = 'СЕРИЙНЫЕ НОМЕРА'; en = 'SERIAL NUMBERS'");
		КонецЕсли;
		
		Если ТекЭлемент.Name = "ObektyOcenkiSootvetstviyaTD" И ТекЭлемент.Visibility Тогда
			НоваяСтрока = ТаблицаЗаголовков.Добавить();
			НоваяСтрока.Name = "ObjectsOfCA";
			НоваяСтрока.Description = НСтр("ru = 'ОБЪЕКТЫ ОЦЕНКИ СООТВЕТСТВИЯ (ТЕХНИЧЕСКАЯ ДОКУМЕНТАЦИЯ НА ПРОДУКЦИЮ)'; en = 'OBJECTS OF CONFORMITY ASSESSMENT (TECHNICAL DOCUMENTATION FOR PRODUCTS)'");
		КонецЕсли;
	КонецЦикла;
	
	ТаблицаЗаголовков.Свернуть("Name,Description");
	
	Для Каждого ТекСтрока Из ТаблицаЗаголовков Цикл
		МассивЗаголовков.Добавить(Новый Структура("Name,Description", ТекСтрока.Name, ТекСтрока.Description));
	КонецЦикла;
	
	Возврат МассивЗаголовков;
	
КонецФункции

Процедура ЗаполнитьГлавноеМенюОбъекта(ОбъектБД,МассивПунктовМеню) Экспорт
	
	МассивПунктовМеню.Добавить(Новый Структура("Name,Description,Availability,Visibility","Main",НСтр("ru = 'ОСНОВНАЯ ИНФОРМАЦИЯ'; en = 'MAIN INFORMATION'"),Истина,Истина));
	МассивПунктовМеню.Добавить(Новый Структура("Name,Description,Availability,Visibility","Result",НСтр("ru = 'РЕЗУЛЬТАТЫ'; en = 'RESULTS'"),Истина,ОбъектБД.Status <> Перечисления.ra_StatusyZayavokNaOcenkuSootvetstviya.Zayavka));
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ТекущийПользовательЛокальныйАдминистратор()
	
	ПрофильЛокальныйАдминистратор = Справочники.ПрофилиГруппДоступа.НайтиПоРеквизиту("ИдентификаторПоставляемыхДанных", Новый УникальныйИдентификатор(УправлениеДоступомПереопределяемый.ИдентификаторПрофиляАдминистратор1С()));
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПолномочияПользователей.Полномочия КАК Полномочия
	|ИЗ
	|	РегистрСведений.ПолномочияПользователей КАК ПолномочияПользователей
	|ГДЕ
	|	ПолномочияПользователей.Владелец = &Владелец
	|	И ПолномочияПользователей.Полномочия = &ПрофильЛокальныйАдминистратор";
	
	Запрос.УстановитьПараметр("ПрофильЛокальныйАдминистратор", ПрофильЛокальныйАдминистратор);
	Запрос.УстановитьПараметр("Владелец", ПараметрыСеанса.ТекущийПользователь);
	
	Возврат Не Запрос.Выполнить().Пустой();
	
КонецФункции

#КонецОбласти

#КонецЕсли