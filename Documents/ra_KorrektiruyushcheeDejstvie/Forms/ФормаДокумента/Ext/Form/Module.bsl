
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.Печать
	УправлениеПечатью.ПриСозданииНаСервере(ЭтаФорма, Элементы.ГруппаПечать);
	// Конец СтандартныеПодсистемы.Печать
	
	ЗаполнитьСписокВыбораКоренныхПричин();
	
КонецПроцедуры

&НаКлиенте
Процедура NesootvetstvieПриИзменении(Элемент)
	
	Объект.OpisaniePrichiny = Неопределено;
	Объект.KodPrichiny = Неопределено;
	
	ЗаполнитьСписокВыбораКоренныхПричин();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПраваДоступа(Команда)
	
	ДокументооборотПраваДоступаКлиент.ОткрытьФормуПравДоступа(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПроцессСогласование(Команда)
	
	РаботаСБизнесПроцессамиКлиент.ОткрытьПомощникСозданияОсновныхПроцессов(
		"Согласование", Объект.Ссылка, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПроцессИсполнение(Команда)
	РаботаСБизнесПроцессамиКлиент.ОткрытьПомощникСозданияОсновныхПроцессов(
		"Исполнение", Объект.Ссылка, ЭтаФорма);	
КонецПроцедуры

&НаКлиенте
Процедура ПроцессОзнакомление(Команда)
	РаботаСБизнесПроцессамиКлиент.ОткрытьПомощникСозданияОсновныхПроцессов(
		"Ознакомление", Объект.Ссылка, ЭтаФорма);	
КонецПроцедуры

&НаКлиенте
Процедура ПроцессУтверждение(Команда)
	РаботаСБизнесПроцессамиКлиент.ОткрытьПомощникСозданияОсновныхПроцессов(
		"Утверждение", Объект.Ссылка, ЭтаФорма);	
КонецПроцедуры

// СтандартныеПодсистемы.Печать
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуПечати(Команда)
	
	УправлениеПечатьюКлиент.ВыполнитьПодключаемуюКомандуПечати(Команда, ЭтаФорма, Объект);
	
КонецПроцедуры

&НаКлиенте
Процедура Напечатать(Команда)
	
	#Если ВебКлиент Тогда 
		ПоказатьПредупреждение(, НСтр("ru = 'В Веб-клиенте печать файлов не поддерживается.'; en = 'Printing files is not supported in web client.'"));
		Возврат;
	#КонецЕсли
	
	СистемнаяИнфо = Новый СистемнаяИнформация;
	Если СистемнаяИнфо.ТипПлатформы <> ТипПлатформы.Windows_x86 
	   И СистемнаяИнфо.ТипПлатформы <> ТипПлатформы.Windows_x86_64 Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Печать файлов возможна только в Windows.'; en = 'Printing files is only possible in Windows.'"));
		Возврат;
	КонецЕсли;
	
	Если Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.Обзор Тогда
		ТекущиеДанные = Элементы.Файлы.ТекущиеДанные;
		ВыделенныеСтроки = Элементы.Файлы.ВыделенныеСтроки;
	Иначе	
		ТекущиеДанные = Элементы.ФайлыСоздание.ТекущиеДанные;
		ВыделенныеСтроки = Элементы.ФайлыСоздание.ВыделенныеСтроки;
	КонецЕсли;
	
	Если ВыделенныеСтроки.Количество() > 1 Тогда
		МассивФайлов = Новый Массив;
		Для Каждого ВыбраннаяСтрока Из ВыделенныеСтроки Цикл
			Если Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.Обзор Тогда
				ДанныеСтроки = Элементы.Файлы.ДанныеСтроки(ВыбраннаяСтрока);	
			Иначе	
				ДанныеСтроки = Элементы.ФайлыСоздание.ДанныеСтроки(ВыбраннаяСтрока);	
			КонецЕсли;
			МассивФайлов.Добавить(ДанныеСтроки.Ссылка);
		КонецЦикла;
		
		Если МассивФайлов.Количество() > 0 Тогда
			
			ДанныеФайлов = РаботаСФайламиВызовСервера.ДанныеФайловДляОткрытия(
				МассивФайлов, 
				ЭтаФорма.УникальныйИдентификатор);
				
			КомандыРаботыСФайламиКлиент.НапечататьФайлы(ДанныеФайлов);
			
		КонецЕсли;
	Иначе
		Если ТекущиеДанные = Неопределено Тогда 
			Возврат;
		КонецЕсли;	
	
		ДанныеФайла = РаботаСФайламиВызовСервера.ДанныеФайлаДляОткрытия(
			ТекущиеДанные.Ссылка, 
			Неопределено, 
			ЭтаФорма.УникальныйИдентификатор, 
			Неопределено, 
			ПредыдущийАдресФайла);
		
		КомандыРаботыСФайламиКлиент.НапечататьФайл(ДанныеФайла);
	КонецЕсли;
	
КонецПроцедуры



#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьСписокВыбораКоренныхПричин()
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ra_PrichinyNesootvetstvij.KodPrichiny КАК KodPrichiny,
	|	ra_PrichinyNesootvetstvij.Opisanie КАК Opisanie
	|ИЗ
	|	РегистрСведений.ra_PrichinyNesootvetstvij КАК ra_PrichinyNesootvetstvij
	|ГДЕ
	|	ra_PrichinyNesootvetstvij.Nesootvetstvie = &Nesootvetstvie
	|	И ra_PrichinyNesootvetstvij.KorennayaPrichina
	|
	|УПОРЯДОЧИТЬ ПО
	|	ra_PrichinyNesootvetstvij.KodPrichiny");
	
	Запрос.УстановитьПараметр("Nesootvetstvie", Объект.Nesootvetstvie);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Элементы.KodPrichiny.СписокВыбора.Очистить();
	Пока Выборка.Следующий() Цикл
		Элементы.KodPrichiny.СписокВыбора.Добавить(Выборка.KodPrichiny, Выборка.Opisanie);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура KodPrichinyОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ВыбранноеЗначение <> Неопределено Тогда
		
		ЭлементСпискаВыбора = Элементы.KodPrichiny.СписокВыбора.НайтиПоЗначению(ВыбранноеЗначение);
		Объект.OpisaniePrichiny = ЭлементСпискаВыбора.Представление;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

