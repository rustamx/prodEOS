
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.Печать
	УправлениеПечатью.ПриСозданииНаСервере(ЭтаФорма, Элементы.ГруппаПечать);
	// Конец СтандартныеПодсистемы.Печать
	
	ЗаполнитьПараметрыДинамическихСписков();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	ТолькоЧтоСозданныйДокумент = Истина;
	Если ТолькоЧтоСозданныйДокумент И БылПоказанДиалогИнтерактивногоЗапускаПроцесса <> Истина Тогда
		ИнтерактивныйЗапускБизнесПроцессовКлиент.ВыполнитьИнтерактивныйЗапускБизнесПроцесса(
			ШаблоныДляАвтоЗапускаЗакрытиеКарточки,
			Объект.Ссылка,
			"ЗакрытиеКарточки",
			ЭтаФорма,
			Отказ,
			Истина);
	КонецЕсли;
	
	ОбщегоНазначенияДокументооборотКлиент.ВставитьВОписаниеОповещенияОЗакрытииСсылкуНаОбъект(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// Шаблоны автозапуска
	ЗаполнитьШаблоныДляАвтоЗапуска();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура VidKontrolnojOperaciiПриИзменении(Элемент)
	
	VidKontrolnojOperaciiПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура VidKontrolnojOperaciiПриИзмененииНаСервере()
	
	Если ЗначениеЗаполнено(Объект.VidKontrolnoyOperacii) Тогда
		Объект.VidObektaKontrolya = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(
			Объект.VidKontrolnoyOperacii, "VidPredmetaNesootvetstviya");
	Иначе
		Объект.VidObektaKontrolya = Перечисления.ra_VidyPredmetovNesootvetstviya.ПустаяСсылка();
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Процедура PredshestvuyushchayaKOПриИзмененииНаСервере()
	
	Если ЗначениеЗаполнено(Объект.PredshestvuyushchayaKO) Тогда
		Объект.PoryadkovyjNomerPredyavleniya = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(
			Объект.PredshestvuyushchayaKO, "PoryadkovyjNomerPredyavleniya") + 1;
	Иначе
		Объект.PoryadkovyjNomerPredyavleniya = 0;
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура PredshestvuyushchayaKOПриИзменении(Элемент)
	
	PredshestvuyushchayaKOПриИзмененииНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПраваДоступа(Команда)
	
	ДокументооборотПраваДоступаКлиент.ОткрытьФормуПравДоступа(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПроцессСогласование(Команда)
	
	РаботаСБизнесПроцессамиКлиент.ОткрытьПомощникСозданияОсновныхПроцессов(
		"Согласование", Объект.Ссылка, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПроцессКомплексный(Команда)
	
	РаботаСБизнесПроцессамиКлиент.ОткрытьПомощникСозданияОсновныхПроцессов(
		"КомплексныйПроцесс", Объект.Ссылка, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСостояние(Команда)
	
	УстановитьСостояниеНаСервере(Status);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьДокумент(Команда)
	
	УстановитьСостояниеНаСервере(ПредопределенноеЗначение("Перечисление.СостоянияДокументов.ra_Завершен"));
	
КонецПроцедуры
		
&НаСервере
Процедура УстановитьСостояниеНаСервере(Состояние)
	
	Делопроизводство.ЗаписатьСостояниеДокумента(
			Объект.Ссылка,
			ТекущаяДатаСеанса(),
			Состояние,
			ПользователиКлиентСервер.ТекущийПользователь());
	
КонецПроцедуры
		
&НаКлиенте
Процедура ИзменениеСостояния(Команда)
	
	ПараметрыФормы = Новый Структура("Отбор", Новый Структура("Документ", Объект.Ссылка));
	ОткрытьФорму("РегистрСведений.ИсторияСостоянийДокументов.Форма.ФормаСпискаДокумента", ПараметрыФормы, ЭтаФорма);
	
КонецПроцедуры

// СтандартныеПодсистемы.Печать
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуПечати(Команда)
	
	УправлениеПечатьюКлиент.ВыполнитьПодключаемуюКомандуПечати(Команда, ЭтаФорма, Объект);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьШаблоныДляАвтоЗапуска()
	
	ШаблоныДляАвтоЗапускаЗакрытиеКарточки = ИнтерактивныйЗапускБизнесПроцессов.ПолучитьШаблоныДляАвтоЗапуска(
		Перечисления.ВидыИнтерактивныхДействий.ЗакрытиеКарточкиТолькоЧтоСозданногоВнутреннегоДокумента,
		Объект.ВидДокумента, Справочники.Организации.ПустаяСсылка(), Объект.Ссылка);
	ШаблоныДляАвтоЗапускаРегистрация = ИнтерактивныйЗапускБизнесПроцессов.ПолучитьШаблоныДляАвтоЗапуска(
		Перечисления.ВидыИнтерактивныхДействий.ИнтерактивнаяРегистрацияВнутреннегоДокумента,
		Объект.ВидДокумента, Справочники.Организации.ПустаяСсылка(), Объект.Ссылка);
	
КонецПроцедуры
	
&НаСервере
Процедура ЗаполнитьПараметрыДинамическихСписков()
	
	//OpisanieNesootvetstvij
	ZayavkaNaKontrolnuyuOperaciyu = OpisanieNesootvetstvij.КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(
		Новый ПараметрКомпоновкиДанных("ZayavkaNaKontrolnuyuOperaciyu"));
					
	ZayavkaNaKontrolnuyuOperaciyu.Использование = Истина;
	ZayavkaNaKontrolnuyuOperaciyu.Значение = ?(ЗначениеЗаполнено(Объект.Ссылка), Объект.Ссылка, 0);
	
	//OpisaniePredmetaKontrolya
	ZayavkaNaKontrolnuyuOperaciyu = OpisaniePredmetaKontrolya.КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(
		Новый ПараметрКомпоновкиДанных("ZayavkaNaKontrolnuyuOperaciyu"));
					
	ZayavkaNaKontrolnuyuOperaciyu.Использование = Истина;
	ZayavkaNaKontrolnuyuOperaciyu.Значение = ?(ЗначениеЗаполнено(Объект.Ссылка), Объект.Ссылка, 0);
	
	//UchastnikiKontrolnyhOperaciy
	ZayavkaNaKontrolnuyuOperaciyu = UchastnikiKontrolnyhOperaciy.КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(
		Новый ПараметрКомпоновкиДанных("ZayavkaNaKontrolnuyuOperaciyu"));
					
	ZayavkaNaKontrolnuyuOperaciyu.Использование = Истина;
	ZayavkaNaKontrolnuyuOperaciyu.Значение = ?(ЗначениеЗаполнено(Объект.Ссылка), Объект.Ссылка, 0);
	
	//PolozhitelnyePraktikiAspekty
	ZayavkaNaKontrolnuyuOperaciyu = PolozhitelnyePraktikiAspekty.КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(
		Новый ПараметрКомпоновкиДанных("ZayavkaNaKontrolnuyuOperaciyu"));
					
	ZayavkaNaKontrolnuyuOperaciyu.Использование = Истина;
	ZayavkaNaKontrolnuyuOperaciyu.Значение = ?(ЗначениеЗаполнено(Объект.Ссылка), Объект.Ссылка, 0);
	
КонецПроцедуры

#КонецОбласти
