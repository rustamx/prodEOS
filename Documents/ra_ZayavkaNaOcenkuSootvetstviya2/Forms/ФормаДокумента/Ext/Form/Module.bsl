

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	СписокДействия.Параметры.УстановитьЗначениеПараметра("ДокументОснование", Объект.Ссылка);
	//СписокРезультаты.Параметры.УстановитьЗначениеПараметра("Заявка", Объект.Ссылка);
	ОбновитьРезультат();
	
	ИспользоватьФормуОценкиСоответствияБитрикс = Константы.ра_ИспользоватьФормуОценкиСоответствияБитрикс.Получить();
	
	УстановитьВидимостьДоступность(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура FormaOSПриИзменении(Элемент)
	
	УстановитьВидимостьДоступность(ЭтотОбъект);

КонецПроцедуры

&НаКлиенте
Процедура KodOKPD2ПриИзменении(Элемент)
	
	Если НЕ ЗначениеЗаполнено(Объект.ObektOcenkiSootvetstviyaProdukciya) Тогда
		Объект.ObektOcenkiSootvetstviyaProdukciya = ПолучитьПродукциюПоКодуОКПД2(Объект.KodOKPD2);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура KodOKPD3ПриИзменении(Элемент)
	
	Если НЕ ЗначениеЗаполнено(Объект.ObektOcenkiSootvetstviyaProdukciya) Тогда
		Объект.ObektOcenkiSootvetstviyaProdukciya = ПолучитьПродукциюПоКодуОКПД2(Объект.KodOKPD2);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицФормы

&НаКлиенте
Процедура СписокДействияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.СписокДействия.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОткрытьДействие(ТекущиеДанные.Действие);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокРезультатыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.СписокРезультаты.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОткрытьДействие(ТекущиеДанные.Dejstvie);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаЗаписать(Команда)
	
	Записать();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаЗакрыть(Команда)
	
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьДействие(Команда)
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Возврат;
	КонецЕсли;
	
	СписокВыбора = Новый СписокЗначений; 

	СписокВыбора.Добавить("ra_ResheniePoZayavke", 					НСтр("ru = 'Решение по заявке'; en = 'Decision on the application'")); 
	СписокВыбора.Добавить("ra_UvedomlenieObOtkazeVProvedeniiOS", 	НСтр("ru = 'Уведомление об отказе в проведении ОС'; en = 'Notification of refusal to conduct the CA'")); 
	СписокВыбора.Добавить("ra_UvedomlenieOProvedeniiOS", 			НСтр("ru = 'Уведомление о проведении ОС'; en = 'Notification of CA'")); 
	СписокВыбора.Добавить("ra_NaznachenieKomissii", 				НСтр("ru = 'Назначение комиссии (Экспертной группы)'; en = 'Appointment of the Commission (Expert group)'")); 
	СписокВыбора.Добавить("ra_ProektEkspertnogoZaklyucheniya", 		НСтр("ru = 'Проект экспертного заключения'; en = 'Draft of the expert conclusion'")); 
	СписокВыбора.Добавить("ra_EkspertnoeZaklyuchenie", 				НСтр("ru = 'Экспертное заключение'; en = 'Expert opinion'")); 

	Оповещение = Новый ОписаниеОповещения("ПослеВыбораДействия", ЭтотОбъект);
	ПоказатьВыборИзМеню(Оповещение, СписокВыбора);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПослеВыбораДействия(ВыбранныйЭлемент, Параметры) Экспорт
    
	Если ВыбранныйЭлемент <> Неопределено Тогда 
		ПередаваемыеПараметры = Новый Структура("ДокументОснование",Объект.Ссылка);
		ОповещениеОЗакрытии = Новый ОписаниеОповещения("ОбновитьСписокДействий", ЭтотОбъект);
		ОткрытьФорму("Документ." + ВыбранныйЭлемент.Значение + ".ФормаОбъекта", ПередаваемыеПараметры, ЭтаФорма, , , , ОповещениеОЗакрытии, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца); 
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСписокДействий(Результат, ДополнительныеПараметры) Экспорт
	
	Элементы.СписокДействия.Обновить();
	Элементы.СписокРезультаты.Обновить();
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьВидимостьДоступность(Форма)
	
	Объект   = Форма.Объект;
	Элементы = Форма.Элементы;
	
	ЭкспертизаТД = Объект.FormaOS = ПредопределенноеЗначение("Перечисление.ra_FormyOcenkiSootvetstviya.EkspertizaTD");
	
	Если Форма.ИспользоватьФормуОценкиСоответствияБитрикс Тогда
		Элементы.Основное.Видимость = Ложь;
		Элементы.ОсновноеБитрикс.Видимость = Истина;
		Элементы.VidZayavkiNaExpertizuTD1.Видимость = ЭкспертизаТД;
	Иначе
		Элементы.DolzhnostRukovoditelyaOrganizaciiZayavitelyaNaEkspertizuTD.Видимость 	= ЭкспертизаТД;
		Элементы.DolzhnostUpolnomochennogoLicaOtZayavitelyaNaEkspretizuTD.Видимость 	= ЭкспертизаТД;
		Элементы.RukovoditelOrganizaciiZayavitelyaNaEkspertizuTD.Видимость 				= ЭкспертизаТД;
		Элементы.UpolnomochennoeLicoOtZayavitelyaNaEkspertizuTD.Видимость 				= ЭкспертизаТД;
		Элементы.VidZayavkiNaExpertizuTD.Видимость 										= ЭкспертизаТД;
		Элементы.ГруппаРазработчик.Видимость 											= ЭкспертизаТД;
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьИмяДокумента(Действие)
	
	Возврат Действие.Метаданные().Имя;
	
КонецФункции

&НаКлиенте
Процедура ОткрытьДействие(Действие)
	
	ИмяДокумента = ПолучитьИмяДокумента(Действие);
	ОповещениеОЗакрытии = Новый ОписаниеОповещения("ОбновитьСписокДействий", ЭтотОбъект);
	ПередаваемыеПараметры = Новый Структура("Ключ", Действие);
	ОткрытьФорму("Документ." + ИмяДокумента + ".ФормаОбъекта", ПередаваемыеПараметры, ЭтотОбъект, , , , ОповещениеОЗакрытии, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца); 
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьРезультат() 
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	               |	ra_RezultatyDejstvijPoZayavkeNaOSСрезПоследних.Dejstvie КАК Dejstvie,
	               |	ra_RezultatyDejstvijPoZayavkeNaOSСрезПоследних.Rezultat КАК Rezultat
	               |ИЗ
	               |	РегистрСведений.ra_RezultatyDejstvijPoZayavkeNaOS.СрезПоследних КАК ra_RezultatyDejstvijPoZayavkeNaOSСрезПоследних
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ra_RezultatyDejstvijPoZayavkeNaOSСрезПоследних.Период УБЫВ";
	
	Запрос.УстановитьПараметр("Заявка", Объект.Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		РезультатДействие = Выборка.Dejstvie;
		РезультатОписание = Выборка.Rezultat;
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьПродукциюПоКодуОКПД2(OKPD2)
	
	Ссылка = Справочники.ra_MTRiO.ПустаяСсылка();
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	               |	ra_MTRiO.Ссылка КАК Ссылка
	               |ИЗ
	               |	Справочник.ra_MTRiO КАК ra_MTRiO
	               |ГДЕ
	               |	ra_MTRiO.OKPD2 = &OKPD2";
	
	Запрос.УстановитьПараметр("OKPD2", OKPD2);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Ссылка = Выборка.Ссылка;
	КонецЦикла;

	Возврат Ссылка;
	
КонецФункции

#КонецОбласти
