
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.Печать
	УправлениеПечатью.ПриСозданииНаСервере(ЭтаФорма, Элементы.ГруппаПечать);
	// Конец СтандартныеПодсистемы.Печать
	
	УстановитьВидимостьДоступность(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	ТолькоЧтоСозданныйДокумент = Истина;
	Если ТолькоЧтоСозданныйДокумент И БылПоказанДиалогИнтерактивногоЗапускаПроцесса <> Истина Тогда
		ИнтерактивныйЗапускБизнесПроцессовКлиент.ВыполнитьИнтерактивныйЗапускБизнесПроцесса(
			ШаблоныДляАвтоЗапускаЗакрытиеКарточки,
			Объект.Ссылка,
			"ЗакрытиеКарточки",
			ЭтаФорма,
			Отказ,
			Истина);
	КонецЕсли;
	
	ОбщегоНазначенияДокументооборотКлиент.ВставитьВОписаниеОповещенияОЗакрытииСсылкуНаОбъект(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// Шаблоны автозапуска
	ЗаполнитьШаблоныДляАвтоЗапуска();
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ra_Uvedomlenie.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ra_Uvedomlenie КАК ra_Uvedomlenie
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИсторияСостоянийДокументов.СрезПоследних КАК ИсторияСостоянийДокументов
	|		ПО ra_Uvedomlenie.Ссылка = ИсторияСостоянийДокументов.Документ
	|ГДЕ
	|	ra_Uvedomlenie.Nesootvetstvie = &Nesootvetstvie
	|	И ra_Uvedomlenie.VidOperacii = &VidOperacii
	|	И ra_Uvedomlenie.OrganizaciyaOtpravitel = &OrganizaciyaOtpravitel
	|	И ra_Uvedomlenie.Ссылка <> &Ссылка
	|	И ЕСТЬNULL(ИсторияСостоянийДокументов.Состояние <> ЗНАЧЕНИЕ(Перечисление.СостоянияДокументов.ra_Аннулирован), ИСТИНА)");
	
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	Запрос.УстановитьПараметр("Nesootvetstvie", Объект.Nesootvetstvie);
	Запрос.УстановитьПараметр("VidOperacii", Объект.VidOperacii);
	Запрос.УстановитьПараметр("OrganizaciyaOtpravitel", Объект.OrganizaciyaOtpravitel);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		ТекстОшибки = НСтр("ru = 'Дубль: %1'; en = 'Repeating: %1'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтрШаблон(ТекстОшибки, Выборка.Ссылка),,,, Отказ);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура PoStoronnejOrganizaciiПриИзменении(Элемент)
	
	УстановитьВидимостьДоступность(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура NesootvetstvieПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Объект.Nesootvetstvie) Тогда
		ЗаполнитьЗначенияСвойств(Объект, ЗначенияПолейНесоответствия(Объект.Nesootvetstvie));
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЗначенияПолейНесоответствия(Знач Nesootvetstvie)
	
	Возврат ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Nesootvetstvie, "DataVyyavleniya, VidNesootvetstviya");
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьРеквизитыПользователя(Знач Пользователь)
	
	РеквизитыПользователя = Новый Структура("Podrazdelenie, Dolzhnost"
		,РаботаСПользователями.ПолучитьПодразделение(Пользователь)
		,РаботаСПользователями.ПолучитьДолжность(Пользователь)
		);
	Возврат РеквизитыПользователя;
	
КонецФункции

&НаКлиенте
Процедура SoglasuyushchiePolzovatelПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Soglasuyushchie.ТекущиеДанные;
	Если ЗначениеЗаполнено(ТекущиеДанные.Polzovatel) Тогда
		ЗаполнитьЗначенияСвойств(ТекущиеДанные, ПолучитьРеквизитыПользователя(ТекущиеДанные.Polzovatel));
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПраваДоступа(Команда)
	
	ДокументооборотПраваДоступаКлиент.ОткрытьФормуПравДоступа(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПроцессСогласование(Команда)
	
	РаботаСБизнесПроцессамиКлиент.ОткрытьПомощникСозданияОсновныхПроцессов(
		"Согласование", Объект.Ссылка, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПроцессИсполнение(Команда)
	
	РаботаСБизнесПроцессамиКлиент.ОткрытьПомощникСозданияОсновныхПроцессов(
		"Исполнение", Объект.Ссылка, ЭтаФорма);
	
КонецПроцедуры

// СтандартныеПодсистемы.Печать
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуПечати(Команда)
	
	УправлениеПечатьюКлиент.ВыполнитьПодключаемуюКомандуПечати(Команда, ЭтаФорма, Объект);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьШаблоныДляАвтоЗапуска()
	
	ШаблоныДляАвтоЗапускаЗакрытиеКарточки = ИнтерактивныйЗапускБизнесПроцессов.ПолучитьШаблоныДляАвтоЗапуска(
		Перечисления.ВидыИнтерактивныхДействий.ЗакрытиеКарточкиТолькоЧтоСозданногоВнутреннегоДокумента,
		Объект.ВидДокумента, Справочники.Организации.ПустаяСсылка(), Объект.Ссылка);
	ШаблоныДляАвтоЗапускаРегистрация = ИнтерактивныйЗапускБизнесПроцессов.ПолучитьШаблоныДляАвтоЗапуска(
		Перечисления.ВидыИнтерактивныхДействий.ИнтерактивнаяРегистрацияВнутреннегоДокумента,
		Объект.ВидДокумента, Справочники.Организации.ПустаяСсылка(), Объект.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура ПроцессУтверждение(Команда)
	РаботаСБизнесПроцессамиКлиент.ОткрытьПомощникСозданияОсновныхПроцессов(
		"Утверждение", Объект.Ссылка, ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ПроцессОзнакомление(Команда)
	РаботаСБизнесПроцессамиКлиент.ОткрытьПомощникСозданияОсновныхПроцессов(
		"Ознакомление", Объект.Ссылка, ЭтаФорма);
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьВидимостьДоступность(Форма)
	
	Объект   = Форма.Объект;
	Элементы = Форма.Элементы;
	
КонецПроцедуры

#КонецОбласти
