#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Параметры.Пользователь) Тогда
		Пользователь = Параметры.Пользователь;
	Иначе
		Пользователь = ПользователиКлиентСервер.ТекущийПользователь();
	КонецЕсли;
	
	Если Параметры.ОтобразитьСпособыДоставки Тогда
		Элементы.СтраницыНастройкаУведомлений.ТекущаяСтраница = Элементы.СтраницаСпособыУведомления;
	КонецЕсли;
	
	ДоступнаОтправкаSMS = ОтправкаSMS.ДоступнаОтправкаSMS();
	РазрешеноИзменятьНастройки = РегистрыСведений.НастройкиУведомлений.РазрешеноИзменятьНастройки();
	
	ПолучитьНастройки();
	УстановитьВидимостьЭлементов();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если ОбщегоНазначенияДокументооборотКлиент.ПередЗакрытием(
		Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка, Модифицированность) Тогда
		Возврат;
	КонецЕсли;
	
	Если Модифицированность Тогда
		
		Отказ = Истина;
		ОписаниеОповещения = Новый ОписаниеОповещения("ПередЗакрытиемЗавершение", ЭтотОбъект);
		ТекстВопроса = НСтр("ru = 'Подписки были изменены. Сохранить изменения?'; en = 'Subscriptions have been changed. Save changes?'");
		
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытиемЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		СохранитьНастройкиНаКлиенте();
	ИначеЕсли Результат = КодВозвратаДиалога.Нет Тогда
		Модифицированность = Ложь;
	КонецЕсли;
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_Пользователь" Тогда
		ОбновитьКонтактныеДанные();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПользовательПриИзменении(Элемент)
	
	ПолучитьНастройки();
	
КонецПроцедуры

&НаКлиенте
Процедура ПользовательНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	РаботаСПользователямиКлиент.ВыбратьПользователя(Элемент, Пользователь);
	
КонецПроцедуры

&НаКлиенте
Процедура ПользовательОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если Модифицированность Тогда
		
		СтандартнаяОбработка = Ложь;
		ПараметрыОбработчикаОповещения = Новый Структура;
		ПараметрыОбработчикаОповещения.Вставить("ВыбранноеЗначение", ВыбранноеЗначение);
		ОписаниеОповещения = Новый ОписаниеОповещения(
			"ПользовательОбработкаВыбораЗавершение", ЭтотОбъект, ПараметрыОбработчикаОповещения);
		ТекстВопроса = НСтр("ru = 'Подписки были изменены. Сохранить изменения?'; en = 'Subscriptions have been changed. Save changes?'");
		
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПользовательОбработкаВыбораЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		СохранитьНастройкиНаКлиенте();
	ИначеЕсли Результат = КодВозвратаДиалога.Нет Тогда
		Модифицированность = Ложь;
	КонецЕсли;
	Пользователь = ДополнительныеПараметры.ВыбранноеЗначение;
	ПолучитьНастройки();
	
КонецПроцедуры

&НаКлиенте
Процедура ПодпискиУведомленийПриИзменении(Элемент)
	
	ОбновитьПодпискаАктивна(
		ПодпискиУведомлений,
		СрокиУведомлений,
		ЧастотыУведомлений,
		ДополнительныеНастройки);
	
КонецПроцедуры

&НаКлиенте
Процедура ПодпискиУведомленийВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ДанныеСтроки = Элемент.ДанныеСтроки(ВыбраннаяСтрока);
	Если ДанныеСтроки = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Поле = Элементы.ПодпискиУведомленийПоПочте И ДанныеСтроки.ЗапретИзмененияПоПочте Тогда
		ТекстПредупреждения = НСтр("ru = 'Настройка установлена Администратором системы и не может быть изменена.'; en = 'Option is set by the system administrator and cannot be changed.'");
		ПоказатьПредупреждение(, ТекстПредупреждения);
	ИначеЕсли Поле = Элементы.ПодпискиУведомленийПоSMS И ДанныеСтроки.ЗапретИзмененияПоSMS Тогда
		ТекстПредупреждения = НСтр("ru = 'Настройка установлена Администратором системы и не может быть изменена.'; en = 'Option is set by the system administrator and cannot be changed.'");
		ПоказатьПредупреждение(, ТекстПредупреждения);
	ИначеЕсли Поле = Элементы.ПодпискиУведомленийОкном И ДанныеСтроки.ЗапретИзмененияОкном Тогда
		ТекстПредупреждения = НСтр("ru = 'Настройка установлена Администратором системы и не может быть изменена.'; en = 'Option is set by the system administrator and cannot be changed.'");
		ПоказатьПредупреждение(, ТекстПредупреждения);
	ИначеЕсли Поле = Элементы.ПодпискиУведомленийПоPush И ДанныеСтроки.ЗапретИзмененияПоPush Тогда
		ТекстПредупреждения = НСтр("ru = 'Настройка установлена Администратором системы и не может быть изменена.'; en = 'Option is set by the system administrator and cannot be changed.'");
		ПоказатьПредупреждение(, ТекстПредупреждения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЧастотаУведомленийВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ДанныеСтроки = Элемент.ДанныеСтроки(ВыбраннаяСтрока);
	Если ДанныеСтроки = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Поле = Элементы.ЧастотыУведомленийЧастота И ДанныеСтроки.ЗапретИзменения Тогда
		ТекстПредупреждения = НСтр("ru = 'Настройка установлена Администратором системы и не может быть изменена.'; en = 'Option is set by the system administrator and cannot be changed.'");
		ПоказатьПредупреждение(, ТекстПредупреждения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СрокУведомленийВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ДанныеСтроки = Элемент.ДанныеСтроки(ВыбраннаяСтрока);
	Если ДанныеСтроки = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Поле = Элементы.СрокиУведомленийСрок И ДанныеСтроки.ЗапретИзменения Тогда
		ТекстПредупреждения = НСтр("ru = 'Настройка установлена Администратором системы и не может быть изменена.'; en = 'Option is set by the system administrator and cannot be changed.'");
		ПоказатьПредупреждение(, ТекстПредупреждения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДополнительныеНастройкиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ДанныеСтроки = Элемент.ДанныеСтроки(ВыбраннаяСтрока);
	Если ДанныеСтроки = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Поле = Элементы.ДополнительныеНастройкиЗначение И ДанныеСтроки.ЗапретИзменения Тогда
		ТекстПредупреждения = НСтр("ru = 'Настройка установлена Администратором системы и не может быть изменена.'; en = 'Option is set by the system administrator and cannot be changed.'");
		ПоказатьПредупреждение(, ТекстПредупреждения);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыПодпискиПоОбъектам

&НаКлиенте
Процедура ПодпискиПоОбъектамВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	Если Поле = Элементы.ПодпискиПоОбъектамПредставление И ТекущиеДанные.ЭтоГруппа Тогда
		
		ПоказатьЗначение(, ТекущиеДанные.Объект);
		
	ИначеЕсли Поле = Элементы.ПодпискиПоОбъектамПоПочтеСтрокой И Не ТекущиеДанные.ЭтоГруппа Тогда
		
		ИзменитьПодписку(
			ТекущиеДанные.ПоПочте,
			ТекущиеДанные.ПоПочтеСтрокой,
			ТекущиеДанные.ВозможнаПодпискаНаСобытие);
		
	ИначеЕсли Поле = Элементы.ПодпискиПоОбъектамПоSMSСтрокой Тогда
		
		ИзменитьПодписку(
			ТекущиеДанные.ПоSMS,
			ТекущиеДанные.ПоSMSСтрокой,
			ТекущиеДанные.ВозможнаПодпискаНаСобытие);
		
	ИначеЕсли Поле = Элементы.ПодпискиПоОбъектамОкномСтрокой Тогда
		
		ИзменитьПодписку(
			ТекущиеДанные.Окном,
			ТекущиеДанные.ОкномСтрокой,
			ТекущиеДанные.ВозможнаПодпискаНаСобытие);
		
	ИначеЕсли Поле = Элементы.ПодпискиПоОбъектамПоPushСтрокой Тогда
		
		ИзменитьПодписку(
			ТекущиеДанные.ПоPush,
			ТекущиеДанные.ПоPushСтрокой,
			ТекущиеДанные.ВозможнаПодпискаНаСобытие);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСпособыУведомления

&НаКлиенте
Процедура СпособыУведомленияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = Элемент.ДанныеСтроки(ВыбраннаяСтрока);
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТекущиеДанные.ВидКонтактнойИнформации) Тогда
		СтандартнаяОбработка = Ложь;
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Ключ", Пользователь);
		ПараметрыФормы.Вставить("ВидКонтактнойИнформации", ТекущиеДанные.ВидКонтактнойИнформации);
		ПараметрыФормы.Вставить("ПредставлениеКонтактнойИнформации", ТекущиеДанные.ДанныеСпособа);
		ОткрытьФорму("Справочник.Пользователи.ФормаОбъекта", ПараметрыФормы, ЭтаФорма);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СпособыУведомленияПередУдалением(Элемент, Отказ)
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТекущиеДанные.ВидКонтактнойИнформации) Тогда
		Отказ = Истина;
		Модифицированность = Истина;
		ТекущиеДанные.Отключен = Не ТекущиеДанные.Отключен;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СпособыУведомленияПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если НоваяСтрока Тогда
		ТекущиеДанные.ИндексКартинки = -1;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СпособыУведомленияПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	
	Если ОтменаРедактирования Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если РаботаСУведомлениямиКлиентСервер.ЭтоКорректныйСпособУведомленияПоПочте(ТекущиеДанные.Представление) Тогда
		ТекущиеДанные.СпособУведомления = ПредопределенноеЗначение("Перечисление.СпособыУведомления.ПоПочте");
		ТекущиеДанные.ДанныеСпособа = ТекущиеДанные.Представление;
		ТекущиеДанные.ИндексКартинки = 2;
	ИначеЕсли РаботаСУведомлениямиКлиентСервер.ЭтоКорректныйСпособУведомленияПоSMS(ТекущиеДанные.Представление) Тогда
		ТекущиеДанные.СпособУведомления = ПредопределенноеЗначение("Перечисление.СпособыУведомления.ПоSMS");
		ТекущиеДанные.ДанныеСпособа = ТекущиеДанные.Представление;
		ТекущиеДанные.ИндексКартинки = 4;
	ИначеЕсли Не ЗначениеЗаполнено(ТекущиеДанные.Представление) Тогда
		// Удаляем строку при окончании редактирования.
	Иначе
		Отказ = Истина;
		ТекстПредупреждения = НСтр("ru = 'Некорректный адрес почты или номер телефона.'; en = 'Incorrect email address or phone number.'");
		ПоказатьПредупреждение(, ТекстПредупреждения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СпособыУведомленияПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Если ОтменаРедактирования Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ТекущиеДанные.Представление) Тогда
		СпособыУведомления.Удалить(СпособыУведомления.Индекс(ТекущиеДанные));
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Готово(Команда)
	
	СохранитьНастройкиНаКлиенте();
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура Записать(Команда)
	
	СохранитьНастройкиНаКлиенте();
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Модифицированность = Ложь;
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ИзменитьПодписку(Подписка, ПодпискаСтрокой, ВозможнаПодпискаНаСобытие)
	
	Модифицированность = Истина;
	
	Подписка = Подписка - 1;
	Если Подписка < 0 Тогда
		Если ВозможнаПодпискаНаСобытие Тогда
			Подписка = 2;
		Иначе
			Подписка = 1;
		КонецЕсли;
	ИначеЕсли Подписка = 0 И Не ВозможнаПодпискаНаСобытие Тогда
		Подписка = 2;
	КонецЕсли;
	ПодпискаСтрокой = СтрокаПодписка(Подписка, ВозможнаПодпискаНаСобытие);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция СтрокаПодписка(Подписка, ВозможнаПодпискаНаСобытие)
	
	Если ВозможнаПодпискаНаСобытие Тогда
		
		Если Подписка = 0 Тогда
			Возврат НСтр("ru = 'Нет'; en = 'No'");
		ИначеЕсли Подписка = 1 Тогда
			Возврат НСтр("ru = 'Да'; en = 'Yes'");
		ИначеЕсли Подписка = 2 Тогда
			Возврат НСтр("ru = 'Авто'; en = 'Auto'");
		КонецЕсли;
		
	Иначе
		
		Если Подписка = 0 Или Подписка = 2 Тогда
			Возврат НСтр("ru = 'Нет'; en = 'No'");
		ИначеЕсли Подписка = 1 Тогда
			Возврат НСтр("ru = 'Да'; en = 'Yes'");
		КонецЕсли;
		
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура СохранитьНастройкиНаКлиенте()
	
	СохранитьНастройки();
	Оповестить("ИзмененыНастройкиУведомлений");
	
КонецПроцедуры

&НаСервере
Процедура СохранитьНастройки()
	
	Если Не ЗначениеЗаполнено(Пользователь) Тогда
		Пользователь = ПользователиКлиентСервер.ТекущийПользователь();
	КонецЕсли;
	
	НачатьТранзакцию();
	Попытка
		
		// Уведомления
		Для Каждого Подписка Из ПодпискиУведомлений Цикл
			РегистрыСведений.НастройкиУведомлений.УстановитьПодписку(
				Пользователь,
				Подписка.ВидСобытия,
				Перечисления.СпособыУведомления.ПоПочте,
				Подписка.ПоПочте);
			РегистрыСведений.НастройкиУведомлений.УстановитьПодписку(
				Пользователь,
				Подписка.ВидСобытия,
				Перечисления.СпособыУведомления.Окном,
				Подписка.Окном);
			Если ДоступнаОтправкаSMS Тогда
				РегистрыСведений.НастройкиУведомлений.УстановитьПодписку(
					Пользователь,
					Подписка.ВидСобытия,
					Перечисления.СпособыУведомления.ПоSMS,
					Подписка.ПоSMS);
			КонецЕсли;
			Если ПолучитьФункциональнуюОпцию("ИспользоватьPushУведомления") Тогда
				РегистрыСведений.НастройкиУведомлений.УстановитьПодписку(
					Пользователь,
					Подписка.ВидСобытия,
					Перечисления.СпособыУведомления.ПоPush,
					Подписка.ПоPush);
			КонецЕсли;
		КонецЦикла;
		
		// Частоты и сроки уведомлений - Сроки уведомлений
		Для Каждого НастройкаСрока Из СрокиУведомлений Цикл
			РегистрыСведений.НастройкиУведомлений.УстановитьСрок(
				Пользователь,
				НастройкаСрока.ВидСобытия,
				НастройкаСрока.Срок);
		КонецЦикла;
		
		// Частоты и сроки уведомлений - Частоты уведомлений
		Для Каждого НастройкаЧастоты Из ЧастотыУведомлений Цикл
			РегистрыСведений.НастройкиУведомлений.УстановитьЧастоту(
				Пользователь,
				НастройкаЧастоты.ВидСобытия,
				НастройкаЧастоты.Частота);
		КонецЦикла;
		
		// Подписки по объектам
		СохранитьПодпискиПоОбъектам();
		
		// Способы уведомлений
		СохранитьСпособыУведомления();
		
		// Дополнительные настройки
		Для Каждого ДополнительнаяНастройка Из ДополнительныеНастройки Цикл
			РегистрыСведений.НастройкиУведомлений.УстановитьДополнительнуюНастройку(
				Пользователь,
				ДополнительнаяНастройка.Настройка,
				ДополнительнаяНастройка.Значение);
		КонецЦикла;
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		ОтменитьТранзакцию();
		ВызватьИсключение;
	КонецПопытки;
	
	Модифицированность = Ложь;
	ОбновитьИсходныеСпособыУведомления();
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьПодпискиПоОбъектам()
	
	// Заполняем дерево
	Дерево = РеквизитФормыВЗначение("ПодпискиПоОбъектам");
	Дерево.Строки.Очистить();
	
	ДанныеПодписокПоОбъектам = РегистрыСведений.НастройкиУведомлений.ПолучитьПодпискиПоОбъектам(Пользователь);
	Для Каждого ДанныеПодписокПоОбъекту Из ДанныеПодписокПоОбъектам.Строки Цикл
		
		// Строка объекта
		СтрокаОбъекта = Дерево.Строки.Добавить();
		СтрокаОбъекта.Объект = ДанныеПодписокПоОбъекту.Объект;
		СтрокаОбъекта.ЭтоГруппа = Истина;
		СтрокаОбъекта.Представление = СтрШаблон("%1 (%2)",
			ДанныеПодписокПоОбъекту.Объект,
			ТипЗнч(ДанныеПодписокПоОбъекту.Объект));
		Для Каждого ДанныеПодпискиПоВидуСобытия Из ДанныеПодписокПоОбъекту.Строки Цикл
			
			// Строка подписки
			СтрокаПодписки = СтрокаОбъекта.Строки.Добавить();
			СтрокаПодписки.ВидСобытия = ДанныеПодпискиПоВидуСобытия.ВидСобытия;
			СтрокаПодписки.Объект = ДанныеПодпискиПоВидуСобытия.Объект;
			СтрокаПодписки.Представление = Перечисления.СобытияУведомлений.ПредставлениеВидаСобытия(
				ДанныеПодпискиПоВидуСобытия.ВидСобытия,
				ДанныеПодпискиПоВидуСобытия.Объект);
			СтрокаПодписки.ВозможнаПодпискаНаСобытие = Перечисления.СобытияУведомлений.ДоступнаПодпискаНаСобытие(
				ДанныеПодпискиПоВидуСобытия.ВидСобытия,
				ДанныеПодпискиПоВидуСобытия.Объект);
			СтрокаПодписки.ЭтоГруппа = Ложь;
			
			// По почте
			СтрокаПодписки.ПоПочте = 2;
			Для Каждого ДанныеПодписки Из ДанныеПодпискиПоВидуСобытия.Строки Цикл
				Если ДанныеПодписки.СпособУведомления = Перечисления.СпособыУведомления.ПоПочте Тогда
					СтрокаПодписки.ПоПочте = ДанныеПодписки.Значение;
				КонецЕсли;
			КонецЦикла;
			СтрокаПодписки.ПоПочтеСтрокой = СтрокаПодписка(
				СтрокаПодписки.ПоПочте,
				СтрокаПодписки.ВозможнаПодпискаНаСобытие);
			
			// Окном
			СтрокаПодписки.Окном = 2;
			Для Каждого ДанныеПодписки Из ДанныеПодпискиПоВидуСобытия.Строки Цикл
				Если ДанныеПодписки.СпособУведомления = Перечисления.СпособыУведомления.Окном Тогда
					СтрокаПодписки.Окном = ДанныеПодписки.Значение;
				КонецЕсли;
			КонецЦикла;
			СтрокаПодписки.ОкномСтрокой = СтрокаПодписка(
				СтрокаПодписки.Окном,
				СтрокаПодписки.ВозможнаПодпискаНаСобытие);
			
			// По SMS
			Если ДоступнаОтправкаSMS Тогда
				СтрокаПодписки.ПоSMS = 2;
				Для Каждого ДанныеПодписки Из ДанныеПодпискиПоВидуСобытия.Строки Цикл
					Если ДанныеПодписки.СпособУведомления = Перечисления.СпособыУведомления.ПоSMS Тогда
						СтрокаПодписки.ПоSMS = ДанныеПодписки.Значение;
					КонецЕсли;
				КонецЦикла;
				СтрокаПодписки.ПоSMSСтрокой = СтрокаПодписка(
					СтрокаПодписки.ПоSMS,
					СтрокаПодписки.ВозможнаПодпискаНаСобытие);
			КонецЕсли;
			
			// По push
			Если ПолучитьФункциональнуюОпцию("ИспользоватьPushУведомления") Тогда
				СтрокаПодписки.ПоPush = 2;
				Для Каждого ДанныеПодписки Из ДанныеПодпискиПоВидуСобытия.Строки Цикл
					Если ДанныеПодписки.СпособУведомления = Перечисления.СпособыУведомления.ПоPush Тогда
						СтрокаПодписки.ПоPush = ДанныеПодписки.Значение;
					КонецЕсли;
				КонецЦикла;
				СтрокаПодписки.ПоPushСтрокой = СтрокаПодписка(
					СтрокаПодписки.ПоPush,
					СтрокаПодписки.ВозможнаПодпискаНаСобытие);
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
	ЗначениеВРеквизитФормы(Дерево, "ПодпискиПоОбъектам");
	
КонецПроцедуры

&НаСервере
Процедура СохранитьПодпискиПоОбъектам()
	
	Дерево = РеквизитФормыВЗначение("ПодпискиПоОбъектам");
	ДанныеПодписокПоОбъектам = Дерево.Строки.НайтиСтроки(Новый Структура("ЭтоГруппа", Ложь), Истина);
	Для Каждого Подписка Из ДанныеПодписокПоОбъектам Цикл
		Если Подписка.ПоПочте = 2 Тогда
			РегистрыСведений.НастройкиУведомлений.УдалитьПодпискуПоОбъекту(
				Пользователь,
				Подписка.ВидСобытия,
				Перечисления.СпособыУведомления.ПоПочте,
				Подписка.Объект);
		Иначе
			РегистрыСведений.НастройкиУведомлений.УстановитьПодпискуПоОбъекту(
				Пользователь,
				Подписка.ВидСобытия,
				Перечисления.СпособыУведомления.ПоПочте,
				Подписка.Объект,
				Булево(Подписка.ПоПочте));
		КонецЕсли;
		Если Подписка.Окном = 2 Тогда
			РегистрыСведений.НастройкиУведомлений.УдалитьПодпискуПоОбъекту(
				Пользователь,
				Подписка.ВидСобытия,
				Перечисления.СпособыУведомления.Окном,
				Подписка.Объект);
		Иначе
			РегистрыСведений.НастройкиУведомлений.УстановитьПодпискуПоОбъекту(
				Пользователь,
				Подписка.ВидСобытия,
				Перечисления.СпособыУведомления.Окном,
				Подписка.Объект,
				Булево(Подписка.Окном));
		КонецЕсли;
		Если ДоступнаОтправкаSMS Тогда
			Если Подписка.ПоSMS = 2 Тогда
				РегистрыСведений.НастройкиУведомлений.УдалитьПодпискуПоОбъекту(
					Пользователь,
					Подписка.ВидСобытия,
					Перечисления.СпособыУведомления.ПоSMS,
					Подписка.Объект);
			Иначе
				РегистрыСведений.НастройкиУведомлений.УстановитьПодпискуПоОбъекту(
					Пользователь,
					Подписка.ВидСобытия,
					Перечисления.СпособыУведомления.ПоSMS,
					Подписка.Объект,
					Булево(Подписка.ПоSMS));
			КонецЕсли;
		КонецЕсли;
		Если ПолучитьФункциональнуюОпцию("ИспользоватьPushУведомления") Тогда
			Если Подписка.ПоPush = 2 Тогда
				РегистрыСведений.НастройкиУведомлений.УдалитьПодпискуПоОбъекту(
					Пользователь,
					Подписка.ВидСобытия,
					Перечисления.СпособыУведомления.ПоPush,
					Подписка.Объект);
			Иначе
				РегистрыСведений.НастройкиУведомлений.УстановитьПодпискуПоОбъекту(
					Пользователь,
					Подписка.ВидСобытия,
					Перечисления.СпособыУведомления.ПоPush,
					Подписка.Объект,
					Булево(Подписка.ПоPush));
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура СохранитьСпособыУведомления()
	
	Для Каждого СпособУведомления Из ПолучитьУдаленныеСпособыУведомления() Цикл
		РегистрыСведений.СпособыУведомленияПользователей.УдалитьСпособУведомленияПользователя(
			Пользователь,
			СпособУведомления.СпособУведомления,
			СпособУведомления.ВидКонтактнойИнформации,
			СпособУведомления.ДанныеСпособа);
	КонецЦикла;
	
	Для Каждого СпособУведомления Из ПолучитьДобавленныеСпособыУведомления() Цикл
		РегистрыСведений.СпособыУведомленияПользователей.УстановитьСпособУведомленияПользователя(
			Пользователь,
			СпособУведомления.СпособУведомления,
			СпособУведомления.ВидКонтактнойИнформации,
			СпособУведомления.ДанныеСпособа);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьСпособыУведомления()
	
	СпособыУведомления.Очистить();
	ДанныеСпособовУведомления = РегистрыСведений.СпособыУведомленияПользователей.ПолучитьСпособыУведомленияПользователя(Пользователь);
	Для Каждого ДанныеСпособаУведомления Из ДанныеСпособовУведомления Цикл
		СтрокаСпособаУведомления = СпособыУведомления.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаСпособаУведомления, ДанныеСпособаУведомления);
		СтрокаСпособаУведомления.Отключен = Не ДанныеСпособаУведомления.Использовать;
	КонецЦикла;
	
	// Индексы картинок
	Для Каждого СтрокаСпособаУведомления Из СпособыУведомления Цикл
		Если СтрокаСпособаУведомления.СпособУведомления = Перечисления.СпособыУведомления.ПоПочте Тогда
			СтрокаСпособаУведомления.ИндексКартинки = 2;
		ИначеЕсли СтрокаСпособаУведомления.СпособУведомления = Перечисления.СпособыУведомления.ПоSMS Тогда
			СтрокаСпособаУведомления.ИндексКартинки = 4;
		КонецЕсли;
		Если ЗначениеЗаполнено(СтрокаСпособаУведомления.ВидКонтактнойИнформации) Тогда
			СтрокаСпособаУведомления.ИндексКартинки = СтрокаСпособаУведомления.ИндексКартинки + 1;
		КонецЕсли;
	КонецЦикла;
	
	ОбновитьИсходныеСпособыУведомления();
	
КонецФункции

&НаСервере
Функция ПолучитьДобавленныеСпособыУведомления()
	
	ДобавленныеСпособыУведомления = Новый Массив;
	Для Каждого Элемент Из СпособыУведомления Цикл
		
		Если Элемент.Отключен Тогда
			Продолжить;
		КонецЕсли;
		
		Найден = Ложь;
		
		Для Каждого Элемент2 Из ИсходныеСпособыУведомления Цикл
			Если Элемент.СпособУведомления = Элемент2.СпособУведомления
				И Элемент.ВидКонтактнойИнформации = Элемент2.ВидКонтактнойИнформации
				И Элемент.ДанныеСпособа = Элемент2.ДанныеСпособа
				И Не Элемент2.Отключен Тогда
				Найден = Истина;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		Если Не Найден Тогда
			СпособУведомления = Новый Структура("СпособУведомления, ВидКонтактнойИнформации, ДанныеСпособа");
			ЗаполнитьЗначенияСвойств(СпособУведомления, Элемент);
			ДобавленныеСпособыУведомления.Добавить(СпособУведомления);
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ДобавленныеСпособыУведомления;
	
КонецФункции

&НаСервере
Функция ПолучитьУдаленныеСпособыУведомления()
	
	УдаленныеСпособыУведомления = Новый Массив;
	Для Каждого Элемент Из ИсходныеСпособыУведомления Цикл
		
		Если Элемент.Отключен Тогда
			Продолжить;
		КонецЕсли;
		
		Найден = Ложь;
		
		Для Каждого Элемент2 Из СпособыУведомления Цикл
			Если Элемент.СпособУведомления = Элемент2.СпособУведомления
				И Элемент.ВидКонтактнойИнформации = Элемент2.ВидКонтактнойИнформации
				И Элемент.ДанныеСпособа = Элемент2.ДанныеСпособа
				И Не Элемент2.Отключен Тогда
				Найден = Истина;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		Если Не Найден Тогда
			СпособУведомления = Новый Структура("СпособУведомления, ВидКонтактнойИнформации, ДанныеСпособа");
			ЗаполнитьЗначенияСвойств(СпособУведомления, Элемент);
			УдаленныеСпособыУведомления.Добавить(СпособУведомления);
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат УдаленныеСпособыУведомления;
	
КонецФункции

&НаСервере
Процедура ПолучитьНастройки()
	
	Если Не ЗначениеЗаполнено(Пользователь) Тогда
		Пользователь = ПользователиКлиентСервер.ТекущийПользователь();
	КонецЕсли;
	
	// Уведомления
	ПодпискиУведомлений.Очистить();
	ДоступныеПодписки = РегистрыСведений.НастройкиУведомлений.ДоступныеПодписки();
	Для Каждого Подписка Из ДоступныеПодписки Цикл
		НоваяСтрока = ПодпискиУведомлений.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Подписка);
		НоваяСтрока.ПоПочте = РегистрыСведений.НастройкиУведомлений.ПолучитьПодписку(
			Пользователь,
			Подписка.ВидСобытия,
			Перечисления.СпособыУведомления.ПоПочте);
		НоваяСтрока.ЗапретИзмененияПоПочте = Не РазрешеноИзменятьНастройки
			И РегистрыСведений.НастройкиУведомлений.ПолучитьПодпискуПоУмолчанию(
				Подписка.ВидСобытия,
				Перечисления.СпособыУведомления.ПоПочте);
		НоваяСтрока.Окном = РегистрыСведений.НастройкиУведомлений.ПолучитьПодписку(
			Пользователь,
			Подписка.ВидСобытия,
			Перечисления.СпособыУведомления.Окном);
		НоваяСтрока.ЗапретИзмененияОкном = Не РазрешеноИзменятьНастройки
			И РегистрыСведений.НастройкиУведомлений.ПолучитьПодпискуПоУмолчанию(
				Подписка.ВидСобытия,
				Перечисления.СпособыУведомления.Окном);
		Если ДоступнаОтправкаSMS Тогда
			НоваяСтрока.ПоSMS = РегистрыСведений.НастройкиУведомлений.ПолучитьПодписку(
				Пользователь,
				Подписка.ВидСобытия,
				Перечисления.СпособыУведомления.ПоSMS);
			НоваяСтрока.ЗапретИзмененияПоSMS = Не РазрешеноИзменятьНастройки
				И РегистрыСведений.НастройкиУведомлений.ПолучитьПодпискуПоУмолчанию(
					Подписка.ВидСобытия,
					Перечисления.СпособыУведомления.ПоSMS);
		КонецЕсли;
		Если ПолучитьФункциональнуюОпцию("ИспользоватьPushУведомления") Тогда
			НоваяСтрока.ПоPush = РегистрыСведений.НастройкиУведомлений.ПолучитьПодписку(
				Пользователь,
				Подписка.ВидСобытия,
				Перечисления.СпособыУведомления.ПоPush);
			НоваяСтрока.ЗапретИзмененияПоPush = Не РазрешеноИзменятьНастройки
				И РегистрыСведений.НастройкиУведомлений.ПолучитьПодпискуПоУмолчанию(
					Подписка.ВидСобытия,
					Перечисления.СпособыУведомления.ПоPush);
		КонецЕсли;
	КонецЦикла;
	Элементы.ПодпискиУведомлений.Видимость = (ПодпискиУведомлений.Количество() <> 0);
	
	// Частоты и сроки уведомлений - Сроки уведомлений
	СрокиУведомлений.Очистить();
	ДоступныеСроки = РегистрыСведений.НастройкиУведомлений.ДоступныеСроки();
	Для Каждого НастройкаСрока Из ДоступныеСроки Цикл
		НоваяСтрока = СрокиУведомлений.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, НастройкаСрока);
		НоваяСтрока.Срок = РегистрыСведений.НастройкиУведомлений.ПолучитьСрок(
			Пользователь,
			НастройкаСрока.ВидСобытия);
		НоваяСтрока.ЗапретИзменения = Не РазрешеноИзменятьНастройки
			И РегистрыСведений.НастройкиУведомлений.ПолучитьПодпискуПоУмолчаниюДополненную(НастройкаСрока.ВидСобытия);
	КонецЦикла;
	Элементы.СрокиУведомлений.Видимость = (СрокиУведомлений.Количество() <> 0);
	
	// Частоты и сроки уведомлений - Частоты уведомлений
	ЧастотыУведомлений.Очистить();
	ДоступныеЧастоты = РегистрыСведений.НастройкиУведомлений.ДоступныеЧастоты();
	Для Каждого НастройкаЧастоты Из ДоступныеЧастоты Цикл
		НоваяСтрока = ЧастотыУведомлений.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, НастройкаЧастоты);
		НоваяСтрока.Частота = РегистрыСведений.НастройкиУведомлений.ПолучитьЧастоту(
			Пользователь,
			НастройкаЧастоты.ВидСобытия);
		НоваяСтрока.ЗапретИзменения = Не РазрешеноИзменятьНастройки
			И РегистрыСведений.НастройкиУведомлений.ПолучитьПодпискуПоУмолчаниюДополненную(НастройкаЧастоты.ВидСобытия);
	КонецЦикла;
	Элементы.ЧастотыУведомлений.Видимость = (ЧастотыУведомлений.Количество() <> 0);
	
	// Подписки по объектам
	ПолучитьПодпискиПоОбъектам();
	
	// Способы уведомлений
	ПолучитьСпособыУведомления();
	
	// Дополнительные настройки
	ДополнительныеНастройки.Очистить();
	ДоступныеДополнительныеНастройки = РегистрыСведений.НастройкиУведомлений.ДоступныеДополнительныеНастройки();
	Для Каждого ДополнительнаяНастройка Из ДоступныеДополнительныеНастройки Цикл
		НоваяСтрока = ДополнительныеНастройки.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ДополнительнаяНастройка);
		НоваяСтрока.Значение = РегистрыСведений.НастройкиУведомлений.ПолучитьДополнительнуюНастройку(
			Пользователь,
			ДополнительнаяНастройка.Настройка);
		НоваяСтрока.ЗапретИзменения = Не РазрешеноИзменятьНастройки
			И РегистрыСведений.НастройкиУведомлений.ПолучитьПодпискуПоУмолчаниюДополненную(ДополнительнаяНастройка.ВидСобытия);
	КонецЦикла;
	Элементы.ДополнительныеНастройки.Видимость = (ДополнительныеНастройки.Количество() <> 0);
	
	// Обновление данных об активности подписок.
	ОбновитьПодпискаАктивна(
		ПодпискиУведомлений,
		СрокиУведомлений,
		ЧастотыУведомлений,
		ДополнительныеНастройки);
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьКонтактныеДанные()
	
	ДобавленныеСпособыУведомления = ПолучитьДобавленныеСпособыУведомления();
	УдаленныеСпособыУведомления = ПолучитьУдаленныеСпособыУведомления();
	ПолучитьСпособыУведомления();
	
	ПараметрыОтбора = Новый Структура("СпособУведомления, ВидКонтактнойИнформации, ДанныеСпособа");
	Для Каждого СпособУведомления Из УдаленныеСпособыУведомления Цикл
		ЗаполнитьЗначенияСвойств(ПараметрыОтбора, СпособУведомления);
		НайденныеСпособыУведомления = СпособыУведомления.НайтиСтроки(ПараметрыОтбора);
		Для Каждого НайденныйСпособУведомления Из НайденныеСпособыУведомления Цикл
			Если ЗначениеЗаполнено(НайденныйСпособУведомления.ВидКонтактнойИнформации) Тогда
				НайденныйСпособУведомления.Отключен = Истина;
			Иначе
				СпособыУведомления.Удалить(СпособыУведомления.Индекс(НайденныйСпособУведомления));
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Для Каждого СпособУведомления Из ДобавленныеСпособыУведомления Цикл
		ЗаполнитьЗначенияСвойств(ПараметрыОтбора, СпособУведомления);
		НайденныеСпособыУведомления = СпособыУведомления.НайтиСтроки(ПараметрыОтбора);
		Если НайденныеСпособыУведомления.Количество() = 0 Тогда
			НовыйСпособУведомления = СпособыУведомления.Добавить();
			ЗаполнитьЗначенияСвойств(НовыйСпособУведомления, СпособУведомления);
			Если НовыйСпособУведомления.СпособУведомления = Перечисления.СпособыУведомления.ПоПочте Тогда
				НовыйСпособУведомления.ИндексКартинки = 2;
			ИначеЕсли НовыйСпособУведомления.СпособУведомления = Перечисления.СпособыУведомления.ПоSMS Тогда
				НовыйСпособУведомления.ИндексКартинки = 4;
			КонецЕсли;
			НовыйСпособУведомления.Представление = СпособУведомления.ДанныеСпособа;
		Иначе
			Для Каждого НайденныйСпособУведомления Из НайденныеСпособыУведомления Цикл
				НайденныйСпособУведомления.Отключен = Ложь;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьИсходныеСпособыУведомления()
	
	ИсходныеСпособыУведомления.Очистить();
	Для Каждого ДанныеСпособаУведомления Из СпособыУведомления Цикл
		СтрокаСпособаУведомления = ИсходныеСпособыУведомления.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаСпособаУведомления, ДанныеСпособаУведомления);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьЭлементов()
	
	Если РольДоступна("ПолныеПрава") Тогда
		Элементы.ГруппаПользователь.Видимость = Истина;
		Элементы.Пользователь.Видимость = Истина;
		Элементы.Записать.Видимость = Истина;
		Элементы.ПодпискиПоОбъектамПоPushСтрокой.Видимость = Истина;
		Элементы.ПодпискиУведомленийПоPush.Видимость = Истина;
	Иначе
		Элементы.ГруппаПользователь.Видимость = Ложь;
		Элементы.Пользователь.Видимость = Ложь;
		Элементы.Записать.Видимость = Ложь;
		ЕстьУзлыПользователя = ПланыОбмена.Мобильный.ЕстьУзлыПользователя(Пользователь);
		Элементы.ПодпискиПоОбъектамПоPushСтрокой.Видимость = ЕстьУзлыПользователя;
		Элементы.ПодпискиУведомленийПоPush.Видимость = ЕстьУзлыПользователя;
	КонецЕсли;
	Элементы.ПодпискиУведомленийПоSMS.Видимость = ДоступнаОтправкаSMS;
	Элементы.ПодпискиПоОбъектамПоSMSСтрокой.Видимость = ДоступнаОтправкаSMS;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьПодпискаАктивна(ПодпискиУведомлений, СрокиУведомлений, ЧастотыУведомлений, ДополнительныеНастройки)
	
	ПараметрыОтбора = Новый Структура("ОсновноеСобытие");
	
	Для Каждого НастройкаСрока Из СрокиУведомлений Цикл
		ПараметрыОтбора.ОсновноеСобытие = НастройкаСрока.ВидСобытия;
		НайденныеСтроки = ПодпискиУведомлений.НайтиСтроки(ПараметрыОтбора);
		ПодпискаАктивна = Ложь;
		Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
			ПодпискаАктивна = ПодпискаАктивна
				Или НайденнаяСтрока.ПоПочте
				Или НайденнаяСтрока.ПоSMS
				Или НайденнаяСтрока.Окном
				Или НайденнаяСтрока.ПоPush;
		КонецЦикла;
		НастройкаСрока.ПодпискаАктивна = ПодпискаАктивна;
	КонецЦикла;
	
	Для Каждого НастройкаЧастоты Из ЧастотыУведомлений Цикл
		ПараметрыОтбора.ОсновноеСобытие = НастройкаЧастоты.ВидСобытия;
		НайденныеСтроки = ПодпискиУведомлений.НайтиСтроки(ПараметрыОтбора);
		ПодпискаАктивна = Ложь;
		Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
			ПодпискаАктивна = ПодпискаАктивна
				Или НайденнаяСтрока.ПоПочте
				Или НайденнаяСтрока.ПоSMS
				Или НайденнаяСтрока.Окном
				Или НайденнаяСтрока.ПоPush;
		КонецЦикла;
		НастройкаЧастоты.ПодпискаАктивна = ПодпискаАктивна;
	КонецЦикла;
	
	Для Каждого ДополнительнаяНастройка Из ДополнительныеНастройки Цикл
		ПараметрыОтбора.ОсновноеСобытие = ДополнительнаяНастройка.ВидСобытия;
		НайденныеСтроки = ПодпискиУведомлений.НайтиСтроки(ПараметрыОтбора);
		ПодпискаАктивна = Ложь;
		Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
			ПодпискаАктивна = ПодпискаАктивна
				Или НайденнаяСтрока.ПоПочте
				Или НайденнаяСтрока.ПоSMS
				Или НайденнаяСтрока.Окном
				Или НайденнаяСтрока.ПоPush;
		КонецЦикла;
		ДополнительнаяНастройка.ПодпискаАктивна = ПодпискаАктивна;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти
