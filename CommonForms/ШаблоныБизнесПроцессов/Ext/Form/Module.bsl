
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Элементы.ВыбратьПанельИсполнение.Видимость = Ложь;
	Элементы.ВыбратьПанельОзнакомление.Видимость = Ложь;
	Элементы.ВыбратьПанельПоручение.Видимость = Ложь;
	Элементы.ВыбратьПанельРассмотрение.Видимость = Ложь;
	Элементы.ВыбратьПанельРегистрация.Видимость = Ложь;
	Элементы.ВыбратьПанельСогласование.Видимость = Ложь;
	Элементы.ВыбратьПанельУтверждение.Видимость = Ложь;
	Элементы.ВыбратьПанельСоставные.Видимость = Ложь;
	Элементы.ВыбратьПанельПриглашение.Видимость = Ложь;
	Элементы.ВыбратьПанельКомплексный.Видимость = Ложь;
	
	Если Параметры.Свойство("РежимВыбора") И Параметры.РежимВыбора Тогда
		
		КлючНазначенияИспользования = "РежимВыбора";
		
		РежимВыбораШаблона = Истина;
		
		РежимОткрытияОкна = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
		
		ТипШаблона = "";
		Параметры.Свойство("ТипШаблона", ТипШаблона);
		
		ЗначениеСписка = ТипШаблона;
		
		Если ЗначениеСписка = "Исполнение" Или 
			ЗначениеСписка = "Ознакомление" Или
			ЗначениеСписка = "Поручение" Или
			ЗначениеСписка = "Рассмотрение" Или
			ЗначениеСписка = "Регистрация" Или
			ЗначениеСписка = "Согласование" Или
			ЗначениеСписка = "Утверждение" Или
			ЗначениеСписка = "Приглашение" Или
			ЗначениеСписка = "Комплексный" Тогда
			
			Элементы.Панели.ТекущаяСтраница = Элементы["Панель" + ЗначениеСписка];
			Элементы.Списки.ТекущаяСтраница = Элементы["Список" + ЗначениеСписка];
			Элементы["ВыбратьПанель" + ЗначениеСписка].Видимость = Истина;
			Элементы["ВыбратьПанель" + ЗначениеСписка].КнопкаПоУмолчанию = Истина;
			
			Элементы.ТипыШаблонов.Видимость = Ложь;
			
		Иначе // составной процесс	
			
			ПоказатьТолькоСоставные = Истина;
			
			Если ЗначениеСписка = "ОбработкаВнутреннегоДокумента" Или 
				ЗначениеСписка = "ОбработкаВходящегоДокумента" Или
				ЗначениеСписка = "ОбработкаИсходящегоДокумента" Тогда
				
				Элементы.ТипыШаблонов.Видимость = Ложь;
				
				ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(СписокСоставные.Отбор, 
					"ТипШаблона", 
					ЗначениеСписка);
				
			Иначе	
				
				ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(СписокСоставные.Отбор, 
					"ТипШаблона", 
					"ОбработкаВнутреннегоДокумента");
					
			КонецЕсли;
			
			Элементы.Панели.ТекущаяСтраница = Элементы["ПанельСоставные"];
			Элементы.Списки.ТекущаяСтраница = Элементы["СписокСоставные"];
			
		КонецЕсли;	
		
		Если ЗначениеСписка = "Исполнение" Тогда
			Заголовок = НСтр("ru = 'Выбор шаблона процесса ""Исполнение""'; en = 'Selecting template for process ""Performance""'");
		ИначеЕсли ЗначениеСписка = "Ознакомление" Тогда
			Заголовок = НСтр("ru = 'Выбор шаблона процесса ""Ознакомление""'; en = 'Selecting template for process ""Examination""'");
		ИначеЕсли ЗначениеСписка = "Поручение" Тогда
			Заголовок = НСтр("ru = 'Выбор шаблона процесса ""Поручение""'; en = 'Selecting template for process ""Order""'");
		ИначеЕсли ЗначениеСписка = "Рассмотрение" Тогда
			Заголовок = НСтр("ru = 'Выбор шаблона процесса ""Рассмотрение""'; en = 'Selecting template for process ""Reviewal""'");
		ИначеЕсли ЗначениеСписка = "Регистрация" Тогда
			Заголовок = НСтр("ru = 'Выбор шаблона процесса ""Регистрация""'; en = 'Selecting template for process ""Registration""'");
		ИначеЕсли ЗначениеСписка = "Согласование" Тогда
			Заголовок = НСтр("ru = 'Выбор шаблона процесса ""Согласование""'; en = 'Selecting template for process ""Approval""'");
		ИначеЕсли ЗначениеСписка = "Утверждение" Тогда
			Заголовок = НСтр("ru = 'Выбор шаблона процесса ""Утверждение""'; en = 'Selecting template for process ""Confirmation""'");
		ИначеЕсли ЗначениеСписка = "Приглашение" Тогда
			Заголовок = НСтр("ru = 'Выбор шаблона процесса ""Приглашение""'; en = 'Selecting template for process ""Invitation""'");
		ИначеЕсли ЗначениеСписка = "Комплексный" Тогда
			Заголовок = НСтр("ru = 'Выбор шаблона комплексного процесса'; en = 'Selecting composite process template'");
		Иначе	
			Заголовок = НСтр("ru = 'Выбор шаблона составного процесса'; en = 'Selecting template for compound process'");
		КонецЕсли;
		
		Если Параметры.Свойство("ДоступныеЭлементы") И Параметры.ДоступныеЭлементы.Количество() > 0 Тогда 
			
			Если ЗначениеСписка = "Исполнение" Тогда
				ЭлементОтбора = СписокИсполнение.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			ИначеЕсли ЗначениеСписка = "Ознакомление" Тогда
				ЭлементОтбора = СписокОзнакомление.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			ИначеЕсли ЗначениеСписка = "Поручение" Тогда
				ЭлементОтбора = СписокПоручение.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			ИначеЕсли ЗначениеСписка = "Рассмотрение" Тогда
				ЭлементОтбора = СписокРассмотрение.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			ИначеЕсли ЗначениеСписка = "Регистрация" Тогда
				ЭлементОтбора = СписокРегистрация.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			ИначеЕсли ЗначениеСписка = "Согласование" Тогда
				ЭлементОтбора = СписокСогласование.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			ИначеЕсли ЗначениеСписка = "Утверждение" Тогда
				ЭлементОтбора = СписокУтверждение.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
				
			ИначеЕсли ЗначениеСписка = "Приглашение" Тогда
				ЭлементОтбора = СписокПриглашение.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			ИначеЕсли ЗначениеСписка = "Комплексный" Тогда
				ЭлементОтбора = СписокКомплексный.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
				
			Иначе	
				ЭлементОтбора = СписокСоставные.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			КонецЕсли;
			
			ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Ссылка");
			ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
			ЭлементОтбора.ПравоеЗначение = Параметры.ДоступныеЭлементы;
			ЭлементОтбора.Использование = Истина;
			ЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
			
		КонецЕсли;	
		
	Иначе
		
		КлючНазначенияИспользования = "РежимСписка";
		
	КонецЕсли;	
	
	Если Не ПоказатьТолькоСоставные Тогда
		ТипыШаблонов.Добавить("Исполнение",   НСТр("ru = 'Исполнение'; en = 'Performance'"));
		ТипыШаблонов.Добавить("Ознакомление", НСТр("ru = 'Ознакомление'; en = 'Examination'"));
		ТипыШаблонов.Добавить("Поручение",    НСТр("ru = 'Поручение'; en = 'Order'"));
		ТипыШаблонов.Добавить("Рассмотрение", НСТр("ru = 'Рассмотрение'; en = 'Reviewal'"));
		ТипыШаблонов.Добавить("Регистрация",  НСТр("ru = 'Регистрация'; en = 'Registration'"));
		ТипыШаблонов.Добавить("Согласование", НСТр("ru = 'Согласование'; en = 'Approval'"));
		ТипыШаблонов.Добавить("Утверждение",  НСТр("ru = 'Утверждение / Подписание'; en = 'Confirmation / Signing'"));
		
		Если ПолучитьФункциональнуюОпцию("ИспользоватьПриглашениеНаМероприятие") Тогда 
			ТипыШаблонов.Добавить("Приглашение", НСТр("ru = 'Приглашение'; en = 'Invitation'"));
		КонецЕсли;	
		
		ТипыШаблонов.Добавить("Комплексный", НСТр("ru = 'Комплексный процесс'; en = 'Composite process'"));
	КонецЕсли;
	
	Для Каждого МДБизнесПроцесс Из Метаданные.БизнесПроцессы Цикл
		МДРеквизит = МДБизнесПроцесс.Реквизиты.Найти("Шаблон");
		Если МДРеквизит <> Неопределено Тогда
			Если МДРеквизит.Тип.СодержитТип(Тип("СправочникСсылка.ШаблоныСоставныхБизнесПроцессов")) Тогда 
				ТипыШаблонов.Добавить(МДБизнесПроцесс.Имя, МДБизнесПроцесс.Синоним);
				Продолжить;
			КонецЕсли;	
		КонецЕсли;
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ШаблоныСоставныхБизнесПроцессов.ТипШаблона
	|ИЗ
	|	Справочник.ШаблоныСоставныхБизнесПроцессов КАК ШаблоныСоставныхБизнесПроцессов";
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Если ТипыШаблонов.НайтиПоЗначению(Выборка.ТипШаблона) = Неопределено Тогда 
			ТипыШаблонов.Добавить(Выборка.ТипШаблона);
		КонецЕсли;	
	КонецЦикла;
	
	Если Не ПоказатьТолькоСоставные Тогда
		ТекущийТипПроцесса = ХранилищеНастроекДанныхФорм.Загрузить("ШаблоныБизнесПроцессов", "ТекущийТипШаблона");
		Если ЗначениеЗаполнено(ТекущийТипПроцесса) Тогда
			ТекущийТип = ТипыШаблонов.НайтиПоЗначению(ТекущийТипПроцесса);
			Если ТекущийТип <> Неопределено Тогда
				Индекс = ТипыШаблонов.Индекс(ТекущийТип);
				Элементы.ТипыШаблонов.ТекущаяСтрока = Индекс;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	ПоказатьУдаленные();
	
	// Условное оформление списков шаблонов.
	ШаблоныБизнесПроцессов.УстановитьУсловноеОформлениеСпискаШаблонов(СписокИсполнение.УсловноеОформление);
	ШаблоныБизнесПроцессов.УстановитьУсловноеОформлениеСпискаШаблонов(СписокКомплексный.УсловноеОформление);
	ШаблоныБизнесПроцессов.УстановитьУсловноеОформлениеСпискаШаблонов(СписокОзнакомление.УсловноеОформление);
	ШаблоныБизнесПроцессов.УстановитьУсловноеОформлениеСпискаШаблонов(СписокПоручение.УсловноеОформление);
	ШаблоныБизнесПроцессов.УстановитьУсловноеОформлениеСпискаШаблонов(СписокПриглашение.УсловноеОформление);
	ШаблоныБизнесПроцессов.УстановитьУсловноеОформлениеСпискаШаблонов(СписокРассмотрение.УсловноеОформление);
	ШаблоныБизнесПроцессов.УстановитьУсловноеОформлениеСпискаШаблонов(СписокРегистрация.УсловноеОформление);
	ШаблоныБизнесПроцессов.УстановитьУсловноеОформлениеСпискаШаблонов(СписокСогласование.УсловноеОформление);
	ШаблоныБизнесПроцессов.УстановитьУсловноеОформлениеСпискаШаблонов(СписокСоставные.УсловноеОформление);
	ШаблоныБизнесПроцессов.УстановитьУсловноеОформлениеСпискаШаблонов(СписокУтверждение.УсловноеОформление);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	Если ОбщегоНазначенияДокументооборотКлиент.ПриЗакрытии(ЗавершениеРаботы) Тогда
		Возврат;
	КонецЕсли;
	
	ПриЗакрытииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	ПоказатьУдаленные();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_ШаблонПроцесса" Тогда
		ОбновитьСводкуПриАктивизацииСтроки(ТекущийШаблон);
	КонецЕсли;	
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ОбновитьСводкуПриАктивизацииСтроки(ШаблонСсылка)
	
	ТекущийШаблон = ШаблонСсылка;
	
	Если ЗначениеЗаполнено(ШаблонСсылка) Тогда
		ДляСпискаШаблоновПроцессов = Истина;
		Сводка = ОбзорПроцессовВызовСервера.ПолучитьОбзорШаблонаПроцесса(ШаблонСсылка, ДляСпискаШаблоновПроцессов);
	Иначе	
		Сводка = "<html></html>";
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура Список1ПриАктивизацииСтроки(Элемент)
	
	ШаблонСсылка = Неопределено;
	Если Элементы.Список1.ТекущиеДанные <> Неопределено
		И Не Элементы.Список1.ТекущиеДанные.ЭтоГруппа Тогда
		
		ШаблонСсылка = Элементы.Список1.ТекущаяСтрока;
	КонецЕсли;
	
	ОбновитьСводкуПриАктивизацииСтроки(ШаблонСсылка);
	
КонецПроцедуры

&НаКлиенте
Процедура Список2ПриАктивизацииСтроки(Элемент)
	
	ШаблонСсылка = Неопределено;
	Если Элементы.Список2.ТекущиеДанные <> Неопределено
		И Не Элементы.Список2.ТекущиеДанные.ЭтоГруппа Тогда
		
		ШаблонСсылка = Элементы.Список2.ТекущаяСтрока;
	КонецЕсли;
	ОбновитьСводкуПриАктивизацииСтроки(ШаблонСсылка);
	
КонецПроцедуры

&НаКлиенте
Процедура Список3ПриАктивизацииСтроки(Элемент)
	
	ШаблонСсылка = Неопределено;
	Если Элементы.Список3.ТекущиеДанные <> Неопределено
		И Не Элементы.Список3.ТекущиеДанные.ЭтоГруппа Тогда
		
		ШаблонСсылка = Элементы.Список3.ТекущаяСтрока;
	КонецЕсли;
	ОбновитьСводкуПриАктивизацииСтроки(ШаблонСсылка);
	
КонецПроцедуры

&НаКлиенте
Процедура Список4ПриАктивизацииСтроки(Элемент)
	
	ШаблонСсылка = Неопределено;
	Если Элементы.Список4.ТекущиеДанные <> Неопределено
		И Не Элементы.Список4.ТекущиеДанные.ЭтоГруппа Тогда
		
		ШаблонСсылка = Элементы.Список4.ТекущаяСтрока;
	КонецЕсли;
	ОбновитьСводкуПриАктивизацииСтроки(ШаблонСсылка);
	
КонецПроцедуры

&НаКлиенте
Процедура Список5ПриАктивизацииСтроки(Элемент)
	
	ШаблонСсылка = Неопределено;
	Если Элементы.Список5.ТекущиеДанные <> Неопределено
		И Не Элементы.Список5.ТекущиеДанные.ЭтоГруппа Тогда
		
		ШаблонСсылка = Элементы.Список5.ТекущаяСтрока;
	КонецЕсли;
	ОбновитьСводкуПриАктивизацииСтроки(ШаблонСсылка);
	
КонецПроцедуры

&НаКлиенте
Процедура Список6ПриАктивизацииСтроки(Элемент)
	
	ШаблонСсылка = Неопределено;
	Если Элементы.Список6.ТекущиеДанные <> Неопределено
		И Не Элементы.Список6.ТекущиеДанные.ЭтоГруппа Тогда
		
		ШаблонСсылка = Элементы.Список6.ТекущаяСтрока;
	КонецЕсли;
	ОбновитьСводкуПриАктивизацииСтроки(ШаблонСсылка);
	
КонецПроцедуры

&НаКлиенте
Процедура Список7ПриАктивизацииСтроки(Элемент)
	
	ШаблонСсылка = Неопределено;
	Если Элементы.Список7.ТекущиеДанные <> Неопределено
		И Не Элементы.Список7.ТекущиеДанные.ЭтоГруппа Тогда
		
		ШаблонСсылка = Элементы.Список7.ТекущаяСтрока;
	КонецЕсли;
	ОбновитьСводкуПриАктивизацииСтроки(ШаблонСсылка);
	
КонецПроцедуры

&НаКлиенте
Процедура Список8ПриАктивизацииСтроки(Элемент)
	
	ШаблонСсылка = Неопределено;
	Если Элементы.Список8.ТекущиеДанные <> Неопределено
		И Не Элементы.Список8.ТекущиеДанные.ЭтоГруппа Тогда
		
		ШаблонСсылка = Элементы.Список8.ТекущаяСтрока;
	КонецЕсли;
	ОбновитьСводкуПриАктивизацииСтроки(ШаблонСсылка);
	
КонецПроцедуры

&НаКлиенте
Процедура Список9ПриАктивизацииСтроки(Элемент)
	
	ШаблонСсылка = Неопределено;
	Если Элементы.Список9.ТекущиеДанные <> Неопределено
		И Не Элементы.Список9.ТекущиеДанные.ЭтоГруппа Тогда
		
		ШаблонСсылка = Элементы.Список9.ТекущаяСтрока;
	КонецЕсли;
	ОбновитьСводкуПриАктивизацииСтроки(ШаблонСсылка);
	
КонецПроцедуры

&НаКлиенте
Процедура Список10ПриАктивизацииСтроки(Элемент)
	
	ШаблонСсылка = Неопределено;
	Если Элементы.Список10.ТекущиеДанные <> Неопределено
		И Не Элементы.Список10.ТекущиеДанные.ЭтоГруппа Тогда
		
		ШаблонСсылка = Элементы.Список10.ТекущаяСтрока;
	КонецЕсли;
	ОбновитьСводкуПриАктивизацииСтроки(ШаблонСсылка);
	
КонецПроцедуры

&НаКлиенте
Процедура СводкаПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	
	ОбзорПроцессовКлиент.ПредставлениеHTMLПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьВыборВСписке(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка, 
	ЭлементКолонкаЧислоВидов)
	
	Если Поле = ЭлементКолонкаЧислоВидов Тогда
		
		ПараметрыФормы = Новый Структура("ШаблонБизнесПроцесса", ВыбраннаяСтрока);
		ОткрытьФорму("РегистрСведений.НастройкаШаблоновБизнесПроцессов.Форма.ФормаСпискаДляШаблона",ПараметрыФормы);
		СтандартнаяОбработка = Ложь;
		Возврат;
		
	КонецЕсли;	
	
	Если РежимВыбораШаблона Тогда
		СтандартнаяОбработка = Ложь;
		ОповеститьОВыборе(ВыбраннаяСтрока);
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура Список1Выбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ОбработатьВыборВСписке(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка, 
		Элементы.Список1ЧислоВидовДокументов);	
		
КонецПроцедуры

&НаКлиенте
Процедура Список2Выбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ОбработатьВыборВСписке(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка, 
		Элементы.Список2ЧислоВидовДокументов);	
	
КонецПроцедуры

&НаКлиенте
Процедура Список3Выбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ОбработатьВыборВСписке(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка, 
		Элементы.Список3ЧислоВидовДокументов);	
	
КонецПроцедуры

&НаКлиенте
Процедура Список4Выбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если РежимВыбораШаблона Тогда
		СтандартнаяОбработка = Ложь;
		ОповеститьОВыборе(Элементы.Список4.ТекущаяСтрока);
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура Список5Выбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ОбработатьВыборВСписке(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка, 
		Элементы.Список5ЧислоВидовДокументов);	
	
КонецПроцедуры

&НаКлиенте
Процедура Список6Выбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ОбработатьВыборВСписке(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка, 
		Элементы.Список6ЧислоВидовДокументов);	
	
КонецПроцедуры

&НаКлиенте
Процедура Список7Выбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ОбработатьВыборВСписке(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка, 
		Элементы.Список7ЧислоВидовДокументов);	
	
КонецПроцедуры

&НаКлиенте
Процедура Список8Выбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ОбработатьВыборВСписке(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка, 
		Элементы.Список8ЧислоВидовДокументов);	
	
КонецПроцедуры

&НаКлиенте
Процедура Список9Выбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ОбработатьВыборВСписке(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка, 
		Элементы.Список9ЧислоВидовДокументов);	
	
КонецПроцедуры

&НаКлиенте
Процедура Список10Выбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ОбработатьВыборВСписке(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка, 
		Элементы.Список10ЧислоВидовДокументов);	
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТипыШаблонов

&НаКлиенте
Процедура ТипыШаблоновПриАктивизацииСтроки(Элемент)
	
	ТекущаяСтрока = Элементы.ТипыШаблонов.ТекущаяСтрока;
	ЗначениеСписка = ТипыШаблонов.НайтиПоИдентификатору(ТекущаяСтрока).Значение;
	
	Если ЗначениеСписка = "Исполнение" Или 
		ЗначениеСписка = "Ознакомление" Или
		ЗначениеСписка = "Поручение" Или
		ЗначениеСписка = "Рассмотрение" Или
		ЗначениеСписка = "Регистрация" Или
		ЗначениеСписка = "Согласование" Или
		ЗначениеСписка = "Утверждение" Или
		ЗначениеСписка = "Приглашение" Или
		ЗначениеСписка = "Комплексный" Тогда
	
		Элементы.Панели.ТекущаяСтраница = Элементы["Панель" + ЗначениеСписка];
		Элементы.Списки.ТекущаяСтраница = Элементы["Список" + ЗначениеСписка];
		
		ЭлементСписок = Элементы["Список" + ЗначениеСписка].ПодчиненныеЭлементы[0];
		
		ЭлементСписок.Обновить();
		
		Если ЭлементСписок.ТекущиеДанные <> Неопределено
			И ЭлементСписок.ТекущиеДанные.ЭтоГруппа Тогда
			
			ШаблонСсылка = Неопределено;
		Иначе
			ШаблонСсылка = ЭлементСписок.ТекущаяСтрока;
		КонецЕсли;
		ОбновитьСводкуПриАктивизацииСтроки(ШаблонСсылка);
		
	Иначе
		
		Элементы.Панели.ТекущаяСтраница = Элементы["ПанельСоставные"];
		Элементы.Списки.ТекущаяСтраница = Элементы["СписокСоставные"];
		
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(СписокСоставные.Отбор, 
			"ТипШаблона", 
			ЗначениеСписка);
			
		ЭлементСписок = Элементы["СписокСоставные"].ПодчиненныеЭлементы[0];
		
		Если ЭлементСписок.ТекущиеДанные <> Неопределено
			И ЭлементСписок.ТекущиеДанные.ЭтоГруппа Тогда
			
			ШаблонСсылка = Неопределено;
		Иначе
			ШаблонСсылка = ЭлементСписок.ТекущаяСтрока;
		КонецЕсли;
		ОбновитьСводкуПриАктивизацииСтроки(ШаблонСсылка);
			
	КонецЕсли;	
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПоказыватьУдаленные(Команда)
	
	ПоказыватьУдаленные = Не ПоказыватьУдаленные;
	
	ПоказатьУдаленные();
	
КонецПроцедуры

&НаКлиенте
Процедура Выбрать1(Команда)
	ОповеститьОВыборе(Элементы.Список1.ТекущаяСтрока);
КонецПроцедуры

&НаКлиенте
Процедура Выбрать2(Команда)
	ОповеститьОВыборе(Элементы.Список2.ТекущаяСтрока);
КонецПроцедуры

&НаКлиенте
Процедура Выбрать3(Команда)
	ОповеститьОВыборе(Элементы.Список3.ТекущаяСтрока);
КонецПроцедуры

&НаКлиенте
Процедура Выбрать4(Команда)
	ОповеститьОВыборе(Элементы.Список4.ТекущаяСтрока);
КонецПроцедуры

&НаКлиенте
Процедура Выбрать5(Команда)
	ОповеститьОВыборе(Элементы.Список5.ТекущаяСтрока);
КонецПроцедуры

&НаКлиенте
Процедура Выбрать6(Команда)
	ОповеститьОВыборе(Элементы.Список6.ТекущаяСтрока);
КонецПроцедуры

&НаКлиенте
Процедура Выбрать7(Команда)
	ОповеститьОВыборе(Элементы.Список7.ТекущаяСтрока);
КонецПроцедуры

&НаКлиенте
Процедура Выбрать8(Команда)
	ОповеститьОВыборе(Элементы.Список8.ТекущаяСтрока);
КонецПроцедуры

&НаКлиенте
Процедура Выбрать9(Команда)
	ОповеститьОВыборе(Элементы.Список9.ТекущаяСтрока);
КонецПроцедуры

&НаКлиенте
Процедура Выбрать10(Команда)
	ОповеститьОВыборе(Элементы.Список10.ТекущаяСтрока);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПриЗакрытииНаСервере()
	
	ТекущийТипШаблона = ТипыШаблонов.НайтиПоИдентификатору(
		Элементы.ТипыШаблонов.ТекущаяСтрока);
		
	Если ТекущийТипШаблона <> Неопределено Тогда
		ХранилищеНастроекДанныхФорм.Сохранить(
			"ШаблоныБизнесПроцессов", "ТекущийТипШаблона", ТекущийТипШаблона.Значение);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПоказатьУдаленные()
	
	Если ПоказыватьУдаленные Тогда
		ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбораДинамическогоСписка(СписокИсполнение, "ПометкаУдаления");
		ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбораДинамическогоСписка(СписокОзнакомление, "ПометкаУдаления");
		ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбораДинамическогоСписка(СписокПоручение, "ПометкаУдаления");
		ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбораДинамическогоСписка(СписокРассмотрение, "ПометкаУдаления");
		ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбораДинамическогоСписка(СписокРегистрация, "ПометкаУдаления");
		ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбораДинамическогоСписка(СписокСогласование, "ПометкаУдаления");
		ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбораДинамическогоСписка(СписокУтверждение, "ПометкаУдаления");
		ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбораДинамическогоСписка(СписокСоставные, "ПометкаУдаления");
		ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбораДинамическогоСписка(СписокКомплексный, "ПометкаУдаления");
		ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбораДинамическогоСписка(СписокПриглашение, "ПометкаУдаления");
	Иначе	
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(СписокИсполнение, "ПометкаУдаления", Ложь);
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(СписокОзнакомление, "ПометкаУдаления", Ложь);
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(СписокПоручение, "ПометкаУдаления", Ложь);
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(СписокРассмотрение, "ПометкаУдаления", Ложь);
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(СписокРегистрация, "ПометкаУдаления", Ложь);
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(СписокСогласование, "ПометкаУдаления", Ложь);
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(СписокУтверждение, "ПометкаУдаления", Ложь);
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(СписокСоставные, "ПометкаУдаления", Ложь);
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(СписокКомплексный, "ПометкаУдаления", Ложь);
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(СписокПриглашение, "ПометкаУдаления", Ложь);
	КонецЕсли;	
	
	Элементы.Список1ПоказыватьУдаленные.Пометка = ПоказыватьУдаленные;
	Элементы.Список2ПоказыватьУдаленные.Пометка = ПоказыватьУдаленные;
	Элементы.Список3ПоказыватьУдаленные.Пометка = ПоказыватьУдаленные;
	Элементы.Список4ПоказыватьУдаленные.Пометка = ПоказыватьУдаленные;
	Элементы.Список5ПоказыватьУдаленные.Пометка = ПоказыватьУдаленные;
	Элементы.Список6ПоказыватьУдаленные.Пометка = ПоказыватьУдаленные;
	Элементы.Список7ПоказыватьУдаленные.Пометка = ПоказыватьУдаленные;
	Элементы.Список8ПоказыватьУдаленные.Пометка = ПоказыватьУдаленные;
	Элементы.Список9ПоказыватьУдаленные.Пометка = ПоказыватьУдаленные;
	Элементы.Список10ПоказыватьУдаленные.Пометка = ПоказыватьУдаленные;
	
КонецПроцедуры

#КонецОбласти
