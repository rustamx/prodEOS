
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	НастроитьВидПросмотра();
	
	СписокКонтактныеЛица.Параметры.УстановитьЗначениеПараметра("Контрагент", Элементы.Контрагенты.ТекущаяСтрока);
	
	ПоказыватьУдаленные = ХранилищеСистемныхНастроек.Загрузить(ИмяФормы, "ПоказыватьУдаленные");
	Если ПоказыватьУдаленные = Неопределено Тогда
		ПоказыватьУдаленные = Ложь;
	КонецЕсли;
	
	Элементы.ПоказыватьУдаленные.Пометка = ПоказыватьУдаленные;
	
	Если Не ПоказыватьУдаленные Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
			СтруктураПредприятия, "ПометкаУдаления", Ложь,
			ВидСравненияКомпоновкиДанных.Равно, , Истина);
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
			Контрагенты, "ПометкаУдаления", Ложь,
			ВидСравненияКомпоновкиДанных.Равно, , Истина);
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
			СписокКонтактныеЛица, "ПометкаУдаления", Ложь,
			ВидСравненияКомпоновкиДанных.Равно, , Истина);
	Иначе
		ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбораДинамическогоСписка(СтруктураПредприятия,
			"ПометкаУдаления");
		ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбораДинамическогоСписка(Контрагенты,
			"ПометкаУдаления");
		ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбораДинамическогоСписка(СписокКонтактныеЛица,
			"ПометкаУдаления");
	КонецЕсли;

	ОтобразитьИерархию();
	
	ТекущаяСтрока = Параметры.ТекущаяСтрока;
	Если ЗначениеЗаполнено(Параметры.ТекущаяСтрока) Тогда
		УстановитьПозициюНаИсполнителя(Параметры.ТекущаяСтрока);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВидПросмотраПриИзменении(Элемент)
	
	Если ВидПросмотра = НСтр("ru = 'Списком'; en = 'As a list'") Тогда
		ТекущаяРабочаяГруппа = Неопределено;
		ТекущееПодразделение = Неопределено;
	ИначеЕсли ВидПросмотра = НСтр("ru = 'По подразделениям'; en = 'By departments'") Тогда
		ТекущаяРабочаяГруппа = Неопределено;
		Если ЗначениеЗаполнено(Элементы.СписокПользователи.ТекущаяСтрока) Тогда
			ВрПодразделение = СписокПользователи.НайтиПоИдентификатору(Элементы.СписокПользователи.ТекущаяСтрока).Подразделение;
		Иначе
			ВрПодразделение = Неопределено;
		КонецЕсли;
		Элементы.СтруктураПредприятия.ТекущаяСтрока = ВрПодразделение;
		ТекущееПодразделение = Элементы.СтруктураПредприятия.ТекущаяСтрока;
	ИначеЕсли ВидПросмотра = НСтр("ru = 'По рабочим группам'; en = 'By working groups'") Тогда
		ТекущееПодразделение = Неопределено;
		Элементы.РабочиеГруппы.ТекущаяСтрока = ПредопределенноеЗначение("Справочник.РабочиеГруппы.ВсеПользователи");
		ТекущаяРабочаяГруппа = Элементы.РабочиеГруппы.ТекущаяСтрока;
	Иначе
		ВызватьИсключение "Некорректный вид просмотра";
	КонецЕсли;
	
	ОтобразитьИерархию();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСтруктураПредприятия

&НаКлиенте
Процедура СтруктураПредприятияПриАктивизацииСтроки(Элемент)
	
	ПодключитьОбработчикОжидания("ОбработкаОжиданияПользователи", 0.2, Истина);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписокПользователи

&НаКлиенте
Процедура СписокПользователиВыборЗначения(Элемент, Значение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОповеститьОВыборе(Элемент.ТекущиеДанные.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПользователиПередНачаломИзменения(Элемент, Отказ)
	
	ПоказатьЗначение(, Элементы.СписокПользователи.ТекущиеДанные.Ссылка);
	Отказ = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписокКонтактныеЛица

&НаКлиенте
Процедура СписокКонтактныеЛицаВыборЗначения(Элемент, Значение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОповеститьОВыборе(Значение);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокКонтактныеЛицаПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Если Копирование Тогда 
		Возврат;
	КонецЕсли;	
	
	ТекущиеДанные = Элементы.Контрагенты.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;	
	
	Если ТекущиеДанные.ЭтоГруппа Тогда
		Возврат;
	КонецЕсли;	
	
	Отказ = Истина;
	
	ЗначенияЗаполнения = Новый Структура;
	ЗначенияЗаполнения.Вставить("Владелец", ТекущиеДанные.Ссылка);

	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ЗначенияЗаполнения", ЗначенияЗаполнения);
		
	ОткрытьФорму("Справочник.КонтактныеЛица.ФормаОбъекта", ПараметрыФормы, Элемент);	
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыКонтрагенты

&НаКлиенте
Процедура КонтрагентыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Элементы.Контрагенты.ТекущаяСтрока <> Неопределено
		И Элементы.Контрагенты.ТекущиеДанные.ЮрФизЛицо = ПредопределенноеЗначение("Перечисление.ЮрФизЛицо.ФизЛицо") Тогда 
		СтандартнаяОбработка = Ложь;
		ОповеститьОВыборе(Элементы.Контрагенты.ТекущаяСтрока);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентыПриАктивизацииСтроки(Элемент)
	
	ПодключитьОбработчикОжидания("ОбработкаОжиданияКонтактныеЛица", 0.2, Истина);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыРабочиеГруппы

&НаКлиенте
Процедура РабочиеГруппыПриАктивизацииСтроки(Элемент)
	
	ПодключитьОбработчикОжидания("ОбработкаОжиданияПользователи", 0.2, Истина);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Выбрать(Команда)
	
	Если Элементы.Страницы.ТекущаяСтраница = Элементы.ГруппаПользователи Тогда 
		Если Элементы.СписокПользователи.ТекущиеДанные.Ссылка = Неопределено Тогда 
			Возврат;
		КонецЕсли;	
			
		ОповеститьОВыборе(Элементы.СписокПользователи.ТекущиеДанные.Ссылка);
		
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница = Элементы.ГруппаКонтрагенты Тогда 
		Если Элементы.Контрагенты.ТекущаяСтрока <> Неопределено Тогда 
			Если Элементы.Контрагенты.ТекущиеДанные.ЮрФизЛицо = ПредопределенноеЗначение("Перечисление.ЮрФизЛицо.ФизЛицо") Тогда 
				ОповеститьОВыборе(Элементы.Контрагенты.ТекущаяСтрока);
			ИначеЕсли Элементы.СписокКонтактныеЛица.ТекущаяСтрока = Неопределено Тогда 
				Возврат;
			КонецЕсли;
		ИначеЕсли Элементы.СписокКонтактныеЛица.ТекущаяСтрока = Неопределено Тогда 
			Возврат;
		КонецЕсли;	
		
		ОповеститьОВыборе(Элементы.СписокКонтактныеЛица.ТекущаяСтрока);
		
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказыватьУдаленные(Команда)
	
	ПоказыватьУдаленные = Не ПоказыватьУдаленные;
	Элементы.ПоказыватьУдаленные.Пометка = ПоказыватьУдаленные;
	
	Если Не ПоказыватьУдаленные Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
			СтруктураПредприятия, "ПометкаУдаления", Ложь,
			ВидСравненияКомпоновкиДанных.Равно, , Истина);
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
			Контрагенты, "ПометкаУдаления", Ложь,
			ВидСравненияКомпоновкиДанных.Равно, , Истина);
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
			СписокКонтактныеЛица, "ПометкаУдаления", Ложь,
			ВидСравненияКомпоновкиДанных.Равно, , Истина);
	Иначе
		ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбораДинамическогоСписка(СтруктураПредприятия,
			"ПометкаУдаления");
		ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбораДинамическогоСписка(Контрагенты,
			"ПометкаУдаления");
		ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбораДинамическогоСписка(СписокКонтактныеЛица,
			"ПометкаУдаления");
	КонецЕсли;
	
	ОтобразитьИерархию();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОбработкаОжиданияПользователи()
	
	Если ВидПросмотра = НСтр("ru = 'По подразделениям'; en = 'By departments'") Тогда
		Если Элементы.СтруктураПредприятия.ТекущаяСтрока <> Неопределено Тогда 
			Если ТекущееПодразделение <> Элементы.СтруктураПредприятия.ТекущаяСтрока Тогда
				ТекущееПодразделение = Элементы.СтруктураПредприятия.ТекущаяСтрока;
				ЗаполнитьПользователей();
			КонецЕсли;
		КонецЕсли;	
	ИначеЕсли ВидПросмотра = НСтр("ru = 'По рабочим группам'; en = 'By working groups'") Тогда
		Если Элементы.РабочиеГруппы.ТекущаяСтрока <> Неопределено Тогда 
			Если ТекущаяРабочаяГруппа <> Элементы.РабочиеГруппы.ТекущаяСтрока Тогда
				ТекущаяРабочаяГруппа = Элементы.РабочиеГруппы.ТекущаяСтрока;
				ЗаполнитьПользователей();
			КонецЕсли;
		КонецЕсли;	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОжиданияКонтактныеЛица()
	
	Если Элементы.Контрагенты.ТекущаяСтрока <> Неопределено Тогда 
		СписокКонтактныеЛица.Параметры.УстановитьЗначениеПараметра("Контрагент",
			Элементы.Контрагенты.ТекущаяСтрока);
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура НастроитьВидПросмотра()
	
	Элементы.ВидПросмотра.СписокВыбора.Очистить();
	Элементы.ВидПросмотра.СписокВыбора.Добавить(НСтр("ru = 'Списком'; en = 'As a list'"));
	Элементы.ВидПросмотра.СписокВыбора.Добавить(НСтр("ru = 'По подразделениям'; en = 'By departments'"));
	Элементы.ВидПросмотра.СписокВыбора.Добавить(НСтр("ru = 'По рабочим группам'; en = 'By working groups'"));
	
	ВидПросмотра = ХранилищеСистемныхНастроек.Загрузить(ИмяФормы, "ВидПросмотра");
	Если Элементы.ВидПросмотра.СписокВыбора.НайтиПоЗначению(ВидПросмотра) = Неопределено Тогда
		ВидПросмотра = НСтр("ru = 'По подразделениям'; en = 'By departments'");
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОтобразитьИерархию()
	
	
	Если ПустаяСтрока(ВидПросмотра) Тогда
		ВидПросмотра = НСтр("ru = 'По подразделениям'; en = 'By departments'");
	КонецЕсли;
	
	Если ВидПросмотра = НСтр("ru = 'Списком'; en = 'As a list'") Тогда
		Элементы.СтраницыГруппировкаПользователей.Видимость = Ложь;
	Иначе
		Элементы.СтраницыГруппировкаПользователей.Видимость = Истина;
		Если ВидПросмотра = НСтр("ru = 'По подразделениям'; en = 'By departments'") Тогда
			Элементы.СтраницыГруппировкаПользователей.ТекущаяСтраница = Элементы.СтраницаСтруктураПредприятия;
		ИначеЕсли ВидПросмотра = НСтр("ru = 'По рабочим группам'; en = 'By working groups'") Тогда
			Элементы.СтраницыГруппировкаПользователей.ТекущаяСтраница = Элементы.СтраницаРабочиеГруппы;
		Иначе
			ВызватьИсключение НСтр("ru = 'Некорректный вид просмотра'; en = 'Invalid view type'");
		КонецЕсли;
	КонецЕсли;
	
	ЗаполнитьПользователей();
	ХранилищеСистемныхНастроек.Сохранить(ИмяФормы, "ВидПросмотра", ВидПросмотра);
	ХранилищеСистемныхНастроек.Сохранить(ИмяФормы, "ПоказыватьУдаленные", ПоказыватьУдаленные);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПользователей()
	
	Если ВидПросмотра = НСтр("ru = 'Списком'; en = 'As a list'") Тогда
		ЗаполнитьПользователейСписком();
	ИначеЕсли ВидПросмотра = НСтр("ru = 'По рабочим группам'; en = 'By working groups'") Тогда	
		ЗаполнитьПользователейВГруппе();
	Иначе
		ЗаполнитьПользователейВОтделе();
	КонецЕсли;	
	
КонецПроцедуры	

&НаСервере
Процедура ЗаполнитьПользователейСписком()
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	СправочникПользователи.Ссылка,
		|	СправочникПользователи.ПометкаУдаления,
		|	СправочникПользователи.Предопределенный,
		|	СправочникПользователи.Наименование КАК Наименование,
		|	СведенияОПользователяхДокументооборот.Должность,
		|	СведенияОПользователяхДокументооборот.Подразделение,
		|	ВЫБОР
		|		КОГДА НЕ СведенияОПользователяхДокументооборот.Пользователь ЕСТЬ NULL 
		|				И СправочникПользователи.Ссылка = СведенияОПользователяхДокументооборот.Подразделение.Руководитель
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ЭтоРуководитель,
		|	ЛОЖЬ КАК ЭтоРоль
		|ИЗ
		|	Справочник.Пользователи КАК СправочникПользователи
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОПользователяхДокументооборот КАК СведенияОПользователяхДокументооборот
		|		ПО СправочникПользователи.Ссылка = СведенияОПользователяхДокументооборот.Пользователь
		|ГДЕ
		|	Не СправочникПользователи.Недействителен");
	
	Если Не ПоказыватьУдаленные Тогда 
		Запрос.Текст = Запрос.Текст + "
		|	И Не СправочникПользователи.ПометкаУдаления";
	КонецЕсли;
	
	Результат = Запрос.Выполнить();
	СписокВыгрузки = Результат.Выгрузить();
	
	ТекПользователь = Неопределено;
	ТекущаяСтрока = Элементы.СписокПользователи.ТекущаяСтрока;
	Если ТекущаяСтрока <> Неопределено Тогда
		Если ТипЗнч(ТекущаяСтрока) = Тип("СправочникСсылка.Пользователи") Тогда 
			ТекПользователь = ТекущаяСтрока;
		Иначе 
			ТекПользователь = СписокПользователи.НайтиПоИдентификатору(ТекущаяСтрока).Ссылка;
		КонецЕсли;
	КонецЕсли;
	
	СписокПользователи.Очистить();
	СписокПользователи.Загрузить(СписокВыгрузки);
	Если ЗначениеЗаполнено(ТекПользователь) Тогда
		МассивСтрок = СписокПользователи.НайтиСтроки(Новый Структура("Ссылка", ТекПользователь));
		Если МассивСтрок.Количество() > 0 Тогда
			Элементы.СписокПользователи.ТекущаяСтрока = МассивСтрок[0].ПолучитьИдентификатор();
		КонецЕсли;
	КонецЕсли;
				   
КонецПроцедуры	

&НаСервере
Процедура ЗаполнитьПользователейВГруппе()
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	СправочникПользователи.Ссылка,
		|	СправочникПользователи.ПометкаУдаления,
		|	СправочникПользователи.Предопределенный,
		|	СправочникПользователи.Наименование КАК Наименование,
		|	СведенияОПользователяхДокументооборот.Должность,
		|	СведенияОПользователяхДокументооборот.Подразделение,
		|	ВЫБОР
		|		КОГДА СправочникПользователи.Ссылка = СведенияОПользователяхДокументооборот.Подразделение.Руководитель
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ЭтоРуководитель,
		|	ЛОЖЬ КАК ЭтоРоль
		|ИЗ
		|	Справочник.Пользователи КАК СправочникПользователи
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОПользователяхДокументооборот КАК СведенияОПользователяхДокументооборот
		|		ПО СправочникПользователи.Ссылка = СведенияОПользователяхДокументооборот.Пользователь
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.РабочиеГруппы.Состав КАК РабочиеГруппыСостав
		|		ПО СправочникПользователи.Ссылка = РабочиеГруппыСостав.Пользователь
		|ГДЕ
		|	(НЕ &ИспользоватьИерархию
		|			ИЛИ СведенияОПользователяхДокументооборот.Подразделение = &Подразделение)
		|	И (НЕ &ИспользоватьГруппыПользователей
		|			ИЛИ &РабочаяГруппа = ЗНАЧЕНИЕ(Справочник.РабочиеГруппы.ВсеПользователи)
		|			ИЛИ РабочиеГруппыСостав.Ссылка = &РабочаяГруппа)
		|	И НЕ СправочникПользователи.Недействителен");
	
	Если Не ПоказыватьУдаленные Тогда 
		Запрос.Текст = Запрос.Текст + "
		|	И Не СправочникПользователи.ПометкаУдаления";
	КонецЕсли;

	Запрос.УстановитьПараметр("Подразделение", ТекущееПодразделение);
	Запрос.УстановитьПараметр("РабочаяГруппа", ТекущаяРабочаяГруппа);
	Запрос.УстановитьПараметр("ИспользоватьИерархию", Ложь);
	Запрос.УстановитьПараметр("ИспользоватьГруппыПользователей", Истина);
		
	Результат = Запрос.Выполнить();
	СписокВыгрузки = Результат.Выгрузить();
	
	ТекущаяСтрока = Элементы.СписокПользователи.ТекущаяСтрока;
	Если ТекущаяСтрока <> Неопределено Тогда
		Если ТипЗнч(ТекущаяСтрока) = Тип("СправочникСсылка.Пользователи") Тогда 
			ТекПользователь = ТекущаяСтрока;
		Иначе 
			ТекПользователь = СписокПользователи.НайтиПоИдентификатору(ТекущаяСтрока).Ссылка;
		КонецЕсли;
	КонецЕсли;
	
	СписокПользователи.Очистить();
	СписокПользователи.Загрузить(СписокВыгрузки);
	Если ЗначениеЗаполнено(ТекПользователь) Тогда
		МассивСтрок = СписокПользователи.НайтиСтроки(Новый Структура("Ссылка", ТекПользователь));
		Если МассивСтрок.Количество() > 0 Тогда
			Элементы.СписокПользователи.ТекущаяСтрока = МассивСтрок[0].ПолучитьИдентификатор();
		КонецЕсли;
	КонецЕсли;
				   
КонецПроцедуры	

&НаСервере
Процедура ЗаполнитьПользователейВОтделе()
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	СправочникПользователи.Ссылка,
		|	СправочникПользователи.ПометкаУдаления,
		|	СправочникПользователи.Предопределенный,
		|	СправочникПользователи.Наименование КАК Наименование,
		|	СведенияОПользователяхДокументооборот.Должность,
		|	СведенияОПользователяхДокументооборот.Подразделение,
		|	ВЫБОР
		|		КОГДА СправочникПользователи.Ссылка = СведенияОПользователяхДокументооборот.Подразделение.Руководитель
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ЭтоРуководитель,
		|	ЛОЖЬ КАК ЭтоРоль
		|ИЗ
		|	Справочник.Пользователи КАК СправочникПользователи
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОПользователяхДокументооборот КАК СведенияОПользователяхДокументооборот
		|		ПО СправочникПользователи.Ссылка = СведенияОПользователяхДокументооборот.Пользователь
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.РабочиеГруппы.Состав КАК РабочиеГруппыСостав
		|		ПО СправочникПользователи.Ссылка = РабочиеГруппыСостав.Пользователь
		|ГДЕ
		|	(НЕ &ИспользоватьИерархию
		|			ИЛИ СведенияОПользователяхДокументооборот.Подразделение = &Подразделение)
		|	И (НЕ &ИспользоватьГруппыПользователей
		|			ИЛИ &РабочаяГруппа = ЗНАЧЕНИЕ(Справочник.РабочиеГруппы.ВсеПользователи)
		|			ИЛИ РабочиеГруппыСостав.Ссылка = &РабочаяГруппа)
		|	И НЕ СправочникПользователи.Недействителен");
	
	Если Не ПоказыватьУдаленные Тогда 
		Запрос.Текст = Запрос.Текст + "
		|	И Не СправочникПользователи.ПометкаУдаления";
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Подразделение", ТекущееПодразделение);
	Запрос.УстановитьПараметр("РабочаяГруппа", ТекущаяРабочаяГруппа);
	Запрос.УстановитьПараметр("ПоказыватьРоли", Ложь);
	
	Если ВидПросмотра = НСтр("ru = 'По подразделениям'; en = 'By departments'") Тогда
		Запрос.УстановитьПараметр("ИспользоватьИерархию", Истина);
		Запрос.УстановитьПараметр("ИспользоватьГруппыПользователей", Ложь);
	Иначе
		ВызватьИсключение "Некорректный вид просмотра";
	КонецЕсли;
	
	Результат = Запрос.Выполнить();
	СписокВыгрузки = Результат.Выгрузить();
	
	ТекущаяСтрока = Элементы.СписокПользователи.ТекущаяСтрока;
	Если ТекущаяСтрока <> Неопределено Тогда
		Если ТипЗнч(ТекущаяСтрока) = Тип("СправочникСсылка.Пользователи") Тогда 
			ТекПользователь = ТекущаяСтрока;
		Иначе 
			ТекПользователь = СписокПользователи.НайтиПоИдентификатору(ТекущаяСтрока).Ссылка;
		КонецЕсли;
	КонецЕсли;
	
	СписокПользователи.Очистить();
	СписокПользователи.Загрузить(СписокВыгрузки);
	Если ЗначениеЗаполнено(ТекПользователь) Тогда
		МассивСтрок = СписокПользователи.НайтиСтроки(Новый Структура("Ссылка", ТекПользователь));
		Если МассивСтрок.Количество() > 0 Тогда
			Элементы.СписокПользователи.ТекущаяСтрока = МассивСтрок[0].ПолучитьИдентификатор();
		КонецЕсли;
	КонецЕсли;
				   
КонецПроцедуры	

&НаСервере
Процедура УстановитьПозициюНаИсполнителя(Исполнитель)
	
	Если ТипЗнч(Исполнитель) = Тип("СправочникСсылка.Пользователи") Тогда
		Элементы.Страницы.ТекущаяСтраница = Элементы.ГруппаПользователи;
		
		Если ВидПросмотра = НСтр("ru = 'Списком'; en = 'As a list'") Тогда 
			МассивСтрок = СписокПользователи.НайтиСтроки(Новый Структура("Ссылка", Исполнитель));
			Если МассивСтрок.Количество() = 1 Тогда
				Элементы.СписокПользователи.ТекущаяСтрока = МассивСтрок[0].ПолучитьИдентификатор();
			КонецЕсли;
		Иначе 
			Подразделение = РаботаСПользователями.ПолучитьПодразделение(Исполнитель);
			
			Если Не Подразделение.Пустая() Тогда
				ВидПросмотра = НСтр("ru = 'По подразделениям'; en = 'By departments'");
				Элементы.СтруктураПредприятия.ТекущаяСтрока = Подразделение;
				ТекущееПодразделение = Элементы.СтруктураПредприятия.ТекущаяСтрока;
				ОтобразитьИерархию();
				
				МассивСтрок = СписокПользователи.НайтиСтроки(Новый Структура("Ссылка", Исполнитель));
				Если МассивСтрок.Количество() = 1 Тогда
					Элементы.СписокПользователи.ТекущаяСтрока = МассивСтрок[0].ПолучитьИдентификатор();
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(Исполнитель) = Тип("СправочникСсылка.КонтактныеЛица") Тогда 
		
		Элементы.Страницы.ТекущаяСтраница = Элементы.ГруппаКонтрагенты;
		Владелец = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Исполнитель, "Владелец");
		Элементы.Контрагенты.ТекущаяСтрока = Владелец;
		СписокКонтактныеЛица.Параметры.УстановитьЗначениеПараметра("Контрагент", Владелец);
		Элементы.СписокКонтактныеЛица.ТекущаяСтрока = Исполнитель;
	КонецЕсли;	
	
КонецПроцедуры

#КонецОбласти
