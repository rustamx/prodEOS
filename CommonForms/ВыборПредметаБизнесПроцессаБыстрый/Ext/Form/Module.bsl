
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Параметры.Свойство("БизнесПроцесс", БизнесПроцесс);
	Параметры.Свойство("Предмет", Предмет);
	Параметры.Свойство("ИменаПредметов",ИменаПредметов);
	Параметры.Свойство("ИмяПредмета",ИмяПредмета);
	
	ТипПредмета = Предмет.Метаданные().ПолноеИмя();
	ТипПредметаПредставление = ТипЗнч(Предмет);
	
	УстановитьРеквизитыЗаполнения();
	УстановитьКоличествоДоступныхШаблоновДокументов();
	УстановитьЗаголовкиПодсказок();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	ПараметрыДобавления = Новый Структура;
	УстановитьПредмет(ВыбранноеЗначение, ПараметрыДобавления);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура СоздатьПредмет(Команда)
	
	ВидСправочникаШаблонов = "";
	Если ТипПредмета = "Справочник.ТемыОбсуждений" Тогда
		ИмяФормыОбъекта = "Справочник.ТемыОбсуждений.ФормаОбъекта";
	ИначеЕсли ТипПредмета = "Справочник.Контрагенты" Тогда
		ИмяФормыОбъекта = "Справочник.Контрагенты.ФормаОбъекта";
	ИначеЕсли ТипПредмета = "Справочник.Проекты" Тогда
		ИмяФормыОбъекта = "Справочник.Проекты.ФормаОбъекта";
	ИначеЕсли ТипПредмета = "Документ.ВходящееПисьмо" Тогда
		ВызватьИсключение НСтр("ru = 'Нельзя создать входящее письмо, можно выбрать только существующее'; en = 'It is impossible to create an incoming email, you can only select an existing one'");
	ИначеЕсли ТипПредмета = "Документ.ИсходящееПисьмо" Тогда
		ИмяФормыОбъекта = "Документ.ИсходящееПисьмо.ФормаОбъекта";
	ИначеЕсли ТипПредмета = "Справочник.ВходящиеДокументы" Тогда
		ИмяФормыОбъекта = "Справочник.ВходящиеДокументы.ФормаОбъекта";
		ВидСправочникаШаблонов = "ШаблоныВходящихДокументов";
	ИначеЕсли ТипПредмета = "Справочник.ВнутренниеДокументы" Тогда
		ИмяФормыОбъекта = "Справочник.ВнутренниеДокументы.ФормаОбъекта";
		ВидСправочникаШаблонов = "ШаблоныВнутреннихДокументов";
	ИначеЕсли ТипПредмета = "Справочник.СообщенияОбсуждений" Тогда
		ВызватьИсключение НСтр("ru = 'Можно выбрать только существующее сообщение обсуждений'; en = 'It is possible to select only an existing message discussion'");
	ИначеЕсли ТипПредмета = "Справочник.ИсходящиеДокументы" Тогда
		ИмяФормыОбъекта = "Справочник.ИсходящиеДокументы.ФормаОбъекта";
		ВидСправочникаШаблонов = "ШаблоныИсходящихДокументов";
	ИначеЕсли ТипПредмета = "Справочник.Мероприятия" Тогда
		ИмяФормыОбъекта = "Справочник.Мероприятия.ФормаОбъекта";
	ИначеЕсли ТипПредмета = "Справочник.ПроектныеЗадачи" Тогда
		ВызватьИсключение НСтр("ru = 'Можно выбрать только существующую проектную задачу'; en = 'It is possible to select only an existing project task'");
	Иначе
		ВызватьИсключение НСтр("ru = 'Некорректный тип предмета'; en = 'Invalid subject type'");
	КонецЕсли;
	
	ПараметрыОбработчика = Новый Структура;
	ПараметрыОбработчика.Вставить("ПредметОснование", ПредметОснование);
	ПараметрыОбработчика.Вставить("ИмяФормыОбъекта", ИмяФормыОбъекта);
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"СоздатьПредметПродолжение",
		ЭтотОбъект,
		ПараметрыОбработчика);
		
	Если Не ПустаяСтрока(ВидСправочникаШаблонов) Тогда 
		Если НЕ ЗначениеЗаполнено(ШаблонДокумента) Тогда 
			Если КоличествоДоступныхШаблоновДокументов.ВнутренниеДокументы > 0 Тогда
				РаботаСШаблонамиДокументовКлиент.ПоказатьФормуСозданияДокументаПоШаблону(
					ОписаниеОповещения,
					ВидСправочникаШаблонов);
				Возврат;
			КонецЕсли;
		КонецЕсли
	Иначе
		ШаблонДокумента = "СоздатьПустойДокумент";
	КонецЕсли;
	
	ВыполнитьОбработкуОповещения(ОписаниеОповещения, ШаблонДокумента);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьПредметПродолжение(Результат, Параметры) Экспорт
	
	
	Если Не ЗначениеЗаполнено(Результат)
		Или Результат = "ПрерватьОперацию" Тогда
		
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(Результат) = Тип("Структура") Тогда
		ШаблонДокумента = Результат.ШаблонДокумента;
	Иначе
		ШаблонДокумента = Результат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ШаблонДокумента", ШаблонДокумента);
	
	Если ЗначениеЗаполнено(ПредметОснование) Тогда
		
		ТипШаблонДокумента = ТипЗнч(ШаблонДокумента);
		ТипПредметОснование = ТипЗнч(ПредметОснование);
		
		Если (ТипПредмета = "Справочник.ВнутренниеДокументы"
				Или ТипПредмета = "Справочник.ВходящиеДокументы"
				Или ТипПредмета = "Справочник.ИсходящиеДокументы")
			И (ТипШаблонДокумента = Тип("СправочникСсылка.ШаблоныВнутреннихДокументов")
					Или ТипШаблонДокумента = Тип("СправочникСсылка.ШаблоныВходящихДокументов")
					Или ТипШаблонДокумента = Тип("СправочникСсылка.ШаблоныИсходящихДокументов"))
			И (ТипПредметОснование = Тип("СправочникСсылка.ВнутренниеДокументы")
					Или ТипПредметОснование = Тип("СправочникСсылка.ВходящиеДокументы")
					Или ТипПредметОснование = Тип("СправочникСсылка.ИсходящиеДокументы")) Тогда
					
			ПараметрыФормы.Вставить("ЗаполнятьРеквизитыДоСоздания", Истина);
			
			Основание = Новый Структура;
			Основание.Вставить("Основание", ПредметОснование);
			Основание.Вставить("ШаблонДокумента", ШаблонДокумента);
			ПараметрыФормы.Вставить("Основание", Основание);
		Иначе
			ПараметрыФормы.Вставить("Основание", ПредметОснование);
		КонецЕсли;
	КонецЕсли;
	
	ПараметрыОбработчика = Новый Структура();
	ПараметрыОбработчика.Вставить("СсылкаНаОбъект", Неопределено);
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"СоздатьПредметПродолжениеПослеСозданияПредмета",
		ЭтотОбъект,
		ПараметрыОбработчика);
	
	ОткрытьФорму(
		Параметры.ИмяФормыОбъекта, 
		ПараметрыФормы, 
		ЭтаФорма,,,, 
		ОписаниеОповещения, 
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьПредметПродолжениеПослеСозданияПредмета(Результат, Параметры) Экспорт
	
	Если Не ЗначениеЗаполнено(Параметры.СсылкаНаОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыДобавления = Новый Структура;
	УстановитьПредмет(Параметры.СсылкаНаОбъект, ПараметрыДобавления);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьПредметИзСписка(Команда)
	
	ИмяФормыВыбора = ТипПредмета + ".ФормаВыбора";
	ПараметрыФормы = Новый Структура;
	ОткрытьФорму(ИмяФормыВыбора, ПараметрыФормы, ЭтаФорма);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура УстановитьРеквизитыЗаполнения()
	
	ПредметыПроцесса = Мультипредметность.ПолучитьПредметыПроцесса(БизнесПроцесс);
	СтрокиТекущегоИмени = ПредметыПроцесса.НайтиСтроки(Новый Структура("ИмяПредмета",ИмяПредмета));
	Если СтрокиТекущегоИмени.Количество() > 0 Тогда
		Если ЗначениеЗаполнено(СтрокиТекущегоИмени[0].ШаблонОснование) Тогда
			ШаблонДокумента = СтрокиТекущегоИмени[0].ШаблонОснование;
		КонецЕсли;
		СтрокиОснования = ПредметыПроцесса.НайтиСтроки(Новый Структура("ИмяПредмета",СтрокиТекущегоИмени[0].ИмяПредметаОснование));
		Если СтрокиОснования.Количество() > 0 Тогда
			ИмяПредметаОснование = СтрокиТекущегоИмени[0].ИмяПредметаОснование;
			ПредметОснование = СтрокиОснования[0].Предмет;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьЗаголовкиПодсказок()
	
	ЗаголовокСоздать = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = 'Создать %1'; en = 'Create %1'"),
		НРег(ТипПредметаПредставление));
	Если ЗначениеЗаполнено(ШаблонДокумента) Тогда
		ЗаголовокСоздать = ЗаголовокСоздать + " " 
			+ СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'по шаблону ""%1""'; en = 'using template ""%1""'"), Строка(ШаблонДокумента));
	КонецЕсли;
	Если ЗначениеЗаполнено(ПредметОснование) Тогда
		ЗаголовокСоздать = ЗаголовокСоздать + " " 
			+ СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'на основании предмета ""%1""'; en = 'based on subject ""%1""'"), Строка(ИмяПредметаОснование));
	КонецЕсли;
	ЗаголовокСоздать = ЗаголовокСоздать + ".";
	
	Элементы.СоздатьПодсказка.Заголовок = ЗаголовокСоздать;
	
	ЗаголовокВыбрать = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = 'Выбрать существующий %1 из списка.'; en = 'Select an existing %1 from the list.'"),
		НРег(ТипПредметаПредставление));
		
	Элементы.ВыбратьИзСпискаПодсказка.Заголовок = ЗаголовокВыбрать;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьПредмет(НовыйПредмет, ПараметрыДобавления)
	
	Предмет = НовыйПредмет;
	
	Если ЗначениеЗаполнено(Предмет) Тогда
		
		Если Не ЗначениеЗаполнено(ИмяПредмета) Тогда
			ИмяНовогоПредмета = МультипредметностьВызовСервера.ПолучитьСсылкуНаИмяПредметаПоСсылкеНаПредмет(Предмет, ИменаПредметов);
		Иначе
			ИмяНовогоПредмета = ИмяПредмета;
		КонецЕсли;
		
		Если РаботаСРабочимиГруппами.ПоОбъектуВедетсяАвтоматическоеЗаполнениеРабочейГруппы(Предмет)
			И Не ПараметрыДобавления.Свойство("ПолученОтветНаВопросОДобавлении") Тогда
			
			СписокКнопок = Новый СписокЗначений;
			СписокКнопок.Добавить(Истина, НСтр("ru = 'Добавить'; en = 'Add'"));
			СписокКнопок.Добавить(Ложь, НСтр("ru = 'Отмена'; en = 'Cancel'"));
			
			ТекстВопроса = НСтр("ru = 'Внимание!
				|%1""%2"" станет доступен всем участникам этого процесса.
				|Добавить%3?';
				|en = 'Attention!
				|%1""%2"" will become accessible to to all the participants of the process.
				|Add%3?'");
			
			ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстВопроса,
				?(ЗначениеЗаполнено(ИмяНовогоПредмета), Строка(ИмяНовогоПредмета) + " ", ""),
				Предмет,
				?(ЗначениеЗаполнено(ИмяНовогоПредмета), НРег(" " + ИмяНовогоПредмета), ""));
			
			ПараметрыОбработчика = Новый Структура;
			ПараметрыОбработчика.Вставить("НовыйПредмет", НовыйПредмет);
			ПараметрыОбработчика.Вставить("ПараметрыДобавления", ПараметрыДобавления);
			ОписаниеОповещения = Новый ОписаниеОповещения(
				"УстановитьПредметПродолжение",
				ЭтотОбъект,
				ПараметрыОбработчика);
				
			ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, СписокКнопок);
			Возврат;			
		КонецЕсли;
		
	КонецЕсли;
	
	Результат = Новый Структура;
	Результат.Вставить("Предмет", Предмет);
	Результат.Вставить("ТипПредмета", ТипПредмета);
	Результат.Вставить("ИмяПредмета", ИмяНовогоПредмета);
	
	Закрыть(Результат);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьПредметПродолжение(Результат, Параметры) Экспорт
	
	Если Результат <> Истина Тогда
		Возврат;
	КонецЕсли;
	
	Параметры.ПараметрыДобавления.Вставить("ПолученОтветНаВопросОДобавлении", Истина);
	УстановитьПредмет(Параметры.НовыйПредмет, Параметры.ПараметрыДобавления);
		
КонецПроцедуры

&НаСервере
Процедура УстановитьКоличествоДоступныхШаблоновДокументов()
	
	КоличествоДоступныхШаблоновДокументов = Новый Структура;
	
	Если ПравоДоступа("Чтение", Метаданные.Справочники.ШаблоныВнутреннихДокументов) Тогда
		ЗапросКолВнутр = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ Шаблоны.Код ИЗ Справочник.ШаблоныВнутреннихДокументов КАК Шаблоны");
		КоличествоДоступныхШаблоновДокументов.Вставить("ВнутренниеДокументы", ЗапросКолВнутр.Выполнить().Выбрать().Количество());
	КонецЕсли;
	
	Если ПравоДоступа("Чтение", Метаданные.Справочники.ШаблоныВходящихДокументов) Тогда
		ЗапросКолВход = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ Шаблоны.Код ИЗ Справочник.ШаблоныВходящихДокументов КАК Шаблоны");
		КоличествоДоступныхШаблоновДокументов.Вставить("ВходящиеДокументы", ЗапросКолВход.Выполнить().Выбрать().Количество());
	КонецЕсли;
	
	Если ПравоДоступа("Чтение", Метаданные.Справочники.ШаблоныИсходящихДокументов) Тогда
		ЗапросКолИсх = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ Шаблоны.Код ИЗ Справочник.ШаблоныИсходящихДокументов  КАК Шаблоны");
		КоличествоДоступныхШаблоновДокументов.Вставить("ИсходящиеДокументы", ЗапросКолИсх.Выполнить().Выбрать().Количество());
	КонецЕсли;
	
КонецПроцедуры


