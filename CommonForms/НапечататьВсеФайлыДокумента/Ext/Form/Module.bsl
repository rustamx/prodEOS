////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если Не Параметры.Свойство("МассивВладельцев") Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	СписокВладельцев = Новый СписокЗначений;
	СписокВладельцев.ЗагрузитьЗначения(Параметры.МассивВладельцев);
	
	ДоступныеТипыСвязей = СвязиДокументов.ПолучитьАктуальныеТипыСвязейДокументов(Параметры.МассивВладельцев);
	
	НастройкиФормы = ОбщегоНазначения.ХранилищеСистемныхНастроекЗагрузить(ИмяФормы + "/ТекущиеДанные", "");
	Если НастройкиФормы = Неопределено Тогда
		ЗаполнитьСписокФайлов();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	#Если ВебКлиент Тогда 
		ПоказатьПредупреждение(, НСтр("ru = 'В Веб-клиенте печать файлов не поддерживается.'; en = 'Printing files is not supported in web client.'"));
		Отказ = Истина;
		Возврат;
	#КонецЕсли
	
	СистемнаяИнфо = Новый СистемнаяИнформация;
	Если СистемнаяИнфо.ТипПлатформы <> ТипПлатформы.Windows_x86 
	   И СистемнаяИнфо.ТипПлатформы <> ТипПлатформы.Windows_x86_64 Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Печать файлов возможна только в Windows.'; en = 'Printing files is only possible in Windows.'"));
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	РазвернутьСписокФайлов();
	
	Если Не ВключатьСвязанныеДокументы Тогда 
		Элементы.ТипыСвязей.ТолькоПросмотр = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	ЗаполнитьСписокФайлов();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

&НаКлиенте
Процедура СписокФайловДляВыбораВыгружатьПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.СписокФайловДляВыбора.ТекущиеДанные;
	Если ТекущиеДанные.ЭтоРодитель Тогда 
		Выгружать = ТекущиеДанные.Выгружать;
		СтрокаДерева = СписокФайловДляВыбора.НайтиПоИдентификатору(
			Элементы.СписокФайловДляВыбора.ТекущаяСтрока);
		Для Каждого Строка Из СтрокаДерева.ПолучитьЭлементы() Цикл
			Строка.Выгружать = Выгружать;
		КонецЦикла;	
	КонецЕсли;	
	
	КоличествоВыбранныхФайлов = ПолучитьКоличествоВыбранныхФайлов(СписокФайловДляВыбора);
	
КонецПроцедуры

&НаКлиенте
Процедура ТолькоОригиналыПриИзменении(Элемент)
	
	ЗаполнитьСписокФайлов();
	РазвернутьСписокФайлов();
	
КонецПроцедуры

&НаКлиенте
Процедура ВключатьСвязанныеДокументыПриИзменении(Элемент)
	
	Если ВключатьСвязанныеДокументы Тогда 
		Элементы.ТипыСвязей.ТолькоПросмотр = Ложь;
	Иначе	
		Элементы.ТипыСвязей.ТолькоПросмотр = Истина;
		ТипыСвязей.Очистить();
	КонецЕсли;
	
	ЗаполнитьСписокФайлов();
	РазвернутьСписокФайлов();
	
КонецПроцедуры

&НаКлиенте
Процедура ТипыСвязейНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ВыбранныеТипыСвязей", ТипыСвязей.ВыгрузитьЗначения());
	ПараметрыФормы.Вставить("ДоступныеТипыСвязей", ДоступныеТипыСвязей.ВыгрузитьЗначения());
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"ТипыСвязейНачалоВыбораПродолжение",
		ЭтотОбъект);
	
	ОткрытьФорму("Справочник.ТипыСвязей.Форма.ФормаПодбора", 
		ПараметрыФормы, 
		ЭтаФорма,,,,
		ОписаниеОповещения,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
КонецПроцедуры

&НаКлиенте
Процедура ТипыСвязейНачалоВыбораПродолжение(Результат, Параметры) Экспорт 

	Если ТипЗнч(Результат) = Тип("Массив") Тогда 
		ТипыСвязей.ЗагрузитьЗначения(Результат);
		
		ЗаполнитьСписокФайлов();
		РазвернутьСписокФайлов();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокФайловНаименованиеОткрытие(Элемент, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.СписокФайловДляВыбора.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;	
	
	ПоказатьЗначение(, ТекущиеДанные.Файл);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокФайловДляВыбораВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле = Элементы.СписокФайловНаименование Тогда 
		СтандартнаяОбработка = Ложь;
		
		ДанныеСтроки = СписокФайловДляВыбора.НайтиПоИдентификатору(ВыбраннаяСтрока);
		Если ДанныеСтроки.ЭтоРодитель Тогда 
			ПоказатьЗначение(, ДанныеСтроки.ВладелецФайла);
		Иначе
			ПоказатьЗначение(, ДанныеСтроки.Файл);
		КонецЕсли;	
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура СписокФайловДляВыбораПередНачаломИзменения(Элемент, Отказ)
	
	Поле = Элементы.СписокФайловДляВыбора.ТекущийЭлемент;
	Если Поле = Элементы.СписокФайловНаименование Тогда 
		Отказ = Истина;
		
		ТекущиеДанные = Элементы.СписокФайловДляВыбора.ТекущиеДанные;
		Если ТекущиеДанные = Неопределено Тогда 
			Возврат;
		КонецЕсли;	
		
		Если ТекущиеДанные.ЭтоРодитель Тогда 
			ПоказатьЗначение(, ТекущиеДанные.ВладелецФайла);
		Иначе
			ПоказатьЗначение(, ТекущиеДанные.Файл);
		КонецЕсли;	
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура Напечатать(Команда)
	
	ОчиститьСообщения();
	
	#Если ВебКлиент Тогда 
		ПоказатьПредупреждение(, НСтр("ru = 'В Веб-клиенте печать файлов не поддерживается.'; en = 'Printing files is not supported in web client.'"));
		Возврат;
	#КонецЕсли
	
	СистемнаяИнфо = Новый СистемнаяИнформация;
	Если СистемнаяИнфо.ТипПлатформы <> ТипПлатформы.Windows_x86 
	   И СистемнаяИнфо.ТипПлатформы <> ТипПлатформы.Windows_x86_64 Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Печать файлов возможна только в Windows.'; en = 'Printing files is only possible in Windows.'"));
		Возврат;
	КонецЕсли;
	
	КоличествоВыбранныхФайлов = ПолучитьКоличествоВыбранныхФайлов(СписокФайловДляВыбора);
	Если КоличествоВыбранныхФайлов = 0 Тогда 
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru = 'Не выбраны файлы для печати'; en = 'Not selected files for printing'"),, "СписокФайловДляВыбора");
		Возврат;
	КонецЕсли;	
	
	МассивФайлов = Новый Массив;
	Для Каждого СтрокаРодитель Из СписокФайловДляВыбора.ПолучитьЭлементы() Цикл
		Для Каждого ДанныеСтроки Из СтрокаРодитель.ПолучитьЭлементы() Цикл
			Если ДанныеСтроки.Выгружать Тогда
				МассивФайлов.Добавить(ДанныеСтроки.Файл);
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;	
	
	ДанныеФайлов = РаботаСФайламиВызовСервера.ДанныеФайловДляОткрытия(
		МассивФайлов, 
		ЭтаФорма.УникальныйИдентификатор);
			
	КомандыРаботыСФайламиКлиент.НапечататьФайлы(ДанныеФайлов);
	
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыделитьВсе(Команда)
	
	Для Каждого Строка1 Из СписокФайловДляВыбора.ПолучитьЭлементы() Цикл
		Строка1.Выгружать = Истина;
		Для Каждого Строка2 Из Строка1.ПолучитьЭлементы() Цикл
			Строка2.Выгружать = Истина;
		КонецЦикла;	
	КонецЦикла;
	
	КоличествоВыбранныхФайлов = ПолучитьКоличествоВыбранныхФайлов(СписокФайловДляВыбора);
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьВыделение(Команда)
	
	Для Каждого Строка1 Из СписокФайловДляВыбора.ПолучитьЭлементы() Цикл
		Строка1.Выгружать = Ложь;
		Для Каждого Строка2 Из Строка1.ПолучитьЭлементы() Цикл
			Строка2.Выгружать = Ложь;
		КонецЦикла;	
	КонецЦикла;
	
	КоличествоВыбранныхФайлов = ПолучитьКоличествоВыбранныхФайлов(СписокФайловДляВыбора);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Заполняет список файлов для печати
//
&НаСервере
Процедура ЗаполнитьСписокФайлов()
	
	ВладельцыФайлов = Новый Массив;
	Для Каждого Строка Из СписокВладельцев Цикл
		ВладельцыФайлов.Добавить(Строка.Значение);
	КонецЦикла;
	
	Если ВключатьСвязанныеДокументы Тогда 
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	СвязиДокументов.СвязанныйДокумент,
		|	СвязиДокументов.Комментарий,
		|	СвязиДокументов.Установил,
		|	СвязиДокументов.ДатаУстановки
		|ИЗ
		|	РегистрСведений.СвязиДокументов КАК СвязиДокументов
		|ГДЕ
		|	СвязиДокументов.Документ В(&Документы)";
		Запрос.УстановитьПараметр("Документы", ВладельцыФайлов);
		
		Если ТипыСвязей.Количество() > 0 Тогда 
			Запрос.Текст = Запрос.Текст + " И СвязиДокументов.ТипСвязи В (&ТипыСвязей) ";
			Запрос.УстановитьПараметр("ТипыСвязей", ТипыСвязей.ВыгрузитьЗначения());
		КонецЕсли;	
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			ВладельцыФайлов.Добавить(Выборка.СвязанныйДокумент);
		КонецЦикла;	
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Файлы.ТекущаяВерсия,
	|	Файлы.ПолноеНаименование КАК ПолноеНаименование,
	|	Файлы.ТекущаяВерсия.Расширение КАК Расширение,
	|	Файлы.ТекущаяВерсия.Размер КАК Размер,
	|	Файлы.Ссылка КАК Файл,
	|	Файлы.ПометкаУдаления,
	|	Файлы.ВладелецФайла КАК ВладелецФайла,
	|	ТИПЗНАЧЕНИЯ(Файлы.ВладелецФайла) КАК ТипВладельца,
	|	Файлы.ИндексКартинки,
	|	ЕСТЬNULL(СведенияОФайлах.ЯвляетсяОригиналом, ЛОЖЬ) КАК ЯвляетсяОригиналом,
	|	ЛОЖЬ КАК ЭтоРодитель,
	|	ИСТИНА КАК Выгружать
	|ИЗ
	|	Справочник.Файлы КАК Файлы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОФайлах КАК СведенияОФайлах
	|		ПО (СведенияОФайлах.Файл = Файлы.Ссылка)
	|ГДЕ
	|	Файлы.ВладелецФайла В(&ВладельцыФайлов)
	|	И Файлы.ТекущаяВерсия <> ЗНАЧЕНИЕ(Справочник.ВерсииФайлов.ПустаяСсылка)
	|	И НЕ Файлы.ПометкаУдаления";
	
	Если ТолькоОригиналы И ПолучитьФункциональнуюОпцию("ВестиУчетСканКопийОригиналовДокументов") Тогда 
		Запрос.Текст = Запрос.Текст + " И СведенияОФайлах.ЯвляетсяОригиналом = ИСТИНА ";
	КонецЕсли;
	Запрос.Текст = Запрос.Текст + " ИТОГИ ПО ВладелецФайла ";
	
	Запрос.Параметры.Вставить("ВладельцыФайлов", ВладельцыФайлов);
	
	ДеревоФайлов = РеквизитФормыВЗначение("СписокФайловДляВыбора");
	ДеревоФайлов.Строки.Очистить();
	
	ВыборкаИтоги = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаИтоги.Следующий() цикл
		СтрокаРодитель = ДеревоФайлов.Строки.Добавить();
		СтрокаРодитель.ИндексКартинки = -1;
		СтрокаРодитель.ПолноеНаименование = Строка(ВыборкаИтоги.ВладелецФайла);
		СтрокаРодитель.ВладелецФайла = ВыборкаИтоги.ВладелецФайла;
		СтрокаРодитель.ЭтоРодитель = Истина;
		СтрокаРодитель.Выгружать = Истина;
		
		ВыборкаДетали = ВыборкаИтоги.Выбрать();
		Пока ВыборкаДетали.Следующий() Цикл
			НоваяСтрока = СтрокаРодитель.Строки.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаДетали);
		КонецЦикла;	
	КонецЦикла;	
	
	ЗначениеВРеквизитФормы(ДеревоФайлов, "СписокФайловДляВыбора");
	
	КоличествоВыбранныхФайлов = ПолучитьКоличествоВыбранныхФайлов(СписокФайловДляВыбора);
	
КонецПроцедуры

// Разворачивает дерево файлов
//
&НаКлиенте
Процедура РазвернутьСписокФайлов()
	
	Для Каждого Элемент Из СписокФайловДляВыбора.ПолучитьЭлементы() Цикл
		Элементы.СписокФайловДляВыбора.Развернуть(Элемент.получитьИдентификатор(), Истина);
	КонецЦикла;
	
КонецПроцедуры	

// Возвращает количество выбранных для печати файлов
//
// Параметры
//    Дерево - ДанныеФормыДерево - дерево файлов
//
// Возвращаемое значение
//    Число - количество выбранных файлов
//
&НаКлиентеНаСервереБезКонтекста
Функция ПолучитьКоличествоВыбранныхФайлов(Дерево)
	
	КоличествоВыбранныхФайлов = 0;
	
	Для Каждого Строка1 Из Дерево.ПолучитьЭлементы() Цикл
		Для Каждого Строка2 Из Строка1.ПолучитьЭлементы() Цикл
			Если Строка2.Выгружать Тогда
				КоличествоВыбранныхФайлов = КоличествоВыбранныхФайлов + 1;
			КонецЕсли;
		КонецЦикла;	
	КонецЦикла;
	
	Возврат КоличествоВыбранныхФайлов;
	
КонецФункции

