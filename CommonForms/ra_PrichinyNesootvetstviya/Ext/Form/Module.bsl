
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Несоответствие = Параметры.Несоответствие;
	
	ЗаполнитьДеревоПричинНаСервере();
	
	УстановитьУсловноеОформлениеНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура НесоответствиеПриИзменении(Элемент)
	
	ЗаполнитьДеревоПричинНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыДеревоПричин

&НаКлиенте
Процедура ДеревоПричинВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле = Элементы.ДеревоПричинKorrektiruyushcheeDejstvie Тогда
		Если Элемент.ТекущиеДанные.KorennayaPrichina Тогда
			Если ЗначениеЗаполнено(Элемент.ТекущиеДанные.KorrektiruyushcheeDejstvie) Тогда
				ПараметрыФормы = Новый Структура;
				ПараметрыФормы.Вставить("Ключ", Элемент.ТекущиеДанные.KorrektiruyushcheeDejstvie);
				
				ОткрытьФорму("Документ.ra_KorrektiruyushcheeDejstvie.ФормаОбъекта", ПараметрыФормы, Поле);
			Иначе
				ЗначенияЗаполнения = Новый Структура;
				ЗначенияЗаполнения.Вставить("Nesootvetstvie", Несоответствие);
				ЗначенияЗаполнения.Вставить("KodPrichiny", Элемент.ТекущиеДанные.KodPrichiny);
				ЗначенияЗаполнения.Вставить("OpisaniePrichiny", Элемент.ТекущиеДанные.Opisanie);
				
				ПараметрыФормы = Новый Структура;
				ПараметрыФормы.Вставить("ЗначенияЗаполнения", ЗначенияЗаполнения);
				
				ОткрытьФорму("Документ.ra_KorrektiruyushcheeDejstvie.ФормаОбъекта", ПараметрыФормы, Элемент,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоПричинПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Если Элемент.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Отказ = Элемент.ТекущиеДанные.List И Элемент.ТекущиеДанные.KorennayaPrichina Или ЗначениеЗаполнено(Элемент.ТекущиеДанные.KorrektiruyushcheeDejstvie);
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоПричинПередУдалением(Элемент, Отказ)
	
	Отказ = ЗначениеЗаполнено(Элемент.ТекущиеДанные.KorrektiruyushcheeDejstvie);
	
	ТекущиеДанныеКодПричины = Элемент.ТекущиеДанные.KodPrichiny;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоПричинПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
		КодПричины = КодПричины + 1;
		
		Родитель = Элемент.ТекущиеДанные.ПолучитьРодителя();
		
		Если Родитель <> Неопределено Тогда
			Элемент.ТекущиеДанные.KodPrichinyRoditel = Родитель.KodPrichiny;
		КонецЕсли;
		
		Элемент.ТекущиеДанные.Nesootvetstvie = Несоответствие;
		Элемент.ТекущиеДанные.Opisanie = "";
		Элемент.ТекущиеДанные.List = Истина;
		Элемент.ТекущиеДанные.KodPrichiny = КодПричины;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоПричинПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Если НЕ ОтменаРедактирования Тогда
		Если НоваяСтрока Тогда
			Родитель = Элемент.ТекущиеДанные.ПолучитьРодителя();
			Если Родитель <> Неопределено Тогда
				Родитель.List = Ложь;
			КонецЕсли;
		КонецЕсли;
		
		ТекущиеДанные = Новый Структура("Nesootvetstvie,KodPrichiny,KodPrichinyRoditel,TipPrichiny,Opisanie,KorennayaPrichina");
		ЗаполнитьЗначенияСвойств(ТекущиеДанные, Элемент.ТекущиеДанные);
		
		ЗаписатьДанныеНаСервере(ТекущиеДанные);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоПричинПослеУдаления(Элемент)
	
	УдалитьДанныеНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоПричинОбработкаЗаписиНового(НовыйОбъект, Источник, СтандартнаяОбработка)
	
	НоваяСтрока = Элементы.ДеревоПричин.ТекущиеДанные.ПолучитьЭлементы().Добавить();
	НоваяСтрока.KorrektiruyushcheeDejstvie = НовыйОбъект.Ссылка;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ДобавитьСтрокиВДеревоПричинНаСервере(ТекущиеДанные, Родитель, КодПричиныРодитель, УдалятьЛишниеСтроки)
	
	ЭлементыДереваРодителя = Родитель.ПолучитьЭлементы();
	Для каждого ТекущаяСтрока Из ТекущиеДанные.Строки Цикл
		//Если УдалятьЛишниеСтроки И НЕ ЗначениеЗаполнено(ТекущаяСтрока.KorrektiruyushcheeDejstvie) И
		//	 ТекущаяСтрока.TipPrichiny = Родитель.TipPrichiny Тогда
		//	Продолжить;
		//КонецЕсли;
		
		НовыйЭлемент = ЭлементыДереваРодителя.Добавить();
		ЗаполнитьЗначенияСвойств(НовыйЭлемент, ТекущаяСтрока);
		НовыйЭлемент.Nesootvetstvie = Несоответствие;
		Если НЕ ЗначениеЗаполнено(НовыйЭлемент.KodPrichinyRoditel) Тогда
			НовыйЭлемент.KodPrichinyRoditel = КодПричиныРодитель;
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(НовыйЭлемент.KodPrichiny) Тогда
			Если ТекущаяСтрока.KodPrichiny = Неопределено Тогда
				НовыйЭлемент.KodPrichiny = НовыйЭлемент.KodPrichinyRoditel;
			Иначе
				КодПричины = КодПричины + 1;
				
				НовыйЭлемент.KodPrichiny = КодПричины;
			КонецЕсли;
		Иначе
			КодПричины = Макс(КодПричины, НовыйЭлемент.KodPrichiny);
		КонецЕсли;
		Если ЗначениеЗаполнено(ТекущаяСтрока.KorrektiruyushcheeDejstvie) Тогда
			НовыйЭлемент.List = Ложь;
		Иначе
			НовыйЭлемент.List = Не ТекущаяСтрока.Строки.Количество() Или ТекущаяСтрока.KorennayaPrichina = Истина;
		КонецЕсли;
		
		ДобавитьСтрокиВДеревоПричинНаСервере(ТекущаяСтрока, НовыйЭлемент, НовыйЭлемент.KodPrichiny, УдалятьЛишниеСтроки);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьДанныеНаСервере(Данные)
	
	НаборЗаписей = РегистрыСведений.ra_PrichinyNesootvetstvij.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Nesootvetstvie.Установить(Данные.Nesootvetstvie);
	НаборЗаписей.Отбор.KodPrichiny.Установить(Данные.KodPrichiny);
	ЗаполнитьЗначенияСвойств(НаборЗаписей.Добавить(), Данные);
	НаборЗаписей.Записать();
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьДеревоПричинНаСервере(Коллекция, НаборЗаписей = Неопределено)
	
	Если НаборЗаписей = Неопределено Тогда
		НаборЗаписей = РегистрыСведений.ra_PrichinyNesootvetstvij.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Nesootvetstvie.Установить(Несоответствие);
		
		ЗаписыватьНаборЗаписей = Истина;
	Иначе
		ЗаписыватьНаборЗаписей = Ложь;
	КонецЕсли;
	
	Для каждого Элемент Из Коллекция Цикл
		ЗаполнитьЗначенияСвойств(НаборЗаписей.Добавить(), Элемент);
		
		ЗаписатьДеревоПричинНаСервере(Элемент.ПолучитьЭлементы(), НаборЗаписей);
	КонецЦикла;
	
	Если ЗаписыватьНаборЗаписей Тогда
		НаборЗаписей.Записать();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДеревоПричинНаСервере()
	
	ВременноеДерево = РегистрыСведений.ra_PrichinyNesootvetstvij.ПрочитатьДеревоПричинНаСервере(Несоответствие, "");
	
	КодПричины = "";
	
	ДеревоПричин.ПолучитьЭлементы().Очистить();
	
	ДобавитьСтрокиВДеревоПричинНаСервере(ВременноеДерево, ДеревоПричин, "", Ложь);
	
КонецПроцедуры

&НаСервере
Процедура УдалитьДанныеНаСервере()
	
	ВременноеДерево = РегистрыСведений.ra_PrichinyNesootvetstvij.ПрочитатьДеревоПричинНаСервере(Несоответствие, ТекущиеДанныеКодПричины);
	
	УдалитьСтрокиДереваПричинНаСервере(ВременноеДерево.Строки);
	
	НаборЗаписей = РегистрыСведений.ra_PrichinyNesootvetstvij.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Nesootvetstvie.Установить(Несоответствие);
	НаборЗаписей.Отбор.KodPrichiny.Установить(ТекущиеДанныеКодПричины);
	НаборЗаписей.Записать();
	
КонецПроцедуры

&НаСервере
Процедура УдалитьСтрокиДереваПричинНаСервере(Строки)
	
	Для каждого ТекущаяСтрока Из Строки Цикл
		НаборЗаписей = РегистрыСведений.ra_PrichinyNesootvetstvij.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Nesootvetstvie.Установить(Несоответствие);
		НаборЗаписей.Отбор.KodPrichiny.Установить(ТекущаяСтрока.KodPrichiny);
		НаборЗаписей.Записать();
		
		УдалитьСтрокиДереваПричинНаСервере(ТекущаяСтрока.Строки);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформлениеНаСервере()
	
	УсловноеОформление.Элементы.Очистить();
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ДеревоПричинKorrektiruyushcheeDejstvie.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ДеревоПричин.KorennayaPrichina");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ДеревоПричин.KorrektiruyushcheeDejstvie");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru = '<ввести корректирующее действие>'"));
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ДеревоПричинKorennayaPrichina.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ДеревоПричин.List");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Ложь;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	
КонецПроцедуры

#КонецОбласти
