#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Параметры.Проект) Тогда 
		
		ТекущаяПапка = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Параметры.Проект, "Папка");
		Элементы.Папки.ТекущаяСтрока = ТекущаяПапка;
		
		ТекущийПроект = Параметры.Проект;
		Элементы.Проекты.ТекущаяСтрока = ТекущийПроект;
		
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ПроектныеЗадачи.Отбор,
			"Владелец",
			ТекущийПроект);
				
		Если ЗначениеЗаполнено(Параметры.ПроектнаяЗадача) Тогда 
			Элементы.ПроектныеЗадачи.ТекущаяСтрока = Параметры.ПроектнаяЗадача;
		КонецЕсли;
		
	Иначе
		
		ТекущаяПапка = Справочники.ПапкиПроектов.ПустаяСсылка();
		Элементы.Папки.ТекущаяСтрока = ТекущаяПапка;
		
	КонецЕсли;
	
	ВыбиратьТолькоПроектнуюЗадачу = Параметры.ВыбиратьТолькоПроектнуюЗадачу;
	Если ВыбиратьТолькоПроектнуюЗадачу Тогда 
		ЭтаФорма.Заголовок = НСтр("ru = 'Выбор проектной задачи'; en = 'Project task selection'");
	КонецЕсли;
	
	ТекущийПользователь = ПользователиКлиентСервер.ТекущийПользователь();
	Проекты.Параметры.УстановитьЗначениеПараметра("ТекущийПользователь", ТекущийПользователь);
		
	Если РольДоступна("КонтрольПроектов") Или РаботаСПроектами.НетСвоихПроектов(ТекущийПользователь) Тогда 
		ВидПросмотра = Перечисления.ВидыПросмотраСпискаОбъектов.ПоПапкам;
		ТолькоМоиПроекты = Ложь;
	Иначе
		ВидПросмотра = Перечисления.ВидыПросмотраСпискаОбъектов.Списком;
		ТолькоМоиПроекты = Истина;
	КонецЕсли;	
	
	ПереключитьВидПросмотра(ТекущаяПапка);
	ПереключитьОтборПоПроектам();
	
	ПоказыватьУдаленные = Ложь;
	ПоказатьУдаленные();
	
	Если РольДоступна("ПолныеПрава") Тогда 
		Элементы.Папки.ОтображатьКорень = Истина;
	Иначе	
		Элементы.Папки.ОтображатьКорень = Ложь;
	КонецЕсли;
	
	СохранениеВводимыхЗначений.ЗагрузитьСписокВыбора(ЭтаФорма, "СтрокаПоиска");
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	ВидПросмотра = Настройки["ВидПросмотра"];
	Если Не ЗначениеЗаполнено(ВидПросмотра) Тогда
		ВидПросмотра = Перечисления.ВидыПросмотраСпискаОбъектов.ПоПапкам;
	КонецЕсли;
	
	ТекущаяПапка = Настройки["ТекущаяПапка"];
	Элементы.Папки.ТекущаяСтрока = ТекущаяПапка;
	
	ПереключитьВидПросмотра(ТекущаяПапка);
	
	ПоказыватьУдаленные = Настройки["ПоказыватьУдаленные"];
	ПоказатьУдаленные();
	
	ТолькоМоиПроекты = Настройки["ТолькоМоиПроекты"];
	ПереключитьОтборПоПроектам();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ТолькоМоиПроектыПриИзменении(Элемент)
	
	ПереключитьОтборПоПроектам();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Работа с поиском

&НаКлиенте
Процедура СтрокаПоискаПриИзменении(Элемент)

	Если ЗначениеЗаполнено(СтрокаПоиска) Тогда
		
		СтрокаПоиска = СокрЛП(СтрокаПоиска);
	
		Если СтрДлина(СтрокаПоиска) < 3 И СтрокаПоиска <> "*" И СтрокаПоиска <> "**" Тогда			
			ЭтаФорма.ТекущийЭлемент = Элементы.СтрокаПоиска;
			ЭтаФорма.Активизировать();
			ПоказатьПредупреждение(, НСтр("ru = 'Необходимо ввести минимум 3 символа'; en = 'You must enter at least 3 characters'"));
			Возврат;
		КонецЕсли;
			
		СохранениеВводимыхЗначенийКлиент.ОбновитьСписокВыбора(ЭтаФорма, "СтрокаПоиска", 10);
		ПустойРезультатПоиска = Ложь;
		
		НайтиПроектыИПроектныеЗадачи();
		ПустойРезультатПоиска = ДеревоПроектов.ПолучитьЭлементы().Количество() = 0;
		
		Если ПустойРезультатПоиска Тогда
			ТекущийЭлемент = Элементы.СтрокаПоиска;
			УстановитьВидимостьРезультатаПоискаКонтрагентов(Ложь);
			ПоказатьПредупреждение(, НСтр("ru = 'По вашему запросу ничего не найдено'; en = 'Nothing found for your request'"));
		Иначе
			ТекущийЭлемент = Элементы.ДеревоПроектов;
			УстановитьВидимостьРезультатаПоискаКонтрагентов(Истина);		
			РазвернутьДерево("ДеревоПроектов");	
		КонецЕсли;
		
		ПоискВключен = Истина;
	Иначе
		Если ПоискВключен Тогда
			ОчиститьПоиск();
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура СтрокаПоискаОчистка(Элемент, СтандартнаяОбработка)
	
	СтрокаПоиска = Неопределено;
	ОчиститьПоиск();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписокПроекты

&НаКлиенте
Процедура ПроектыПриАктивизацииСтроки(Элемент)
	
	Если ПерваяАктивизация = Неопределено Или ПерваяАктивизация Тогда
		ПерваяАктивизация = Ложь;
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные = Элементы.Проекты.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда 
		ТекущийПроект = Неопределено;
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ПроектныеЗадачи.Отбор,
			"Владелец",
			ТекущийПроект);
		Возврат;
	КонецЕсли;
	
	ПодключитьОбработчикОжидания("ОбработкаОжиданияПроекты", 0.2, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ПроектыВыборЗначения(Элемент, Значение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если ВыбиратьТолькоПроектнуюЗадачу Тогда 
		Возврат;
	КонецЕсли;	
	
	ТекущиеДанные = Элементы.Проекты.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	Если ТекущиеДанные.ЭтоГруппа Тогда 
		ПоказатьПредупреждение(, НСтр("ru = 'Выберите элемент, а не группу!'; en = 'Select an item, not a group!'"));
		Возврат;
	КонецЕсли;
	
	ВыбранноеЗначение = Новый Структура("Проект, ПроектнаяЗадача, ЕстьПроектныеЗадачи", 
		ТекущиеДанные.Ссылка,
		Неопределено,
		ТекущиеДанные.ЕстьПроектныеЗадачи);
		
	ОповеститьОВыборе(ВыбранноеЗначение);
	Оповестить("ВыбранПроектИлиПроектнаяЗадача", ВыбранноеЗначение);
	
КонецПроцедуры

&НаКлиенте
Процедура ПапкиПриАктивизацииСтроки(Элемент)
	
	ПодключитьОбработчикОжидания("ОбработкаОжиданияПапки", 0.2, Истина);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписокДеревоПроектов

&НаКлиенте
Процедура ДеревоПроектовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.ДеревоПроектов.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	Если ВыбиратьТолькоПроектнуюЗадачу Тогда 
		Если Не ТекущиеДанные.ЭтоЗадача Тогда 
			Возврат;
		КонецЕсли;
		
		ВыбранноеЗначение = ТекущиеДанные.Ссылка;
	Иначе
		ВыбранноеЗначение = Новый Структура("Проект, ПроектнаяЗадача, ЕстьПроектныеЗадачи", 
			ТекущиеДанные.Владелец, 
			ТекущиеДанные.Ссылка,
			Истина);
	КонецЕсли;
	
	ОповеститьОВыборе(ВыбранноеЗначение);
	Оповестить("ВыбранПроектИлиПроектнаяЗадача", ВыбранноеЗначение);
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоПроектовПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Отказ = Истина;
	Возврат;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоПроектовПередНачаломИзменения(Элемент, Отказ)
	
	Отказ = Истина;
	ТекущиеДанные = Элементы.ДеревоПроектов.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТекущиеДанные.Ссылка) Тогда
		ПараметрыФормы = Новый Структура("Ключ", ТекущиеДанные.Ссылка);
		
		Если ТекущиеДанные.ЭтоЗадача Тогда
			ОткрытьФорму("Справочник.ПроектныеЗадачи.ФормаОбъекта", ПараметрыФормы);
		Иначе
			ОткрытьФорму("Справочник.Проекты.ФормаОбъекта", ПараметрыФормы);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоПроектовПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	Возврат;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыПроектныеЗадачи

&НаКлиенте
Процедура ПроектныеЗадачиВыборЗначения(Элемент, Значение, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.ПроектныеЗадачи.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	Если ВыбиратьТолькоПроектнуюЗадачу Тогда 
		ВыбранноеЗначение = ТекущиеДанные.Ссылка;
	Иначе	
		ВыбранноеЗначение = Новый Структура("Проект, ПроектнаяЗадача, ЕстьПроектныеЗадачи", 
			ТекущиеДанные.Владелец, 
			ТекущиеДанные.Ссылка,
			Истина);
	КонецЕсли;	
	
	ОповеститьОВыборе(ВыбранноеЗначение);
	Оповестить("ВыбранПроектИлиПроектнаяЗадача", ВыбранноеЗначение);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Выбрать(Команда)
	
	Если ПоискВключен Тогда 
		ТекущиеДанные = Элементы.ДеревоПроектов.ТекущиеДанные;
		Если ТекущиеДанные = Неопределено Тогда 
			Возврат;
		КонецЕсли;
		
		Если ВыбиратьТолькоПроектнуюЗадачу Тогда 
			Если Не ТекущиеДанные.ЭтоЗадача Тогда 
				Возврат;
			КонецЕсли;
			
			ВыбранноеЗначение = ТекущиеДанные.Ссылка;
		Иначе
			ВыбранноеЗначение = Новый Структура("Проект, ПроектнаяЗадача, ЕстьПроектныеЗадачи", 
				ТекущиеДанные.Владелец, 
				ТекущиеДанные.Ссылка,
				Истина);
		КонецЕсли;
		
		ОповеститьОВыборе(ВыбранноеЗначение);
		Оповестить("ВыбранПроектИлиПроектнаяЗадача", ВыбранноеЗначение);
	
	ИначеЕсли ВыбиратьТолькоПроектнуюЗадачу Или Элементы.ПроектныеЗадачи.ТекущаяСтрока <> Неопределено Тогда
		ВыбратьЗадачу();
		
	ИначеЕсли Элементы.Проекты.ТекущаяСтрока <> Неопределено Тогда  
		ВыбратьПроект();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РежимПросмотраСписком(Команда)
	
	ВидПросмотра = ПредопределенноеЗначение("Перечисление.ВидыПросмотраСпискаОбъектов.Списком");
	
	ПереключитьВидПросмотра(Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура РежимПросмотраПоПапкам(Команда)
	
	ВидПросмотра = ПредопределенноеЗначение("Перечисление.ВидыПросмотраСпискаОбъектов.ПоПапкам");
	
	Если Элементы.Проекты.ТекущиеДанные <> Неопределено Тогда 
		ТекущаяПапка = Элементы.Проекты.ТекущиеДанные.Папка;
		Элементы.Папки.ТекущаяСтрока = ТекущаяПапка;
	Иначе	
		ТекущаяПапка = Элементы.Папки.ТекущаяСтрока;
	КонецЕсли;
	
	ПереключитьВидПросмотра(ТекущаяПапка);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказыватьУдаленные(Команда)
	
	ПоказыватьУдаленные = Не ПоказыватьУдаленные;
	
	ПоказатьУдаленные();
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьИсторию(Команда)
	
	СохранениеВводимыхЗначенийКлиент.ОчиститьСписокВыбора(ЭтаФорма, "СтрокаПоиска");
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ВыбратьПроект()
	
	ТекущиеДанные = Элементы.Проекты.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;	
	
	Если ТекущиеДанные.ЭтоГруппа Тогда 
		ПоказатьПредупреждение(, НСтр("ru = 'Выберите элемент, а не группу!'; en = 'Select an item, not a group!'"));
		Возврат;
	КонецЕсли;	
	
	ВыбранноеЗначение = Новый Структура("Проект, ПроектнаяЗадача, ЕстьПроектныеЗадачи", 
		ТекущиеДанные.Ссылка, 
		Неопределено,
		ТекущиеДанные.ЕстьПроектныеЗадачи);
	
	ОповеститьОВыборе(ВыбранноеЗначение);
	Оповестить("ВыбранПроектИлиПроектнаяЗадача", ВыбранноеЗначение);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьЗадачу()
	
	ТекущиеДанные = Элементы.ПроектныеЗадачи.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;	
	
	Если ВыбиратьТолькоПроектнуюЗадачу Тогда 
		ВыбранноеЗначение = ТекущиеДанные.Ссылка;
	Иначе	
		ВыбранноеЗначение = Новый Структура("Проект, ПроектнаяЗадача, ЕстьПроектныеЗадачи", 
			ТекущиеДанные.Владелец,
			ТекущиеДанные.Ссылка,
			Истина);
	КонецЕсли;		
	
	ОповеститьОВыборе(ВыбранноеЗначение);	
	Оповестить("ВыбранПроектИлиПроектнаяЗадача", ВыбранноеЗначение);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОжиданияПроекты()
	
	Если Элементы.Проекты.ТекущаяСтрока <> ТекущийПроект Тогда  
		
		ТекущийПроект = Элементы.Проекты.ТекущаяСтрока;
		
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ПроектныеЗадачи.Отбор,
			"Владелец",
			ТекущийПроект);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОжиданияПапки()
	
	Если Элементы.Папки.ТекущаяСтрока <> ТекущаяПапка Тогда 
		
		ТекущаяПапка = Элементы.Папки.ТекущаяСтрока;
		Проекты.Параметры.УстановитьЗначениеПараметра("Группа", ТекущаяПапка);
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ПроектныеЗадачи.Отбор,
			"Владелец",
			ПустойПроект);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПереключитьВидПросмотра(ТекПапка)

	Элементы.РежимПросмотраСписком.Пометка = Ложь;
	Элементы.РежимПросмотраПоПапкам.Пометка = Ложь;
	
	Если ВидПросмотра = Перечисления.ВидыПросмотраСпискаОбъектов.Списком Тогда
		
		Элементы.Папки.Видимость = Ложь;
		
		Параметр = Проекты.Параметры.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Группа"));
		Если Параметр <> Неопределено И Параметр.Использование Тогда 
			Параметр.Использование = Ложь;
		КонецЕсли;	
		
		Элементы.РежимПросмотраСписком.Пометка = Истина;
		
	ИначеЕсли ВидПросмотра = Перечисления.ВидыПросмотраСпискаОбъектов.ПоПапкам Тогда
		
		Элементы.Папки.Видимость = Истина;
		
		Проекты.Параметры.УстановитьЗначениеПараметра("Группа", ТекПапка);
		
		Элементы.РежимПросмотраПоПапкам.Пометка = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПоказатьУдаленные()
	
	Если ПоказыватьУдаленные Тогда
		ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбораДинамическогоСписка(Проекты, "ПометкаУдаления");
		ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбораДинамическогоСписка(Папки, "ПометкаУдаления");
		ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбораДинамическогоСписка(ПроектныеЗадачи, "ПометкаУдаления");
	Иначе	
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Проекты, "ПометкаУдаления", Ложь);
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Папки, "ПометкаУдаления", Ложь);
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ПроектныеЗадачи, "ПометкаУдаления", Ложь);
	КонецЕсли;	
	
	Элементы.ПоказыватьУдаленные.Пометка = ПоказыватьУдаленные;
	
КонецПроцедуры

&НаСервере
Процедура ПереключитьОтборПоПроектам()
	
	Проекты.Параметры.УстановитьЗначениеПараметра("ТолькоМоиПроекты", ТолькоМоиПроекты);
	
КонецПроцедуры

&НаКлиенте
Процедура РазвернутьДерево(ИмяРеквизитаДерева)
	
	Для каждого СтрокаДерева Из ЭтаФорма[ИмяРеквизитаДерева].ПолучитьЭлементы() Цикл
		Элементы[ИмяРеквизитаДерева].Развернуть(СтрокаДерева.ПолучитьИдентификатор(), Истина);
	КонецЦикла;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Работа с расширенным поиском контрагентов и контактных лиц

&НаСервере
Процедура НайтиПроектыИПроектныеЗадачи()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Проекты.Ссылка КАК ВладелецОбъекта,
		|	Проекты.Ссылка КАК ОбъектПоиска,
		|	Проекты.Наименование КАК ЗначениеПоиска,
		|	Проекты.Наименование КАК НаименованиеВладельца,
		|	Проекты.Наименование КАК НаименованиеОбъекта
		|ИЗ
		|	Справочник.Проекты КАК Проекты
		|ГДЕ
		|	НЕ Проекты.ПометкаУдаления
		|	И Проекты.Наименование ПОДОБНО &СтрокаПоиска
		|	И (НЕ &ТолькоМоиПроекты
		|			ИЛИ (&ТекущийПользователь В
		|					(ВЫБРАТЬ
		|						ПроектыПроектнаяКоманда.Исполнитель
		|					ИЗ
		|						Справочник.Проекты.ПроектнаяКоманда КАК ПроектыПроектнаяКоманда
		|					ГДЕ
		|						ПроектыПроектнаяКоманда.Ссылка = Проекты.Ссылка)
		|				ИЛИ &ТекущийПользователь = Проекты.Руководитель))
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	Проекты.Ссылка,
		|	ПроектныеЗадачи.Ссылка,
		|	ПроектныеЗадачи.Наименование,
		|	Проекты.Наименование,
		|	ПроектныеЗадачи.Наименование
		|ИЗ
		|	Справочник.ПроектныеЗадачи КАК ПроектныеЗадачи
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Проекты КАК Проекты
		|		ПО ПроектныеЗадачи.Владелец = Проекты.Ссылка
		|ГДЕ
		|	ПроектныеЗадачи.ПометкаУдаления = ЛОЖЬ
		|	И Проекты.ПометкаУдаления = ЛОЖЬ
		|	И ПроектныеЗадачи.Наименование ПОДОБНО &СтрокаПоиска
		|	И (НЕ &ТолькоМоиПроекты
		|			ИЛИ (&ТекущийПользователь В
		|					(ВЫБРАТЬ
		|						ПроектыПроектнаяКоманда.Исполнитель
		|					ИЗ
		|						Справочник.Проекты.ПроектнаяКоманда КАК ПроектыПроектнаяКоманда
		|					ГДЕ
		|						ПроектыПроектнаяКоманда.Ссылка = Проекты.Ссылка)
		|				ИЛИ &ТекущийПользователь = Проекты.Руководитель))
		|
		|УПОРЯДОЧИТЬ ПО
		|	НаименованиеВладельца,
		|	НаименованиеОбъекта
		|ИТОГИ ПО
		|	ВладелецОбъекта";
	Запрос.УстановитьПараметр("СтрокаПоиска", "%" + СтрокаПоиска + "%");
	Запрос.УстановитьПараметр("ТекущийПользователь", ТекущийПользователь);
	Запрос.УстановитьПараметр("ТолькоМоиПроекты", ТолькоМоиПроекты);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	КореньДерева = ДеревоПроектов.ПолучитьЭлементы();
	КореньДерева.Очистить();
	
	Пока Выборка.Следующий() Цикл
		
		Если Не Элементы.ДеревоПроектов.Видимость Тогда 
			Элементы.ДеревоПроектов.Видимость = Истина;
		КонецЕсли;	
		
		НовыйПроект = КореньДерева.Добавить();
		НовыйПроект.Наименование = Выборка.НаименованиеВладельца;
		НовыйПроект.Ссылка = Выборка.ВладелецОбъекта;
		НовыйПроект.Владелец = Выборка.ВладелецОбъекта;
		НовыйПроект.НомерКартинки = 1;
		
		ВыборкаПоПроектнымЗадачам = Выборка.Выбрать();
		Пока ВыборкаПоПроектнымЗадачам.Следующий() Цикл
			
			ТипОбъекта = ТипЗнч(ВыборкаПоПроектнымЗадачам.ОбъектПоиска);
			Если ТипОбъекта <> Тип("СправочникСсылка.ПроектныеЗадачи") Тогда
				Продолжить;
			КонецЕсли;
			
			НовоеКонтактноеЛицо = НовыйПроект.ПолучитьЭлементы().Добавить();
			НовоеКонтактноеЛицо.Наименование = ВыборкаПоПроектнымЗадачам.НаименованиеОбъекта;
			НовоеКонтактноеЛицо.Ссылка = ВыборкаПоПроектнымЗадачам.ОбъектПоиска;
			НовоеКонтактноеЛицо.Владелец = ВыборкаПоПроектнымЗадачам.ВладелецОбъекта;
			НовоеКонтактноеЛицо.ЭтоЗадача = Истина;
			НовоеКонтактноеЛицо.НомерКартинки = 0;
		
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимостьРезультатаПоискаКонтрагентов(Видимость);
	
	Если Видимость Тогда
		Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаДерево;
	Иначе
		Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаСписки;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОчиститьПоиск()

	ПоискВключен = Ложь;
	УстановитьВидимостьРезультатаПоискаКонтрагентов(ПоискВключен);
	
КонецПроцедуры

#КонецОбласти
