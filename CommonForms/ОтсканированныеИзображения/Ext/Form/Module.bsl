
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ВладелецФайлов = Параметры.ВладелецФайлов;
	ДатаСканирования = Параметры.ДатаСканирования;
	
	Если Параметры.Свойство("Файлы") Тогда // открываем из формы успешно размещенных
		
		Файлы = Параметры.Файлы;
	
		Для Каждого Файл Из Файлы Цикл
			Строка = ТаблицаФайлов.Добавить();
			Строка.Файл = Файл.Значение;
			Строка.Представление = Строка(Файл.Значение);
			Строка.Расширение = Строка.Файл.ТекущаяВерсияРасширение;
			Строка.ИндексКартинки = ФайловыеФункцииКлиентСервер.ПолучитьИндексПиктограммыФайла(Строка.Файл.ТекущаяВерсияРасширение);
		КонецЦикла;	
		
	Иначе	// открываем из списка истории
		
		УстановитьПривилегированныйРежим(Истина);
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	РезультатыПотоковогоСканирования.Файл КАК Файл
			|ИЗ
			|	РегистрСведений.РезультатыПотоковогоСканирования КАК РезультатыПотоковогоСканирования
			|ГДЕ
			|	РезультатыПотоковогоСканирования.Объект = &Объект
			|	И РезультатыПотоковогоСканирования.Пользователь = &Пользователь
			|	И РезультатыПотоковогоСканирования.ДатаСеансаСканирования = &ДатаСеансаСканирования";

		Запрос.УстановитьПараметр("ДатаСеансаСканирования", ДатаСканирования);
		Запрос.УстановитьПараметр("Объект", ВладелецФайлов);
		Запрос.УстановитьПараметр("Пользователь", ПользователиКлиентСервер.ТекущийПользователь());

		Результат = Запрос.Выполнить();

		Выборка = Результат.Выбрать();

		Пока Выборка.Следующий() Цикл
			Строка = ТаблицаФайлов.Добавить();
			Строка.Файл = Выборка.Файл;
			Строка.Представление = Строка(Выборка.Файл);
			Строка.Расширение = Строка.Файл.ТекущаяВерсияРасширение;
			Строка.ИндексКартинки = ФайловыеФункцииКлиентСервер.ПолучитьИндексПиктограммыФайла(Строка.Файл.ТекущаяВерсияРасширение);
		КонецЦикла;

	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаФайловПриАктивизацииСтроки(Элемент)
	
	Если Элементы.ТаблицаФайлов.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	НомерТекущейСТроки = Элементы.ТаблицаФайлов.ТекущаяСтрока;
	СтрокаТаблицы = Элементы.ТаблицаФайлов.ДанныеСтроки(НомерТекущейСТроки);
	
	Расширение = СтрокаТаблицы.Расширение;
	Расширение = НРег(Расширение);
	Если Расширение = "pdf" Тогда
		АдресКартинки = "";
		Возврат;
	КонецЕсли;	
	
	Если ТекущийФайл <> СтрокаТаблицы.Файл Тогда
		
		Если ПустаяСтрока(СтрокаТаблицы.АдресКартинки) Тогда
			 КодВозврата = РаботаСФайламиВызовСервера.ДанныеФайлаИНавигационнаяСсылкаВерсииВоВременномХранилище(СтрокаТаблицы.Файл, Неопределено, УникальныйИдентификатор);
			 СтрокаТаблицы.АдресКартинки = КодВозврата.НавигационнаяСсылкаВерсии;
		КонецЕсли;	
		
		АдресКартинки = СтрокаТаблицы.АдресКартинки;
		
		ТекущийФайл = СтрокаТаблицы.Файл;
	КонецЕсли;	

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьКарточку(Команда)
	
	ТекущийФайл = Элементы.ТаблицаФайлов.ТекущиеДанные.Файл;
	ПараметрыОткрытияФормы = Новый Структура("Ключ", ТекущийФайл);
	ОткрытьФорму("Справочник.Файлы.ФормаОбъекта", ПараметрыОткрытияФормы);
		
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФайл(Команда)
	ОткрытьФайлВыполнить();
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФайлВыполнить()
	
	ТекущийФайл = Элементы.ТаблицаФайлов.ТекущиеДанные.Файл;
	ДанныеФайла = РаботаСФайламиВызовСервера.ДанныеФайлаДляОткрытия(ТекущийФайл, , УникальныйИдентификатор);
	КомандыРаботыСФайламиКлиент.Открыть(ДанныеФайла);
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаФайловВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ОткрытьФайлВыполнить();
КонецПроцедуры


