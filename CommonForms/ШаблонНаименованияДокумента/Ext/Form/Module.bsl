
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ШаблонНаименования = Параметры.ШаблонНаименования;
	Наименование.Добавить(Параметры.ШаблонНаименования);
	ВидДокумента = Параметры.ВидДокумента;
	
	ОбновитьДеревоРеквизитов();
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	ВсеРеквизиты = Настройки["ВсеРеквизиты"];
	Если ВсеРеквизиты Тогда 
		Элементы.ПоказатьВсеРеквизиты.Пометка = ВсеРеквизиты;
		ОбновитьДеревоРеквизитов();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура НаименованиеПриИзменении(Элемент)
	
	ШаблонНаименования = Наименование.ПолучитьТекст();
	ШаблонНаименования = СтрЗаменить(ШаблонНаименования, Символы.ПС, " ");
	Наименование.Удалить();
	Наименование.Добавить(ШаблонНаименования);
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоРеквизитовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПеренестиСлужебноеПоле();
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоРеквизитовНачалоПеретаскивания(Элемент, ПараметрыПеретаскивания, Выполнение)
	
	ВыбранноеЗначение = Элементы.ДеревоРеквизитов.ТекущиеДанные;
	Если ВыбранноеЗначение = Неопределено Тогда 
		Выполнение = Ложь;
	Иначе
		Родитель = ВыбранноеЗначение.ОбъектРодитель;
		Если ЗначениеЗаполнено(Родитель) Тогда 
			ЗначениеЗамены = "[" + Родитель + "|" + ВыбранноеЗначение.Наименование + "]";
		Иначе
			ЗначениеЗамены = "["+ ВыбранноеЗначение.Наименование + "]";
		КонецЕсли;
		ПараметрыПеретаскивания.Значение = ЗначениеЗамены;
		ПараметрыПеретаскивания.Действие = ДействиеПеретаскивания.Перемещение;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ДобавитьПоле(Команда)
	
	ПеренестиСлужебноеПоле();
	
КонецПроцедуры

&НаКлиенте
Процедура Готово(Команда)
	
	ОписаниеОшибки = "";
	ШаблонНаименования = Наименование.ПолучитьТекст();
	
	Если ШаблонНаименованияКорректен(ОписаниеОшибки) Тогда 
		Закрыть(ШаблонНаименования);
	Иначе 
		ПоказатьПредупреждение(, ОписаниеОшибки);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьВсеРеквизиты(Команда)
	
	ВсеРеквизиты = Не ВсеРеквизиты;
	Элементы.ПоказатьВсеРеквизиты.Пометка = ВсеРеквизиты;
	
	ОбновитьДеревоРеквизитов();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОбновитьДеревоРеквизитов()
	
	Дерево = АвтозаполнениеШаблоновФайловСерверПовтИсп.ЗаполнитьДеревоРеквизитовДляШаблона(
		ВидДокумента, ВсеРеквизиты);
	ЗначениеВРеквизитФормы(Дерево, "ДеревоРеквизитов");
	
	Если Не ВсеРеквизиты Тогда 
		Дерево = АвтозаполнениеШаблоновФайловСерверПовтИсп.ЗаполнитьДеревоРеквизитовДляШаблона(
			ВидДокумента, Истина);
	КонецЕсли;
	
	ЗначениеВРеквизитФормы(Дерево, "ДеревоРеквизитовПолное");
	
КонецПроцедуры

&НаКлиенте
Процедура ПеренестиСлужебноеПоле()
	
	Если Не ТолькоПросмотр Тогда 
		ВыбранноеЗначение = Элементы.ДеревоРеквизитов.ТекущиеДанные;
		Если ВыбранноеЗначение <> Неопределено Тогда 
			
			Родитель = ВыбранноеЗначение.ОбъектРодитель;
			Если ЗначениеЗаполнено(Родитель) Тогда 
				ЗначениеЗамены = "[" + Родитель + "|" + ВыбранноеЗначение.Наименование + "]";
			Иначе
				ЗначениеЗамены = "["+ ВыбранноеЗначение.Наименование + "]";
			КонецЕсли;
			
			
			ШаблонНаименования = Наименование.ПолучитьТекст() + ЗначениеЗамены;
			Наименование.Удалить();
			Наименование.Добавить(ШаблонНаименования);
			
			Модифицированность = Истина;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ШаблонНаименованияКорректен(ОписаниеОшибки) 
	
	ОписаниеОшибки = "";
	МассивРеквизитов = Новый Массив;
	
	ДелопроизводствоКлиентСервер.ПолучитьПоляШаблонаНаименования(
		ШаблонНаименования, МассивРеквизитов, ОписаниеОшибки);
	
	Если ЗначениеЗаполнено(ОписаниеОшибки) Тогда 
		Возврат Ложь;
	КонецЕсли;
	
	Если МассивРеквизитов.Количество() > 0 Тогда 
		Контекст = Новый Структура;
		Контекст.Вставить("Дерево", ДеревоРеквизитовПолное);
		
		Для Каждого Реквизит Из МассивРеквизитов Цикл 
			Контекст.Вставить("Реквизит", Реквизит);
			Контекст.Вставить("РеквизитНайден", Ложь);
			ОбойтиДерево(ДеревоРеквизитовПолное.ПолучитьЭлементы(), Контекст, "ПроверитьНаличиеПолей");
			
			Если Не Контекст.РеквизитНайден Тогда 
				
				ОписаниеОшибки = СтрШаблон(НСтр("ru = 'Реквизит ""%1"" не найден среди списка реквизитов'; en = 'Attribute  ""%1"" is not found among the list of attributes'"),
					Реквизит);
				Возврат Ложь;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

&НаКлиенте
Процедура ОбойтиДерево(ДеревоЭлементы, Контекст, ИмяПроцедуры)
	
	Для Каждого Элемент Из ДеревоЭлементы Цикл
		ПодчиненныеУзлы = Элемент.ПолучитьЭлементы();
		Результат = Вычислить(ИмяПроцедуры + "(Элемент, Контекст)");
		
		Если ПодчиненныеУзлы.Количество() > 0 Тогда
			ОбойтиДерево(ПодчиненныеУзлы, Контекст, ИмяПроцедуры);
		КонецЕсли;
		
		Если Контекст.РеквизитНайден Тогда 
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Функция ПроверитьНаличиеПолей(Элемент, Контекст)
	
	ИдентификаторСтроки = Элемент.ПолучитьИдентификатор();
	ТекДанные = Контекст.Дерево.НайтиПоИдентификатору(ИдентификаторСтроки);
	Реквизит = Контекст.Реквизит;
	
	Если ЗначениеЗаполнено(ТекДанные.ОбъектРодитель) Тогда 
		ПолеПоиска = ТекДанные.ОбъектРодитель + "|" + ТекДанные.Наименование;
	Иначе
		ПолеПоиска = ТекДанные.Наименование;
	КонецЕсли;
	
	Если Реквизит = ПолеПоиска Тогда
		Контекст.РеквизитНайден = Истина;
	КонецЕсли;
	
КонецФункции

#КонецОбласти
