
Функция ПолучитьУзелОбмена(КодМобильногоКлиента, Пользователь) Экспорт

	УстановитьПривилегированныйРежим(Истина);

	УзелОбмена = ПланыОбмена.Мобильный.НайтиПоКоду(КодМобильногоКлиента); 
	Если УзелОбмена.Пустая() Тогда

		// Регистрация нового мобильного клиента
		УзелОбъект = ПланыОбмена.Мобильный.СоздатьУзел();
		УзелОбъект.Код = КодМобильногоКлиента;
		УзелОбъект.Пользователь = Пользователь;
		УзелОбъект.ДатаСоздания = ТекущаяДатаСеанса();
		УзелОбъект.Записать();

		// Создание новой очереди сообщений для нового мобильного клиента
		НоваяОчередь = Справочники.ОчередиСообщенийИнтегрированныхСистем.СоздатьЭлемент();
		НоваяОчередь.Наименование = Строка(Пользователь);
		НоваяОчередь.Записать();

		// Привязка новой очереди сообщений и нового мобильного клиента
		МенеджерЗаписиОчередей = РегистрыСведений.ОчередиСообщенийОбменаСМобильнымиКлиентами.СоздатьМенеджерЗаписи();
		МенеджерЗаписиОчередей.МобильныйКлиент = УзелОбъект.Ссылка;
		МенеджерЗаписиОчередей.Очередь = НоваяОчередь.Ссылка;
		МенеджерЗаписиОчередей.Записать();

		УзелОбмена = УзелОбъект.Ссылка;

		// ТСК Близнюк С.И.; 13.11.2018; task#1734{
		ПланыОбмена.ЗарегистрироватьИзменения(ОбменСМобильнымиСерверПовтИсп.ПолучитьУзелДляРегистрацииДанных(), Пользователь);
		ПланыОбмена.ЗарегистрироватьИзменения(УзелОбмена, Пользователь);
		// ТСК Близнюк С.И.; 13.11.2018; task#1734}

	КонецЕсли;

	Возврат УзелОбмена;

КонецФункции

// Возвращает массив не помеченных на удаление узлов пользователя
Функция ПолучитьВсеУзлыПользователя(Пользователь) Экспорт

	ЗапросПолучениеУзлов = Новый Запрос;
	ЗапросПолучениеУзлов.Текст =
		"ВЫБРАТЬ
		|	Мобильный.Ссылка,
		|	ЕСТЬNULL(СведенияОМобильныхКлиентах.Описание, """") КАК Описание
		|ИЗ
		|	ПланОбмена.Мобильный КАК Мобильный
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОМобильныхКлиентах КАК СведенияОМобильныхКлиентах
		|		ПО Мобильный.Ссылка = СведенияОМобильныхКлиентах.МобильныйКлиент
		|ГДЕ
		|	Мобильный.ПометкаУдаления = ЛОЖЬ
		|	И Мобильный.Пользователь = &Пользователь";
	ЗапросПолучениеУзлов.УстановитьПараметр("Пользователь", Пользователь);

	Возврат ЗапросПолучениеУзлов.Выполнить().Выгрузить();

КонецФункции

// Проверяет, есть ли настроенные узлы пользователя.
//
// Параметры:
//  Пользователь - СправочникСсылка.Пользователи - Пользователь.
// 
// Возвращаемое значение:
//  Булево - Есть узлы пользователя.
//
Функция ЕстьУзлыПользователя(Пользователь) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ОписаниеWindows = "windows";
	ЕстьУзлы = Ложь;
	Для Каждого Узел Из ПолучитьВсеУзлыПользователя(Пользователь) Цикл
		Если СтрНайти(Узел.Описание, ОписаниеWindows) = 0 Тогда
			ЕстьУзлы = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Возврат ЕстьУзлы;
	
КонецФункции

Функция ПланОбменаИспользуетсяВМоделиСервиса() Экспорт

	Возврат Ложь;

КонецФункции

Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)

	Если ЗначениеЗаполнено(Данные.Ссылка) Тогда

		Сведения = РегистрыСведений.СведенияОМобильныхКлиентах.ПолучитьСведения(Данные.Ссылка);

		Если Сведения <> Неопределено Тогда
			СтандартнаяОбработка = Ложь;
			Представление = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				"%1, акт. %2",
				Сведения.Описание,
				Сведения.ДатаПоследнейАктивности);
		КонецЕсли;

	КонецЕсли;

КонецПроцедуры


