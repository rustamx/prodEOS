

#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ПутьКФайлуНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	Диалог.Заголовок = "Выберите файл";
	Диалог.ПолноеИмяФайла = ""; 
	Диалог.МножественныйВыбор = Ложь;
	Фильтр = НСтр("ru = 'PDF'") + "(*.PDF)|*.PDF";
	Диалог.Фильтр = Фильтр;
	Диалог.Каталог = "C:\";
	Если Диалог.Выбрать() Тогда
		ПутьКФайлу = Диалог.ПолноеИмяФайла;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПутьКФайлуПодписиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	Диалог.Заголовок = "Выберите файл";
	Диалог.ПолноеИмяФайла = ""; 
	Диалог.МножественныйВыбор = Ложь;
	Фильтр = НСтр("ru = 'Электронная подпись'") + " (*.sig)|*.sig|'Электронная подпись' (*.p7s)|*.p7s";
	Диалог.Фильтр = Фильтр;
	Диалог.Каталог = "C:\";
	Если Диалог.Выбрать() Тогда
		ПутьКФайлуПодписи = Диалог.ПолноеИмяФайла;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаЗаписатьПараметрыПодключения(Команда)
	
	ЗаписатьПараметрыПодключенияНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаПодписать(Команда)
	
	//КомандаПодписатьНаСервере();
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПодписаниеПослеВводаЛогинаПароляПродолжение", ЭтотОбъект);
	ОткрытьФорму("Обработка.ра_ПодписатьДокумент.Форма.ФормаВводаЛогинаПароля",,,,,,
				ОписаниеОповещения,
				РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);	
		
КонецПроцедуры

&НаКлиенте
Процедура КомандаПроверитьПодпись(Команда)
	
	//ПроверитьПодписьНаСервере();
	
	//ОписаниеОповещения = Новый ОписаниеОповещения("ПроверкаПодписиПослеВводаЛогинаПароляПродолжение", ЭтотОбъект);
	//ОткрытьФорму("Обработка.ра_ПодписатьДокумент.Форма.ФормаВводаЛогинаПароля",,,,,,
	//			ОписаниеОповещения,
	//			РежимОткрытияОкнаФормы.БлокироватьОкноВладельца); 
				
	ПроверитьПодписьНаСервереЧерезDSS();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаписатьПараметрыПодключенияНаСервере()
	
	Структура = Новый Структура;
	Структура.Вставить("ИдентификаторСистемы", 			"ae6bb144-556a-49ba-a071-a6e872efc6c7");
	Структура.Вставить("Хост", 							"stenddss.cryptopro.ru");
	//Структура.Вставить("ЗапросID", 						"tsconsultingidp/ums/user");
	Структура.Вставить("ЗапросТокена", 					"tsconsultingidp/oauth/token");
	Структура.Вставить("ЗапросПодписиДокумента", 		"tsconsultingss/rest/api/documents");
	Структура.Вставить("ЗапросСозданиеТранзакции", 		"tsconsultingss/rest/api/transactions");
	Структура.Вставить("ЗапросПодтверждениеТранзакции", "tsconsultingidp/confirmation");
		
	Хранилище = Новый ХранилищеЗначения(Структура);
	
	Константы.ра_ПараметрыПодключенияКСерверуDSS.Установить(Хранилище);
	
КонецПроцедуры

&НаСервере
Процедура ПодписатьОсновнойФайлНаСервере(ДанныеПользователя)
	
	//Если Константы.ра_ТестовыйРежимРаботыСКриптографией.Получить() Тогда
	Если ПолучитьФункциональнуюОпцию("ра_ПриУтвержденииПодписыватьЧерезСерверDSS") Тогда
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Ссылка", ЗадачаСсылка.БизнесПроцесс);
		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
		|	ДанныеБизнесПроцессов.ОсновнойПредмет КАК Предмет
		|ИЗ
		|	РегистрСведений.ДанныеБизнесПроцессов КАК ДанныеБизнесПроцессов
		|ГДЕ
		|	ДанныеБизнесПроцессов.БизнесПроцесс = &Ссылка";
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			//ДвоичныеДанныеОсновногоФайла = ра_РаботаСПроцессами.ПолучитьОсновнойФайлДляДокумента(Выборка.Предмет);
			ДанныеОсновногоФайла = ра_РаботаСПроцессами.ПолучитьОсновнойФайлДляДокумента(Выборка.Предмет);
			Если ДанныеОсновногоФайла <> Неопределено Тогда
				ОсновнойФайл = ДанныеОсновногоФайла.Файл;
				ВерсияОсновногоФайла = ДанныеОсновногоФайла.Версия;
				ДвоичныеДанныеОсновногоФайла = ДанныеОсновногоФайла.ДвоичныеДанные;
				ПодписываемыеДвоичныеДанныеBase64 = Base64Строка(ДвоичныеДанныеОсновногоФайла);
				//РезультатПодписи = ра_РаботаСКриптографией.ПодписатьОсновнойФайл(ПодписываемыеДвоичныеДанныеBase64, Новый Структура("Логин, Пароль, ПинКод", "t2", "Carbon1408", ""));
				РезультатПодписи = Обработки.ра_ПодписатьДокумент.ПодписатьОсновнойФайл(Выборка.Предмет, ПодписываемыеДвоичныеДанныеBase64, ОсновнойФайл, ВерсияОсновногоФайла, ДанныеПользователя);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Процедура ПроверитьПодписьНаСервере()
	
	ПодписьВерна = "";
	ДвоичныеДанныеФайла 	= Новый ДвоичныеДанные(ПутьКФайлу);
	ДвоичныеДанныеПодпси 	= Новый ДвоичныеДанные(ПутьКФайлуПодписи);
	
	Сертификат = Неопределено;
	ПодписьВерна = Обработки.ра_ПодписатьДокумент.ПроверитьСертификатыПодписи(ДвоичныеДанныеФайла, ДвоичныеДанныеПодпси, Сертификат);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьПодписьНаСервереЧерезDSS()
	
	ПодписьВерна = "";
	ДвоичныеДанныеФайла 	= Новый ДвоичныеДанные(ПутьКФайлу);
	ДвоичныеДанныеПодпси 	= Новый ДвоичныеДанные(ПутьКФайлуПодписи);
	
	СтруктураРезультат = Обработки.ра_ПодписатьДокумент.ПроверитьПодписьЧерезDSS(ДвоичныеДанныеФайла, ДвоичныеДанныеПодпси);
	ПодписьВерна = СтруктураРезультат.Успешно;
	
КонецПроцедуры

#Область СлужебныеОбработчикиАсинхронныхДиалогов

&НаКлиенте
Процедура ПодписаниеПослеВводаЛогинаПароляПродолжение(Результат, Параметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	Иначе 
		ПодписатьОсновнойФайлНаСервере(Результат);
	КонецЕсли;
	
КонецПроцедуры

//&НаКлиенте
//Процедура ПроверкаПодписиПослеВводаЛогинаПароляПродолжение(Результат, Параметры) Экспорт
//	
//	Если Результат = Неопределено Тогда
//		Возврат;
//	Иначе 
//		ПроверитьПодписьНаСервереЧерезDSS(Результат);
//	КонецЕсли;
//	
//КонецПроцедуры

#КонецОбласти

#КонецОбласти



&НаСервере
Процедура КомандаПодписатьНаСервере()
		
	// получение запросов и хоста
	Хранилище = Константы.ра_ПараметрыПодключенияКСерверуDSS.Получить();
	Структура = Хранилище.Получить();
	
	// преобразем файл в base64
	ДвоичныеДанные = Новый ДвоичныеДанные(ПутьКФайлу);
	Результат = Base64Строка(ДвоичныеДанные);
	
	//Файл = Новый ЗаписьТекста("C:\Users\tomarov\Desktop\двоичные.txt");
	//Файл.ЗаписатьСтроку(Результат);
	//Файл.Закрыть();
	
	
	// получение токена
	Соединение = Новый HTTPСоединение(Структура.Хост);
	Запрос = Новый HTTPЗапрос(Структура.ЗапросТокена);
	//Запрос.УстановитьТелоИзСтроки("grant_type=password&client_id=ae6bb144-556a-49ba-a071-a6e872efc6c7&scope=dss&username=t2&password=Carbon1408&resource=http%3A%2F%2Fcloudcsp%2FDssSignServer%2Frest");
	client_id = "ae6bb144-556a-49ba-a071-a6e872efc6c7";
	Тело = "grant_type=password&client_id=" + client_id + "&scope=dss&username=t2&password=Carbon1408&resource=http%3A%2F%2Fcloudcsp%2FDssSignServer%2Frest";
	Запрос.УстановитьТелоИзСтроки(Тело);
	HTTPОтвет = Соединение.ОтправитьДляОбработки(Запрос);
	Ответ = HTTPОтвет.ПолучитьТелоКакСтроку();
	Токен = СтрРазделить(Ответ, """")[3];
	
	// видимая подпись
	Если ДобавитьВидимуюПодпись Тогда
		PdfSignatureAppearanceСтрока = "{ ""Content"": [{ ""Text"": ""Подлинник электронного документа, подписанного ЭП, хранится в системе элеткронного документооборота Минкомсвзяи России."", 
		| ""Font"": { ""FontSize"": 4, ""FontFamily"": ""arial"", ""FontStyle"": 0, ""FontColor"": { ""Red"": 0, ""Green"": 0, ""Blue"": 0 } } }, { ""Text"": ""СВЕДЕНИЯ О СЕРТИФИКАТЕ ЭП:"", 
		| ""Font"": { ""FontSize"": 8, ""FontFamily"": ""times"", ""FontStyle"": 0, ""FontColor"": { ""Red"": 0, ""Green"": 0, ""Blue"": 0 } } }, { ""Text"": ""Кому выдан: Эдуард Талько"", 
		| ""Font"": { ""FontSize"": 8, ""FontFamily"": ""times"", ""FontStyle"": 0, ""FontColor"": { ""Red"": 0, ""Green"": 0, ""Blue"": 0 } } }, { ""Text"": ""Кем выдан: УЦ Минкомсвязи"", 
		| ""Font"": { ""FontSize"": 8, ""FontFamily"": ""times"", ""FontStyle"": 0, ""FontColor"": { ""Red"": 0, ""Green"": 0, ""Blue"": 0 } } }, { ""Text"": ""Действителен: с 12.12.2015 по 12.12.2016"", 
		| ""Font"": { ""FontSize"": 8, ""FontFamily"": ""times"", ""FontStyle"": 0, ""FontColor"": { ""Red"": 0, ""Green"": 0, ""Blue"": 0 } } }], 
		| ""TemplateId"": 1, 
		| ""Rect"": { ""LowerLeftX"": 215, ""LowerLeftY"": 10, ""UpperRightX"": 405, ""UpperRightY"": 85, ""BorderRadius"": 0, ""BorderWeight"": 1, ""BorderColor"": { ""Red"": 75, ""Green"": 13, ""Blue"": 100 }, ""BackgroundColor"": null, ""ContentMargin"": 5 }, 
		| ""Page"": 1 }";
		
		Поток = Новый ПотокВПамяти;
		Файл = Новый ЗаписьТекста(Поток);
		Файл.ЗаписатьСтроку(PdfSignatureAppearanceСтрока);
		Файл.Закрыть();
		
		//ДвоичныеДанные = Новый ДвоичныеДанные(КаталогВременныхФайлов() + "temp.txt");
		PdfSignatureAppearance = Base64Строка(Поток.ЗакрытьИПолучитьДвоичныеДанные());
		
		//PdfSignatureAppearance = "eyJDb250ZW50IjpbeyJUZXh0Ijoi0J/QvtC00LvQuNC90L3QuNC6INGN0LvQtdC 60YLRgNC+0L3QvdC+0LPQviDQtNC+0LrRg9C80LXQvdGC0LAsINC/0L7QtNC/0L jRgdCw0L3QvdC+0LPQviDQrdCfLCDRhdGA0LDQvdC40YLRgdGPINCyINGB0LjRg dGC0LXQvNC1INGN0LvQtdGC0LrRgNC+0L3QvdC+0LPQviDQtNC+0LrRg9C80LXQ vdGC0L7QvtCx0L7RgNC+0YLQsCDQnNC40L3QutC+0LzRgdCy0LfRj9C4INCg0L7 RgdGB0LjQuC4iLCJGb250Ijp7IkZvbnRTaXplIjo0LCJGb250RmFtaWx5IjoiYX JpYWwiLCJGb250U3R5bGUiOjAsIkZvbnRDb2xvciI6eyJSZWQiOjAsIkdyZWVuI jowLCJCbHVlIjowfX19LHsiVGV4dCI6ItCh0JLQldCU0JXQndCY0K8g0J4g0KHQ ldCg0KLQmNCk0JjQmtCQ0KLQlSDQrdCfOiIsIkZvbnQiOnsiRm9udFNpemUiOjg sIkZvbnRGYW1pbHkiOiJ0aW1lcyIsIkZvbnRTdHlsZSI6MCwiRm9udENvbG9yIj p7IlJlZCI6MCwiR3JlZW4iOjAsIkJsdWUiOjB9fX0seyJUZXh0Ijoi0JrQvtC80 YMg0LLRi9C00LDQvTog0JrQvtC30YvRgNC10LIg0JDQu9C10LrRgdC10Lkg0J7Q u9C10LPQvtCy0LjRhyIsIkZvbnQiOnsiRm9udFNpemUiOjgsIkZvbnRGYW1pbHk iOiJ0aW1lcyIsIkZvbnRTdHlsZSI6MCwiRm9udENvbG9yIjp7IlJlZCI6MCwiR3 JlZW4iOjAsIkJsdWUiOjB9fX0seyJUZXh0Ijoi0JrQtdC8INCy0YvQtNCw0L06I NCj0KYg0JzQuNC90LrQvtC80YHQstGP0LfQuCIsIkZvbnQiOnsiRm9udFNpemUi OjgsIkZvbnRGYW1pbHkiOiJ0aW1lcyIsIkZvbnRTdHlsZSI6MCwiRm9udENvbG9 yIjp7IlJlZCI6MCwiR3JlZW4iOjAsIkJsdWUiOjB9fX0seyJUZXh0Ijoi0JTQtd C50YHRgtCy0LjRgtC10LvQtdC9OiDRgSAxMi4xMi4yMDE1INC/0L4gMTIuMTIuM jAxNiIsIkZvbnQiOnsiRm9udFNpemUiOjgsIkZvbnRGYW1pbHkiOiJ0aW1lcyIs IkZvbnRTdHlsZSI6MCwiRm9udENvbG9yIjp7IlJlZCI6MCwiR3JlZW4iOjAsIkJ sdWUiOjB9fX1dLCJUZW1wbGF0ZUlkIjoxLCJSZWN0Ijp7Ikxvd2VyTGVmdFgiOj IxNSwiTG93ZXJMZWZ0WSI6MTAsIlVwcGVyUmlnaHRYIjo0MDUsIlVwcGVyUmlna HRZIjo4NSwiQm9yZGVyUmFkaXVzIjowLCJCb3JkZXJXZWlnaHQiOjEsIkJvcmRl ckNvbG9yIjp7IlJlZCI6NzUsIkdyZWVuIjoxMywiQmx1ZSI6MTAwfSwiQmFja2d yb3VuZENvbG9yIjpudWxsLCJDb250ZW50TWFyZ2luIjo1fSwiUGFnZSI6MX0=";
		СтрокаДляВидимойПодписи = ", ""PdfSignatureTemplateId"" : 1, ""PdfSignatureAppearance"" : """ + PdfSignatureAppearance + """";
		
	Иначе
		СтрокаДляВидимойПодписи = "";
	КонецЕсли;
	
	// подпись документа
	Соединение = Новый HTTPСоединение(Структура.Хост);
	
	Заголовки = Новый Соответствие;
	Заголовки.Вставить("Authorization", "Bearer " + Токен);
	Заголовки.Вставить("Content-Type", "application/json");

	
	Запрос = Новый HTTPЗапрос(Структура.ЗапросПодписиДокумента);
	Запрос.Заголовки = Заголовки;
	
	//Запрос.УстановитьТелоИзСтроки("{
	//|""Content"":""" + Результат + """,
	//|""Name"":""Тестовый документ"",
	//|""Signature"":
	//|{""Type"": 3,
	//|""Parameters"":{""PDFFormat"":""CMS"",""PdfCertificationLevel"":""CERTIFIED_NO_CHANGES_ALLOWED""" + СтрокаДляВидимойПодписи + "},
	//|""CertificateId"":1,
	//|""PinCode"":""""}
	//|}");
	
	SignatureType = ТипПодписи;
	Если ТипПодписи = "PDF" Тогда
		мParameters = "
			|		""PDFFormat"":""CMS"",
			|		""PdfCertificationLevel"":""CERTIFIED_NO_CHANGES_ALLOWED""" + СтрокаДляВидимойПодписи + ",
			|		""IsDetached"":"""  + ОтделеннаяПодпись + """}";
	ИначеЕсли ТипПодписи = "CAdES BES" Тогда
		SignatureType = "CAdES";
		мParameters = "
			|		""CAdESType"":""BES"",
			|		""IsDetached"":"""  + ОтделеннаяПодпись + """}";
	ИначеЕсли ТипПодписи = "CAdES XLT1" Тогда
		SignatureType = "CAdES";
		мParameters = "
			|		""CAdESType"":""XLT1"",
			|		""IsDetached"":"""  + ОтделеннаяПодпись + """,
			//|		""TSPAddress"":""http://www.cryptopro.ru/tsp/tsp.srf""}";
			|		""TSPAddress"":""http://sub-testca20/tsp/tsp.srf""}";
	ИначеЕсли ТипПодписи = "CMS" Тогда
		мParameters = "
			|		""IsDetached"":"""  + ОтделеннаяПодпись + """}";
	КонецЕсли;

		
	Запрос.УстановитьТелоИзСтроки("{
	|""Content"":""" + Результат + """,
	|""Name"":""Тестовый документ"",
	|""Signature"":{
	|	""Type"":"""  + SignatureType + """,
	|	""Parameters"":{ " + мParameters + ",
	|	""CertificateId"":1,
	|	""PinCode"":""""}
	|}");
	
	
	HTTPОтвет = Соединение.ОтправитьДляОбработки(Запрос);
	Ответ = HTTPОтвет.ПолучитьТелоКакСтроку();
	
	// сохраняем файл
	ДвоичныеДанные = Base64Значение(СтрЗаменить(Ответ, """", ""));
	Если ТипПодписи = "PDF" Тогда
		ДвоичныеДанные.Записать("C:\Users\sbliznyuk\Desktop\результат.pdf");
	Иначе
		ДвоичныеДанные.Записать("C:\Users\sbliznyuk\Desktop\результат.sig");
	КонецЕсли;
		
КонецПроцедуры
	

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОтделеннаяПодпись = "True";
	ТипПодписи = "CAdES XLT1";
	Элементы.ДобавитьВидимуюПодпись.Видимость = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ТипПодписиПриИзменении(Элемент)
	
	Элементы.ДобавитьВидимуюПодпись.Видимость = ТипПодписи = "PDF";
	Элементы.ОтделеннаяПодпись.Видимость = ТипПодписи <> "PDF";

КонецПроцедуры
