
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если Параметры.Свойство("ОтображатьУдаленные") Тогда
		ОтображатьУдаленные = Параметры.ОтображатьУдаленные;
	Иначе
		ОтображатьУдаленные = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
			ИмяФормы,
			"ОтображатьУдаленные",
			Истина);
	КонецЕсли;
	
	Элементы.ДеревоУЗОтображатьУдаленные.Пометка = ОтображатьУдаленные;
	
	Если Параметры.Свойство("ОтмеченныеЗначения") Тогда
		СписокВыбранных.ЗагрузитьЗначения(Параметры.ОтмеченныеЗначения);
	КонецЕсли;

	ЗаполнитьДеревоУЗ();

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура ЗаполнитьДеревоУЗ()
	
	Запрос = Новый Запрос;
	ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	УчетныеЗаписиЭлектроннойПочтыОтветственныеЗаОбработкуПисем.Ссылка
		|ПОМЕСТИТЬ ВТ_МоиУчетныеЗаписи
		|ИЗ
		|	Справочник.УчетныеЗаписиЭлектроннойПочты.ОтветственныеЗаОбработкуПисем КАК УчетныеЗаписиЭлектроннойПочтыОтветственныеЗаОбработкуПисем
		|ГДЕ
		|	УчетныеЗаписиЭлектроннойПочтыОтветственныеЗаОбработкуПисем.Пользователь = &ТекущийПользователь
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	УчетныеЗаписиЭлектроннойПочты.Ссылка КАК Ссылка,
		|	УчетныеЗаписиЭлектроннойПочты.Представление КАК Представление,
		|	УчетныеЗаписиЭлектроннойПочты.ПометкаУдаления КАК ПометкаУдаления,
		|	ВЫБОР
		|		КОГДА ВТ_МоиУчетныеЗаписи.Ссылка ЕСТЬ NULL 
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ПользовательВключенВОтветственные,
		|	ВЫБОР
		|		КОГДА УчетныеЗаписиЭлектроннойПочты.Ссылка В (&СписокВыбранных)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК Выбрана
		|ИЗ
		|	Справочник.УчетныеЗаписиЭлектроннойПочты КАК УчетныеЗаписиЭлектроннойПочты
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_МоиУчетныеЗаписи КАК ВТ_МоиУчетныеЗаписи
		|		ПО (ВТ_МоиУчетныеЗаписи.Ссылка = УчетныеЗаписиЭлектроннойПочты.Ссылка)
		|ГДЕ
		|	(НЕ УчетныеЗаписиЭлектроннойПочты.ПометкаУдаления
		|			ИЛИ &ОтображатьУдаленные)
		|
		|УПОРЯДОЧИТЬ ПО
		|	ПользовательВключенВОтветственные УБЫВ,
		|	Представление";
		
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("ТекущийПользователь", ПользователиКлиентСервер.ТекущийПользователь());
	Запрос.УстановитьПараметр("СписокВыбранных", СписокВыбранных);
	Запрос.УстановитьПараметр("ОтображатьУдаленные", ОтображатьУдаленные);
	
	РезультатыЗапросов = Запрос.ВыполнитьПакет();
	
	ДеревоУЗОбъект = РеквизитФормыВЗначение("ДеревоУЗ");
	ДеревоУЗОбъект.Строки.Очистить();
	
	// Если пользователь выбран ответственным по нескольким учетным записям, 
	// выводим предопределенный элемент "МоиУчетныеЗаписи"
	ВыборкаКоличестваМоихУчетныхЗаписей = РезультатыЗапросов[0].Выбрать();
	ВыборкаКоличестваМоихУчетныхЗаписей.Следующий();
	
	СтрокаВсеМоиУЗ = Неопределено;
	Если ВыборкаКоличестваМоихУчетныхЗаписей.Количество > 1 Тогда
		
		СтрокаВсеМоиУЗ = ДеревоУЗОбъект.Строки.Добавить();
		СтрокаВсеМоиУЗ.Ссылка = "МоиУчетныеЗаписи";
		СтрокаВсеМоиУЗ.ПользовательВключенВОтветственные = Истина;
		СтрокаВсеМоиУЗ.Представление = "Мои учетные записи";
		СтрокаВсеМоиУЗ.Выбрана = СписокВыбранных.НайтиПоЗначению("МоиУчетныеЗаписи") <> Неопределено;
		
	КонецЕсли;
	
	// Добавление записей в дерево
	Выборка = РезультатыЗапросов[1].Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Если СтрокаВсеМоиУЗ <> Неопределено И Выборка.ПользовательВключенВОтветственные Тогда
			СтрокаУЗ = СтрокаВсеМоиУЗ.Строки.Добавить();
		Иначе
			СтрокаУЗ = ДеревоУЗОбъект.Строки.Добавить();
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(СтрокаУЗ, Выборка);
		
	КонецЦикла;
	
	ЗначениеВДанныеФормы(ДеревоУЗОбъект, ДеревоУЗ);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПометки(СтрокиДерева, ЗначениеПометки)
	
	Для Каждого СтрокаДерева из СтрокиДерева Цикл
		
		Если ЗначениеПометки Тогда
			СписокВыбранных.Добавить(СтрокаДерева.Ссылка);
		КонецЕсли;
			
		СтрокаДерева.Выбрана = ЗначениеПометки;
		ЗаполнитьПометки(СтрокаДерева.ПолучитьЭлементы(), ЗначениеПометки);
		
	КонецЦикла;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

&НаКлиенте
Процедура ДеревоУЗПометкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ДеревоУЗ.ТекущиеДанные;
	
	Если ТекущиеДанные.Выбрана Тогда
		СписокВыбранных.Добавить(ТекущиеДанные.Ссылка,, ТекущиеДанные.ПометкаУдаления);
	Иначе
		СписокВыбранных.Удалить(СписокВыбранных.НайтиПоЗначению(ТекущиеДанные.Ссылка));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоУЗВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Элементы.ДеревоУЗ.ТекущиеДанные.Выбрана = Не Элементы.ДеревоУЗ.ТекущиеДанные.Выбрана;
	ДеревоУЗПометкаПриИзменении(Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура Готово(Команда)
	ВыбранныеЗначения = СписокВыбранных.ВыгрузитьЗначения();
	Закрыть(ВыбранныеЗначения);
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	Закрыть(Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура ОтметитьВсе(Команда)
	ЗаполнитьПометки(ДеревоУЗ.ПолучитьЭлементы(), Истина);
КонецПроцедуры

&НаКлиенте
Процедура СнятьВсе(Команда)
	ЗаполнитьПометки(ДеревоУЗ.ПолучитьЭлементы(), Ложь);
	СписокВыбранных.Очистить();
КонецПроцедуры

&НаКлиенте
Процедура ОтображатьУдаленныеИзменение(Команда)
		
	ОтображатьУдаленные = Не ОтображатьУдаленные;
	Элементы.ДеревоУЗОтображатьУдаленные.Пометка = ОтображатьУдаленные;
	
	Если ДеревоУЗ.ПолучитьЭлементы() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	// Сохранение состояния узла "Все "Мои учетные записи""
	ИдентификаторСтрокиВсеМоиУЗ = Неопределено;
	СтрокаДерева = ДеревоУЗ.ПолучитьЭлементы()[0];
	Если СтрокаДерева.Ссылка = "МоиУчетныеЗаписи" Тогда
		РазвернутьУзел = Элементы.ДеревоУЗ.Развернут(СтрокаДерева.ПолучитьИдентификатор());
	КонецЕсли;
	
	ОтображатьУдаленныеИзменениеСервер();
	
	// Восстановление состояния узла "Все "Мои учетные записи""
	СтрокаДерева = ДеревоУЗ.ПолучитьЭлементы()[0];
	Если СтрокаДерева.Ссылка = "МоиУчетныеЗаписи" Тогда
		Если РазвернутьУзел Тогда
			Элементы.ДеревоУЗ.Развернуть(СтрокаДерева.ПолучитьИдентификатор());
		Иначе
			Элементы.ДеревоУЗ.Свернуть(СтрокаДерева.ПолучитьИдентификатор());
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОтображатьУдаленныеИзменениеСервер()
	
	Если Не ОтображатьУдаленные Тогда
		// Помеченные на удаление элементы удаляются из списка выбранных
		КоличествоВыбранных = СписокВыбранных.Количество();
		Для й = 1 по КоличествоВыбранных Цикл
			ВыбранныйЭлемент = СписокВыбранных[КоличествоВыбранных - й];
			Если ВыбранныйЭлемент.Пометка Тогда
				СписокВыбранных.Удалить(ВыбранныйЭлемент);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	ЗаполнитьДеревоУЗ();
	
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить(
		ИмяФормы,
		"ОтображатьУдаленные",
		ОтображатьУдаленные);
	
КонецПроцедуры


