&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("ПоказатьУправлениеФО") Тогда
		ИспользоватьЛегкуюПочту = РегистрыСведений.ИспользованиеПочты.ПолучитьИспользованиеЛегкойПочты();
		НачальноеЗначениеИспользоватьЛегкуюПочту = ИспользоватьЛегкуюПочту;
		Элементы.Страницы.Доступность = ИспользоватьЛегкуюПочту;
	Иначе
		Элементы.ИспользоватьЛегкуюПочту.Видимость = Ложь;
	КонецЕсли;
	
	ПрофилиДляОтправкиХранилище = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("РаботаСПочтой", "ПрофилиДляОтправки");
	Если ТипЗнч(ПрофилиДляОтправкиХранилище) <> Тип("СписокЗначений") Тогда
		ПрофилиДляОтправкиХранилище = Новый СписокЗначений;
	КонецЕсли;
	
	ПрофилиДляЗагрузкиХранилище = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("РаботаСПочтой", "ПрофилиДляЗагрузки");
	Если ТипЗнч(ПрофилиДляЗагрузкиХранилище) <> Тип("СписокЗначений") Тогда
		ПрофилиДляЗагрузкиХранилище = Новый СписокЗначений;
	КонецЕсли;
	
	ПрофильДляОтправки =
		ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
			"РаботаСПочтой",
			"ПрофильДляОтправки");
	
	ПрофильДляЗагрузки =
		ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
			"РаботаСПочтой",
			"ПрофильДляЗагрузки");
	
	ПрикладыватьФайлВзаимодействияСЭД =
		ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
			"РаботаСПочтой",
			"ОтправкаПрикладыватьФайлВзаимодействияСЭД",
			Перечисления.ДаНетСпрашивать.Спрашивать);
	
	ОтправлятьЭП =
		ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
			"ЭП",
			"ОтправлятьПодписиЭППоПочте",
			Перечисления.ДействияПриОтправкеПоПочтеЭП.Спрашивать);
	
	ПодписьДляНовыхСообщений =
		ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
			"РаботаСПочтой",
			"ОтправкаПодписьСообщения",
			"");
	
	ОбновитьТаблицуПрофилейДляОтправки();
	ОбновитьТаблицуПрофилейДляЗагрузки();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если ОбщегоНазначенияДокументооборотКлиент.ПередЗакрытием(
		Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка, Модифицированность) Тогда
		Возврат;
	КонецЕсли;
	
	Если Не Модифицированность Тогда
		Возврат;
	КонецЕсли;
	
	Отказ = Истина;
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"ОбработатьЗакрытие", 
		ЭтотОбъект);
	
	ПоказатьВопрос(ОписаниеОповещения,
		НСтр("ru = 'Данные были изменены. Сохранить изменения?'; en = 'Data has been changed. Save changes?'"),
		РежимДиалогаВопрос.ДаНетОтмена,,
		КодВозвратаДиалога.Да);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьЗакрытие(Ответ, Параметры) Экспорт 
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		СохранитьНастройки();
		Модифицированность = Ложь;
		Закрыть();
	ИначеЕсли Ответ = КодВозвратаДиалога.Отмена Тогда
		Возврат;
	Иначе
		Если ИспользоватьЛегкуюПочту <> НачальноеЗначениеИспользоватьЛегкуюПочту Тогда
			ОтменаСервер();
		КонецЕсли;
		Модифицированность = Ложь;
		Если ЭтаФорма.Открыта() Тогда
			ЭтаФорма.Закрыть();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьТаблицуПрофилейДляОтправки()
	
	ТекПрофиль = Неопределено;
	Если ЗначениеЗаполнено(Элементы.ПрофилиДляОтправки.ТекущаяСтрока) Тогда
		ТекущиеДанные = ПрофилиДляОтправки.НайтиПоИдентификатору(Элементы.ПрофилиДляОтправки.ТекущаяСтрока);
		ТекПрофиль = ТекущиеДанные.Профиль;
	КонецЕсли;
	
	ПрофилиДляОтправки.Очистить();
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	УчетныеЗаписиЭлектроннойПочты.Ссылка КАК Ссылка,
		|	УчетныеЗаписиЭлектроннойПочты.ИспользоватьДляОтправки КАК ИспользоватьДляОтправки
		|ИЗ
		|	Справочник.УчетныеЗаписиЭлектроннойПочты КАК УчетныеЗаписиЭлектроннойПочты
		|ГДЕ
		|	УчетныеЗаписиЭлектроннойПочты.ВариантИспользования = ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияПочты.Легкая)");

	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Строки = ПрофилиДляОтправки.НайтиСтроки(Новый Структура("Профиль", Выборка.Ссылка));
		Если Строки.Количество() = 0 Тогда
			ПрофилиСтрока = ПрофилиДляОтправки.Добавить();
		Иначе
			ПрофилиСтрока = Строки[0];
		КонецЕсли;
		ПрофилиСтрока.ВидПочтовогоКлиента = Перечисления.ВидыПочтовыхКлиентов.ИнтернетПочта;
		ПрофилиСтрока.Профиль = Выборка.Ссылка;
		ПрофилиСтрока.Использовать = Выборка.ИспользоватьДляОтправки;
	КонецЦикла;
	
	Для каждого ХранилищеСтрока Из ПрофилиДляОтправкиХранилище.ВыгрузитьЗначения() Цикл
		Строки = ПрофилиДляОтправки.НайтиСтроки(Новый Структура("Профиль", ХранилищеСтрока.Наименование));
		Если Строки.Количество() > 0 Тогда
			Строки[0].ВидПочтовогоКлиента = ХранилищеСтрока.ВидПочтовогоКлиента;
			Строки[0].Использовать = ХранилищеСтрока.Использовать;
		Иначе
			ПрофилиСтрока = ПрофилиДляОтправки.Добавить();
			ПрофилиСтрока.Профиль = ХранилищеСтрока.Наименование;
			ПрофилиСтрока.ВидПочтовогоКлиента = ХранилищеСтрока.ВидПочтовогоКлиента;
			ПрофилиСтрока.Использовать = ХранилищеСтрока.Использовать;
		КонецЕсли;
	КонецЦикла;
	
	УстановитьПрофильПоУмолчаниюСервер(ПрофилиДляОтправки, ПрофильДляОтправки);
	
	Если ЗначениеЗаполнено(ТекПрофиль) Тогда
		Для каждого ПрофилиДляОтправкиСтрока Из ПрофилиДляОтправки Цикл
			Если ПрофилиДляОтправкиСтрока.Профиль = ТекПрофиль Тогда
				Элементы.ПрофилиДляОтправки.ТекущаяСтрока = ПрофилиДляОтправкиСтрока.ПолучитьИдентификатор();
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьТаблицуПрофилейДляЗагрузки()
	
	ТекПрофиль = Неопределено;
	Если ЗначениеЗаполнено(Элементы.ПрофилиДляЗагрузки.ТекущаяСтрока) Тогда
		ТекущиеДанные = ПрофилиДляЗагрузки.НайтиПоИдентификатору(Элементы.ПрофилиДляЗагрузки.ТекущаяСтрока);
		ТекПрофиль = ТекущиеДанные.Профиль;
	КонецЕсли;
	
	ПрофилиДляЗагрузки.Очистить();
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	УчетныеЗаписиЭлектроннойПочты.Ссылка КАК Ссылка,
		|	УчетныеЗаписиЭлектроннойПочты.ИспользоватьДляПолучения КАК ИспользоватьДляПолучения
		|ИЗ
		|	Справочник.УчетныеЗаписиЭлектроннойПочты КАК УчетныеЗаписиЭлектроннойПочты
		|ГДЕ
		|	УчетныеЗаписиЭлектроннойПочты.ВариантИспользования = ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияПочты.Легкая)");

	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Строки = ПрофилиДляЗагрузки.НайтиСтроки(Новый Структура("Профиль", Выборка.Ссылка));
		Если Строки.Количество() = 0 Тогда
			ПрофилиСтрока = ПрофилиДляЗагрузки.Добавить();
		Иначе
			ПрофилиСтрока = Строки[0];
		КонецЕсли;
		ПрофилиСтрока.ВидПочтовогоКлиента = Перечисления.ВидыПочтовыхКлиентов.ИнтернетПочта;
		ПрофилиСтрока.Профиль = Выборка.Ссылка;
		ПрофилиСтрока.Использовать = Выборка.ИспользоватьДляПолучения;
	КонецЦикла;
	
	Для каждого ХранилищеСтрока Из ПрофилиДляЗагрузкиХранилище.ВыгрузитьЗначения() Цикл
		Строки = ПрофилиДляЗагрузки.НайтиСтроки(Новый Структура("Профиль", ХранилищеСтрока.Наименование));
		Если Строки.Количество() > 0 Тогда
			Строки[0].ВидПочтовогоКлиента = ХранилищеСтрока.ВидПочтовогоКлиента;
			Строки[0].Использовать = ХранилищеСтрока.Использовать;
		Иначе
			ПрофилиСтрока = ПрофилиДляЗагрузки.Добавить();
			ПрофилиСтрока.Профиль = ХранилищеСтрока.Наименование;
			ПрофилиСтрока.ВидПочтовогоКлиента = ХранилищеСтрока.ВидПочтовогоКлиента;
			ПрофилиСтрока.Использовать = ХранилищеСтрока.Использовать;
		КонецЕсли;
	КонецЦикла;
	
	УстановитьПрофильПоУмолчаниюСервер(ПрофилиДляЗагрузки, ПрофильДляЗагрузки);
	
	Если ЗначениеЗаполнено(ТекПрофиль) Тогда
		Для каждого ПрофилиДляЗагрузкиСтрока Из ПрофилиДляЗагрузки Цикл
			Если ПрофилиДляЗагрузкиСтрока.Профиль = ТекПрофиль Тогда
				Элементы.ПрофилиДляЗагрузки.ТекущаяСтрока = ПрофилиДляЗагрузкиСтрока.ПолучитьИдентификатор();
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьПрофильПоУмолчаниюСервер(Профили, Профиль, Значение = Истина)
	
	Для каждого ПрофилиСтрока Из Профили Цикл
		ПрофилиСтрока.ПоУмолчанию = (ПрофилиСтрока.Профиль = Профиль) И Значение;
		Если ПрофилиСтрока.ПоУмолчанию Тогда
			ПрофилиСтрока.Использовать = Истина;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьПрофильПоУмолчаниюКлиент(Профили, Профиль, Значение = Истина)
	
	Для каждого ПрофилиСтрока Из Профили Цикл
		ПрофилиСтрока.ПоУмолчанию = (ПрофилиСтрока.Профиль = Профиль) И Значение;
		Если ПрофилиСтрока.ПоУмолчанию Тогда
			ПрофилиСтрока.Использовать = Истина;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПрофилиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ВидПочтовогоКлиента = Элемент.ТекущиеДанные.ВидПочтовогоКлиента;
	Профиль = Элемент.ТекущиеДанные.Профиль;
	Если ВидПочтовогоКлиента = ПредопределенноеЗначение("Перечисление.ВидыПочтовыхКлиентов.ИнтернетПочта") Тогда
		СтандартнаяОбработка = Ложь;
		ПараметрыОткрытия = Новый Структура("Ключ", Профиль);
		
		ПараметрыОповещения = Новый Структура;
		ПараметрыОповещения.Вставить("Профиль", Профиль);
		ПараметрыОповещения.Вставить("Элемент", Элемент);
		
		ОписаниеОповещения = 
			Новый ОписаниеОповещения("ПрофилиВыборПродолжить", ЭтотОбъект, ПараметрыОповещения);
		
		ОткрытьФорму("Справочник.УчетныеЗаписиЭлектроннойПочты.Форма.ФормаЭлемента",
			ПараметрыОткрытия, УникальныйИдентификатор,,,, ОписаниеОповещения,
			РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
		
	Иначе
		Если Элемент.Имя = "ПрофилиДляОтправки" Тогда
			ДанныеПрофиля = ЛегкаяПочтаКлиентСервер.ПолучитьПрофиль(ПрофилиДляОтправкиХранилище, Профиль);
			Если ДанныеПрофиля = Неопределено Тогда
				Возврат;
			КонецЕсли;
			
			ПараметрыОповещения = Новый Структура;
			ПараметрыОповещения.Вставить("Профиль", Профиль);
			ПараметрыОповещения.Вставить("Элемент", Элемент);
			
			ОписаниеОповещения = 
				Новый ОписаниеОповещения("ПрофилиВыборПродолжитьПослеРедактированияПрофиляОтправки",
					ЭтотОбъект, ПараметрыОповещения);
			
			ЛегкаяПочтаКлиент.РедактироватьПрофильОтправки(
				ДанныеПрофиля, УникальныйИдентификатор, ОписаниеОповещения);
			
			
		ИначеЕсли Элемент.Имя = "ПрофилиДляЗагрузки" Тогда
			ДанныеПрофиля = ЛегкаяПочтаКлиентСервер.ПолучитьПрофиль(ПрофилиДляЗагрузкиХранилище, Профиль);
			Если ДанныеПрофиля = Неопределено Тогда
				Возврат;
			КонецЕсли;
			
			ПараметрыОповещения = Новый Структура;
			ПараметрыОповещения.Вставить("Профиль", Профиль);
			ПараметрыОповещения.Вставить("Элемент", Элемент);
			
			ОписаниеОповещения = 
				Новый ОписаниеОповещения("ПрофилиВыборПродолжитьПослеРедактированияПрофиляЗагрузки",
					ЭтотОбъект, ПараметрыОповещения);
			
			ЛегкаяПочтаКлиент.РедактироватьПрофильЗагрузки(
				ДанныеПрофиля, УникальныйИдентификатор, ОписаниеОповещения);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПрофилиВыборПродолжить(Результат, Параметры) Экспорт
	
	Профиль = Параметры.Профиль;
	Элемент = Параметры.Элемент;
	
	ДанныеПрофиля = ПолучитьДанныеПрофиляSMTPPOP3(Профиль);
	Если Элемент.Имя = "ПрофилиДляОтправки" Тогда
		Элемент.ТекущиеДанные.Использовать = ДанныеПрофиля.ИспользоватьДляОтправки;
		Если НЕ ДанныеПрофиля.ИспользоватьДляОтправки И ПрофильДляОтправки = Профиль Тогда
			ПрофильДляОтправки = Неопределено;
		КонецЕсли;
	ИначеЕсли Элемент.Имя = "ПрофилиДляЗагрузки" Тогда
		Элемент.ТекущиеДанные.Использовать = ДанныеПрофиля.ИспользоватьДляПолучения;
		Если НЕ ДанныеПрофиля.ИспользоватьДляПолучения И ПрофильДляЗагрузки = Профиль Тогда
			ПрофильДляЗагрузки = Неопределено;
		КонецЕсли;
	КонецЕсли;
	ОбновитьТаблицуПрофилейДляЗагрузки();
	ОбновитьТаблицуПрофилейДляОтправки();
	
КонецПроцедуры

&НаКлиенте
Процедура ПрофилиВыборПродолжитьПослеРедактированияПрофиляЗагрузки(ДанныеПрофиля, Параметры) Экспорт
	
	Если ТипЗнч(ДанныеПрофиля) <> Тип("Структура") Тогда
		Возврат;
	КонецЕсли;
	
	Профиль = Параметры.Профиль;
	Элемент = Параметры.Элемент;
	
	ЛегкаяПочтаКлиентСервер.ОбновитьПрофиль(ПрофилиДляЗагрузкиХранилище, Профиль, ДанныеПрофиля);
	Элемент.ТекущиеДанные.Профиль = ДанныеПрофиля.Наименование;
	Элемент.ТекущиеДанные.Использовать = ДанныеПрофиля.Использовать;
	Если ПрофильДляЗагрузки = Профиль Тогда
		Если ДанныеПрофиля.Использовать Тогда
			ПрофильДляЗагрузки = ДанныеПрофиля.Наименование;
		Иначе
			ПрофильДляЗагрузки = Неопределено;
		КонецЕсли;
	КонецЕсли;
	ОбновитьТаблицуПрофилейДляЗагрузки();
	
КонецПроцедуры

&НаКлиенте
Процедура ПрофилиВыборПродолжитьПослеРедактированияПрофиляОтправки(ДанныеПрофиля, Параметры) Экспорт
	
	Если ТипЗнч(ДанныеПрофиля) <> Тип("Структура") Тогда
		Возврат;
	КонецЕсли;
	
	Профиль = Параметры.Профиль;
	Элемент = Параметры.Элемент;
	
	ЛегкаяПочтаКлиентСервер.ОбновитьПрофиль(ПрофилиДляОтправкиХранилище, Профиль, ДанныеПрофиля);
	Элемент.ТекущиеДанные.Профиль = ДанныеПрофиля.Наименование;
	Элемент.ТекущиеДанные.Использовать = ДанныеПрофиля.Использовать;
	Если ПрофильДляОтправки = Профиль Тогда
		Если ДанныеПрофиля.Использовать Тогда
			ПрофильДляОтправки = ДанныеПрофиля.Наименование;
		Иначе
			ПрофильДляОтправки = Неопределено;
		КонецЕсли;
	КонецЕсли;
	ОбновитьТаблицуПрофилейДляОтправки();
	
КонецПроцедуры

&НаСервере
Функция ПолучитьДанныеПрофиляSMTPPOP3(Профиль)
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	УчетныеЗаписиЭлектроннойПочты.ИспользоватьДляОтправки,
		|	УчетныеЗаписиЭлектроннойПочты.ИспользоватьДляПолучения
		|ИЗ
		|	Справочник.УчетныеЗаписиЭлектроннойПочты КАК УчетныеЗаписиЭлектроннойПочты
		|ГДЕ
		|	УчетныеЗаписиЭлектроннойПочты.Ссылка = &Ссылка");
	Запрос.УстановитьПараметр("Ссылка", Профиль);
	Результат = Новый Структура("ИспользоватьДляОтправки, ИспользоватьДляПолучения");
	ЗаполнитьЗначенияСвойств(Результат, Запрос.Выполнить().Выгрузить()[0]);
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура ДобавитьПрофильSMTPPOP3(Команда = Неопределено)
	
	ОписаниеОповещения = 
		Новый ОписаниеОповещения("ДобавитьПрофильSMTPPOP3Продолжение", ЭтотОбъект);
	
	ОткрытьФорму("Справочник.УчетныеЗаписиЭлектроннойПочты.ФормаОбъекта",, УникальныйИдентификатор,,,,
		ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьПрофильSMTPPOP3Продолжение(Результат, Параметры) Экспорт
	
	ОбновитьТаблицуПрофилейДляЗагрузки();
	ОбновитьТаблицуПрофилейДляОтправки();
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьПрофильДляЗагрузкиMSOutlook(Команда = Неопределено)
	
	ДобавитьПрофильДляЗагрузки(ПредопределенноеЗначение("Перечисление.ВидыПочтовыхКлиентов.MSOutlook"));
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьПрофильДляЗагрузкиMAPI(Команда = Неопределено)
	
	ДобавитьПрофильДляЗагрузки(ПредопределенноеЗначение("Перечисление.ВидыПочтовыхКлиентов.Почта"));
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьПрофильДляЗагрузки(ВидПочтовогоКлиента)
	
	ДанныеПрофиля = ЛегкаяПочтаКлиентСервер.НовыйПрофиль("", ВидПочтовогоКлиента, Истина);
	
	ОписаниеОповещения = 
		Новый ОписаниеОповещения("ДобавитьПрофильДляЗагрузкиПродолжение", ЭтотОбъект, ВидПочтовогоКлиента);
	
	ЛегкаяПочтаКлиент.РедактироватьПрофильЗагрузки(
		ДанныеПрофиля, УникальныйИдентификатор, ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьПрофильДляЗагрузкиПродолжение(ДанныеПрофиля, ВидПочтовогоКлиента) Экспорт
	
	Если ТипЗнч(ДанныеПрофиля) <> Тип("Структура") Тогда
		Возврат;
	КонецЕсли;
	
	ЛегкаяПочтаКлиентСервер.СохранитьПрофиль(ПрофилиДляЗагрузкиХранилище, ДанныеПрофиля);
	Профиль = ПрофилиДляЗагрузки.Добавить();
	Профиль.ВидПочтовогоКлиента = ВидПочтовогоКлиента;
	Профиль.Профиль = ДанныеПрофиля.Наименование;
	Профиль.Использовать = ДанныеПрофиля.Использовать;
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьПрофильДляОтправкиMSOutlook(Команда = Неопределено)
	
	ВидПочтовогоКлиента = ПредопределенноеЗначение("Перечисление.ВидыПочтовыхКлиентов.MSOutlook");
	ПрофильСтр = Строка(ВидПочтовогоКлиента);
	Для каждого Элемент Из ПрофилиДляОтправкиХранилище Цикл
		Если Элемент.Представление = ПрофильСтр Тогда
			ПоказатьПредупреждение(, НСтр("ru = 'В списке профилей для отправки уже присутствует профиль '; en = 'In the list of profiles to send profile already exists '") + ПрофильСтр);
			Возврат;
		КонецЕсли;
	КонецЦикла;
	
	СтруктураПрофиля = Новый Структура;
	СтруктураПрофиля.Вставить("Наименование", ПрофильСтр);
	СтруктураПрофиля.Вставить("ВидПочтовогоКлиента", ВидПочтовогоКлиента);
	СтруктураПрофиля.Вставить("Использовать", Истина);
	СтруктураПрофиля.Вставить("Данные", Новый Структура);
	ЛегкаяПочтаКлиентСервер.СохранитьПрофиль(ПрофилиДляОтправкиХранилище, СтруктураПрофиля);
	
	Профиль = ПрофилиДляОтправки.Добавить();
	Профиль.ВидПочтовогоКлиента = СтруктураПрофиля.ВидПочтовогоКлиента;
	Профиль.Профиль = СтруктураПрофиля.Наименование;
	Профиль.Использовать = СтруктураПрофиля.Использовать;
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьПрофильДляОтправкиMAPI(Команда = Неопределено)
	
	ДобавитьПрофильДляОтправки(ПредопределенноеЗначение("Перечисление.ВидыПочтовыхКлиентов.Почта"));
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьПрофильДляОтправкиTheBat(Команда = Неопределено)
	
	ДобавитьПрофильДляОтправки(ПредопределенноеЗначение("Перечисление.ВидыПочтовыхКлиентов.TheBat"));
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьПрофильДляОтправкиMozillaThunderbird(Команда = Неопределено)
	
	ДобавитьПрофильДляОтправки(ПредопределенноеЗначение("Перечисление.ВидыПочтовыхКлиентов.MozillaThunderbird"));
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьПрофильДляОтправки(ВидПочтовогоКлиента)
	
	ДанныеПрофиля = ЛегкаяПочтаКлиентСервер.НовыйПрофиль("", ВидПочтовогоКлиента, Истина);
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"ДобавитьПрофильДляОтправкиПродолжить",
		ЭтотОбъект,
		ВидПочтовогоКлиента);
	
	ЛегкаяПочтаКлиент.РедактироватьПрофильОтправки(ДанныеПрофиля, УникальныйИдентификатор, ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьПрофильДляОтправкиПродолжить(ДанныеПрофиля, ВидПочтовогоКлиента) Экспорт
	
	Если ТипЗнч(ДанныеПрофиля) <> Тип("Структура") Тогда
		Возврат;
	КонецЕсли;
	
	ЛегкаяПочтаКлиентСервер.СохранитьПрофиль(ПрофилиДляОтправкиХранилище, ДанныеПрофиля);
	Профиль = ПрофилиДляОтправки.Добавить();
	Профиль.ВидПочтовогоКлиента = ВидПочтовогоКлиента;
	Профиль.Профиль = ДанныеПрофиля.Наименование;
	Профиль.Использовать = ДанныеПрофиля.Использовать;
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьПрофильПоУмолчаниюОтправка(Команда)
	
	Если Элементы.ПрофилиДляОтправки.ТекущаяСтрока = Неопределено Тогда
		ВывестиСигнал();
		ПоказатьПредупреждение(, НСтр("ru = 'Не выбран профиль'; en = 'Profile is not selected'"));
		Возврат;
	КонецЕсли;
	
	Профиль = Элементы.ПрофилиДляОтправки.ТекущиеДанные.Профиль;
	ПоУмолчанию = НЕ Элементы.ПрофилиДляОтправки.ТекущиеДанные.ПоУмолчанию;
	Использовать = Элементы.ПрофилиДляОтправки.ТекущиеДанные.Использовать;
	Если ПоУмолчанию И НЕ Использовать Тогда
		Если НЕ УстановитьИспользованиеПрофиляОтправки(Профиль, Истина) Тогда
			ВывестиСигнал();
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ПрофильДляОтправки = ?(ПоУмолчанию, Профиль, Неопределено);
	УстановитьПрофильПоУмолчаниюКлиент(ПрофилиДляОтправки, Профиль, ПоУмолчанию);
	ПрофилиДляОтправкиПриАктивизацииСтроки(Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьПрофильПоУмолчаниюЗагрузка(Команда)
	
	Если Элементы.ПрофилиДляЗагрузки.ТекущаяСтрока = Неопределено Тогда
		ВывестиСигнал();
		ПоказатьПредупреждение(, НСтр("ru = 'Не выбран профиль'; en = 'Profile is not selected'"));
		Возврат;
	КонецЕсли;
	
	Профиль = Элементы.ПрофилиДляЗагрузки.ТекущиеДанные.Профиль;
	ПоУмолчанию = НЕ Элементы.ПрофилиДляЗагрузки.ТекущиеДанные.ПоУмолчанию;
	Использовать = Элементы.ПрофилиДляЗагрузки.ТекущиеДанные.Использовать;
	Если ПоУмолчанию И НЕ Использовать Тогда
		Если НЕ УстановитьИспользованиеПрофиляЗагрузки(Профиль, Истина) Тогда
			ВывестиСигнал();
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ПрофильДляЗагрузки = ?(ПоУмолчанию, Профиль, Неопределено);
	УстановитьПрофильПоУмолчаниюКлиент(ПрофилиДляЗагрузки, Профиль, ПоУмолчанию);
	ПрофилиДляЗагрузкиПриАктивизацииСтроки(Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура ОК(Команда)
	
	СохранитьНастройки();
	Модифицированность = Ложь;
	Закрыть(КодВозвратаДиалога.ОК);
	
КонецПроцедуры

&НаКлиенте
Процедура ПрофилиПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Отказ = Истина;
	
	СписокТипов = Новый СписокЗначений;
	
	СписокТипов.Добавить(ПредопределенноеЗначение("Перечисление.ВидыПочтовыхКлиентов.ИнтернетПочта"));
	Если Элемент.Имя = "ПрофилиДляОтправки" Тогда
		СписокТипов.Добавить(ПредопределенноеЗначение("Перечисление.ВидыПочтовыхКлиентов.Почта"));
		СписокТипов.Добавить(ПредопределенноеЗначение("Перечисление.ВидыПочтовыхКлиентов.MSOutlook"));
		СписокТипов.Добавить(ПредопределенноеЗначение("Перечисление.ВидыПочтовыхКлиентов.TheBat"));
		СписокТипов.Добавить(ПредопределенноеЗначение("Перечисление.ВидыПочтовыхКлиентов.MozillaThunderbird"));
	ИначеЕсли Элемент.Имя = "ПрофилиДляЗагрузки" Тогда
		СписокТипов.Добавить(ПредопределенноеЗначение("Перечисление.ВидыПочтовыхКлиентов.Почта"));
		СписокТипов.Добавить(ПредопределенноеЗначение("Перечисление.ВидыПочтовыхКлиентов.MSOutlook"));
	Иначе
		ВызватьИсключение "";
	КонецЕсли;
	
	ОписаниеОповещения = 
		Новый ОписаниеОповещения("ПрофилиПередНачаломДобавленияПродолжение", ЭтотОбъект, Элемент);
	
	СписокТипов.ПоказатьВыборЭлемента(
		ОписаниеОповещения, НСтр("ru = 'Выберите тип почтового профиля'; en = 'Select the type of mail profile'"));
	
КонецПроцедуры

&НаКлиенте
Процедура ПрофилиПередНачаломДобавленияПродолжение(Выбор, Элемент) Экспорт
	
	Если Выбор = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Выбор.Значение = ПредопределенноеЗначение("Перечисление.ВидыПочтовыхКлиентов.ИнтернетПочта") Тогда
		ДобавитьПрофильSMTPPOP3();
	Иначе
		Если Элемент.Имя = "ПрофилиДляЗагрузки" Тогда
			ДобавитьПрофильДляЗагрузки(Выбор.Значение);
		ИначеЕсли Элемент.Имя = "ПрофилиДляОтправки" Тогда
			ДобавитьПрофильДляОтправки(Выбор.Значение);
		Иначе
			ВызватьИсключение "";
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПрофилиПередУдалением(Элемент, Отказ)
	
	Профиль = Элемент.ТекущиеДанные.Профиль;
	Если ТипЗнч(Профиль) = Тип("СправочникСсылка.УчетныеЗаписиЭлектроннойПочты") Тогда
		Отказ = Истина;
		ВывестиСигнал();
		Возврат;
	КонецЕсли;
	Если Элемент.Имя = "ПрофилиДляЗагрузки" Тогда
		ЛегкаяПочтаКлиентСервер.УдалитьПрофиль(ПрофилиДляЗагрузкиХранилище, Профиль);
		Если ПрофильДляЗагрузки = Профиль Тогда
			ПрофильДляЗагрузки = Неопределено;
		КонецЕсли;
	ИначеЕсли Элемент.Имя = "ПрофилиДляОтправки" Тогда
		ЛегкаяПочтаКлиентСервер.УдалитьПрофиль(ПрофилиДляОтправкиХранилище, Профиль);
		Если ПрофильДляОтправки = Профиль Тогда
			ПрофильДляОтправки = Неопределено;
		КонецЕсли;
	Иначе
		ВызватьИсключение "";
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВывестиСигнал()
	
	#Если НЕ ВебКлиент Тогда
		Сигнал();
	#КонецЕсли
	
КонецПроцедуры

&НаСервере
Процедура СохранитьНастройки()
	
	МассивСтруктур = Новый Массив;
	
	ДобавитьСтруктуруНастройки(МассивСтруктур, "РаботаСПочтой", "ПрофильДляЗагрузки", ПрофильДляЗагрузки);
	ДобавитьСтруктуруНастройки(МассивСтруктур, "РаботаСПочтой", "ПрофильДляОтправки", ПрофильДляОтправки);
	ДобавитьСтруктуруНастройки(МассивСтруктур, "РаботаСПочтой", "ПрофилиДляОтправки", ПрофилиДляОтправкиХранилище);
	ДобавитьСтруктуруНастройки(МассивСтруктур, "РаботаСПочтой", "ПрофилиДляЗагрузки", ПрофилиДляЗагрузкиХранилище);
	
	ДобавитьСтруктуруНастройки(МассивСтруктур, "РаботаСПочтой", "ОтправкаПрикладыватьФайлВзаимодействияСЭД", ПрикладыватьФайлВзаимодействияСЭД);
	ДобавитьСтруктуруНастройки(МассивСтруктур, "РаботаСПочтой", "ОтправкаПодписьСообщения", ПодписьДляНовыхСообщений);
	ДобавитьСтруктуруНастройки(МассивСтруктур, "ЭП", "ОтправлятьПодписиЭППоПочте", ОтправлятьЭП);
	
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранитьМассив(МассивСтруктур);
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьСтруктуруНастройки(МассивСтруктур, Объект, Настройка, Значение)
	
	МассивСтруктур.Добавить(Новый Структура ("Объект, Настройка, Значение", Объект, Настройка, Значение));
	
КонецПроцедуры

&НаКлиенте
Процедура ПрофилиПередНачаломИзменения(Элемент, Отказ)
	
	Профиль = Элемент.ТекущиеДанные.Профиль;
	Использовать = НЕ Элемент.ТекущиеДанные.Использовать;
	
	Если Элемент.Имя = "ПрофилиДляЗагрузки" Тогда
		Если НЕ УстановитьИспользованиеПрофиляЗагрузки(Профиль, Использовать) Тогда
			Отказ = Истина;
			Возврат;
		КонецЕсли;
		
	ИначеЕсли Элемент.Имя = "ПрофилиДляОтправки" Тогда
		Если НЕ УстановитьИспользованиеПрофиляОтправки(Профиль, Использовать) Тогда
			Отказ = Истина;
			Возврат;
		КонецЕсли;
		
	Иначе
		ВызватьИсключение "";
		
	КонецЕсли;
	
	Если НЕ Использовать Тогда
		Если Элемент.Имя = "ПрофилиДляЗагрузки" И ПрофильДляЗагрузки = Профиль Тогда
			ПрофильДляЗагрузки = Неопределено;
			ОбновитьТаблицуПрофилейДляЗагрузки();
		ИначеЕсли НЕ Использовать И Элемент.Имя = "ПрофилиДляОтправки" И ПрофильДляОтправки = Профиль Тогда
			ПрофильДляОтправки = Неопределено;
			ОбновитьТаблицуПрофилейДляОтправки();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция УстановитьИспользованиеПрофиляОтправки(Профиль, Использовать)
	
	Если ТипЗнч(Профиль) = Тип("СправочникСсылка.УчетныеЗаписиЭлектроннойПочты") Тогда
		Возврат УчетныеЗаписиУстановитьРеквизит(Профиль, "ИспользоватьДляОтправки", Использовать);
	Иначе
		Возврат ЛегкаяПочтаКлиентСервер.УстановитьИспользованиеПрофиля(ПрофилиДляОтправкиХранилище, Профиль, Использовать);
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Функция УстановитьИспользованиеПрофиляЗагрузки(Профиль, Использовать)
	
	Если ТипЗнч(Профиль) = Тип("СправочникСсылка.УчетныеЗаписиЭлектроннойПочты") Тогда
		Возврат УчетныеЗаписиУстановитьРеквизит(Профиль, "ИспользоватьДляПолучения", Использовать);
	Иначе
		Возврат ЛегкаяПочтаКлиентСервер.УстановитьИспользованиеПрофиля(ПрофилиДляЗагрузкиХранилище, Профиль, Использовать);
	КонецЕсли;
	
КонецФункции

&НаСервере
Функция УчетныеЗаписиУстановитьРеквизит(Профиль, ИмяРеквизита, Значение)
	
	ПрофильОбъект = Профиль.ПолучитьОбъект();
	Попытка
		ПрофильОбъект[ИмяРеквизита] = Значение;
		ПрофильОбъект.Записать();
	Исключение
		Возврат Ложь;
	КонецПопытки;
	
	Возврат Истина;
	
КонецФункции

&НаКлиенте
Процедура ПрофилиДляЗагрузкиПриАктивизацииСтроки(Элемент)
	
	ТекущиеДанные = Элементы.ПрофилиДляЗагрузки.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	Элементы.ПрофилиДляЗагрузкиУстановитьПрофильПоУмолчаниюЗагрузка.Пометка = ТекущиеДанные.ПоУмолчанию;
	Элементы.ПрофилиДляЗагрузкиКонтекстноеМенюУстановитьПрофильПоУмолчаниюЗагрузка.Пометка = ТекущиеДанные.ПоУмолчанию;
	
КонецПроцедуры

&НаКлиенте
Процедура ПрофилиДляОтправкиПриАктивизацииСтроки(Элемент)
	
	ТекущиеДанные = Элементы.ПрофилиДляОтправки.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	Элементы.ПрофилиДляОтправкиУстановитьПрофильПоУмолчаниюОтправка.Пометка = ТекущиеДанные.ПоУмолчанию;
	Элементы.ПрофилиДляОтправкиКонтекстноеМенюУстановитьПрофильПоУмолчаниюОтправка.Пометка = ТекущиеДанные.ПоУмолчанию;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "УчетнаяЗаписьЭлектроннойПочтыСохранена" Тогда
		ОбновитьТаблицуПрофилейДляЗагрузки();
		ОбновитьТаблицуПрофилейДляОтправки();
		УстановитьТекущуюСтроку(ПрофилиДляЗагрузки, Элементы.ПрофилиДляЗагрузки, Параметр);
		УстановитьТекущуюСтроку(ПрофилиДляОтправки, Элементы.ПрофилиДляОтправки, Параметр);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьТекущуюСтроку(Таблица, Элемент, Профиль)
	
	Если ЗначениеЗаполнено(Профиль) Тогда
		Для каждого Строка Из Таблица Цикл
			Если Строка.Профиль = Профиль Тогда
				Элемент.ТекущаяСтрока = Строка.ПолучитьИдентификатор();
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьЛегкуюПочтуПриИзменении(Элемент)
	
	УстановитьФункциональныеОпцииИспользованияПочты();
	Элементы.Страницы.Доступность = ИспользоватьЛегкуюПочту;
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Если ИспользоватьЛегкуюПочту <> НачальноеЗначениеИспользоватьЛегкуюПочту Тогда
		ОтменаСервер();
	КонецЕсли;
	Модифицированность = Ложь;
	Закрыть(КодВозвратаДиалога.Отмена);
	
КонецПроцедуры

&НаСервере
Процедура ОтменаСервер()
	
	ИспользоватьЛегкуюПочту = НачальноеЗначениеИспользоватьЛегкуюПочту;
	УстановитьФункциональныеОпцииИспользованияПочты();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьФункциональныеОпцииИспользованияПочты()
	
	ИспользоватьВстроеннуюПочту = РегистрыСведений.ИспользованиеПочты.ПолучитьИспользованиеВстроеннойПочты();
	РегистрыСведений.ИспользованиеПочты.УстановитьИспользованиеПочты(ИспользоватьЛегкуюПочту, ИспользоватьВстроеннуюПочту);
	
КонецПроцедуры


