#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если НаборКонстант.ВестиУчетПоПроектам Тогда 
		Элементы.ВестиУчетПлановыхТрудозатратВБизнесПроцессах.Доступность = Ложь;
		Элементы.ВестиУчетФактическихТрудозатрат.Доступность = Ложь;
		Элементы.ИспользоватьВидыПроектов.Доступность = Истина;
	Иначе
		Элементы.ВестиУчетПлановыхТрудозатратВБизнесПроцессах.Доступность = Истина;
		Элементы.ВестиУчетФактическихТрудозатрат.Доступность = Истина;
		Элементы.ИспользоватьВидыПроектов.Доступность = Ложь;
	КонецЕсли;
	
	Если НаборКонстант.ВестиУчетПлановыхТрудозатратВБизнесПроцессах Тогда
		Элементы.ВестиУчетФактическихТрудозатрат.Доступность = Ложь;
	Иначе
		Элементы.ВестиУчетФактическихТрудозатрат.Доступность = Истина;
	КонецЕсли;
	
	Элементы.УровниКонтроля.Доступность = НаборКонстант.ИспользоватьКонтрольныеТочки;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписьюПродолжениеСозданиеВидаПроектов(Результат, ПараметрыЗаписи) Экспорт
	
	Если Результат = Ложь Тогда
		Возврат;
	КонецЕсли;
	
	ВидПроекта = РаботаСПроектами.СоздатьВидПроекта(Результат);
	ПараметрыЗаписи.Вставить("СозданВидПроекта", Истина);
	Записать(ПараметрыЗаписи);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписьюПродолжениеПослеВыбораВидаПроектов(ВыбранноеЗначение, ПараметрыЗаписи) Экспорт
	
	Если ВыбранноеЗначение = Неопределено Тогда 
		Возврат;
	КонецЕсли;		
	ВидПроекта = ВыбранноеЗначение.Значение;	
	ПараметрыЗаписи.Вставить("ВидПроектовВыбран", Истина);
	Записать(ПараметрыЗаписи);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	// Включены виды проектов
	Если Не ИспользоватьВидыПроектов И НаборКонстант.ИспользоватьВидыПроектов Тогда			
		Если РаботаСПроектами.КоличествоПроектовСПустымВидом() > 0 Тогда
			ВидыПроектов = МассивВидовПроектов();
			
			Если ВидыПроектов.Количество() = 0 Тогда
				Если Не ПараметрыЗаписи.Свойство("СозданВидПроектов") Тогда
					Наименование = "";
					ОписаниеОповещения = Новый ОписаниеОповещения(
						"ПередЗаписьюПродолжениеСозданиеВидаПроектов",
						ЭтотОбъект,
						ПараметрыЗаписи);
					ДелопроизводствоКлиент.ВвестиСтрокуСЗаголовком(Наименование, 
						НСтр("ru = 'Укажите вид проекта'; en = 'Specify the project type'"), 
						НСтр("ru = 'Введите наименование вида проекта, к которому будут отнесены существующие проекты:'; en = 'Enter the name of the project type that will be assigned to existing projects.'"), 
						150,
						ОписаниеОповещения);
					Отказ = Истина;
					Возврат;
				КонецЕсли;				
			ИначеЕсли ВидыПроектов.Количество() = 1 Тогда
				ВидПроекта = ВидыПроектов[0];
				
			ИначеЕсли Не ПараметрыЗаписи.Свойство("ВидПроектовВыбран") Тогда			
				СписокВидов = Новый СписокЗначений;
				СписокВидов.ЗагрузитьЗначения(ВидыПроектов);
				ОписаниеОповещения = Новый ОписаниеОповещения(
					"ПередЗаписьюПродолжениеПослеВыбораВидаПроектов",
					ЭтотОбъект,
					ПараметрыЗаписи);
				СписокВидов.ПоказатьВыборЭлемента(
					ОписаниеОповещения, 
					НСтр("ru = 'Укажите вид проекта, к которому отнести существующие проекты'; en = 'Specify the project type to be assigned to the existing projects'"));
				
				Отказ = Истина;
				Возврат;
			КонецЕсли;
			
			Состояние(НСтр("ru = 'Выполняется заполнение вида в проектах. Пожалуйста, подождите...'; en = 'Type is being assigned to projects. Please wait...'"));
			РаботаСПроектами.ЗаполнитьВидПроекта(ВидПроекта);
			Состояние(НСтр("ru = 'Использование видов проектов включено.'; en = 'Using project types is enabled.'"));
			
		КонецЕсли;
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// Учет по проектам
	Если ТекущийОбъект.ВестиУчетПоПроектам Тогда 
		ТекущийОбъект.ВестиУчетПлановыхТрудозатратВБизнесПроцессах = Истина;
		ТекущийОбъект.ВестиУчетФактическихТрудозатрат = Истина;
	КонецЕсли;
	
	Если ТекущийОбъект.ВестиУчетПлановыхТрудозатратВБизнесПроцессах Тогда 
		ТекущийОбъект.ВестиУчетФактическихТрудозатрат = Истина;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ТекущийОбъект.ОсновнаяЕдиницаДлительности) Тогда 
		ТекущийОбъект.ОсновнаяЕдиницаДлительности = Перечисления.ЕдиницыДлительности.Час;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ТекущийОбъект.ОсновнаяЕдиницаТрудозатрат) Тогда 
		ТекущийОбъект.ОсновнаяЕдиницаТрудозатрат = Перечисления.ЕдиницыТрудозатрат.ЧеловекоЧас;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	УстанавливаемыеПараметры = Новый Структура;
	УстанавливаемыеПараметры.Вставить("Пользователи", ПользователиКлиентСервер.ТекущийПользователь());
	УстановитьПараметрыФункциональныхОпцийИнтерфейса(УстанавливаемыеПараметры);
	ОбновитьПовторноИспользуемыеЗначения();
	ОбновитьИнтерфейс();
	
	Если ПараметрыЗаписи.Свойство("Закрыть") Тогда
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВестиУчетПоПроектамПриИзменении(Элемент)
	
	Если НаборКонстант.ВестиУчетПоПроектам Тогда 
		НаборКонстант.ВестиУчетПлановыхТрудозатратВБизнесПроцессах = Истина;
		НаборКонстант.ВестиУчетФактическихТрудозатрат = Истина;
		
		Элементы.ВестиУчетПлановыхТрудозатратВБизнесПроцессах.Доступность = Ложь;
		Элементы.ВестиУчетФактическихТрудозатрат.Доступность = Ложь;
		
		НаборКонстант.ИспользоватьВидыПроектов = Истина;
		Элементы.ИспользоватьВидыПроектов.Доступность = Истина;
	Иначе	
		Элементы.ВестиУчетПлановыхТрудозатратВБизнесПроцессах.Доступность = Истина;
		Элементы.ВестиУчетФактическихТрудозатрат.Доступность = Истина;
		
		НаборКонстант.ИспользоватьВидыПроектов = Ложь;
		Элементы.ИспользоватьВидыПроектов.Доступность = Ложь;
	КонецЕсли;	
	
	Если НаборКонстант.ВестиУчетПлановыхТрудозатратВБизнесПроцессах Тогда 
		Элементы.ВестиУчетФактическихТрудозатрат.Доступность = Ложь;
	Иначе	
		Элементы.ВестиУчетФактическихТрудозатрат.Доступность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВестиУчетПлановыхТрудозатратВБизнесПроцессахПриИзменении(Элемент)
	
	Если НаборКонстант.ВестиУчетПлановыхТрудозатратВБизнесПроцессах Тогда 
		НаборКонстант.ВестиУчетФактическихТрудозатрат = Истина;
		
		Элементы.ВестиУчетФактическихТрудозатрат.Доступность = Ложь;
	Иначе	
		Элементы.ВестиУчетФактическихТрудозатрат.Доступность = Истина;
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьРабочийКалендарьПриИзмененииПродолжение(Результат, Параметры) Экспорт 

	Отказ = Параметры.Отказ;
	Если Результат = КодВозвратаДиалога.Нет Тогда
		Отказ = Истина;
	КонецЕсли;

	Если Отказ Тогда
		НаборКонстант.ИспользоватьРабочийКалендарь = Не НаборКонстант.ИспользоватьРабочийКалендарь;
	Иначе
		НаборКонстант.ИспользоватьНапоминанияПользователя = НаборКонстант.ИспользоватьРабочийКалендарь;
		Элементы.ИспользоватьНапоминанияПользователя.Доступность = НаборКонстант.ИспользоватьРабочийКалендарь;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьУправлениеМероприятиямиПриИзмененииПродолжение(Результат, Параметры) Экспорт 

	Отказ = Параметры.Отказ;
	Если Результат = КодВозвратаДиалога.Нет Тогда
		Отказ = Истина;
	КонецЕсли;

	Если Отказ Тогда
		НаборКонстант.ИспользоватьУправлениеМероприятиями = Не НаборКонстант.ИспользоватьУправлениеМероприятиями;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьКонтрольныеТочкиПриИзменении(Элемент)
	
	СохранитьКонстантуИспользоватьКонтрольныеТочки(НаборКонстант.ИспользоватьКонтрольныеТочки);
	ОбновитьИнтерфейс();

	Элементы.УровниКонтроля.Доступность = НаборКонстант.ИспользоватьКонтрольныеТочки;		
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция МассивВидовПроектов()

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВидыПроектов.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.ВидыПроектов КАК ВидыПроектов";
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
КонецФункции

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Если НаборКонстант.ВестиУчетПоПроектам Тогда 
		Если Не ЗначениеЗаполнено(НаборКонстант.ОсновнаяЕдиницаТрудозатрат) Тогда 
			ТекстОшибки = НСтр("ru = 'Поле ""Основная единица трудозатрат"" не заполнено'; en = 'Field ""Basic time spent unit"" is not filled in'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, , "НаборКонстант.ОсновнаяЕдиницаТрудозатрат", , Отказ);
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(НаборКонстант.ОсновнаяЕдиницаДлительности) Тогда 
			ТекстОшибки = НСтр("ru = 'Поле ""Основная единица длительности"" не заполнено'; en = 'Field ""Basic duration unit"" is not filled in'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, , "НаборКонстант.ОсновнаяЕдиницаДлительности", , Отказ);
		КонецЕсли;
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаЗаписатьИЗакрыть(Команда)
	
	ПараметрыЗаписи = Новый Структура;
	ПараметрыЗаписи.Вставить("Закрыть", Истина);
	Записать(ПараметрыЗаписи);
	
КонецПроцедуры

&НаКлиенте
Процедура УровниКонтроля(Команда)
			
	ОткрытьФорму("Справочник.УровниКонтроля.ФормаСписка");
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура СохранитьКонстантуИспользоватьКонтрольныеТочки(Знач ИспользоватьКонтрольныеТочки)
	
	Константы.ИспользоватьКонтрольныеТочки.Установить(ИспользоватьКонтрольныеТочки);
	
КонецПроцедуры

#КонецОбласти
