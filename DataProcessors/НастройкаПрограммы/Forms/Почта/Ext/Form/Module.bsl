#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Почта
	ПрефиксДляОтветныхПисем = ВстроеннаяПочтаСервер.ПолучитьПрефиксДляОтветныхПисем();
	ПрефиксДляПересылаемыхПисем = ВстроеннаяПочтаСервер.ПолучитьПрефиксДляПересылаемыхПисем();
	ПользовательРегламентногоЗаданияПолучениеИОтправкаПисем =
		ПолучитьПользователяРегламентногоЗаданияПолучениеИОтправкаПисем();
	
	ЭтоФайловаяБаза = ОбщегоНазначения.ИнформационнаяБазаФайловая();	
	Если ЭтоФайловаяБаза Тогда
		Элементы.ПользовательРегламентногоЗаданияПолучениеИОтправкаПисем.Видимость = Ложь;
	Иначе
		Элементы.ПользовательРегламентногоЗаданияПолучениеИОтправкаПисем.Доступность =
			НаборКонстант.ИспользоватьВстроеннуюПочту;
		
		Элементы.ПользовательРегламентногоЗаданияПолучениеИОтправкаПисем.АвтоОтметкаНезаполненного =
			НаборКонстант.ИспользоватьВстроеннуюПочту;
	КонецЕсли;
	
	Элементы.ГруппаВстроеннаяПочта.Доступность = НаборКонстант.ИспользоватьВстроеннуюПочту;
	
	ПериодХраненияHTMLПредставленияСодержанияПисем =
		ВстроеннаяПочтаСервер.ПолучитьНастройкуПрограммы("ПериодХраненияHTMLПредставленияСодержанияПисем");
	
	АвтоматическиОчищатьУстаревшиеHTMLПредставленияСодержанияПисем =
		(ПериодХраненияHTMLПредставленияСодержанияПисем > 0);
	
	Если АвтоматическиОчищатьУстаревшиеHTMLПредставленияСодержанияПисем Тогда
		
		Элементы.ДекорацияНадписьСрокУстаревания.Доступность = Истина;
		Элементы.ПериодХраненияHTMLПредставленияСодержанияПисем.Доступность = Истина;
		Элементы.ПериодХраненияHTMLПредставленияСодержанияПисем.АвтоОтметкаНезаполненного = Истина;
		Элементы.ДекорацияНадписьСрокУстареванияДней.Доступность = Истина;
		
	Иначе
		
		Элементы.ДекорацияНадписьСрокУстаревания.Доступность = Ложь;
		Элементы.ПериодХраненияHTMLПредставленияСодержанияПисем.Доступность = Ложь;
		Элементы.ПериодХраненияHTMLПредставленияСодержанияПисем.АвтоОтметкаНезаполненного = Ложь;
		Элементы.ДекорацияНадписьСрокУстареванияДней.Доступность = Ложь;
		
	КонецЕсли;
	
	Элементы.ДекорацияНадписьСрокУстареванияДней.Заголовок =
		ДелопроизводствоКлиентСервер.ПолучитьПодписьДней(
			ПериодХраненияHTMLПредставленияСодержанияПисем);
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если АвтоматическиОчищатьУстаревшиеHTMLПредставленияСодержанияПисем Тогда
		
		ВстроеннаяПочтаСервер.УстановитьНастройкуПрограммы(
			"ПериодХраненияHTMLПредставленияСодержанияПисем",
			ПериодХраненияHTMLПредставленияСодержанияПисем);
		
	Иначе
		
		ВстроеннаяПочтаСервер.УстановитьНастройкуПрограммы(
			"ПериодХраненияHTMLПредставленияСодержанияПисем",
			-1);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// Почта
	ВстроеннаяПочтаСервер.УстановитьПрефиксДляОтветныхПисем(ПрефиксДляОтветныхПисем);
	ВстроеннаяПочтаСервер.УстановитьПрефиксДляПересылаемыхПисем(ПрефиксДляПересылаемыхПисем);
	
	Если НаборКонстант.ИспользоватьВстроеннуюПочту И Не ЭтоФайловаяБаза Тогда
		
		СообщениеОбОшибке = "";
		Если Не ПроверитьИУстановитьПользователяРегламентногоЗаданияПолучениеИОтправкаПисем(
			ПользовательРегламентногоЗаданияПолучениеИОтправкаПисем, Ложь, Ложь, СообщениеОбОшибке) Тогда
			
			Отказ = Истина;
			
			ВызватьИсключение СообщениеОбОшибке;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// Настройка использования почтового клиента
	РегистрыСведений.ИспользованиеПочты.ОбновитьИспользованиеПочты();
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	УстанавливаемыеПараметры = Новый Структура;
	УстанавливаемыеПараметры.Вставить("Пользователи", ПользователиКлиентСервер.ТекущийПользователь());
	УстановитьПараметрыФункциональныхОпцийИнтерфейса(УстанавливаемыеПараметры);
	ОбновитьПовторноИспользуемыеЗначения();
	ОбновитьИнтерфейс();
	
	Если ПараметрыЗаписи.Свойство("Закрыть") Тогда
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПутьСохраненияУдаляемыхВерсийНачалоВыбораПродолжение(Результат, Параметры)Экспорт 
	
	Если ТипЗнч(Результат) = Тип("Структура") Тогда
		
		НаборКонстант.ПутьСохраненияУдаляемыхВерсийWindows = Результат.ПолныйПутьWindows;
		НаборКонстант.ПутьСохраненияУдаляемыхВерсийLinux = Результат.ПолныйПутьLinux;
		
		ПутьСохраненияУдаляемыхВерсий = СформироватьПутьWindowsLinux(
			НаборКонстант.ПутьСохраненияУдаляемыхВерсийWindows, 
			НаборКонстант.ПутьСохраненияУдаляемыхВерсийLinux);
		
	КонецЕсли;	

КонецПроцедуры

&НаКлиенте
Процедура КаталогСохраненияКопииПротоколаРаботыПользователейНачалоВыбораПродолжение(Результат, Параметры)Экспорт 
	
	Если ТипЗнч(Результат) = Тип("Структура") Тогда
		
		НаборКонстант.КаталогСохраненияКопииПротоколаРаботыПользователейWindows = Результат.ПолныйПутьWindows;
		НаборКонстант.КаталогСохраненияКопииПротоколаРаботыПользователейLinux = Результат.ПолныйПутьLinux;
		
		КаталогСохраненияКопииПротоколаРаботыПользователей = СформироватьПутьWindowsLinux(
			НаборКонстант.КаталогСохраненияКопииПротоколаРаботыПользователейWindows, 
			НаборКонстант.КаталогСохраненияКопииПротоколаРаботыПользователейLinux);
		
	КонецЕсли;	

КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьВстроеннуюПочтуПриИзменении(Элемент)
	
	Если ЭтоФайловаяБаза Тогда
		
		Элементы.ПользовательРегламентногоЗаданияПолучениеИОтправкаПисем.Видимость = Ложь;
		
	Иначе
		
		Элементы.ПользовательРегламентногоЗаданияПолучениеИОтправкаПисем.Доступность =
			НаборКонстант.ИспользоватьВстроеннуюПочту;
		
		Элементы.ПользовательРегламентногоЗаданияПолучениеИОтправкаПисем.АвтоОтметкаНезаполненного =
			НаборКонстант.ИспользоватьВстроеннуюПочту;
		
	КонецЕсли;
	
	Элементы.ГруппаВстроеннаяПочта.Доступность = НаборКонстант.ИспользоватьВстроеннуюПочту;
	
	Если НаборКонстант.ИспользоватьВстроеннуюПочту Тогда
		НаборКонстант.ВестиПротоколДоставкиПочты = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СокращатьПредставлениеАдресатовПриИзменении(Элемент)
	
	Элементы.ЧислоАдресатовДляКраткогоПредставления.Доступность = 
		НаборКонстант.СокращатьПредставлениеАдресатов
		И (Не НаборКонстант.СокращатьИнформациюОПисьмеПриОтвете
			ИЛИ Не НаборКонстант.СокращатьИнформациюОПисьмеПриПересылке);
	
КонецПроцедуры

&НаКлиенте
Процедура СокращатьИнформациюОПисьмеПриОтветеПриИзменении(Элемент)
	
	Элементы.СокращатьПредставлениеАдресатов.Доступность = 
		Не НаборКонстант.СокращатьИнформациюОПисьмеПриОтвете
		ИЛИ Не НаборКонстант.СокращатьИнформациюОПисьмеПриПересылке;
		
	Элементы.ЧислоАдресатовДляКраткогоПредставления.Доступность = 
		НаборКонстант.СокращатьПредставлениеАдресатов
		И (Не НаборКонстант.СокращатьИнформациюОПисьмеПриОтвете
			ИЛИ Не НаборКонстант.СокращатьИнформациюОПисьмеПриПересылке);
	
КонецПроцедуры

&НаКлиенте
Процедура СокращатьИнформациюОПисьмеПриПересылкеПриИзменении(Элемент)
	
	Элементы.СокращатьПредставлениеАдресатов.Доступность = 
		Не НаборКонстант.СокращатьИнформациюОПисьмеПриОтвете
		ИЛИ Не НаборКонстант.СокращатьИнформациюОПисьмеПриПересылке;
		
	Элементы.ЧислоАдресатовДляКраткогоПредставления.Доступность = 
		НаборКонстант.СокращатьПредставлениеАдресатов
		И (Не НаборКонстант.СокращатьИнформациюОПисьмеПриОтвете
			ИЛИ Не НаборКонстант.СокращатьИнформациюОПисьмеПриПересылке);
	
КонецПроцедуры

&НаКлиенте
Процедура ПомечатьКаждуюСтрокуИсходногоПисьмаПриОтветеПриИзменении(Элемент)
	
	Элементы.СимволЦитированияВПереписке.Доступность = 
		НаборКонстант.ПомечатьКаждуюСтрокуИсходногоПисьмаПриОтвете
		ИЛИ НаборКонстант.ПомечатьКаждуюСтрокуИсходногоПисьмаПриПересылке;
		
	Элементы.ВидЦитированияПриОтветеВФорматеHTML.Доступность = 
		НаборКонстант.ПомечатьКаждуюСтрокуИсходногоПисьмаПриОтвете
		ИЛИ НаборКонстант.ПомечатьКаждуюСтрокуИсходногоПисьмаПриПересылке;
		
КонецПроцедуры

&НаКлиенте
Процедура ПомечатьКаждуюСтрокуИсходногоПисьмаПриПересылкеПриИзменении(Элемент)
	
	Элементы.СимволЦитированияВПереписке.Доступность = 
		НаборКонстант.ПомечатьКаждуюСтрокуИсходногоПисьмаПриОтвете
		ИЛИ НаборКонстант.ПомечатьКаждуюСтрокуИсходногоПисьмаПриПересылке;
		
	Элементы.ВидЦитированияПриОтветеВФорматеHTML.Доступность = 
		НаборКонстант.ПомечатьКаждуюСтрокуИсходногоПисьмаПриОтвете
		ИЛИ НаборКонстант.ПомечатьКаждуюСтрокуИсходногоПисьмаПриПересылке;
		
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьРабочийКалендарьПриИзмененииПродолжение(Результат, Параметры) Экспорт 

	Отказ = Параметры.Отказ;
	Если Результат = КодВозвратаДиалога.Нет Тогда
		Отказ = Истина;
	КонецЕсли;

	Если Отказ Тогда
		НаборКонстант.ИспользоватьРабочийКалендарь = Не НаборКонстант.ИспользоватьРабочийКалендарь;
	Иначе
		НаборКонстант.ИспользоватьНапоминанияПользователя = НаборКонстант.ИспользоватьРабочийКалендарь;
		Элементы.ИспользоватьНапоминанияПользователя.Доступность = НаборКонстант.ИспользоватьРабочийКалендарь;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьУправлениеМероприятиямиПриИзмененииПродолжение(Результат, Параметры) Экспорт 

	Отказ = Параметры.Отказ;
	Если Результат = КодВозвратаДиалога.Нет Тогда
		Отказ = Истина;
	КонецЕсли;

	Если Отказ Тогда
		НаборКонстант.ИспользоватьУправлениеМероприятиями = Не НаборКонстант.ИспользоватьУправлениеМероприятиями;
	КонецЕсли;

КонецПроцедуры

///////////////////////////////////////////////////////////////////////////
// ОЧИСТКА УСТАРЕВШИХ HTML ПРЕДСТАВЛЕНИЙ СОДЕРЖАНИЯ ПИСЕМ

&НаКлиенте
Процедура АвтоматическиОчищатьУстаревшиеHTMLПредставленияСодержанияПисемПриИзменении(Элемент)
	
	Если АвтоматическиОчищатьУстаревшиеHTMLПредставленияСодержанияПисем Тогда
		
		Элементы.ДекорацияНадписьСрокУстаревания.Доступность = Истина;
		Элементы.ПериодХраненияHTMLПредставленияСодержанияПисем.Доступность = Истина;
		Элементы.ПериодХраненияHTMLПредставленияСодержанияПисем.АвтоОтметкаНезаполненного = Истина;
		Элементы.ДекорацияНадписьСрокУстареванияДней.Доступность = Истина;
		
	Иначе
		
		ПериодХраненияHTMLПредставленияСодержанияПисем = 0;
		ПериодХраненияHTMLПредставленияСодержанияПисемПриИзменении(Элемент);
		
		Элементы.ДекорацияНадписьСрокУстаревания.Доступность = Ложь;
		Элементы.ПериодХраненияHTMLПредставленияСодержанияПисем.Доступность = Ложь;
		Элементы.ПериодХраненияHTMLПредставленияСодержанияПисем.АвтоОтметкаНезаполненного = Ложь;
		Элементы.ДекорацияНадписьСрокУстареванияДней.Доступность = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодХраненияHTMLПредставленияСодержанияПисемПриИзменении(Элемент)
	
	Элементы.ДекорацияНадписьСрокУстареванияДней.Заголовок =
		ДелопроизводствоКлиентСервер.ПолучитьПодписьДней(
			ПериодХраненияHTMLПредставленияСодержанияПисем);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Если НаборКонстант.ИспользоватьВстроеннуюПочту И Не ЭтоФайловаяБаза Тогда
		
		СообщениеОбОшибке = "";
		
		Если Не ПроверитьИУстановитьПользователяРегламентногоЗаданияПолучениеИОтправкаПисем(
			ПользовательРегламентногоЗаданияПолучениеИОтправкаПисем,
			Истина,
			Ложь,
			СообщениеОбОшибке) Тогда
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				СообщениеОбОшибке,,
				"ПользовательРегламентногоЗаданияПолучениеИОтправкаПисем",,
				Отказ);
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если НаборКонстант.ИспользоватьВстроеннуюПочту
		И АвтоматическиОчищатьУстаревшиеHTMLПредставленияСодержанияПисем
		И ПериодХраненияHTMLПредставленияСодержанияПисем = 0 Тогда
		
		СообщениеОбОшибке = НСтр("ru = 'Поле ""Срок устаревания"" не заполнено'; en = 'Field ""Retention term"" is not filled in'");
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			СообщениеОбОшибке,,
			"ПериодХраненияHTMLПредставленияСодержанияПисем",,
			Отказ);
		
	КонецЕсли;
	
КонецПроцедуры

Функция СформироватьПутьWindowsLinux(ПолныйПутьWindows, ПолныйПутьLinux)
	
	СтрокаПути = "";
	
	Если ЗначениеЗаполнено(ПолныйПутьWindows) Тогда
		СтрокаПути = СтрокаПути + ПолныйПутьWindows;
	КонецЕсли;	
	
	Если ЗначениеЗаполнено(ПолныйПутьLinux) Тогда
		
		Если ЗначениеЗаполнено(СтрокаПути) Тогда
			СтрокаПути = СтрокаПути + ";";
		КонецЕсли;	
		
		СтрокаПути = СтрокаПути + ПолныйПутьLinux;
	КонецЕсли;	
	
	Возврат СтрокаПути;
	
КонецФункции	

&НаКлиенте
Процедура КомандаЗаписатьИЗакрыть(Команда)
	
	ПараметрыЗаписи = Новый Структура;
	ПараметрыЗаписи.Вставить("Закрыть", Истина);
	Записать(ПараметрыЗаписи);
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////
// РАБОТА С РЕГЛАМЕНТНЫМИ ЗАДАНИЯМИ

&НаКлиенте
Процедура ПользовательРегламентногоЗаданияПолучениеИОтправкаПисемПриИзменении(Элемент)
	
	СообщениеОбОшибке = "";
	Если Не ПроверитьИУстановитьПользователяРегламентногоЗаданияПолучениеИОтправкаПисем(
		ПользовательРегламентногоЗаданияПолучениеИОтправкаПисем, Истина, Истина, СообщениеОбОшибке) Тогда
		
		ПоказатьПредупреждение(, СообщениеОбОшибке);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьПользователяРегламентногоЗаданияПолучениеИОтправкаПисем()
	
	Пользователь = Константы.ПользовательРегламентногоЗаданияПолучениеИОтправкаПисем.Получить();
	
	Возврат Пользователь;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПроверитьИУстановитьПользователяРегламентногоЗаданияПолучениеИОтправкаПисем(
	Пользователь,
	ТолькоПроверить,
	РазрешатьНезаполненноеЗначение,
	СообщениеОбОшибке)
	
	Результат = Истина;
	СообщениеОбОшибке = "";
	ИмяПользователя = "";
	
	Если Не ЗначениеЗаполнено(Пользователь) Тогда
		
		Пользователь = Неопределено;
		
		Если Не РазрешатьНезаполненноеЗначение Тогда
			
			СообщениеОбОшибке =
				НСтр("ru = 'Не выбран пользователь регламентного задания ""Получение и отправка писем"".'; en = 'User is not assigned for scheduled job ""Sending and receiving emails"".'");
			
			Результат = Ложь;
			
		Иначе
			
			Результат = Истина;
			
		КонецЕсли;
		
	Иначе
		
		ДанныеПользователя = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Пользователь, "ПометкаУдаления, Недействителен");
		
		Если ДанныеПользователя.ПометкаУдаления Тогда
			
			СообщениеОбОшибке =
				НСтр("ru = 'Выбранный пользователь регламентного задания ""Получение и отправка писем"" помечен на удаление.
					|Необходимо выбрать не помеченного на удаление пользователя.';
					|en = 'User assigned for scheduled job ""Sending and receiving emails"" is marked for deletion. 
					|A user not marked for deletion must be specified.'");
			
			Пользователь = Неопределено;
			Результат = Ложь;
			
		ИначеЕсли ДанныеПользователя.Недействителен Тогда
			
			СообщениеОбОшибке =
				НСтр("ru = 'Выбранный пользователь регламентного задания ""Получение и отправка писем"" недействителен.
					|Необходимо выбрать действительного пользователя.';
					|en = 'User assigned for scheduled job ""Sending and receiving emails"" is invalid. 
					|A valid user must be specified.'");
			
			Пользователь = Неопределено;
			Результат = Ложь;
			
		КонецЕсли;
		
		ИдентификаторПользователяИБ = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(
			Пользователь, "ИдентификаторПользователяИБ");
		
		Если ПустаяСтрока(ИдентификаторПользователяИБ) Тогда
			
			СообщениеОбОшибке =
				НСтр("ru = 'Для выбранного пользователя регламентного задания ""Получение и отправка писем""
					|не указан идентификатор пользователь ИБ.';
					|en = 'Infobase user identifier is not specified for the user assigned for scheduled 
					|job ""Sending and receiving emails"".'");
			
			Пользователь = Неопределено;
			Результат = Ложь;
			
		Иначе
			
			ПользовательИБ =
				ПользователиИнформационнойБазы.НайтиПоУникальномуИдентификатору(ИдентификаторПользователяИБ);
			
			Если ПользовательИБ = Неопределено Тогда
				
				СообщениеОбОшибке = НСтр("ru = 'Для выбранного пользователя регламентного задания ""Получение и отправка писем""
					|не найден соответствующий пользователь ИБ по идентификатору.';
					|en = 'User assigned for scheduled job ""Sending and receiving emails"" does not have 
					|an infobase user with the matching identifier.'");
				
				Пользователь = Неопределено;
				Результат = Ложь;
				
			Иначе
				
				Если Не ПользовательИБ.Роли.Содержит(Метаданные.Роли.ПолныеПрава) Тогда
					
					СообщениеОбОшибке = НСтр("ru = 'Выбранный пользователь регламентного задания ""Получение и отправка писем"" не обладает полными правами.
						|Необходимо указать полноправного пользователя.';
						|en = 'User assigned for scheduled job ""Sending and receiving emails"" does not have sufficient permissions. 
						|A user with full access must be specified.'");
					
					Пользователь = Неопределено;
					Результат = Ложь;
					
				Иначе
					
					ИмяПользователя = ПользовательИБ.Имя;
					Результат = Истина;
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если Не ТолькоПроверить Тогда
		
		Константы.ПользовательРегламентногоЗаданияПолучениеИОтправкаПисем.Установить(Пользователь);
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти
