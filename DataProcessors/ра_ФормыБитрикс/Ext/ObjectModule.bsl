
Перем ДополненияОписанияПолей;
Перем ДополнительныеПоля;
Перем ЗамещающиеДанные;
Перем Кэш;
Перем ОбъектМетаданных;
Перем Словарь;

#Область ПрограммныйИнтерфейс

Процедура ДобавитьИсключения(Поля) Экспорт
	
	УстановитьПараметрОписанияПолей(Поля, "Исключение", Истина);
	
КонецПроцедуры

Процедура ДобавитьПоле(Поле, Значение) Экспорт
	
	ДобавитьДополнительноеПоле(ДополнительныеПоля, Поле, Значение);
	
КонецПроцедуры

Процедура ДополнитьСловарь(РусскийТерм, АнглийскийТерм) Экспорт
	
	Словарь.Вставить(РусскийТерм, АнглийскийТерм);
	
КонецПроцедуры

Процедура ЗаместитьДанные(Поле, Значение) Экспорт
	
	Иерархия = СтрРазделить(Поле, " ." + Символы.ПС + Символы.Таб, Ложь);
	
	Если Иерархия.Количество() = 0 Тогда
		ВызватьИсключение "Не указано замещаемое поле.";
	ИначеЕсли Иерархия.Количество() > 1 Тогда
		ВызватьИсключение СтрШаблон("Превышено количество уровней вложенности в поле %1.", Поле);
	КонецЕсли;
	
	ЗамещающиеДанные.Вставить(Поле, Значение);
	
КонецПроцедуры

Функция ОбязательныеРеквизиты() Экспорт
	
	Результат = Новый Массив;
	
	ОбязательныеРеквизитыМетаданных(ОбъектМетаданных, Результат, "");
	
	Возврат Результат;
	
КонецФункции

Функция ОписаниеФормы(Объект, Данные, ПараметрыФормирования = Неопределено) Экспорт
	
	ОбъектМетаданных = Объект;
	
	ДополнительныеПоля = Новый Соответствие;
	ДополненияОписанияПолей = Новый Соответствие;
	ЗамещающиеДанные = Новый Соответствие;
	
	МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(ОбъектМетаданных.ПолноеИмя());
	
	Если ЕстьМетодМенеджера(МенеджерОбъекта, "ДополнитьОписаниеМетаданных") Тогда
		МенеджерОбъекта.ДополнитьОписаниеМетаданных(ЭтотОбъект, Данные, ПараметрыФормирования);
	КонецЕсли;
	
	Кэш = Новый ТаблицаЗначений;
	Кэш.Колонки.Добавить("ПутьКДанным");
	Кэш.Колонки.Добавить("Описание");
	
	Результат = ОписаниеПолей(ОбъектМетаданных, Данные, "");
	
	Для каждого СтрокаКэша Из Кэш Цикл
		Если СтрокаКэша.Описание.Parameters.Свойство("ChoiceParameterLinks") Тогда
			Для каждого СвязьПараметровВыбора Из СтрокаКэша.Описание.Parameters.ChoiceParameterLinks Цикл
				Для каждого Найдено Из Кэш.НайтиСтроки(Новый Структура("ПутьКДанным", СвязьПараметровВыбора.Значение)) Цикл
					Найдено.Описание.Filters.Вставить(СтрокаКэша.Описание.Name, СвязьПараметровВыбора.Ключ);
				КонецЦикла;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
	Для каждого СтрокаКэша Из Кэш Цикл
		Filters = Новый Массив;
		Для Каждого ЭлементСтруктуры ИЗ СтрокаКэша.Описание.Filters Цикл
			Filters.Добавить(Новый Структура(ЭлементСтруктуры.Ключ, ЭлементСтруктуры.Значение));
		КонецЦикла;
		// артефакты {
		Если ОбъектМетаданных.Имя = "ra_Uvedomlenie" И СтрокаКэша.Описание.Name = "VyzvatPredstavitelya" Тогда
			Filters.Добавить(Новый Структура("DataVyzova", "DataVyzova"));
		КонецЕсли;
		// артефакты }
		СтрокаКэша.Описание.Filters = Filters;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Процедура УстановитьВидимость(Поля, Значение) Экспорт
	
	УстановитьПараметрОписанияПолей(Поля, "Видимость", Значение);
	
КонецПроцедуры

Процедура УстановитьДоступность(Поля, Значение) Экспорт
	
	УстановитьПараметрОписанияПолей(Поля, "Доступность", Значение);
	
КонецПроцедуры

Процедура УстановитьОбязательность(Поля, Значение) Экспорт
	
	УстановитьПараметрОписанияПолей(Поля, "Обязательность", Истина);
	
КонецПроцедуры

Процедура УстановитьПараметрыВыбора(Поля, Значение) Экспорт
	
	УстановитьПараметрОписанияПолей(Поля, "ПараметрыВыбора", Значение);
	
КонецПроцедуры

Процедура УстановитьПодсказку(Поля, Значение) Экспорт
	
	УстановитьПараметрОписанияПолей(Поля, "Подсказка", Значение);
	
КонецПроцедуры

Процедура УстановитьСвязиПараметровВыбора(Поля, Значение) Экспорт
	
	УстановитьПараметрОписанияПолей(Поля, "СвязиПараметровВыбора", Значение);
	
КонецПроцедуры

Процедура УстановитьСиноним(Поля, Значение) Экспорт
	
	УстановитьПараметрОписанияПолей(Поля, "Синоним", Значение);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ДобавитьДополнительноеПоле(Коллекция, Поле, Значение)
	
	Иерархия = СтрРазделить(Поле, " ." + Символы.ПС + Символы.Таб, Ложь);
	
	Если Иерархия.Количество() = 0 Тогда
		Если Коллекция["Поля"] = Неопределено Тогда
			Коллекция.Вставить("Поля", Новый Массив);
		КонецЕсли;
		
		Коллекция["Поля"].Добавить(Значение);
	ИначеЕсли Иерархия.Количество() = 1 Тогда
		Если Коллекция[Иерархия[0]] = Неопределено Тогда
			Коллекция.Вставить(Иерархия[0], Новый Соответствие);
		КонецЕсли;
		
		ДобавитьДополнительноеПоле(Коллекция[Иерархия[0]], "", Значение);
	Иначе
		ВызватьИсключение СтрШаблон("Превышено количество уровней вложенности в поле %1.", Поле);
	КонецЕсли;
	
КонецПроцедуры

Функция ДопустимыйКлюч(Ключ)
	
	Если Лев(Ключ, 6) = "Отбор." Тогда
		Возврат СтрЗаменить(Ключ, "Отбор.", "");
	КонецЕсли;
	
	Возврат Ключ;
	
КонецФункции

Функция ЕстьМетодМенеджера(МенеджерОбъекта, ИмяМетода)
	
	Попытка
		Возврат Вычислить("МенеджерОбъекта.ЕстьМетод" + ИмяМетода + "()");
	Исключение
		Возврат Ложь;
	КонецПопытки;
	
КонецФункции

Процедура ОбязательныеРеквизитыМетаданных(ТекущийОбъект, Результат, Путь)
	
	ДоступныеПоля = Новый Структура("Реквизиты,СтандартныеРеквизиты,ТабличныеЧасти,Измерения,Ресурсы");
	ЗаполнитьЗначенияСвойств(ДоступныеПоля, ТекущийОбъект);
	
	Если ДоступныеПоля.СтандартныеРеквизиты <> Неопределено Тогда
		Для Каждого СтандартныйРеквизит Из ДоступныеПоля.СтандартныеРеквизиты Цикл
			Если СтандартныйРеквизит.ПроверкаЗаполнения = ПроверкаЗаполнения.ВыдаватьОшибку Тогда
				Результат.Добавить(?(Путь > "", Путь + ".", "") + СтандартныйРеквизит.Имя);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если ДоступныеПоля.Реквизиты <> Неопределено Тогда
		Для Каждого Реквизит Из ДоступныеПоля.Реквизиты Цикл
			Если Реквизит.ПроверкаЗаполнения = ПроверкаЗаполнения.ВыдаватьОшибку Тогда
				Результат.Добавить(?(Путь > "", Путь + ".", "") + Реквизит.Имя);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если ДоступныеПоля.Измерения <> Неопределено Тогда
		Для Каждого Измерение Из ДоступныеПоля.Измерения Цикл
			Если Измерение.ПроверкаЗаполнения = ПроверкаЗаполнения.ВыдаватьОшибку Тогда
				Результат.Добавить(Измерение.Имя);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если ДоступныеПоля.Ресурсы <> Неопределено Тогда
		Для Каждого Ресурс Из ДоступныеПоля.Ресурсы Цикл
			Если Ресурс.ПроверкаЗаполнения = ПроверкаЗаполнения.ВыдаватьОшибку Тогда
				Результат.Добавить(Ресурс.Имя);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если ДоступныеПоля.ТабличныеЧасти <> Неопределено Тогда
		Для Каждого ТабличнаяЧасть Из ДоступныеПоля.ТабличныеЧасти Цикл
			ОбязательныеРеквизитыМетаданных(ТабличнаяЧасть, Результат, ТабличнаяЧасть.Имя);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

Функция ОписаниеПоля(ТекущийОбъект, Данные, ЭтоТЧ, Путь)
	
	СтрокаНастроек = Новый Структура;
	СтрокаНастроек.Вставить("Name", ПеревестиНаАнглийский(ТекущийОбъект.Имя));
	
	ДополнениеОписанияПоля = Новый Структура("Синоним,Подсказка,Видимость,Доступность,Обязательность,ПараметрыВыбора,СвязиПараметровВыбора");
	
	Если Путь = "" Тогда
		Если ДополненияОписанияПолей["Поля"] <> Неопределено И
			 ДополненияОписанияПолей["Поля"][ТекущийОбъект.Имя] <> Неопределено Тогда
			ЗаполнитьЗначенияСвойств(ДополнениеОписанияПоля, ДополненияОписанияПолей["Поля"][ТекущийОбъект.Имя]);
		КонецЕсли;
	Иначе
		Если ДополненияОписанияПолей[Путь] <> Неопределено И
			 ДополненияОписанияПолей[Путь]["Поля"] <> Неопределено И
			 ДополненияОписанияПолей[Путь]["Поля"][ТекущийОбъект.Имя] <> Неопределено Тогда
			ЗаполнитьЗначенияСвойств(ДополнениеОписанияПоля, ДополненияОписанияПолей[Путь]["Поля"][ТекущийОбъект.Имя]);
		КонецЕсли;
	КонецЕсли;
	
	ДоступныеПоля = Новый Структура("БыстрыйВыбор,ПараметрыВыбора,Подсказка,ПолнотекстовыйПоиск,ПроверкаЗаполнения,СвязиПараметровВыбора,Синоним,Тип,ФормаВыбора");
	ЗаполнитьЗначенияСвойств(ДоступныеПоля, ТекущийОбъект);
	
	Если ДополнениеОписанияПоля.Синоним <> Неопределено Тогда
		СтрокаНастроек.Вставить("Description", ДополнениеОписанияПоля.Синоним);
	ИначеЕсли ДоступныеПоля.Синоним <> Неопределено Тогда
		СтрокаНастроек.Вставить("Description", ДоступныеПоля.Синоним);
	КонецЕсли;
	
	Если ДополнениеОписанияПоля.Подсказка <> Неопределено Тогда
		СтрокаНастроек.Вставить("Hint", ДополнениеОписанияПоля.Подсказка);
	ИначеЕсли ДоступныеПоля.Подсказка <> Неопределено Тогда
		СтрокаНастроек.Вставить("Hint", ДоступныеПоля.Подсказка);
	КонецЕсли;
	
	Если Данные = Неопределено Тогда
		Значение = Неопределено;
	ИначеЕсли ЗамещающиеДанные[ТекущийОбъект.Имя] <> Неопределено Тогда
		Значение = ЗамещающиеДанные[ТекущийОбъект.Имя];
	ИначеЕсли ЗамещающиеДанные[ПеревестиНаАнглийский(ТекущийОбъект.Имя)] <> Неопределено Тогда
		Значение = ЗамещающиеДанные[ПеревестиНаАнглийский(ТекущийОбъект.Имя)];
	ИначеЕсли ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Данные, ТекущийОбъект.Имя) Тогда
		Значение = Данные[ТекущийОбъект.Имя];
	ИначеЕсли ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Данные, ПеревестиНаАнглийский(ТекущийОбъект.Имя)) Тогда
		Значение = Данные[ПеревестиНаАнглийский(ТекущийОбъект.Имя)];
	Иначе
		Значение = Неопределено;
	КонецЕсли;
	
	Если ЭтоТЧ Тогда
		СтрокаНастроек.Вставить("Type", "Table");
		СтрокаНастроек.Вставить("Value", Новый Массив);
		СтрокаНастроек.Value.Добавить(ОписаниеПолей(ТекущийОбъект, Неопределено, ТекущийОбъект.Имя));
		Если Значение <> Неопределено Тогда
			Для каждого СтрокаТаблицы Из Значение Цикл
				СтрокаНастроек.Value.Добавить(ОписаниеПолей(ТекущийОбъект, СтрокаТаблицы, ТекущийОбъект.Имя));
			КонецЦикла;
		КонецЕсли;
	Иначе
		СтрокаНастроек.Вставить("Value", Значение);
		
		Если ДоступныеПоля.Тип <> Неопределено Тогда
			СтрокаНастроек.Вставить("Type", ДоступныеПоля.Тип);
			СтрокаНастроек.Вставить("Value", ДоступныеПоля.Тип.ПривестиЗначение(СтрокаНастроек.Value));
			
			ПримитивныеТипы = Новый ОписаниеТипов("Число,Строка,Булево,Дата");
			Если ДоступныеПоля.Тип.Типы().Количество() = 1 И Не ПримитивныеТипы.СодержитТип(ТипЗнч(СтрокаНастроек.Value)) Тогда
				Если ДоступныеПоля.БыстрыйВыбор = Метаданные.СвойстваОбъектов.ИспользованиеБыстрогоВыбора.Авто Тогда
					ДоступныеПоляНаследуемые = Новый Структура("БыстрыйВыбор");
					ЗаполнитьЗначенияСвойств(ДоступныеПоляНаследуемые, СтрокаНастроек.Value.Метаданные());
					ДоступныеПоля.Вставить("БыстрыйВыбор", ДоступныеПоляНаследуемые.БыстрыйВыбор);
				КонецЕсли;
				
				Если ДоступныеПоля.БыстрыйВыбор = Метаданные.СвойстваОбъектов.ИспользованиеБыстрогоВыбора.Использовать Тогда
					СтрокаНастроек.Вставить("TypeOfSearch", "OutputAllElements");
					СтрокаНастроек.Вставить("Options", ПолучитьДоступныеЗначения(ДоступныеПоля.Тип));
				ИначеЕсли ДоступныеПоля.ПолнотекстовыйПоиск <> Неопределено Тогда
					СтрокаНастроек.Вставить("TypeOfSearch", "FullTextSearch");
					СтрокаНастроек.Вставить("Options", Новый Массив);
				КонецЕсли;
				
				Если ЗначениеЗаполнено(ДоступныеПоля.ФормаВыбора) Тогда
					СтрокаНастроек.Вставить("ChoiceForm", ДоступныеПоля.ФормаВыбора);
				Иначе
					СтрокаНастроек.Вставить("ChoiceForm", Неопределено);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		СтрокаНастроек.Вставить("Presentation", Строка(СтрокаНастроек.Value));
	КонецЕсли;
	
	Если ДополнениеОписанияПоля.Видимость <> Неопределено Тогда
		СтрокаНастроек.Вставить("Visibility", ДополнениеОписанияПоля.Видимость);
	Иначе
		СтрокаНастроек.Вставить("Visibility", Ложь);
	КонецЕсли;
	
	Если ДополнениеОписанияПоля.Доступность <> Неопределено Тогда
		СтрокаНастроек.Вставить("Availability", ДополнениеОписанияПоля.Доступность);
	Иначе
		СтрокаНастроек.Вставить("Availability", Ложь);
	КонецЕсли;
	
	Если ДополнениеОписанияПоля.Обязательность <> Неопределено Тогда
		СтрокаНастроек.Вставить("Required", ДополнениеОписанияПоля.Обязательность);
	Иначе
		СтрокаНастроек.Вставить("Required", Ложь);
	КонецЕсли;
	
	СтрокаНастроек.Вставить("Parameters", Новый Структура);
	
	Если ДополнениеОписанияПоля.ПараметрыВыбора <> Неопределено Тогда
		ДоступныеПоля.Вставить("ПараметрыВыбора", ДополнениеОписанияПоля.ПараметрыВыбора);
	КонецЕсли;
	
	Если ДоступныеПоля.ПараметрыВыбора <> Неопределено И ДоступныеПоля.ПараметрыВыбора.Количество() Тогда
		СтрокаНастроек.Parameters.Вставить("ChoiceParameters", Новый Структура);
		Для каждого ПараметрВыбора Из ДоступныеПоля.ПараметрыВыбора Цикл
			СтрокаНастроек.Parameters.ChoiceParameters.Вставить(ДопустимыйКлюч(ПараметрВыбора.Имя), ПараметрВыбора.Значение);
		КонецЦикла;
	КонецЕсли;
	
	Если ДополнениеОписанияПоля.СвязиПараметровВыбора <> Неопределено Тогда
		ДоступныеПоля.Вставить("СвязиПараметровВыбора", ДополнениеОписанияПоля.СвязиПараметровВыбора);
	КонецЕсли;
	
	Если ДоступныеПоля.СвязиПараметровВыбора <> Неопределено И ДоступныеПоля.СвязиПараметровВыбора.Количество() Тогда
		СтрокаНастроек.Parameters.Вставить("ChoiceParameterLinks", Новый Структура);
		Для каждого СвязьПараметровВыбора Из ДоступныеПоля.СвязиПараметровВыбора Цикл
			СтрокаНастроек.Parameters.ChoiceParameterLinks.Вставить(ДопустимыйКлюч(СвязьПараметровВыбора.Имя), СвязьПараметровВыбора.ПутьКДанным);
		КонецЦикла;
	КонецЕсли;
	
	СтрокаНастроек.Вставить("Filters", Новый Структура);
	
	НоваяСтрока = Кэш.Добавить();
	НоваяСтрока.ПутьКДанным = Путь + ?(Путь > "", ".", "") + ТекущийОбъект.Имя;
	НоваяСтрока.Описание = СтрокаНастроек;
	
	Возврат СтрокаНастроек;
	
КонецФункции

Функция ОписаниеПолей(ТекущийОбъект, Данные, Путь)
	
	ДоступныеПоля = Новый Структура("Реквизиты,СтандартныеРеквизиты,ТабличныеЧасти,Измерения,Ресурсы");
	ЗаполнитьЗначенияСвойств(ДоступныеПоля, ТекущийОбъект);
	
	Результат = Новый Массив;
	
	Если ДоступныеПоля.СтандартныеРеквизиты <> Неопределено Тогда
		Для Каждого СтандартныйРеквизит Из ДоступныеПоля.СтандартныеРеквизиты Цикл
			Если ЭтоИсключение(СтандартныйРеквизит, Путь) Тогда
				Продолжить;
			КонецЕсли;
			Результат.Добавить(ОписаниеПоля(СтандартныйРеквизит, Данные, Ложь, Путь));
		КонецЦикла;
	КонецЕсли;
	
	Если ДоступныеПоля.Реквизиты <> Неопределено Тогда
		Для Каждого Реквизит Из ДоступныеПоля.Реквизиты Цикл
			Если ЭтоИсключение(Реквизит, Путь) Тогда
				Продолжить;
			КонецЕсли;
			Результат.Добавить(ОписаниеПоля(Реквизит, Данные, Ложь, Путь));
		КонецЦикла;
	КонецЕсли;
	
	Если ДоступныеПоля.Измерения <> Неопределено Тогда
		Для Каждого Измерение Из ДоступныеПоля.Измерения Цикл
			Если ЭтоИсключение(Измерение, Путь) Тогда
				Продолжить;
			КонецЕсли;
			Результат.Добавить(ОписаниеПоля(Измерение, Данные, Ложь, Путь));
		КонецЦикла;
	КонецЕсли;
	
	Если ДоступныеПоля.Ресурсы <> Неопределено Тогда
		Для Каждого Ресурс Из ДоступныеПоля.Ресурсы Цикл
			Если ЭтоИсключение(Ресурс, Путь) Тогда
				Продолжить;
			КонецЕсли;
			Результат.Добавить(ОписаниеПоля(Ресурс, Данные, Ложь, Путь));
		КонецЦикла;
	КонецЕсли;
	
	Если Путь = "" Тогда
		Если ДополнительныеПоля["Поля"] <> Неопределено Тогда
			Для каждого ДополнительноеПоле Из ДополнительныеПоля["Поля"] Цикл
				Результат.Добавить(ОписаниеПоля(ДополнительноеПоле, Данные, Ложь, Путь));
			КонецЦикла;
		КонецЕсли;
	Иначе
		Если ДополнительныеПоля[Путь] <> Неопределено И
			 ДополнительныеПоля[Путь]["Поля"] <> Неопределено Тогда
			Для каждого ДополнительноеПоле Из ДополнительныеПоля[Путь]["Поля"] Цикл
				Результат.Добавить(ОписаниеПоля(ДополнительноеПоле, Данные, Ложь, Путь));
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
	Если ДоступныеПоля.ТабличныеЧасти <> Неопределено Тогда
		Для Каждого ТабличнаяЧасть Из ДоступныеПоля.ТабличныеЧасти Цикл
			Если ЭтоИсключение(ТабличнаяЧасть, Путь) Тогда
				Продолжить;
			КонецЕсли;
			Результат.Добавить(ОписаниеПоля(ТабличнаяЧасть, Данные, Истина, Путь));
		КонецЦикла;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Функция ПеревестиНаАнглийский(Текст)
	
	Перевод = Словарь[Текст];
	
	Если Перевод = Неопределено Тогда
		Возврат Текст;
	Иначе
		Возврат Перевод;
	КонецЕсли;
	
КонецФункции

Функция ПолучитьДоступныеЗначения(Тип, ПараметрыВыбора = Неопределено) Экспорт
	
	Если Тип = Неопределено Тогда
		Возврат Новый Массив;
	КонецЕсли;
	
	Если ПараметрыВыбора = Неопределено Тогда
		ПараметрыВыбора = Новый Структура("Отбор", Новый Структура);
	КонецЕсли;
	
	Если ТипЗнч(Тип) = Тип("ОписаниеТипов") Тогда
		ДанныеВыбора = ПолучитьДанныеВыбора(Тип.Типы()[0], ПараметрыВыбора);
	Иначе
		ДанныеВыбора = ПолучитьДанныеВыбора(Тип, ПараметрыВыбора);
	КонецЕсли;
	
	Массив = Новый Массив;
	
	Для каждого Элемент Из ДанныеВыбора Цикл
		Если ТипЗнч(Элемент.Значение) = Тип("Структура") Тогда
			Значение = Элемент.Значение.Значение;
		Иначе
			Значение = Элемент.Значение;
		КонецЕсли;
		
		Структура = Новый Структура;
		Структура.Вставить("Ref_Key", XMLСтрока(Значение));
		Структура.Вставить("Presentation", Элемент.Представление);
		Массив.Добавить(Структура);
	КонецЦикла;
	
	Возврат Массив;
	
КонецФункции

Процедура УстановитьПараметрОписанияПолей(Поля, Параметр, Значение)
	
	Если ТипЗнч(Поля) = Тип("Строка") Тогда
		ПереченьПолей = СтрРазделить(Поля, " ," + Символы.ПС + Символы.Таб, Ложь);
	Иначе
		ПереченьПолей = Поля;
	КонецЕсли;
	
	Для каждого Поле Из ПереченьПолей Цикл
		УстановитьПараметрОписанияПоля(ДополненияОписанияПолей, Поле, Параметр, Значение);
	КонецЦикла;
	
КонецПроцедуры

Процедура УстановитьПараметрОписанияПоля(Коллекция, Поле, Параметр, Значение)
	
	Иерархия = СтрРазделить(Поле, " ." + Символы.ПС + Символы.Таб, Ложь);
	
	Если Иерархия.Количество() = 1 Тогда
		Если Коллекция["Поля"] = Неопределено Тогда
			Коллекция.Вставить("Поля", Новый Соответствие);
		КонецЕсли;
		
		Если Коллекция["Поля"][Иерархия[0]] = Неопределено Тогда
			Коллекция["Поля"][Иерархия[0]] = Новый Структура;
		КонецЕсли;
		
		Коллекция["Поля"][Иерархия[0]].Вставить(Параметр, Значение);
	ИначеЕсли Иерархия.Количество() = 2 Тогда
		Если Коллекция[Иерархия[0]] = Неопределено Тогда
			Коллекция.Вставить(Иерархия[0], Новый Соответствие);
		КонецЕсли;
		
		УстановитьПараметрОписанияПоля(Коллекция[Иерархия[0]], Иерархия[1], Параметр, Значение);
	Иначе
		ВызватьИсключение СтрШаблон("Превышено количество уровней вложенности в поле %1.", Поле);
	КонецЕсли;
	
КонецПроцедуры

Функция ЭтоИсключение(ТекущийОбъект, Путь)
	
	ДополнениеОписанияПоля = Новый Структура("Исключение");
	
	Если Путь = "" Тогда
		Если ДополненияОписанияПолей["Поля"] <> Неопределено И
			 ДополненияОписанияПолей["Поля"][ТекущийОбъект.Имя] <> Неопределено Тогда
			ЗаполнитьЗначенияСвойств(ДополнениеОписанияПоля, ДополненияОписанияПолей["Поля"][ТекущийОбъект.Имя]);
		КонецЕсли;
	Иначе
		Если ДополненияОписанияПолей[Путь] <> Неопределено И
			 ДополненияОписанияПолей[Путь]["Поля"] <> Неопределено И
			 ДополненияОписанияПолей[Путь]["Поля"][ТекущийОбъект.Имя] <> Неопределено Тогда
			ЗаполнитьЗначенияСвойств(ДополнениеОписанияПоля, ДополненияОписанияПолей[Путь]["Поля"][ТекущийОбъект.Имя]);
		КонецЕсли;
	КонецЕсли;
	
	Возврат ДополнениеОписанияПоля.Исключение <> Неопределено;
	
КонецФункции

#КонецОбласти

Словарь = Новый Соответствие;
Словарь.Вставить("ПометкаУдаления", "DeletionMark");
Словарь.Вставить("ПометкаУдаления____Presentation", "DeletionMark____Presentation");
Словарь.Вставить("Номер", "Number");
Словарь.Вставить("Номер____Presentation", "Number____Presentation");
Словарь.Вставить("Дата", "Date");
Словарь.Вставить("Дата____Presentation", "Date____Presentation");
Словарь.Вставить("Проведен", "Posted");
Словарь.Вставить("Проведен____Presentation", "Posted____Presentation");
Словарь.Вставить("ВерсияДанных", "DataVersion");
Словарь.Вставить("ВерсияДанных____Presentation", "DataVersion____Presentation");
Словарь.Вставить("Предопределенный", "Predefined");
Словарь.Вставить("Предопределенный____Presentation", "Predefined____Presentation");
Словарь.Вставить("ИмяПредопределенныхДанных", "PredefinedDataName");
Словарь.Вставить("ИмяПредопределенныхДанных____Presentation", "PredefinedDataName____Presentation");
Словарь.Вставить("Ссылка", "Ref");
Словарь.Вставить("Ссылка____Presentation", "Ref_Key____Presentation");
Словарь.Вставить("Наименование", "Description");
Словарь.Вставить("Наименование____Presentation", "Description____Presentation");
Словарь.Вставить("Код", "Code");
Словарь.Вставить("Код____Presentation", "Code____Presentation");

