
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЦветаЛиний.Добавить(Новый Цвет(245, 100, 100));
	ЦветаЛиний.Добавить(Новый Цвет(130, 150, 240));
	ЦветаЛиний.Добавить(Новый Цвет(255, 180, 40));
	ЦветаЛиний.Добавить(Новый Цвет(100, 210, 130));
	ЦветаЛиний.Добавить(Новый Цвет(215, 135, 250));
	ЦветаЛиний.Добавить(Новый Цвет(142, 142, 142));
	
	ЗаполнитьТаблицуПоказателей();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуПоказателей()
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	Метрики.Ссылка КАК Показатель,
		|	-1 КАК ЦветЛинии
		|ИЗ
		|	Справочник.Метрики КАК Метрики
		|ГДЕ
		|	Не Метрики.Недействителен");
		
	Показатели.Загрузить(Запрос.Выполнить().Выгрузить());
	
	Если ЗначениеЗаполнено(Параметры.Период) Тогда
		Период = Параметры.Период;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если Не ЗначениеЗаполнено(Период) Тогда
		Период.Вариант = ВариантСтандартногоПериода.Последние7Дней;
	КонецЕсли;
	
	ВключенныеПоказатели = Показатели.НайтиСтроки(Новый Структура("Включить", Истина));
	Если ВключенныеПоказатели.Количество() = 0 Тогда
		Для Каждого Стр Из Показатели Цикл
			Стр.Включить = Истина;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Сформировать(Команда)
	
	СформироватьНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура СформироватьНаСервере()
	
	СохраняемыеВНастройкахДанныеМодифицированы = Истина;
	
	КоличествоТочек = 501;
	
	ЦветаСерий = Новый Соответствие;
	ВыбранныеПоказатели = Новый Массив;
	
	Сч = 0;
	КолЦветов = ЦветаЛиний.Количество();
	
	Для Каждого Стр Из Показатели Цикл
		
		Стр.Минимум = 0;
		Стр.Максимум = 0;
		Стр.Среднее = 0;
		Стр.Коэффициент = 0;
		Стр.Масштаб = "";
		
		Если Стр.Включить Тогда
			
			ВыбранныеПоказатели.Добавить(Стр.Показатель);
			
			Стр.ЦветЛинии = Сч % КолЦветов;
			ЦветаСерий.Вставить(Стр.Показатель, Стр.ЦветЛинии);
			Сч = Сч + 1;
			
		Иначе
			Стр.ЦветЛинии = -1;
		КонецЕсли;
		
	КонецЦикла;
	
	// Вывод диаграммы
	
	Диаграмма.Очистить();
	Диаграмма.Обновление = Ложь;
	Диаграмма.ОтображатьЗаголовок = Ложь;
	Диаграмма.ОтображатьЛегенду = Ложь;
	Диаграмма.ОбластьПостроения.ОтображатьЛинииЗначенийШкалы = Ложь;
	Диаграмма.ОбластьПостроения.ОриентацияМеток = ОриентацияМетокДиаграммы.Горизонтально;
	Диаграмма.РежимСглаживания = РежимСглаживанияДиаграммы.ГладкаяКривая;
	
	ЗначенияПоказателей = Метрики.ПолучитьДанныеДляВыводаОтчета(
		Период.ДатаНачала, Период.ДатаОкончания, ВыбранныеПоказатели, КоличествоТочек);
	
	Для Каждого Стр Из ЗначенияПоказателей Цикл
		
		Точка = Диаграмма.УстановитьТочку(Стр.ОтображаемаяДата);
		
		// Если период 10 дней или больше, выводится дата без времени
		Если (Период.ДатаОкончания - Период.ДатаНачала) >= 10*24*3600 - 1 Тогда
			Точка.Текст = Формат(Стр.ОтображаемаяДата, "ДЛФ = Д");
		КонецЕсли;
		
		Серия = Диаграмма.УстановитьСерию(Стр.Показатель);
		Серия.Маркер = ТипМаркераДиаграммы.Нет;
		Серия.Цвет = ЦветаЛиний[ЦветаСерий.Получить(Стр.Показатель)].Значение;
		
		Диаграмма.УстановитьЗначение(Точка, Серия, Окр(Стр.Результат));
		
	КонецЦикла;
	
	// Вывод итоговых значений
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ЗамерыМетрик.Показатель КАК Показатель,
		|	МАКСИМУМ(ЗамерыМетрик.Дата) КАК Дата
		|ПОМЕСТИТЬ ДатыПервыхЗамеров
		|ИЗ
		|	РегистрСведений.ЗамерыМетрик КАК ЗамерыМетрик
		|ГДЕ
		|	ЗамерыМетрик.Показатель В(&ВыбранныеПоказатели)
		|	И ЗамерыМетрик.Дата <= &ДатаНачала
		|
		|СГРУППИРОВАТЬ ПО
		|	ЗамерыМетрик.Показатель
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗамерыМетрик.Показатель,
		|	ЗамерыМетрик.Результат
		|ПОМЕСТИТЬ НачальныеЗначения
		|ИЗ
		|	ДатыПервыхЗамеров КАК ДатыПервыхЗамеров
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЗамерыМетрик КАК ЗамерыМетрик
		|		ПО ДатыПервыхЗамеров.Показатель = ЗамерыМетрик.Показатель
		|			И ДатыПервыхЗамеров.Дата = ЗамерыМетрик.Дата
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗамерыМетрик.Показатель,
		|	ЗамерыМетрик.Результат КАК Результат
		|ПОМЕСТИТЬ ВсеЗначенияНаОтрезке
		|ИЗ
		|	РегистрСведений.ЗамерыМетрик КАК ЗамерыМетрик
		|ГДЕ
		|	ЗамерыМетрик.Показатель В(&ВыбранныеПоказатели)
		|	И ЗамерыМетрик.Дата > &ДатаНачала
		|	И ЗамерыМетрик.Дата <= &ДатаОкончания
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	НачальныеЗначения.Показатель,
		|	НачальныеЗначения.Результат
		|ИЗ
		|	НачальныеЗначения КАК НачальныеЗначения
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВсеЗначенияНаОтрезке.Показатель,
		|	СРЕДНЕЕ(ВсеЗначенияНаОтрезке.Результат) КАК Среднее,
		|	МИНИМУМ(ВсеЗначенияНаОтрезке.Результат) КАК Минимум,
		|	МАКСИМУМ(ВсеЗначенияНаОтрезке.Результат) КАК Максимум
		|ИЗ
		|	ВсеЗначенияНаОтрезке КАК ВсеЗначенияНаОтрезке
		|
		|СГРУППИРОВАТЬ ПО
		|	ВсеЗначенияНаОтрезке.Показатель");
	
	Запрос.УстановитьПараметр("ДатаНачала", Период.ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", Период.ДатаОкончания);
	Запрос.УстановитьПараметр("ВыбранныеПоказатели", ВыбранныеПоказатели);
	ТаблицаИтогов = Запрос.Выполнить().Выгрузить();
	
	Для Каждого Стр Из Показатели Цикл
		Если Стр.Включить Тогда
			
			ПерваяСтрокаЗначения = ЗначенияПоказателей.Найти(Стр.Показатель, "Показатель");
			Если ПерваяСтрокаЗначения = Неопределено Тогда
				Стр.Коэффициент = 0;
				Стр.Масштаб = "";
			Иначе
				Стр.Коэффициент = ПерваяСтрокаЗначения.Коэффициент;
				ЗнаковПослеЗапятой = -Log10(Стр.Коэффициент);
				Стр.Масштаб = "1:" + Формат(Стр.Коэффициент, "ЧДЦ = " + ЗнаковПослеЗапятой);
			КонецЕсли;
			
			СтрокаИтога = ТаблицаИтогов.Найти(Стр.Показатель, "Показатель");
			Если СтрокаИтога <> Неопределено Тогда
				Стр.Среднее = СтрокаИтога.Среднее;
				Стр.Минимум = СтрокаИтога.Минимум;
				Стр.Максимум = СтрокаИтога.Максимум;
			КонецЕсли;
			
		КонецЕсли;
	КонецЦикла;
		
КонецПроцедуры

&НаКлиенте
Процедура НастройкаМетрик(Команда)
	
	ОткрытьФорму("Справочник.Метрики.ФормаСписка");
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьВсе(Команда)
	
	УстановитьПризнакВключенДляВсех(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьВыбранные(Команда)
	
	УстановитьПризнакВключенДляВсех(Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьПризнакВключенДляВсех(Значение)
	
	Для Каждого Стр Из Показатели Цикл
		Стр.Включить = Значение;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказателиПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	
	Если Копирование Тогда
		Возврат;
	КонецЕсли;
	
	ОткрытьФорму("Справочник.Метрики.ФормаВыбора",, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.Метрики") 
		И ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		
		НайденныеСтроки = Показатели.НайтиСтроки(Новый Структура("Показатель", ВыбранноеЗначение));
		Если НайденныеСтроки.Количество() = 0 Тогда
			СтрокаПоказателя = Показатели.Добавить();
			СтрокаПоказателя.Показатель = ВыбранноеЗначение;
			СтрокаПоказателя.Включить = Истина;
			СтрокаПоказателя.ЦветЛинии = -1;
		Иначе
			СтрокаПоказателя = НайденныеСтроки[0];
		КонецЕсли;
		
		Элементы.Показатели.ТекущаяСтрока = СтрокаПоказателя.ПолучитьИдентификатор();
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриСохраненииДанныхВНастройкахНаСервере(Настройки)
	
	ВыбранныеПоказатели = Новый СписокЗначений;
	
	СтруктураОтбора = Новый Структура("Включить", Истина);
	ВыбранныеСтроки = Показатели.НайтиСтроки(СтруктураОтбора);
	Для Каждого Стр Из ВыбранныеСтроки Цикл
		ВыбранныеПоказатели.Добавить(Стр.Показатель);
	КонецЦикла;
	
	Настройки.Вставить("ВыбранныеПоказатели", ВыбранныеПоказатели);
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	Если ЗначениеЗаполнено(Параметры.Период) Тогда
		Настройки["Период"] = Параметры.Период;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Параметры.ВыбранныеПоказатели) Тогда
		Настройки["ВыбранныеПоказатели"] = Параметры.ВыбранныеПоказатели;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Настройки["ВыбранныеПоказатели"]) Тогда
		Для Каждого Стр Из Показатели Цикл
			Стр.Включить = Настройки["ВыбранныеПоказатели"].НайтиПоЗначению(Стр.Показатель) <> Неопределено;
		КонецЦикла;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Параметры.ВыбранныеПоказатели) Тогда
		СформироватьНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказателиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ПоказатьЗначение(, Элементы.Показатели.ТекущиеДанные.Показатель);
	
КонецПроцедуры


