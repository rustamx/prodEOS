#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриЗагрузкеВариантаНаСервере(Настройки)
	
	ОтключитьДоступностьФиксированныхНастроек();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура РезультатОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	
	
	ПараметрыРасшифровки = ПолучитьНастройкиРасшифровкиОсновной(Расшифровка);
	Если ПараметрыРасшифровки = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("СформироватьПриОткрытии", Истина);
	ПараметрыФормы.Вставить("КлючНазначенияИспользования", "Расшифровка");
	ПараметрыФормы.Вставить("КлючВарианта" , ПараметрыРасшифровки.КлючВарианта);
	ПараметрыФормы.Вставить("Отбор", ПараметрыРасшифровки.Отбор);
	ОткрытьФорму(ИмяФормы, ПараметрыФормы, , Истина);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ПолучитьНастройкиРасшифровкиОсновной(Расшифровка)
	
	Если КлючТекущегоВарианта = "Основной" Тогда
		
		НовыйОтбор = ПолучитьНовыйОтбор(Расшифровка);
		Если РасшифровкаПоПолю(Расшифровка, "КоличествоДокументов") Тогда
			
			КлючНовогоВарианта = "ДокументыПоОтветственным";
			
		ИначеЕсли РасшифровкаПоПолю(Расшифровка, "ДлительностьРабот")
			Или РасшифровкаПоПолю(Расшифровка, "ДлительностьРаботПредставление")
			Или РасшифровкаПоПолю(Расшифровка, "ДлительностьРаботОбщая")
			Или РасшифровкаПоПолю(Расшифровка, "ДлительностьРаботОбщаяПредставление")
			Или РасшифровкаПоПолю(Расшифровка, "ДлительностьРаботПроцент") Тогда
			
			КлючНовогоВарианта = "СредняяДлительностьПроцессовПоДокументам";
			
		Иначе
			
			Возврат Неопределено;
			
		КонецЕсли;
		
	ИначеЕсли КлючТекущегоВарианта = "СредняяДлительностьПроцессовПоДокументам" Тогда
		
		НовыйОтбор = ПолучитьНовыйОтбор(Расшифровка);
		Если РасшифровкаПоПолю(Расшифровка, "КоличествоДокументов") Тогда
			
			КлючНовогоВарианта = "ДокументыПоОтветственным";
			
		ИначеЕсли РасшифровкаПоПолю(Расшифровка, "КоличествоПроцессов")
			Или РасшифровкаПоПолю(Расшифровка, "Длительность")
			Или РасшифровкаПоПолю(Расшифровка, "ДлительностьПредставление") Тогда
			
			Если НовыйОтбор.Свойство("Шаблон") И Не ЗначениеЗаполнено(НовыйОтбор.Шаблон) Тогда
				КлючНовогоВарианта = "ПроцессыПоАвторам";
			Иначе
				КлючНовогоВарианта = "ПроцессыПоШаблонам";
			КонецЕсли;
			
		Иначе
			
			Возврат Неопределено;
			
		КонецЕсли;
		
	ИначеЕсли КлючТекущегоВарианта = "ПроцессыПоШаблонам" Тогда
		
		Возврат Неопределено;
		
	ИначеЕсли КлючТекущегоВарианта = "ПроцессыПоАвторам" Тогда
		
		Возврат Неопределено;
		
	ИначеЕсли КлючТекущегоВарианта = "ДокументыПоОтветственным" Тогда
		
		НовыйОтбор = ПолучитьНовыйОтбор(Расшифровка);
		Если РасшифровкаПоПолю(Расшифровка, "КоличествоДокументов")
			Или РасшифровкаПоПолю(Расшифровка, "ДлительностьРаботПоДокументу")
			Или РасшифровкаПоПолю(Расшифровка, "ДлительностьРаботПоДокументуПредставление") Тогда
			
			КлючНовогоВарианта = "ПроцессыПоАвторам";
			
		Иначе
			
			Возврат Неопределено;
			
		КонецЕсли;
		
	Иначе
		
		Возврат Неопределено;
		
	КонецЕсли;
	
	ПараметрыРасшифровки = Новый Структура("Отбор, КлючВарианта", НовыйОтбор, КлючНовогоВарианта);
	
	Возврат ПараметрыРасшифровки;
	
КонецФункции

&НаСервере
Функция ПолучитьНовыйОтбор(Расшифровка)
	
	ПоляОтбора = Новый Массив;
	ЗаполняемыеПоляОтбора = Новый Массив;
	
	// Поля и параметры
	ПоляОтбора.Добавить("Период");
	ПоляОтбора.Добавить("ТипПроцесса");
	ПоляОтбора.Добавить("ТипДокумента");
	ПоляОтбора.Добавить("ВидДокумента");
	ПоляОтбора.Добавить("Документ");
	ПоляОтбора.Добавить("Шаблон");
	ПоляОтбора.Добавить("Ответственный");
	Для Каждого ПолеОтбора Из ПоляОтбора Цикл
		ЗаполняемыеПоляОтбора.Добавить(Новый ПолеКомпоновкиДанных(ПолеОтбора));
	КонецЦикла;
	
	// Параметры
	ПоляОтбора.Добавить("Организация");
	ПоляОтбора.Добавить("Подразделение");
	ПоляОтбора.Добавить("ВопросДеятельности");
	ПоляОтбора.Добавить("Проект");
	Для Каждого ПолеОтбора Из ПоляОтбора Цикл
		ЗаполняемыеПоляОтбора.Добавить(Новый ПараметрКомпоновкиДанных(ПолеОтбора));
	КонецЦикла;
	
	НовыйОтбор = Новый Структура;
	
	ОбработкаРасшифровки = Новый ОбработкаРасшифровкиКомпоновкиДанных(
		ДанныеРасшифровки, Новый ИсточникДоступныхНастроекКомпоновкиДанных(Отчет));
	НастройкиКомпоновки = ОбработкаРасшифровки.Расшифровать(Расшифровка, Новый ПолеКомпоновкиДанных("Документ"));
	
	Для Каждого ЭлементОтбора Из НастройкиКомпоновки.Отбор.Элементы Цикл
		Если ЗаполняемыеПоляОтбора.Найти(ЭлементОтбора.ЛевоеЗначение) <> Неопределено Тогда
			НовыйОтбор.Вставить(Строка(ЭлементОтбора.ЛевоеЗначение), ЭлементОтбора.ПравоеЗначение);
			УдалитьЗаполняемоеПолеОтбора(ЗаполняемыеПоляОтбора, Строка(ЭлементОтбора.ЛевоеЗначение));
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого ЭлементПараметра Из НастройкиКомпоновки.ПараметрыДанных.Элементы Цикл
		Если ЭлементПараметра.Использование И ЗаполняемыеПоляОтбора.Найти(ЭлементПараметра.Параметр) <> Неопределено Тогда
			НовыйОтбор.Вставить(Строка(ЭлементПараметра.Параметр), ЭлементПараметра.Значение);
		КонецЕсли;
	КонецЦикла;
	
	Возврат НовыйОтбор;
	
КонецФункции

&НаСервере
Функция РасшифровкаПоПолю(Расшифровка, Поле)
	
	ДанныеРасшифровкиОбъект = ПолучитьИзВременногоХранилища(ДанныеРасшифровки);
	ЭлементРасшифровки = ДанныеРасшифровкиОбъект.Элементы[Расшифровка];
	ПоляРасшифровки = ЭлементРасшифровки.ПолучитьПоля();
	Для Каждого ПолеРасшифровки Из ПоляРасшифровки Цикл
		Если ПолеРасшифровки.Поле = Поле Тогда
			Возврат Истина;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Ложь;
	
КонецФункции

&НаСервере
Процедура ОтключитьДоступностьФиксированныхНастроек()
	
	Для Каждого ФиксированнаяНастройка Из Отчет.КомпоновщикНастроек.ФиксированныеНастройки.ПараметрыДанных.Элементы Цикл
		
		Если Не ФиксированнаяНастройка.Использование Тогда
			Продолжить;
		КонецЕсли;
		
		Для Каждого Настройка Из Отчет.КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы Цикл
			
			Если ФиксированнаяНастройка.Параметр <> Настройка.Параметр Тогда
				Продолжить;
			КонецЕсли;
			
			Настройка.Использование = Ложь;
			Настройка.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
			
		КонецЦикла;
		
		Для Каждого ПользовательскаяНастройка Из Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы Цикл
			
			Если ФиксированнаяНастройка.Параметр <> ПользовательскаяНастройка.Параметр Тогда
				Продолжить;
			КонецЕсли;
			
			ПользовательскаяНастройка.Использование = Ложь;
			ПользовательскаяНастройка.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура УдалитьЗаполняемоеПолеОтбора(ЗаполняемыеПоляОтбора, ПолеОтбора)
	
	ИндексПоляОтбора = ЗаполняемыеПоляОтбора.Найти(Новый ПолеКомпоновкиДанных(ПолеОтбора));
	Если ИндексПоляОтбора <> Неопределено Тогда
		ЗаполняемыеПоляОтбора.Удалить(ИндексПоляОтбора);
	КонецЕсли;
	
	ИндексПоляОтбора = ЗаполняемыеПоляОтбора.Найти(Новый ПараметрКомпоновкиДанных(ПолеОтбора));
	Если ИндексПоляОтбора <> Неопределено Тогда
		ЗаполняемыеПоляОтбора.Удалить(ИндексПоляОтбора);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
