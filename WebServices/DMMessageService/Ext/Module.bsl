#Область СлужебныеПроцедурыИФункции

Функция Get(Очередь)
	
	Попытка
		
		ОчередьСсылка = Справочники.ОчередиСообщенийИнтегрированныхСистем.НайтиПоНаименованию(Очередь);
		Если ОчередьСсылка.Пустая() Тогда
			Ошибка = ОбработкаЗапросовXDTO.СоздатьОбъект("DMError");
			Ошибка.Subject = НСтр("ru = 'Очередь не найдена.'; en = 'Queue is not found.'");
			Ошибка.Description = Очередь;
			Возврат Ошибка;
		КонецЕсли;	
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ ПЕРВЫЕ 1
			|	СообщенияИнтегрированныхСистем.Ссылка,
			|	СообщенияИнтегрированныхСистем.ДанныеСообщения
			|ИЗ
			|	Справочник.СообщенияИнтегрированныхСистем КАК СообщенияИнтегрированныхСистем
			|ГДЕ
			|	СообщенияИнтегрированныхСистем.Очередь = &Очередь
			|	И СообщенияИнтегрированныхСистем.Входящее = ЛОЖЬ
			|	И СообщенияИнтегрированныхСистем.ПометкаУдаления = ЛОЖЬ
			|
			|УПОРЯДОЧИТЬ ПО
			|	СообщенияИнтегрированныхСистем.ДатаСоздания";

		Запрос.УстановитьПараметр("Очередь", ОчередьСсылка);

		УстановитьПривилегированныйРежим(Истина);
		Результат = Запрос.Выполнить();

		ВыборкаДетальныеЗаписи = Результат.Выбрать();

		Если ВыборкаДетальныеЗаписи.Следующий() Тогда
			СтрокаXML = ВыборкаДетальныеЗаписи.ДанныеСообщения.Получить();
			ЧтениеXML = Новый ЧтениеXML;
			ЧтениеXML.УстановитьСтроку(СтрокаXML);
			
			СообщениеXDTO = ФабрикаXDTO.ПрочитатьXML(ЧтениеXML);
			
			СообщениеОбъект = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
			СообщениеОбъект.Записать();
			СообщениеОбъект.УстановитьПометкуУдаления(Истина);
			
			Возврат СообщениеXDTO;
		Иначе	
			Возврат ОбработкаЗапросовXDTO.СоздатьОбъект("DMOK");;
		КонецЕсли;

	Исключение
		
		Ошибка = ОбработкаЗапросовXDTO.СоздатьОбъект("DMError");
		Ошибка.Subject = НСтр("ru = 'Ошибка при обработке сообщения'; en = 'Error when processing a message'");
		
	    Инфо = ИнформацияОбОшибке();
	    Ошибка.Description = НСтр("ru='Описание';en='Description'; en = 'Details'") + "=" + Инфо.Описание + ";" 
	    	+ НСтр("ru='ИмяМодуля';en='ModuleName'; en = 'ИмяМодуля'") + "=" + Инфо.ИмяМодуля + ";"
	    	+ НСтр("ru='НомерСтроки';en='LineNumber'; en = 'НомерСтроки'") + "=" + Инфо.НомерСтроки + ";"
	    	+ НСтр("ru='ИсходнаяСтрока';en='SourceLine'; en = 'ИсходнаяСтрока'") + "=" + Инфо.ИсходнаяСтрока + ".";
		
		Возврат Ошибка;
		
	КонецПопытки;
	
КонецФункции

Функция Put(Сообщение, Очередь)
	
	Попытка
		
		ОчередьСсылка = Справочники.ОчередиСообщенийИнтегрированныхСистем.НайтиПоНаименованию(Очередь);
		Если ОчередьСсылка.Пустая() Тогда
			Ошибка = ОбработкаЗапросовXDTO.СоздатьОбъект("DMError");
			Ошибка.Subject = НСтр("ru = 'Очередь не найдена.'; en = 'Queue is not found.'");
			Ошибка.Description = Очередь;
			Возврат Ошибка;
		КонецЕсли;
		
		СтрокаXML = "";
		ЗаписьXML = Новый ЗаписьXML;
		ЗаписьXML.УстановитьСтроку();
		ФабрикаXDTO.ЗаписатьXML(ЗаписьXML, Сообщение, , , , НазначениеТипаXML.Явное);
		СтрокаXML = ЗаписьXML.Закрыть();
		
		СообщениеОбъект = Справочники.СообщенияИнтегрированныхСистем.СоздатьЭлемент();
		СообщениеОбъект.ДанныеСообщения = Новый ХранилищеЗначения(СтрокаXML);
		СообщениеОбъект.Входящее = Истина;
		СообщениеОбъект.ДатаСоздания = ТекущаяДата();
		СообщениеОбъект.Очередь = ОчередьСсылка;
		СообщениеОбъект.Код = Строка(Сообщение.Тип());
		СообщениеОбъект.ИдентификаторСообщения = Сообщение.MessageID;
		УстановитьПривилегированныйРежим(Истина);
		СообщениеОбъект.Записать();
		СообщениеОбъект.Разблокировать();
		УстановитьПривилегированныйРежим(Ложь);
		
		ОбработкаСообщенийИнтегрированныхСистем.ОбработатьСообщениеИнтегрированныхСистем(СообщениеОбъект.Ссылка);
		
		Ответ = ОбработкаЗапросовXDTO.СоздатьОбъект("DMOK");
		Возврат Ответ;
		
	Исключение
		
		Ошибка = ОбработкаЗапросовXDTO.СоздатьОбъект("DMError");
		Ошибка.Subject = НСтр("ru = 'Ошибка при обработке сообщения'; en = 'Error when processing a message'");
		
	    Инфо = ИнформацияОбОшибке();
	    Ошибка.Description = НСтр("ru='Описание';en='Description'; en = 'Details'") + "=" + Инфо.Описание + ";" 
	    	+ НСтр("ru='ИмяМодуля';en='ModuleName'; en = 'ИмяМодуля'") + "=" + Инфо.ИмяМодуля + ";"
	    	+ НСтр("ru='НомерСтроки';en='LineNumber'; en = 'НомерСтроки'") + "=" + Инфо.НомерСтроки + ";"
	    	+ НСтр("ru='ИсходнаяСтрока';en='SourceLine'; en = 'ИсходнаяСтрока'") + "=" + Инфо.ИсходнаяСтрока + ".";
		
		Возврат Ошибка;
		
	КонецПопытки;
	
КонецФункции

#КонецОбласти
