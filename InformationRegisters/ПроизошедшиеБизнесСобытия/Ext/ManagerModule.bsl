
// Перезаписывает запись регистра, изменяя параметры Обработано или ЧислоПопытокОбработки или ПометкаУдаления
//  запись идентифицируется через Идентификатор
Процедура ОбновитьЗапись(Идентификатор, Обработано = Неопределено, ЧислоПопытокОбработки = Неопределено,
	ПометкаУдаления = Неопределено, СообщениеОбОшибке = "") Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	НачатьТранзакцию();
	Попытка
		
		ЗаписьУжеЕстьВБазе = Ложь;
		
		Блокировка = Новый БлокировкаДанных;
		ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.ПроизошедшиеБизнесСобытия");
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		ЭлементБлокировки.УстановитьЗначение("Идентификатор", Идентификатор);
		Блокировка.Заблокировать();   		
		
		НаборЗаписей = РегистрыСведений.ПроизошедшиеБизнесСобытия.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Идентификатор.Установить(Идентификатор);
		
		СтруктураОтбора = Новый Структура("Идентификатор", Идентификатор);
		Выборка = РегистрыСведений.ПроизошедшиеБизнесСобытия.Выбрать(,,СтруктураОтбора);
		ЧислоЗаписей = 0;
		Пока Выборка.Следующий() Цикл
			
			ЗаписьУжеЕстьВБазе = Истина;
			НоваяЗапись = НаборЗаписей.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяЗапись, Выборка);
			
			ЧислоЗаписей = ЧислоЗаписей + 1;
			Если ЧислоЗаписей >= 2 Тогда
				ЗаписьУжеЕстьВБазе = Ложь;
				НаборЗаписей.Очистить();
				Прервать;
			КонецЕсли;	
			
		КонецЦикла;	
		
		Если Обработано <> Неопределено Тогда
			НоваяЗапись.Обработано = Обработано;
		КонецЕсли;	
		
		Если ЧислоПопытокОбработки <> Неопределено Тогда
			НоваяЗапись.ЧислоПопытокОбработки = ЧислоПопытокОбработки;
		КонецЕсли;	
		
		Если ПометкаУдаления <> Неопределено Тогда
			НоваяЗапись.ПометкаУдаления = ПометкаУдаления;
		КонецЕсли;	
		
		Если СообщениеОбОшибке <> "" Тогда 
			НоваяЗапись.ра_Комментарий = НоваяЗапись.ра_Комментарий + Символы.ПС + СообщениеОбОшибке;
		КонецЕсли;	
		
		НаборЗаписей.Записать(); // записываем, стирая старые записи с отбором по Идентификатор
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		ОтменитьТранзакцию();
		ВызватьИсключение;
	КонецПопытки;
	
КонецПроцедуры	


