
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ПрограммныйИнтерфейс

// Сохраняет соответствие объекта доступа и его дескрипторов
// 
// Параметры:
//  ТаблицаДескрипторов - ТаблицаЗначений - таблица, содержащая данные для записи в регистр.
//  ОбъектДоступа - Ссылка - ссылка на объект, чьи дескрипторы нужно записать.
//  ОпределятьЗависимыеПрава - Булево - признак необходимости обновления зависимых прав.
// 
Процедура Сохранить(ТаблицаДескрипторов, ОбъектДоступа, ОпределятьЗависимыеПрава = Истина) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТаблицаДескрипторов.Свернуть("Объект, Дескриптор, ОбъектМетаданных, ТипДескриптора, Отключен, ПолученОт");
	
	// Новые дескрипторы записываются в базу только если есть отличия от старых.
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	НовыеДескрипторы.Дескриптор,
		|	НовыеДескрипторы.ТипДескриптора,
		|	НовыеДескрипторы.ПолученОт,
		|	НовыеДескрипторы.Отключен
		|ПОМЕСТИТЬ НовыеДескрипторы
		|ИЗ
		|	&НовыеДескрипторы КАК НовыеДескрипторы
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДескрипторыДляОбъектов.Дескриптор,
		|	ДескрипторыДляОбъектов.ТипДескриптора,
		|	ДескрипторыДляОбъектов.ПолученОт,
		|	ДескрипторыДляОбъектов.Отключен
		|ПОМЕСТИТЬ СтарыеДескрипторы
		|ИЗ
		|	РегистрСведений.ДескрипторыДляОбъектов КАК ДескрипторыДляОбъектов
		|ГДЕ
		|	ДескрипторыДляОбъектов.Объект = &Объект
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	ИСТИНА КАК ЕстьОтличия
		|ИЗ
		|	СтарыеДескрипторы КАК СтарыеДескрипторы
		|		ЛЕВОЕ СОЕДИНЕНИЕ НовыеДескрипторы КАК НовыеДескрипторы
		|		ПО СтарыеДескрипторы.Дескриптор = НовыеДескрипторы.Дескриптор
		|			И СтарыеДескрипторы.ТипДескриптора = НовыеДескрипторы.ТипДескриптора
		|			И СтарыеДескрипторы.ПолученОт = НовыеДескрипторы.ПолученОт
		|			И СтарыеДескрипторы.Отключен = НовыеДескрипторы.Отключен
		|ГДЕ
		|	НовыеДескрипторы.Дескриптор ЕСТЬ NULL 
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	ИСТИНА
		|ИЗ
		|	НовыеДескрипторы КАК НовыеДескрипторы
		|		ЛЕВОЕ СОЕДИНЕНИЕ СтарыеДескрипторы КАК СтарыеДескрипторы
		|		ПО СтарыеДескрипторы.Дескриптор = НовыеДескрипторы.Дескриптор
		|			И СтарыеДескрипторы.ТипДескриптора = НовыеДескрипторы.ТипДескриптора
		|			И СтарыеДескрипторы.ПолученОт = НовыеДескрипторы.ПолученОт
		|			И СтарыеДескрипторы.Отключен = НовыеДескрипторы.Отключен
		|ГДЕ
		|	СтарыеДескрипторы.Дескриптор ЕСТЬ NULL ");
	
	Запрос.УстановитьПараметр("Объект", ОбъектДоступа);
	Запрос.УстановитьПараметр("НовыеДескрипторы", ТаблицаДескрипторов);
	
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой() Тогда
		
		ТаблицаДескрипторов.ЗаполнитьЗначения(ОбъектДоступа, "Объект");
		ТаблицаДескрипторов.ЗаполнитьЗначения(
			ОбщегоНазначения.ИдентификаторОбъектаМетаданных(ОбъектДоступа.Метаданные()), "ОбъектМетаданных");
		
		Набор = РегистрыСведений.ДескрипторыДляОбъектов.СоздатьНаборЗаписей();
	    Набор.Отбор.Объект.Установить(ОбъектДоступа);
		Набор.Загрузить(ТаблицаДескрипторов);
		
		Если Не ОпределятьЗависимыеПрава Тогда
			Набор.ДополнительныеСвойства.Вставить("ПропуститьОпределениеЗависимыхПрав", Истина);
		КонецЕсли;
		
	    Набор.Записать();
		
	КонецЕсли;
	
КонецПроцедуры

// Сохраняет соответствие объекта доступа и его основного дескриптора
// 
// Параметры:
//  Дескриптор - ДескрипторыДоступаОбъектовСсылка - ссылка на дескриптор.
//  ОбъектДоступа - Ссылка - ссылка на объект, чьи дескрипторы нужно записать.
//  ОпределятьЗависимыеПрава - Булево - признак необходимости обновления зависимых прав.
// 
Процедура СохранитьОсновнойДескриптор(Дескриптор, ОбъектДоступа, ОпределятьЗависимыеПрава = Истина) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДескрипторыДляОбъектов.Дескриптор,
		|	ДескрипторыДляОбъектов.Отключен
		|ИЗ
		|	РегистрСведений.ДескрипторыДляОбъектов КАК ДескрипторыДляОбъектов
		|ГДЕ
		|	ДескрипторыДляОбъектов.Объект = &ОбъектДоступа
		|	И ДескрипторыДляОбъектов.ТипДескриптора = 0";

	Запрос.УстановитьПараметр("ОбъектДоступа", ОбъектДоступа);
	Выборка = Запрос.Выполнить().Выбрать();
	
	СтарыйДескриптор = Неопределено;
	СтарыйДескрипторОтключен = Ложь;
	
	Если Выборка.Следующий() Тогда
		СтарыйДескриптор = Выборка.Дескриптор;
		СтарыйДескрипторОтключен = Выборка.Отключен;
	КонецЕсли;
	
	Если СтарыйДескриптор <> Дескриптор Тогда
		
		НаборЗаписей = РегистрыСведений.ДескрипторыДляОбъектов.СоздатьНаборЗаписей();
	    НаборЗаписей.Отбор.Объект.Установить(ОбъектДоступа);
		НаборЗаписей.Отбор.ТипДескриптора.Установить(0);
		
		Строка = НаборЗаписей.Добавить();
		Строка.Объект = ОбъектДоступа;
		Строка.Дескриптор = Дескриптор;
		Строка.ОбъектМетаданных = 
			ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Дескриптор, "ИдентификаторОбъектаМетаданных");
		Строка.ТипДескриптора = 0;
		Строка.Отключен = СтарыйДескрипторОтключен;
		
		Если Не ОпределятьЗависимыеПрава Тогда
			НаборЗаписей.ДополнительныеСвойства.Вставить("ПропуститьОпределениеЗависимыхПрав", Истина);
		КонецЕсли;
		
	    НаборЗаписей.Записать();
		
	КонецЕсли;
	
КонецПроцедуры

// Возвращает массив дескрипторов, которые назначены объекту.
// 
// Параметры:
//  ОбъектДоступа - Ссылка - ссылка на объект, чьи дескрипторы нужно получить.
// 
// Возвращаемое значение:
//  Массив - массив дескрипторов объекта.
// 
Функция ПолучитьДескрипторыОбъекта(ОбъектДоступа) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДескрипторыДляОбъектов.Дескриптор
		|ИЗ
		|	РегистрСведений.ДескрипторыДляОбъектов КАК ДескрипторыДляОбъектов
		|ГДЕ
		|	ДескрипторыДляОбъектов.Объект = &ОбъектДоступа";
	
	Запрос.УстановитьПараметр("ОбъектДоступа", ОбъектДоступа);
	Дескрипторы = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Дескриптор");
	
	Возврат Дескрипторы;
	
КонецФункции

// Проверяет наличие дескрипторов для объекта.
// 
// Параметры:
//  СсылкаНаОбъект - Ссылка - ссылка на объект.
//  ОтборПоТипу - Число, Неопределено - тип дескрипторов, которые нужно получить. Если Неопределено, то все.
//  ТолькоАктивные - Булево - отбор по полю "Отключен".
// 
// Возвращаемое значение:
//  Булево - Истина, если дескрипторы найдены.
// 
Функция ЕстьДескрипторыОбъекта(СсылкаНаОбъект, ОтборПоТипу = Неопределено, ТолькоАктивные = Ложь) Экспорт
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ИСТИНА КАК ЕстьЗаписи
		|ИЗ
		|	РегистрСведений.ДескрипторыДляОбъектов КАК ДескрипторыДляОбъектов
		|ГДЕ
		|	ДескрипторыДляОбъектов.Объект = &СсылкаНаОбъект
		|	%ДопУсловия%");
	
	ДопУсловия = "";
	Если ОтборПоТипу <> Неопределено Тогда
		ДопУсловия = ДопУсловия + "И ДескрипторыДляОбъектов.ТипДескриптора = &ОтборПоТипу";
	КонецЕсли;
	Если ТолькоАктивные Тогда
		ДопУсловия = ДопУсловия + "И Не ДескрипторыДляОбъектов.Отключен";
	КонецЕсли;
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "%ДопУсловия%", ДопУсловия);
	Запрос.УстановитьПараметр("СсылкаНаОбъект", СсылкаНаОбъект);
	Запрос.УстановитьПараметр("ОтборПоТипу", ОтборПоТипу);
	
	ЕстьЗаписи = Не Запрос.Выполнить().Пустой();
	
	Возврат ЕстьЗаписи;
	
КонецФункции

// Проверяет наличие в регистре записей по дескриптору.
//
// Параметры:
//  ДескрипторСсылка - СправочникСсылка - ссылка на дескриптор.
//
// Возвращаемое значение:
//  Булево - Истина, если найдена хотя бы одна запись.
//
Функция ЕстьЗаписиПоДескриптору(ДескрипторСсылка) Экспорт
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ИСТИНА КАК ЕстьЗаписи
		|ИЗ
		|	РегистрСведений.ДескрипторыДляОбъектов КАК ДескрипторыДляОбъектов
		|ГДЕ
		|	ДескрипторыДляОбъектов.Дескриптор = &Дескриптор");
	
	Запрос.УстановитьПараметр("Дескриптор", ДескрипторСсылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат Не РезультатЗапроса.Пустой();
	
КонецФункции

#КонецОбласти

#КонецЕсли
