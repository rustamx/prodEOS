
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЭлементУсловногоОформления = Список.УсловноеОформление.Элементы.Добавить();
	
	ЭлементОтбораДанных = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбораДанных.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("КоличествоПопытокОбработки");
	ЭлементОтбораДанных.ВидСравнения = ВидСравненияКомпоновкиДанных.Больше;
	ЭлементОтбораДанных.ПравоеЗначение = 0;
	ЭлементОтбораДанных.Использование = Истина;
	
	ЭлементЦветаОформления = ЭлементУсловногоОформления.Оформление.Элементы.Найти("ЦветТекста");
	ЭлементЦветаОформления.Значение =  Метаданные.ЭлементыСтиля.ПоясняющийОшибкуТекст.Значение;
	ЭлементЦветаОформления.Использование = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы_Список

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	ПодключитьОбработчикОжидания("УстановитьДоступностьКоманд", 0.2, Истина);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПродолжитьВыполнениеПроцессов(Команда)
	
	ВыделенныеСтроки = Элементы.Список.ВыделенныеСтроки;
	
	КомплексныеПроцессыКПродолжению = Новый Массив;
	
	Для Каждого Стр ИЗ ВыделенныеСтроки Цикл
		
		ДанныеСтроки = Элементы.Список.ДанныеСтроки(Стр);
		Если ДанныеСтроки.КоличествоПопытокОбработки < 1 Тогда
			Продолжить;
		КонецЕсли;
		
		ОписаниеПроцесса = Новый Структура;
		ОписаниеПроцесса.Вставить("КомплексныйПроцесс", ДанныеСтроки.КомплексныйПроцесс);
		ОписаниеПроцесса.Вставить("ЗавершившеесяДействие", ДанныеСтроки.ЗавершившеесяДействие);
		
		КомплексныеПроцессыКПродолжению.Добавить(ОписаниеПроцесса);
		
	КонецЦикла;
	
	Если КомплексныеПроцессыКПродолжению.Количество() = 0 Тогда
		
		ТекстПредупреждения = 
			НСтр("ru = 'Продолжить можно только остановленные процессы из-за ошибок при маршрутизации.'; en = 'You can only continue the processes stopped due to errors in routing.'");
			
		ПоказатьПредупреждение(,ТекстПредупреждения);
		
		Возврат;
		
	КонецЕсли;
	
	ПродолжитьВыполнениеПроцессовНаСервере(КомплексныеПроцессыКПродолжению);
	
	Элементы.Список.Обновить();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Процедура ПродолжитьВыполнениеПроцессовНаСервере(КомплексныеПроцессы)
	
	РегистрыСведений.ОчередьМаршрутизацииКомплексныхПроцессов.
		ПродолжитьВыполнениеПроцессов(КомплексныеПроцессы);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьДоступностьКоманд()
	
	КоличествоВыделенныхСтрок = Элементы.Список.ВыделенныеСтроки.Количество();
	
	Если КоличествоВыделенныхСтрок > 1 Тогда
		Элементы.ФормаПродолжитьВыполнениеПроцессов.Доступность = Истина;
	ИначеЕсли КоличествоВыделенныхСтрок = 0 Тогда
		Элементы.ФормаПродолжитьВыполнениеПроцессов.Доступность = Ложь;
	Иначе
		ТекущиеДанные = Элементы.Список.ТекущиеДанные;
		Если ТекущиеДанные.КоличествоПопытокОбработки >= 1 Тогда
			Элементы.ФормаПродолжитьВыполнениеПроцессов.Доступность = Истина;
		Иначе
			Элементы.ФормаПродолжитьВыполнениеПроцессов.Доступность = Ложь;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
