#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Добавляет подписку на показатель процесса.
//
// Параметры:
//  ПоказательПроцесса - СправочникСсылка.ПоказателиПроцессов - Показатель процесса, на который добавляется подписка.
//  Пользователь - СправочникСсылка.Пользователи - Пользователь, для которого добавляется подписка.
//
Процедура Добавить(ПоказательПроцесса, Знач Пользователь = Неопределено) Экспорт
	
	Если Пользователь = Неопределено Тогда
		Пользователь = ПользователиКлиентСервер.ТекущийПользователь();
	КонецЕсли;
	
	НачатьТранзакцию();
	Попытка
		
		МенеджерЗаписи = РегистрыСведений.ПодпискиНаПоказателиПроцессов.СоздатьМенеджерЗаписи();
		МенеджерЗаписи.Пользователь = Пользователь;
		МенеджерЗаписи.ПоказательПроцесса = ПоказательПроцесса;
		МенеджерЗаписи.Активна = Истина;
		МенеджерЗаписи.Записать();
		
		ОбновитьФлагАктивен(ПоказательПроцесса);
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		ОтменитьТранзакцию();
		ВызватьИсключение;
	КонецПопытки;
	
КонецПроцедуры

// Удаляет подписку на показатель процесса.
//
// Параметры:
//  Пользователь - СправочникСсылка.Пользователи - Пользователь, для которого удаляется подписка.
//  ПоказательПроцесса -  - Показатель процесса, на который удаляется подписка.
//
Процедура Удалить(ПоказательПроцесса, Знач Пользователь = Неопределено) Экспорт
	
	Если Пользователь = Неопределено Тогда
		Пользователь = ПользователиКлиентСервер.ТекущийПользователь();
	КонецЕсли;
	
	НачатьТранзакцию();
	Попытка
		
		МенеджерЗаписи = РегистрыСведений.ПодпискиНаПоказателиПроцессов.СоздатьМенеджерЗаписи();
		МенеджерЗаписи.Пользователь = Пользователь;
		МенеджерЗаписи.ПоказательПроцесса = ПоказательПроцесса;
		МенеджерЗаписи.Удалить();
		
		ОбновитьФлагАктивен(ПоказательПроцесса);
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		ОтменитьТранзакцию();
		ВызватьИсключение;
	КонецПопытки;
	
КонецПроцедуры

// Возвращает массив подписчиков по показателю процесса.
//
// Параметры:
//  ПоказательПроцесса - СправочникСсылка.ПоказателиПроцессов - Показатель процесса.
//
// Возвращаемое значение:
//  Массив - Подписчики на показатель процесса.
//
Функция Подписчики(ПоказательПроцесса) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ПодпискиНаПоказателиПроцессов.Пользователь КАК Пользователь
		|ИЗ
		|	РегистрСведений.ПодпискиНаПоказателиПроцессов КАК ПодпискиНаПоказателиПроцессов
		|ГДЕ
		|	ПодпискиНаПоказателиПроцессов.ПоказательПроцесса = &ПоказательПроцесса
		|	И ПодпискиНаПоказателиПроцессов.Пользователь <> ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)
		|	И ПодпискиНаПоказателиПроцессов.Активна = ИСТИНА";
	
	Запрос.УстановитьПараметр("ПоказательПроцесса", ПоказательПроцесса);
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Пользователь");
	
КонецФункции

// Возвращает признак того что показатель процесса активен.
//
// Параметры:
//  ПоказательПроцесса - СправочникСсылка.ПоказателиПроцессов - Показатель процесса.
//
// Возвращаемое значение:
//  Булево - Показатель процесса активен.
//
Функция ПоказательПроцессаАктивен(ПоказательПроцесса) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ПодпискиНаПоказателиПроцессов.Активна
		|ИЗ
		|	РегистрСведений.ПодпискиНаПоказателиПроцессов КАК ПодпискиНаПоказателиПроцессов
		|ГДЕ
		|	ПодпискиНаПоказателиПроцессов.ПоказательПроцесса = &ПоказательПроцесса
		|	И ПодпискиНаПоказателиПроцессов.Пользователь = ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)";
	
	Запрос.УстановитьПараметр("ПоказательПроцесса", ПоказательПроцесса);
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	Выборка.Следующий();
	
	Возврат Выборка.Активна;
	
КонецФункции

// Возвращает признак того что подписка активна.
//
// Параметры:
//  ПоказательПроцесса - СправочникСсылка.ПоказателиПроцессов - Показатель процесса.
//  Пользователь - СправочникСсылка.Пользователи - Пользователь.
//
// Возвращаемое значение:
//  Булево - Подписка активна.
//
Функция ПодпискаАктивна(ПоказательПроцесса, Знач Пользователь = Неопределено) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если Пользователь = Неопределено Тогда
		Пользователь = ПользователиКлиентСервер.ТекущийПользователь();
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ПодпискиНаПоказателиПроцессов.Активна
		|ИЗ
		|	РегистрСведений.ПодпискиНаПоказателиПроцессов КАК ПодпискиНаПоказателиПроцессов
		|ГДЕ
		|	ПодпискиНаПоказателиПроцессов.ПоказательПроцесса = &ПоказательПроцесса
		|	И ПодпискиНаПоказателиПроцессов.Пользователь = &Пользователь";
	
	Запрос.УстановитьПараметр("ПоказательПроцесса", ПоказательПроцесса);
	Запрос.УстановитьПараметр("Пользователь", Пользователь);
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	Выборка.Следующий();
	
	Возврат Выборка.Активна;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Обновляет флаг Активен у показателя процесса.
//
// Параметры:
//  ПоказательПроцесса - СправочникСсылка.ПоказателиПроцессов - Показатель процесса.
//
Процедура ОбновитьФлагАктивен(ПоказательПроцесса)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Активен = ПоказательПроцессаАктивен(ПоказательПроцесса);
	ЕстьПодписчики = Подписчики(ПоказательПроцесса).Количество() <> 0;
	Если Активен = ЕстьПодписчики Тогда
		Возврат;
	КонецЕсли;
	
	НачатьТранзакцию();
	Попытка
		
		МенеджерЗаписи = РегистрыСведений.ПодпискиНаПоказателиПроцессов.СоздатьМенеджерЗаписи();
		МенеджерЗаписи.ПоказательПроцесса = ПоказательПроцесса;
		МенеджерЗаписи.Активна = ЕстьПодписчики;
		МенеджерЗаписи.Записать();
		
		Если Не ЕстьПодписчики Тогда
			РегистрыСведений.ОчередьПересчетаПоказателейПроцессов.Удалить(ПоказательПроцесса);
		КонецЕсли;
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		ОтменитьТранзакцию();
		ВызватьИсключение;
	КонецПопытки;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
