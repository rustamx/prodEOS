
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ТипБизнесПроцесса = Параметры.ТипБизнесПроцесса;
	Если Не ЗначениеЗаполнено(Параметры.Ключ) Тогда 
		Если ТипБизнесПроцесса <> Неопределено Тогда 
			Запись.БизнесПроцесс = ТипБизнесПроцесса;
		КонецЕсли;	
		Запись.Автор = ПользователиКлиентСервер.ТекущийПользователь();
	КонецЕсли;	
	
	ЗаписьРегистра = РеквизитФормыВЗначение("Запись");
	СтруктураЗаписи = Новый Структура;
	СтруктураЗаписи.Вставить("Расписание", ЗаписьРегистра.Расписание.Получить());
	СтруктураЗаписи.Вставить("Комментарий", ЗаписьРегистра.Комментарий);
	АдресВременногоХранилища = ПоместитьВоВременноеХранилище(
		СтруктураЗаписи, УникальныйИдентификатор);
	
	Если СтруктураЗаписи.Расписание <> Неопределено Тогда
		ДатаСледующегоПовторения = ПолучитьДатуСледующегоПовторения(
			СтруктураЗаписи.Расписание, Запись.ГрафикРаботы, Запись.ДатаПоследнегоПовторения);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	СтруктураЗаписи = ПолучитьИзВременногоХранилища(АдресВременногоХранилища);
	ТекущийОбъект.Расписание = Новый ХранилищеЗначения(СтруктураЗаписи.Расписание);
	ТекущийОбъект.Комментарий = СтруктураЗаписи.Комментарий;
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	СтруктураЗаписи = ПолучитьИзВременногоХранилища(АдресВременногоХранилища);
	Если СтруктураЗаписи.Расписание = Неопределено Тогда 
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru = 'Не указано расписание повторения'; en = 'Repetition schedule is not specified'"),,,, Отказ);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура БизнесПроцессНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если ТипБизнесПроцесса = Неопределено Тогда 
		
		СтандартнаяОбработка = Ложь;
		
		СписокТипов = Новый СписокЗначений;
		СписокТипов.Добавить("Поручение", НСТр("ru = 'Поручение'; en = 'Order'"));
		СписокТипов.Добавить("Исполнение", НСТр("ru = 'Исполнение'; en = 'Performance'"));
		СписокТипов.Добавить("Согласование", НСТр("ru = 'Согласование'; en = 'Approval'"));
		СписокТипов.Добавить("Утверждение", НСТр("ru = 'Утверждение'; en = 'Confirmation'"));
		СписокТипов.Добавить("Ознакомление", НСТр("ru = 'Ознакомление'; en = 'Examination'"));
		СписокТипов.Добавить("Рассмотрение", НСТр("ru = 'Рассмотрение'; en = 'Reviewal'"));
		СписокТипов.Добавить("Регистрация", НСТр("ru = 'Регистрация'; en = 'Registration'"));
		СписокТипов.Добавить(
			"ОбработкаВходящегоДокумента", НСТр("ru = 'Обработка входящего документа'; en = 'Incoming document processing'"));
		СписокТипов.Добавить(
			"ОбработкаИсходящегоДокумента", НСТр("ru = 'Обработка исходящего документа'; en = 'Outgoing document processing'"));
		
		ОписаниеОповещения = Новый ОписаниеОповещения(
			"БизнесПроцессНачалоВыбораПродолжение",
			ЭтотОбъект,
			Новый Структура("Элемент", Элемент));
			
		СписокТипов.ПоказатьВыборЭлемента(ОписаниеОповещения, НСТр("ru = 'Тип процесса'; en = 'Process type'"), Элемент);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура БизнесПроцессНачалоВыбораПродолжение(ВыбранныйЭлемент, Параметры) Экспорт
	
	Если ВыбранныйЭлемент <> Неопределено Тогда 
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("ТекущаяСтрока", Запись.БизнесПроцесс);
		
		ОткрытьФорму("БизнесПроцесс."+ВыбранныйЭлемент.Значение+".ФормаВыбора",
			ПараметрыФормы, Параметры.Элемент);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПовторениеПрекращеноПриИзменении(Элемент)
	
	Если Запись.ПовторениеЗавершено Тогда 
		ДатаСледующегоПовторения = '00010101';
	Иначе
		СтруктураЗаписи = ПолучитьИзВременногоХранилища(АдресВременногоХранилища);
		ДатаСледующегоПовторения = ПолучитьДатуСледующегоПовторения(
			СтруктураЗаписи.Расписание, Запись.ГрафикРаботы, Запись.ДатаПоследнегоПовторения);
	КонецЕсли;	
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Расписание(Команда)
	
	Если Не ЗначениеЗаполнено(Запись.БизнесПроцесс) Тогда 
		ОчиститьСообщения();
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru = 'Поле ""Процесс"" не заполнено'; en = 'Field ""Process"" is not filled in'"),,
			"Запись.БизнесПроцесс");
		Возврат;
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"РасписаниеПродолжение",
		ЭтотОбъект);
		
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("АдресВременногоХранилища", АдресВременногоХранилища);
	ПараметрыФормы.Вставить("БизнесПроцесс", Запись.БизнесПроцесс);
	ПараметрыФормы.Вставить("ПовторениеЗавершено", Запись.ПовторениеЗавершено);
	ПараметрыФормы.Вставить("ГрафикРаботы", Запись.ГрафикРаботы);
		
	ОткрытьФорму("РегистрСведений.НастройкаПовторенияБизнесПроцессов.Форма.ФормаРасписания",
		ПараметрыФормы,
		ЭтаФорма,,,,
		ОписаниеОповещения,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
КонецПроцедуры

&НаКлиенте
Процедура РасписаниеПродолжение(Результат, Параметры) Экспорт 

	Если Результат <> КодВозвратаДиалога.ОК Тогда 
		Возврат;
	КонецЕсли;	
	Модифицированность = Истина;
	
	СтруктураЗаписи = ПолучитьИзВременногоХранилища(АдресВременногоХранилища);
	Запись.ПредставлениеРасписания = ПовторениеБизнесПроцессов.ПолучитьПредставлениеРасписания(
		СтруктураЗаписи.Расписание, СтруктураЗаписи.ГрафикРаботы);
	Запись.ГрафикРаботы = СтруктураЗаписи.ГрафикРаботы;
	
	ДатаСледующегоПовторения = ПолучитьДатуСледующегоПовторения(
		СтруктураЗаписи.Расписание, Запись.ГрафикРаботы, Запись.ДатаПоследнегоПовторения);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Вычисляет дату следующего повторения процесса по расписанию
//
// Параметры:
//   Расписание - РасписаниеРегламентногоЗадания - расписание повторения процесса
//
// Возвращаемое значение:
//   Дата
//
&НаСервере
Функция ПолучитьДатуСледующегоПовторения(Расписание, ГрафикРаботы, ДатаПоследнегоПовторения)

	ТекущаяДата = ТекущаяДатаСеанса();
	
	Если ЗначениеЗаполнено(ГрафикРаботы)
		И ПолучитьФункциональнуюОпцию("ИспользоватьГрафикиРаботы")
		И НЕ ГрафикиРаботы.ЭтоРабочаяДатаВремя(ГрафикРаботы, ТекущаяДата) Тогда
		
		РабочиеДни = Справочники.Календари.ПрочитатьДанныеГрафикаИзРегистра(ГрафикРаботы.Календарь, Год(ТекущаяДата));
		
		Если РабочиеДни.Количество() <> 0 Тогда
			Пока РабочиеДни.Найти(НачалоДня(ТекущаяДата)) = Неопределено Цикл
				ТекущаяДата = ТекущаяДата + 86400;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
	Если Расписание.ТребуетсяВыполнение(ТекущаяДата, ДатаПоследнегоПовторения) Тогда
		Если ТекущаяДата > ТекущаяДата() Тогда
			Возврат НачалоДня(ТекущаяДата);
		Иначе
			Возврат ТекущаяДата;
		КонецЕсли;
	КонецЕсли;
	
	Если (Расписание = Неопределено)
	 Или (Запись.ПовторениеЗавершено)
	 Или (ТекущаяДата > Расписание.ДатаКонца И Расписание.ДатаКонца > '00010101') Тогда 
		Возврат '00010101';
	КонецЕсли;
	
	Если ТекущаяДата < Расписание.ДатаНачала Тогда 
		ТекущаяДата = Расписание.ДатаНачала;
	КонецЕсли;
	
	РасписаниеВремяНачала = 3600 * Час(Расписание.ВремяНачала)
		+ 60 * Минута(Расписание.ВремяНачала)
		+ Секунда(Расписание.ВремяНачала);
	СледующееПовторение = '00010101';
	Если Расписание.ДниНедели.Количество() > 0 Тогда 
		ДеньНедели = ДеньНедели(ТекущаяДата); 
		
		// этот день
		Если СледующееПовторение = '00010101' Тогда 
			Если Расписание.ДниНедели.Найти(ДеньНедели) <> Неопределено Тогда 
				Если Расписание.ВремяНачала >= '00010101'
					+ 3600 * Час(ТекущаяДата)
					+ 60 * Минута(ТекущаяДата)+Секунда(ТекущаяДата) Тогда
					
					СледующееПовторение = НачалоДня(ТекущаяДата) + РасписаниеВремяНачала;
				КонецЕсли;
			КонецЕсли;	
		КонецЕсли;
		
		// на этой недели
		Если СледующееПовторение = '00010101' Тогда 
			Для Инд = ДеньНедели + 1 По 7 Цикл
				Если Расписание.ДниНедели.Найти(Инд) <> Неопределено Тогда 
					СледующееПовторение = НачалоНедели(ТекущаяДата)
						+ 3600 * 24 * (Инд-1)
						+ РасписаниеВремяНачала;
					Прервать;
				КонецЕсли;	
			КонецЦикла;	
		КонецЕсли;
		
		// на след недели
		Если СледующееПовторение = '00010101' Тогда 
			Для Инд = 1 По 7 Цикл
				Если Расписание.ДниНедели.Найти(Инд) <> Неопределено Тогда 
					СледующееПовторение = НачалоНедели(ТекущаяДата)
						+ 7 * 3600 * 24
						+ 3600 * 24 * (Инд-1)
						+ РасписаниеВремяНачала;
					Прервать;
				КонецЕсли;	
			КонецЦикла;
		КонецЕсли;
		
	ИначеЕсли Расписание.ДеньВМесяце <> 0 Тогда 
		
		ДеньМесяца = День(ТекущаяДата);
		
		Если Расписание.ДеньВМесяце > 0 Тогда 
			РасписаниеДеньВМесяце = Расписание.ДеньВМесяце;
		Иначе
			РасписаниеДеньВМесяце = День(КонецМесяца(ТекущаяДата))+Расписание.ДеньВМесяце+1;
		КонецЕсли;	
		
		// этот день
		Если ДеньМесяца = Расписание.ДеньВМесяце Тогда 
			Если Расписание.ВремяНачала >= 
				Дата(1,1,1,Час(ТекущаяДата), Минута(ТекущаяДата), Секунда(ТекущаяДата)) Тогда
				
				СледующееПовторение = НачалоДня(ТекущаяДата) + РасписаниеВремяНачала;
			Иначе
				СледМесяц = ДобавитьМесяц(НачалоМесяца(ТекущаяДата), 1);
				Если Расписание.ДеньВМесяце > 0 Тогда 
					СледующееПовторение = СледМесяц
						+ (Расписание.ДеньВМесяце-1) * 24 * 3600
						+ РасписаниеВремяНачала;
				Иначе
					СледующееПовторение = (КонецМесяца(СледМесяц)+1)
						+ Расписание.ДеньВМесяце * 24 * 3600
						+ РасписаниеВремяНачала;
				КонецЕсли;	
			КонецЕсли;	
			
		// пред день	
		ИначеЕсли ДеньМесяца < РасписаниеДеньВМесяце Тогда
			ЭтотМесяц = НачалоМесяца(ТекущаяДата);
			Если Расписание.ДеньВМесяце > 0 Тогда 
				СледующееПовторение = ЭтотМесяц
					+ (Расписание.ДеньВМесяце-1) * 24 * 3600
					+ РасписаниеВремяНачала;
			Иначе
				СледующееПовторение = (КонецМесяца(ЭтотМесяц)+1)
					+ (Расписание.ДеньВМесяце) * 24 * 3600
					+ РасписаниеВремяНачала;
			КонецЕсли;
			
		// послед день	
		Иначе
			СледМесяц = ДобавитьМесяц(НачалоМесяца(ТекущаяДата), 1);
			Если Расписание.ДеньВМесяце > 0 Тогда 
				СледующееПовторение = СледМесяц
					+ (Расписание.ДеньВМесяце-1) * 24 * 3600
					+ РасписаниеВремяНачала;
			Иначе
				СледующееПовторение = (КонецМесяца(СледМесяц)+1)
					+ Расписание.ДеньВМесяце * 24 * 3600
					+ РасписаниеВремяНачала;
			КонецЕсли;
		КонецЕсли;	
			
			
	Иначе // ежедневно
		
		Если Расписание.ВремяНачала >= '00010101'
				+ 3600 * Час(ТекущаяДата)
				+ 60 * Минута(ТекущаяДата)
				+ Секунда(ТекущаяДата) Тогда
			
			СледующееПовторение = НачалоДня(ТекущаяДата) + РасписаниеВремяНачала;
		Иначе	
			СледующееПовторение = НачалоДня(ТекущаяДата) + 24 * 3600 + РасписаниеВремяНачала;
		КонецЕсли;
		
	КонецЕсли;
	
	Если СледующееПовторение > Расписание.ДатаКонца И Расписание.ДатаКонца > '00010101' Тогда
		Возврат '00010101';
	КонецЕсли;	
	
	Возврат СледующееПовторение;
	
КонецФункции

#КонецОбласти











