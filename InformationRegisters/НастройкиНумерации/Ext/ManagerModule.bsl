#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Возвращает структуру 
//
// Возвращаемое значение:
//   ТаблицаЗначений
//     - ВидДокумента
//     - Организация
//     - Подразделение
//     - ВопросДеятельности
//     - Контрагент
//     - Проект
//     - СпособНумерации
//     - Комментарий
//     - Нумератор
//     - Нумеровать
//
Функция ПолучитьСтруктуруНастроекНумерации() Экспорт
	
	Параметры = Новый ТаблицаЗначений;
	
	Параметры.Колонки.Добавить("ВидДокумента");
	Параметры.Колонки.Добавить("Организация");
	Параметры.Колонки.Добавить("Подразделение");
	Параметры.Колонки.Добавить("ВопросДеятельности");
	Параметры.Колонки.Добавить("Контрагент");
	Параметры.Колонки.Добавить("Проект");
	Параметры.Колонки.Добавить("СпособНумерации");
	Параметры.Колонки.Добавить("Комментарий");
	Параметры.Колонки.Добавить("Нумератор");
	Параметры.Колонки.Добавить("Нумеровать");
	
	Возврат Параметры;
	
КонецФункции

// Записывает настройки нумерации для видок документов
//
// Параметры:
//   НастройкиНумерации - ТаблицаЗначений - таблица с настройками.
//
Процедура ЗаписатьНастройкиНумерации(НастройкиНумерации) Экспорт
	
	Для Каждого Настройка ИЗ НастройкиНумерации Цикл
		
		Запись = СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(Запись, Настройка);
		Запись.ТипДокумента = Нумерация.ПолучитьТипДокументаПоВиду(Настройка.ВидДокумента);
		Запись.Нумеровать = Нумерация.СформироватьПолеНумеровать(Запись.СпособНумерации, Запись.Нумератор);
		Запись.Записать();
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
