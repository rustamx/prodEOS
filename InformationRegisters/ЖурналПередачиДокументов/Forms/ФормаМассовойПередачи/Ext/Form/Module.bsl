////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("ПередаваемыеДокументы") 
	   И ТипЗнч(Параметры.ПередаваемыеДокументы) = Тип("Массив") Тогда 
		
	    Для Каждого Документ Из Параметры.ПередаваемыеДокументы Цикл			
			ЭлементСписка = Документы.Добавить();
            ЭлементСписка.Документ = Документ;
		КонецЦикла;
		
	КонецЕсли;	
	
	ТипЭкземпляра = Перечисления.ТипыЭкземпляров.Оригинал;
	НомерЭкземпляра = 1;
	ДатаПередачи = ТекущаяДатаСеанса();	
	Пользователь = Справочники.Пользователи.ПустаяСсылка();
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
		
	Если Не ЗначениеЗаполнено(Пользователь) Тогда		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru = 'Поле ""Кому передан"" не заполнено.'; en = 'Field ""Transferred to"" is not filled in'"),,
			"Пользователь",,Отказ);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СрокВозврата) И КонецДня(СрокВозврата) < ДатаПередачи Тогда 
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru = 'Срок возврата меньше даты передачи'; en = 'Return date is less than transfer date'"),,
			"СрокВозврата",,Отказ);
	КонецЕсли;	
	
	КоличествоДокументов = Документы.Количество();	
	Если КоличествоДокументов > 1 Тогда	
		Для Инд1 = 0 По КоличествоДокументов - 2 Цикл 			
			Для Инд2 = Инд1 + 1 По КоличествоДокументов - 1 Цикл 			
				Если Документы[Инд1].Документ = Документы[Инд2].Документ  Тогда 
					ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						НСтр("ru = 'Документ ""%1"" указан дважды в списке передаваемых документов'; en = 'The document ""%1"" is specified twice in the list of transferred documents'"),
						Документы[Инд2].Документ);
					
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,
						"Документы["+ Формат(Инд2, "ЧН=0; ЧГ=0") +"].Документ",,Отказ);
				КонецЕсли;				
	        КонецЦикла;			
		КонецЦикла;	
	КонецЕсли;
	
	ТаблицаПолучателей = ВыбратьПолучателейДокументов();
	Для Каждого Строка Из Документы Цикл
		
		КоличествоЭкземпляров = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Строка.Документ, 
			"КоличествоЭкземпляров");
			
		Если ТипЭкземпляра = Перечисления.ТипыЭкземпляров.Оригинал
		   И ЗначениеЗаполнено(Строка.Документ)
		   И НомерЭкземпляра > КоличествоЭкземпляров
		   И КоличествоЭкземпляров > 0 Тогда
		   
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Указанный номер экземпляра ""%1"" превышает количество экземпляров документа ""%2""'; en = 'The specified instance number ""%1"" is greater than the number of instances of document ""%2""'"),
				НомерЭкземпляра,
				Строка.Документ);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,"НомерЭкземпляра",,Отказ);
			Продолжить;
		КонецЕсли;			
		
		НайденныеСтроки = ТаблицаПолучателей.НайтиСтроки(Новый Структура("Документ", Строка.Документ));
		Если НайденныеСтроки.Количество() > 0 Тогда
			НайденнаяСтрока = НайденныеСтроки[0];			
			Если Не НайденнаяСтрока.Возвращен Тогда
				
				ТекстСообщения = "";
				Если ТипЗнч(НайденнаяСтрока.Пользователь) = Тип("СправочникСсылка.КонтактныеЛица") Тогда
					Пользователь = НайденнаяСтрока.Пользователь;
					Если ДокументооборотПраваДоступа.ПолучитьПраваПоОбъекту(Пользователь).Чтение Тогда 
						ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
							НСтр("ru = 'Невозможно отразить передачу документа ""%1"", так как он не был возвращен контактным лицом %2'; en = 'It is not possible to record the transfer of document ""%1"" because it is not yet returned by contact person %2'"),
							Строка.Документ,
							Строка(Пользователь));
					Иначе
						ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
							НСтр("ru = 'Невозможно отразить передачу документа ""%1"", так как он не был возвращен другим лицом'; en = 'It is not possible to record the transfer of document ""%1"" because it is not yet returned by another person'"),
							Строка.Документ);
					КонецЕсли;	
				Иначе
					ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						НСтр("ru = 'Невозможно отразить передачу документа ""%1"", так как он не был возвращен пользователем %2'; en = 'It is not possible to record the transfer of document ""%1"" because it is not yet returned by user %2'"),
						Строка.Документ,
						Строка(Пользователь));
				КонецЕсли;	
				
				Если ЗначениеЗаполнено(ТекстСообщения) Тогда
					 Инд = Документы.Индекс(Строка);
					 ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,
					 	"Документы["+ Формат(Инд, "ЧН=0; ЧГ=0") +"].Документ",,Отказ);
				КонецЕсли;
				 
			КонецЕсли;
		КонецЕсли;	
		
	КонецЦикла;
	
	Если Документы.Количество() = 0 Тогда
		ТекстСообщения = НСтр("ru = 'Нет документов к передаче'; en = 'No documents to transfer'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,"Документы",,Отказ);
	КонецЕсли;	
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// КОМАНДЫ ФОРМЫ

&НаКлиенте
Процедура Передать(Команда)
	
	УдалитьПустыеСтрокиИзСписка();
	
	ОчиститьСообщения();
	Если ПроверитьЗаполнение() Тогда 
		
		ПередатьДокументы();
	    ОповеститьОЗавершенииПередачи();	
		Закрыть(Истина);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
   Закрыть(Ложь);
   
КонецПроцедуры

&НаКлиенте
Процедура ПодборДокументов(Команда)
	
	Меню = Новый СписокЗначений;
	Меню.Добавить("ВнутренниеДокументы", НСтр("ru = 'Внутренний документ'; en = 'Internal document'"));
	Меню.Добавить("ВходящиеДокументы",   НСтр("ru = 'Входящий документ'; en = 'Incoming document'"));
	Меню.Добавить("ИсходящиеДокументы",  НСтр("ru = 'Исходящий документ'; en = 'Outgoing document'"));
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"ПодборДокументовПродолжение",
		ЭтотОбъект);

	Меню.ПоказатьВыборЭлемента(ОписаниеОповещения, НСтр("ru = 'Выбор типа данных'; en = 'Select data type'"));
	
КонецПроцедуры

&НаКлиенте
Процедура ПодборДокументовПродолжение(Результат, Параметры) Экспорт 

	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Тип = Результат.Значение;

	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("РежимВыбора", Истина);
	ПараметрыОткрытия.Вставить("ПоказыватьКомандуСоздать", Истина);
	ПараметрыОткрытия.Вставить("ЗакрыватьПриВыборе", Ложь);
	
	Если Тип = "ВнутренниеДокументы" Тогда
		
		ПараметрыОткрытия.Вставить("Заголовок", НСтр("ru = 'Подбор внутренних документов'; en = 'Filling with internal documents'"));
		ОткрытьФорму("Справочник.ВнутренниеДокументы.Форма.ФормаВыбора", 
			ПараметрыОткрытия, 
			Элементы.Документы);
		
	ИначеЕсли Тип = "ВходящиеДокументы" Тогда
		
		ПараметрыОткрытия.Вставить("Заголовок", НСтр("ru = 'Подбор входящих документов'; en = 'Filling with incoming documents'"));
		ОткрытьФорму("Справочник.ВходящиеДокументы.Форма.ФормаВыбора", 
			ПараметрыОткрытия, 
			Элементы.Документы);
		
	ИначеЕсли Тип = "ИсходящиеДокументы" Тогда
		
		ПараметрыОткрытия.Вставить("Заголовок", НСтр("ru = 'Подбор исходящих документов'; en = 'Filling with outgoing documents'"));
		ОткрытьФорму("Справочник.ИсходящиеДокументы.Форма.ФормаВыбора", 
			ПараметрыОткрытия, 
			Элементы.Документы);
		
	КонецЕсли;
	

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

&НаКлиенте
Процедура ПользовательНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОткрытьФорму("ОбщаяФорма.ВыборПользователяКонтактноеЛицо", 
		Новый Структура("ТекущаяСтрока", Пользователь), 
		Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ПользовательАвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Текст) Тогда 
		СтандартнаяОбработка = Ложь;
		ДанныеВыбора = Делопроизводство.СформироватьДанныеВыбораПолучателяДляЖурналаПередачи(Текст);
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ПользовательОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Текст) Тогда 
		СтандартнаяОбработка = Ложь;
		ДанныеВыбора = Делопроизводство.СформироватьДанныеВыбораПолучателяДляЖурналаПередачи(Текст);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ДокументыОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Массив") Тогда
		Для каждого ДобавляемыйЭлемент Из ВыбранноеЗначение Цикл
			 ЭлементСписка = Документы.Добавить();
	         ЭлементСписка.Документ = ДобавляемыйЭлемент;
		КонецЦикла;
	Иначе
		ЭлементСписка = Документы.Добавить();
	    ЭлементСписка.Документ = ВыбранноеЗначение;
	КонецЕсли;
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДЦУРЫ И ФУНКЦИИ

&НаКлиенте
Процедура УдалитьПустыеСтрокиИзСписка()
	
	КоличествоДокументов = Документы.Количество(); 
	Для ОбратныйИндекс = 1 По КоличествоДокументов Цикл 
		
		Строка = Документы[КоличествоДокументов - ОбратныйИндекс]; 
		Если Не ЗначениеЗаполнено(Строка.Документ) Тогда 
			Документы.Удалить(Строка); 
		КонецЕсли; 

	КонецЦикла; 

КонецПроцедуры	

&НаСервере
Функция ВыбратьПолучателейДокументов()
	
	УстановитьПривилегированныйРежим(Истина);
	
	МассивДокументов = Новый Массив();
	Для Каждого Строка Из Документы Цикл			
		МассивДокументов.Добавить(Строка.Документ);
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЖурналПередачиДокументовСрезПоследних.Пользователь,
	|	ЖурналПередачиДокументовСрезПоследних.Возвращен,
	|	ЖурналПередачиДокументовСрезПоследних.Документ
	|ИЗ
	|	РегистрСведений.ЖурналПередачиДокументов.СрезПоследних(
	|			&Период,
	|			Документ В (&Документы)
	|				И НомерЭкземпляра = &НомерЭкземпляра
	|				И ТипЭкземпляра = &ТипЭкземпляра) КАК ЖурналПередачиДокументовСрезПоследних";
	
	Запрос.УстановитьПараметр("Период", 			ДатаПередачи);
	Запрос.УстановитьПараметр("Документы", 			МассивДокументов);
	Запрос.УстановитьПараметр("НомерЭкземпляра", 	НомерЭкземпляра);
	Запрос.УстановитьПараметр("ТипЭкземпляра", 		ТипЭкземпляра);
	
	Возврат Запрос.Выполнить().Выгрузить();

КонецФункции

&НаСервере
Процедура ПередатьДокументы()
	
	НачатьТранзакцию();
	Попытка
		
		Для каждого Строка из Документы Цикл
			
			Запись = РегистрыСведений.ЖурналПередачиДокументов.СоздатьМенеджерЗаписи();		
			Запись.Документ        = Строка.Документ;		
			Запись.ТипЭкземпляра   = ТипЭкземпляра;
			Запись.НомерЭкземпляра = НомерЭкземпляра;
			Запись.СрокВозврата    = СрокВозврата;
			Запись.Пользователь    = Пользователь;
			Запись.Комментарий     = Комментарий;
			Запись.Период          = ДатаПередачи;
			Запись.Возвращен	   = Ложь;
			Запись.Записать();
			
		КонецЦикла;
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		
		ОтменитьТранзакцию();
		ВызватьИсключение;
		
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура ОповеститьОЗавершенииПередачи()
	
	Для каждого Строка из Документы Цикл
		Оповестить("ИзмененЖурналПередачи", Строка.Документ);
	КонецЦикла;	
	
	ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = 'Передано: %1 %2'; en = 'Transferred: %1 %2'"),
		Документы.Количество(),
		ПолучитьПодписьДокументов(Документы.Количество()));
		
	ПоказатьОповещениеПользователя(ТекстСообщения,,,БиблиотекаКартинок.Информация32);
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьПодписьДокументов(ЧислоДокументов)
	
	Если ЧислоДокументов > 10 И ЧислоДокументов < 20 Тогда
		Подпись = НСтр("ru = 'документов'; en = 'documents'");
	Иначе
		ПоследниеДвеЦифры = ЧислоДокументов - Цел(ЧислоДокументов / 100) * 100;
		ПоследняяЦифра = ЧислоДокументов - Цел(ЧислоДокументов/ 10) * 10;
		
		Если ПоследняяЦифра = 0 Тогда
			Подпись = НСтр("ru = 'документов'; en = 'documents'");
		ИначеЕсли ПоследниеДвеЦифры > 10 И ПоследниеДвеЦифры < 20 Тогда
			Подпись = Нстр("ru = 'документов'; en = 'documents'");
		ИначеЕсли ПоследниеДвеЦифры < 10 Или ПоследниеДвеЦифры > 20 Тогда
			Если ПоследняяЦифра = 1 Тогда
				Подпись = Нстр("ru = 'документ'; en = 'Document'");
			ИначеЕсли ПоследняяЦифра < 5 Тогда
				Подпись = НСтр("ru = 'документа'; en = 'documents'");
			Иначе
				Подпись = НСтр("ru = 'документов'; en = 'documents'");
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Подпись;
	
КонецФункции

