
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
//

// Процедура Обновить проверяет и, если нужно,
// обновляет состав РегистрСведений.ПраваГруппДоступаНаТаблицы для заданных групп доступа
// 
//  Процедура использует профили групп доступа и РегистрСведений.ПраваРолей.
//
// Параметры:
//  ГруппыДоступа - Неопределено - обновить права всех групп доступа
//                               - Массив или одно значение типа СправочникСсылка.ГруппыДоступа
//
//  НетИзменений  - если производилась запись, устанавливается Ложь, иначе не изменяется
//
Процедура Обновить(Знач ГруппыДоступа = Неопределено, ЕстьИзменения = Неопределено, ЗапретПрямогоОбновленияДоступа = Ложь, Выгрузка = Неопределено) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ПраваРолей.ОбъектМетаданных КАК Таблица,
	|	ГруппыДоступа.Ссылка КАК ГруппаДоступа,
	|	МАКСИМУМ(ПраваРолей.Добавление) КАК Добавление,
	|	МАКСИМУМ(ПраваРолей.Изменение) КАК Изменение,
	|	МАКСИМУМ(ПраваРолей.Удаление) КАК Удаление,
	|	МАКСИМУМ(ПраваРолей.ЧтениеБезОграничения) КАК ЧтениеБезОграничения,
	|	МАКСИМУМ(ПраваРолей.ДобавлениеБезОграничения) КАК ДобавлениеБезОграничения,
	|	МАКСИМУМ(ПраваРолей.ИзменениеБезОграничения) КАК ИзменениеБезОграничения,
	|	МАКСИМУМ(ПраваРолей.УдалениеБезОграничения) КАК УдалениеБезОграничения,
	|	ВЫБОР
	|		КОГДА МАКСИМУМ(ПраваРолей.ЧтениеБезОграничения) = ИСТИНА
	|				И НЕ(МАКСИМУМ(ПраваРолей.Добавление) = ИСТИНА
	|						И МАКСИМУМ(ПраваРолей.ДобавлениеБезОграничения) = ЛОЖЬ)
	|				И НЕ(МАКСИМУМ(ПраваРолей.Изменение) = ИСТИНА
	|						И МАКСИМУМ(ПраваРолей.ИзменениеБезОграничения) = ЛОЖЬ)
	|				И НЕ(МАКСИМУМ(ПраваРолей.Удаление) = ИСТИНА
	|						И МАКСИМУМ(ПраваРолей.УдалениеБезОграничения) = ЛОЖЬ)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ПраваБезОграничения,
	|	&ПодстановкаПоляВидИзмененияСтроки
	|ИЗ
	|	Справочник.ГруппыДоступа КАК ГруппыДоступа
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ПрофилиГруппДоступа.Роли КАК РолиПрофиля
	|		ПО (&УсловиеОтбораГруппДоступа1)
	|			И (НЕ ГруппыДоступа.ПометкаУдаления)
	|			И (РолиПрофиля.Ссылка = ГруппыДоступа.Профиль)
	|			И (НЕ РолиПрофиля.Ссылка.ПометкаУдаления)
	|			И (НЕ РолиПрофиля.Роль.ПометкаУдаления)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПраваРолей КАК ПраваРолей
	|		ПО (ПраваРолей.Роль = РолиПрофиля.Роль)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПраваРолей.ОбъектМетаданных,
	|	ГруппыДоступа.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РолиПрофиля.Роль,
	|	ГруппыДоступа.Ссылка,
	|	ЛОЖЬ,
	|	ЛОЖЬ,
	|	ЛОЖЬ,
	|	ЛОЖЬ,
	|	ЛОЖЬ,
	|	ЛОЖЬ,
	|	ЛОЖЬ,
	|	ЛОЖЬ,
	|	&ПодстановкаПоляВидИзмененияСтроки
	|ИЗ
	|	Справочник.ГруппыДоступа КАК ГруппыДоступа
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ПрофилиГруппДоступа.Роли КАК РолиПрофиля
	|		ПО (&УсловиеОтбораГруппДоступа1)
	|			И (НЕ ГруппыДоступа.ПометкаУдаления)
	|			И (РолиПрофиля.Ссылка = ГруппыДоступа.Профиль)
	|			И (НЕ РолиПрофиля.Ссылка.ПометкаУдаления)
	|			И (НЕ РолиПрофиля.Роль.ПометкаУдаления)
	|			И (РолиПрофиля.Роль <> ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка))";
	
	ВыбираемыеПоля = Новый Массив;
	ВыбираемыеПоля.Добавить(Новый Структура("Таблица"));
	ВыбираемыеПоля.Добавить(Новый Структура("ГруппаДоступа", ?(ГруппыДоступа = Неопределено, "", "&УсловиеОтбораГруппДоступа2")));
	ВыбираемыеПоля.Добавить(Новый Структура("Добавление"));
	ВыбираемыеПоля.Добавить(Новый Структура("Изменение"));
	ВыбираемыеПоля.Добавить(Новый Структура("Удаление"));
	ВыбираемыеПоля.Добавить(Новый Структура("ЧтениеБезОграничения"));
	ВыбираемыеПоля.Добавить(Новый Структура("ДобавлениеБезОграничения"));
	ВыбираемыеПоля.Добавить(Новый Структура("ИзменениеБезОграничения"));
	ВыбираемыеПоля.Добавить(Новый Структура("УдалениеБезОграничения"));
	ВыбираемыеПоля.Добавить(Новый Структура("ПраваБезОграничения"));
	
	Запрос = Новый Запрос;
	Запрос.Текст = УправлениеДоступомСлужебный.ТекстЗапросаВыбораИзменений(ТекстЗапроса, ВыбираемыеПоля, "РегистрСведений.ПраваГруппДоступаНаТаблицы");
	
	УправлениеДоступомСлужебный.УстановитьУсловиеОтбораВЗапросе(Запрос, ГруппыДоступа, "ГруппыДоступа",
		"&УсловиеОтбораГруппДоступа1:ГруппыДоступа.Ссылка
		|&УсловиеОтбораГруппДоступа2:СтарыеДанные.ГруппаДоступа");
	
	Выгрузка = Запрос.Выполнить().Выгрузить();
	
	УправлениеДоступомСлужебный.ОбновитьРегистрСведений(
		РегистрыСведений.ПраваГруппДоступаНаТаблицы, Выгрузка, ЕстьИзменения);
	
КонецПроцедуры

#КонецЕсли
