#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОписаниеПеременных

Перем ИзменяемыеЗаписи;

Перем ИсполнителиДляОбновленияВАдреснойКниге; // обновление адресной книги
Перем РолиДляОбновленияКонтейнеров; // обновление контейнеров

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, Замещение)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	// Получим изменяемые записи
	ИзменяемыеЗаписи = Новый ТаблицаЗначений;
	Если Отбор.Количество() > 0 Тогда
		
		Запрос = Новый Запрос;
		
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	*
			|ИЗ
			|	РегистрСведений.ИсполнителиЗадач КАК ИсполнителиЗадач
			|ГДЕ
			|	%Условие%";
		
		Условие = "";
		Разделитель = "";
		
		Для Каждого ЭлементОтбора Из Отбор Цикл
			
			Если НЕ ЭлементОтбора.Использование Тогда
				Продолжить;
			КонецЕсли;
			
			СтрокаУсловия = СтрШаблон("ИсполнителиЗадач.%1 = &%2", ЭлементОтбора.Имя, ЭлементОтбора.Имя);
			
			Условие = Условие + Разделитель + СтрокаУсловия;
			
			Запрос.УстановитьПараметр(ЭлементОтбора.Имя, ЭлементОтбора.Значение);
			
			Разделитель = Символы.ПС + "	И ";
			
		КонецЦикла;
		
		Если Условие = "" Тогда
			Условие = "ИСТИНА";
		КонецЕсли;
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "%Условие%", Условие);
		
		ИзменяемыеЗаписи = Запрос.Выполнить().Выгрузить();
		
	КонецЕсли;
	
	// Обновление адресной книги и контейнеров.
	ИсполнителиДляОбновленияВАдреснойКниге = Новый Массив;
	РолиДляОбновленияКонтейнеров = Новый Массив;
	
	// Старые записи.
	Для Каждого Запись Из ИзменяемыеЗаписи Цикл
		РолиДляОбновленияКонтейнеров.Добавить(Запись.РольИсполнителя);
		ИсполнителиДляОбновленияВАдреснойКниге.Добавить(Запись.Исполнитель);
	КонецЦикла;
	
	// Новые записи.
	Для Каждого Запись Из ЭтотОбъект Цикл
		Если РолиДляОбновленияКонтейнеров.Найти(Запись.РольИсполнителя) = Неопределено Тогда
			РолиДляОбновленияКонтейнеров.Добавить(Запись.РольИсполнителя);
		КонецЕсли;
		Если ИсполнителиДляОбновленияВАдреснойКниге.Найти(Запись.Исполнитель) = Неопределено Тогда
			ИсполнителиДляОбновленияВАдреснойКниге.Добавить(Запись.Исполнитель);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ, Замещение)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	// Обновление записей в регистре ИсполнителиРолейИДелегаты
	Исполнитель = Неопределено;
	Если Отбор.Найти("Исполнитель") <> Неопределено
		И Отбор.Исполнитель.Использование Тогда
		
		Исполнитель = Отбор.Исполнитель.Значение;
	КонецЕсли;
	
	РольИсполнителя = Неопределено;
	Если Отбор.Найти("РольИсполнителя") <> Неопределено
		И Отбор.РольИсполнителя.Использование Тогда
		
		РольИсполнителя = Отбор.РольИсполнителя.Значение;
	КонецЕсли;
	
	РегистрыСведений.ИсполнителиРолейИДелегаты.ОбновитьЗаписиПоИсполнителюРоли(
		Исполнитель, РольИсполнителя);
		
	// Обновление контейнеров.
	РегистрыСведений.ПользователиВКонтейнерах.ОбновитьДанныеКонтейнеров(РолиДляОбновленияКонтейнеров);
	
	// Обновление адресной книги.
	УстановитьПривилегированныйРежим(Истина);
	Если ИсполнителиДляОбновленияВАдреснойКниге.Количество() > 0 Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	АдреснаяКнига1.Объект,
			|	АдреснаяКнига1.РодительОбъекта,
			|	ТИПЗНАЧЕНИЯ(АдреснаяКнига1.Объект) КАК ТипОбъекта,
			|	АдреснаяКнига1.ОбъектДоступа
			|ИЗ
			|	Справочник.АдреснаяКнига КАК АдреснаяКнига
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.АдреснаяКнига КАК АдреснаяКнига1
			|		ПО АдреснаяКнига.Родитель = АдреснаяКнига1.Ссылка
			|ГДЕ
			|	АдреснаяКнига.Объект В(&Исполнители)
			|	И (АдреснаяКнига1.Объект ССЫЛКА Справочник.СтруктураПредприятия
			|			ИЛИ АдреснаяКнига1.Объект ССЫЛКА Справочник.РабочиеГруппы
			|				И АдреснаяКнига1.Объект <> ЗНАЧЕНИЕ(Справочник.РабочиеГруппы.ВсеПользователи))";
		Запрос.УстановитьПараметр("Исполнители", ИсполнителиДляОбновленияВАдреснойКниге);
		Выборка = Запрос.Выполнить().Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			СписокПодчиненныхОбъектов = Новый Массив;
			
			Если Выборка.ТипОбъекта = Тип("СправочникСсылка.РабочиеГруппы") Тогда
				СписокПодчиненныхОбъектов = 
					ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Выборка.Объект, "Состав").Состав.
						Выгрузить().ВыгрузитьКолонку("Пользователь");
						
				РазделАдреснойКниги = Справочники.АдреснаяКнига.ПоРабочимГруппам;
			ИначеЕсли Выборка.ТипОбъекта = Тип("СправочникСсылка.СтруктураПредприятия") Тогда
				СписокПодчиненныхОбъектов = 
					РаботаСПользователями.ПолучитьПользователейПодразделения(Выборка.Объект,, Ложь);
					
				РазделАдреснойКниги = Справочники.АдреснаяКнига.ПоСтруктуреПредприятия;
			КонецЕсли;
			
			Справочники.АдреснаяКнига.РасширитьСписокПользователейРолями(СписокПодчиненныхОбъектов);
			
			Справочники.АдреснаяКнига.ОбновитьСписокПодчиненныхОбъектов(
				Выборка.Объект,
				Выборка.РодительОбъекта,
				СписокПодчиненныхОбъектов,
				РазделАдреснойКниги,
				Выборка.ОбъектДоступа);
		КонецЦикла;
		
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли


