#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Возвращает исполнителей роли.
//
// Параметры:
//   Роль - СправочникСсылка.ПолныеРоли - роль.
//   ИсключитьНедействительных - Булево - Истина, если из результата следует исключить недействительных пользователей.
//
// Возвращаемое значение:
//   Массив - СправочникСсылка.Пользователи, исполнители указанной роли.
//
Функция ИсполнителиРоли(Роль, ИсключитьНедействительных = Ложь) Экспорт
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ИсполнителиЗадач.Исполнитель КАК Исполнитель
		|ИЗ
		|	РегистрСведений.ИсполнителиЗадач КАК ИсполнителиЗадач
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Пользователи КАК Пользователи
		|		ПО ИсполнителиЗадач.Исполнитель = Пользователи.Ссылка
		|ГДЕ
		|	ИсполнителиЗадач.РольИсполнителя = &Роль
		|	И НЕ Пользователи.ПометкаУдаления
		|	И &Условие");
		
	Если ИсключитьНедействительных Тогда
		Запрос.Текст = СтрЗаменить(
			Запрос.Текст,
			"&Условие",
			"НЕ Пользователи.Недействителен");
	Иначе
		Запрос.Текст = СтрЗаменить(
			Запрос.Текст,
			"&Условие",
			"ИСТИНА");
	КонецЕсли;

	Запрос.УстановитьПараметр("Роль", Роль);

	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Исполнитель");

КонецФункции

// Возвращает роли для исполнителя.
//
// Параметры:
//  Исполнитель - СправочникСсылка.Пользователи
//
// Возвращаемое значение:
//   Массив - СправочникСсылка.ПолныеРоли.
//
Функция РолиИсполнителя(Исполнитель) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ИсполнителиЗадач.РольИсполнителя КАК РольИсполнителя
		|ИЗ
		|	РегистрСведений.ИсполнителиЗадач КАК ИсполнителиЗадач
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.РолиИсполнителей КАК РолиИсполнителей
		|		ПО ИсполнителиЗадач.РольИсполнителя.Владелец = РолиИсполнителей.Ссылка
		|ГДЕ
		|	ИсполнителиЗадач.Исполнитель = &Исполнитель
		|	И РолиИсполнителей.ПометкаУдаления = ЛОЖЬ";
		
	Запрос.УстановитьПараметр("Исполнитель", Исполнитель);
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("РольИсполнителя");
	
КонецФункции

// Устарела. Возвращает исполнителей указанной роли.
Функция ПолучитьИсполнителейРоли(Роль, ОсновнойОбъектАдресации, ДополнительныйОбъектАдресации,
	ИсключитьНедействительных = Ложь) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ИсполнителиЗадач.Исполнитель
		|ИЗ
		|	РегистрСведений.ИсполнителиЗадач КАК ИсполнителиЗадач
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Пользователи КАК Пользователи
		|		ПО ИсполнителиЗадач.Исполнитель = Пользователи.Ссылка
		|ГДЕ
		|	ИсполнителиЗадач.РольИсполнителя.Владелец = &РольИсполнителя
		|	И ИсполнителиЗадач.РольИсполнителя.ОсновнойОбъектАдресации = &ОсновнойОбъектАдресации
		|	И ИсполнителиЗадач.РольИсполнителя.ДополнительныйОбъектАдресации = &ДополнительныйОбъектАдресации
		|	И НЕ Пользователи.ПометкаУдаления
		|	%1";
		
	Если ИсключитьНедействительных Тогда
		Запрос.Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			Запрос.Текст,
			"И НЕ Пользователи.Недействителен");
	Иначе
		Запрос.Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			Запрос.Текст,
			"");
	КонецЕсли;

	Запрос.УстановитьПараметр("ДополнительныйОбъектАдресации", ДополнительныйОбъектАдресации);
	Запрос.УстановитьПараметр("ОсновнойОбъектАдресации", ОсновнойОбъектАдресации);
	Запрос.УстановитьПараметр("РольИсполнителя", Роль);

	Возврат Запрос.Выполнить().Выгрузить();

КонецФункции

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
	
	Если ВидФормы = "ФормаСписка" Тогда
		
		СтандартнаяОбработка = Ложь;
		
		ВыбраннаяФорма = Метаданные.Справочники.РолиИсполнителей.Формы.ФормаСписка;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
