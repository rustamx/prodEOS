// Добавляет запись.
//
Процедура ДобавитьЗапись(УчетнаяЗапись, Идентификатор, ПроверятьУникальность = Ложь) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запись = СоздатьМенеджерЗаписи();
	Запись.УчетнаяЗапись = УчетнаяЗапись;
	Запись.Идентификатор = Идентификатор;
	Запись.Прочитать();
	
	Если ПроверятьУникальность = Истина И Запись.Выбран() Тогда
		
		ОписаниеОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='В регистре ИдентификаторыПолученныхПисем уже есть запись с идентификатором ""%1"" для учетной записи ""%2""'; en = 'In the information register ИдентификаторыПолученныхПисем an entry already exists with ID ""%1"" for account ""%2""'"), 
			Строка(Идентификатор), Строка(УчетнаяЗапись));
			
		ВызватьИсключение ОписаниеОшибки;
	КонецЕсли;
	
	Запись.УчетнаяЗапись = УчетнаяЗапись;
	Запись.Идентификатор = Идентификатор;
	Запись.ДатаПолучения = ТекущаяДатаСеанса();
	Запись.Записать(Истина);
	
КонецПроцедуры

// Удаляет запись.
//
Процедура УдалитьЗапись(УчетнаяЗапись, Идентификатор) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запись = СоздатьМенеджерЗаписи();
	Запись.УчетнаяЗапись = УчетнаяЗапись;
	Запись.Идентификатор = Идентификатор;
	Запись.Прочитать();
	Если Запись.Выбран() Тогда
		Запись.Удалить();
	КонецЕсли;
	
КонецПроцедуры

// Удаляет записи.
//
Процедура УдалитьЗаписи(УчетнаяЗапись, Идентификаторы) Экспорт
	
	Для каждого Идентификатор Из Идентификаторы Цикл
		УдалитьЗапись(УчетнаяЗапись, Идентификатор);
	КонецЦикла;
	
КонецПроцедуры

// Возвращает структуру - результат разборки массива идентификаторов.
// Результат (Структура)
// - Загрузить (Массив) - массив идентификаторов писем для загрузки
// - УдалитьВРегистре (Массив) - массив идентификаторов писем для удаления в рестре
// - УдалитьВПочтовомЯщике (Массив) - массив идентификаторов писем для удаления в почтовом ящике
//
Функция РазобратьИдентификаторы(УчетнаяЗапись, Идентификаторы) Экспорт
	
	ДанныеУчетнойЗаписи = Почта.ПолучитьДанныеУчетнойЗаписи(УчетнаяЗапись);
	ТаблицаИдентификаторов = СформироватьТаблицуИдентификаторов(Идентификаторы);
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ТаблицаИдентификаторов.Идентификатор КАК Идентификатор
		|ПОМЕСТИТЬ ТаблицаИдентификаторов
		|ИЗ
		|	&ТаблицаИдентификаторов КАК ТаблицаИдентификаторов
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Идентификатор
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаИдентификаторов.Идентификатор КАК Идентификатор
		|ПОМЕСТИТЬ ИдентификаторыВПочтовомЯщике
		|ИЗ
		|	ТаблицаИдентификаторов КАК ТаблицаИдентификаторов
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НеполученныеВходящиеПисьма КАК НеПолученныеВходящиеПисьма
		|		ПО (НеПолученныеВходящиеПисьма.Идентификатор = ТаблицаИдентификаторов.Идентификатор)
		|			И (НеПолученныеВходящиеПисьма.УчетнаяЗапись = &УчетнаяЗапись)
		|			И (НеПолученныеВходящиеПисьма.ОсталосьПопытокПолучения = 0)
		|ГДЕ
		|	НеПолученныеВходящиеПисьма.Идентификатор ЕСТЬ NULL 
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Идентификатор
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ИдентификаторыПолученныхПисем.Идентификатор КАК Идентификатор,
		|	ВЫБОР
		|		КОГДА НЕ &ОставлятьКопииСообщенийНаСервере
		|				ИЛИ &ПериодХраненияСообщенийНаСервере > 0
		|					И ДОБАВИТЬКДАТЕ(ИдентификаторыПолученныхПисем.ДатаПолучения, ДЕНЬ, &ПериодХраненияСообщенийНаСервере) < &ТекДата
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК УдалитьВПочтовомЯщике
		|ПОМЕСТИТЬ ИдентификаторыПолученныхПисем
		|ИЗ
		|	РегистрСведений.ИдентификаторыПолученныхПисем КАК ИдентификаторыПолученныхПисем
		|ГДЕ
		|	ИдентификаторыПолученныхПисем.УчетнаяЗапись = &УчетнаяЗапись
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЕСТЬNULL(ИдентификаторыВПочтовомЯщике.Идентификатор, ИдентификаторыПолученныхПисем.Идентификатор) КАК Идентификатор,
		|	ИдентификаторыВПочтовомЯщике.Идентификатор КАК ИдентификаторыВПочтовомЯщикеИдентификатор,
		|	ИдентификаторыПолученныхПисем.Идентификатор КАК ИдентификаторыПолученныхПисемИдентификатор,
		|	ИдентификаторыПолученныхПисем.УдалитьВПочтовомЯщике КАК УдалитьВПочтовомЯщике
		|ИЗ
		|	ИдентификаторыВПочтовомЯщике КАК ИдентификаторыВПочтовомЯщике
		|		ПОЛНОЕ СОЕДИНЕНИЕ ИдентификаторыПолученныхПисем КАК ИдентификаторыПолученныхПисем
		|		ПО ((ВЫРАЗИТЬ(ИдентификаторыВПочтовомЯщике.Идентификатор КАК СТРОКА(100))) = (ВЫРАЗИТЬ(ИдентификаторыПолученныхПисем.Идентификатор КАК СТРОКА(100))))");
	Запрос.УстановитьПараметр("ТаблицаИдентификаторов", ТаблицаИдентификаторов);
	Запрос.УстановитьПараметр("УчетнаяЗапись", УчетнаяЗапись);
	Запрос.УстановитьПараметр("ОставлятьКопииСообщенийНаСервере", ДанныеУчетнойЗаписи.ОставлятьКопииСообщенийНаСервере);
	Запрос.УстановитьПараметр("ПериодХраненияСообщенийНаСервере", ДанныеУчетнойЗаписи.ПериодХраненияСообщенийНаСервере);
	Запрос.УстановитьПараметр("ТекДата", ТекущаяДатаСеанса());
	
	Загрузить = Новый Массив;
	УдалитьВРегистре = Новый Массив;
	УдалитьВПочтовомЯщике = Новый Массив;
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Если Выборка.ИдентификаторыВПочтовомЯщикеИдентификатор <> Null И Выборка.ИдентификаторыПолученныхПисемИдентификатор = Null Тогда
			Загрузить.Добавить(Выборка.Идентификатор);
		ИначеЕсли Выборка.ИдентификаторыВПочтовомЯщикеИдентификатор = Null И Выборка.ИдентификаторыПолученныхПисемИдентификатор <> Null Тогда
			УдалитьВРегистре.Добавить(Выборка.Идентификатор);
		ИначеЕсли Выборка.УдалитьВПочтовомЯщике Тогда
			УдалитьВПочтовомЯщике.Добавить(Выборка.Идентификатор);
		КонецЕсли;
	КонецЦикла;
	
	Результат = Новый Структура;
	Результат.Вставить("Загрузить", Загрузить);
	Результат.Вставить("УдалитьВРегистре", УдалитьВРегистре);
	Результат.Вставить("УдалитьВПочтовомЯщике", УдалитьВПочтовомЯщике);
	
	Возврат Результат;
	
КонецФункции

Функция СформироватьТаблицуИдентификаторов(Идентификаторы)
	
	ТаблицаИдентификаторов = Новый ТаблицаЗначений;
	ТаблицаИдентификаторов.Колонки.Добавить(
		"Идентификатор",
		Новый ОписаниеТипов("Строка",,,
		Новый КвалификаторыСтроки(100)));
	
	Для Каждого Идентификатор Из Идентификаторы Цикл
		ТаблицаИдентификаторов.Добавить().Идентификатор = Идентификатор;
	КонецЦикла;
	
	Возврат ТаблицаИдентификаторов;
	
КонецФункции


