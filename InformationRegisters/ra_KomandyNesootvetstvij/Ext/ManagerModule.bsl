#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

Процедура ОбновитьДанныеУчастникаКоманды(Несоответствие, ИсходныеРеквизиты, ТекущиеРеквизиты, ОбновитьПраваДоступа) Экспорт
	
	Если ИсходныеРеквизиты <> Неопределено И
		(ИсходныеРеквизиты.Organizaciya <> ТекущиеРеквизиты.Organizaciya ИЛИ
		 ИсходныеРеквизиты.Otvetstvennyj <> ТекущиеРеквизиты.Otvetstvennyj) Тогда
		НаборЗаписей = РегистрыСведений.ra_KomandyNesootvetstvij.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Nesootvetstvie.Установить(Несоответствие);
		НаборЗаписей.Отбор.Otvetstvennyj.Установить(ИсходныеРеквизиты.Otvetstvennyj);
		НаборЗаписей.Отбор.Organizaciya.Установить(ИсходныеРеквизиты.Organizaciya);
		НаборЗаписей.Записать();
	КонецЕсли;
	
	Если НЕ ТекущиеРеквизиты.Otvetstvennyj.Пустая() Тогда
		НаборЗаписей = РегистрыСведений.ra_KomandyNesootvetstvij.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Nesootvetstvie.Установить(Несоответствие);
		НаборЗаписей.Отбор.Otvetstvennyj.Установить(ТекущиеРеквизиты.Otvetstvennyj);
		НаборЗаписей.Отбор.Organizaciya.Установить(ТекущиеРеквизиты.Organizaciya);
		
		НоваяЗапись = НаборЗаписей.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяЗапись, ТекущиеРеквизиты);
		НоваяЗапись.Nesootvetstvie = Несоответствие;
		
		НаборЗаписей.ДополнительныеСвойства.Вставить("ОбновитьПраваДоступа", ОбновитьПраваДоступа);
		НаборЗаписей.Записать();
	КонецЕсли;
	
КонецПроцедуры

Функция ПолномочияТекущегоПользователя(Несоответствие, Организация = Неопределено, УчитыватьАннулирование = Истина) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Несоответствие", Несоответствие);
	Запрос.УстановитьПараметр("Пользователь", ПараметрыСеанса.ТекущийПользователь);
	Запрос.УстановитьПараметр("Организация", Организация);
	
	Если УчитыватьАннулирование Тогда
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ИсторияСостоянийДокументов.Документ КАК Документ
		|ИЗ
		|	РегистрСведений.ИсторияСостоянийДокументов.СрезПоследних(, Документ = &Несоответствие) КАК ИсторияСостоянийДокументов
		|ГДЕ
		|	ИсторияСостоянийДокументов.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияДокументов.ra_Аннулирован)";
		Если Не Запрос.Выполнить().Пустой() Тогда
			Возврат Новый Структура("ОтветственныйЗаКачество, ОтветственныйЗаКачествоВыявившей, Лидер, ПервыйЛидер", Ложь, Ложь, Ложь, Ложь);
		КонецЕсли;
	КонецЕсли;
	
	Если Организация = Неопределено Тогда
		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ЕСТЬNULL(МАКСИМУМ(ra_KomandyNesootvetstvij.OtvetstvennyjZaKachestvo), ЛОЖЬ) КАК ОтветственныйЗаКачество,
		|	ЕСТЬNULL(МАКСИМУМ(ra_KomandyNesootvetstvij.OtvetstvennyjZaKachestvo
		|			И ra_KomandyNesootvetstvij.RolOrganizacii = ЗНАЧЕНИЕ(Перечисление.ra_RoliOrganizacijDlyaNesootvetstvij.Vyyavivshaya)), ЛОЖЬ) КАК ОтветственныйЗаКачествоВыявившей,
		|	ЕСТЬNULL(МАКСИМУМ(ra_KomandyNesootvetstvij.LiderNesootvetstviya), ЛОЖЬ) КАК Лидер,
		|	ЕСТЬNULL(МАКСИМУМ(ra_KomandyNesootvetstvij.LiderNesootvetstviya
		|				И ra_KomandyNesootvetstvij.PervyjDopustivshij), ЛОЖЬ) КАК ПервыйЛидер
		|ИЗ
		|	РегистрСведений.ra_KomandyNesootvetstvij КАК ra_KomandyNesootvetstvij
		|ГДЕ
		|	ra_KomandyNesootvetstvij.Nesootvetstvie = &Несоответствие
		|	И ra_KomandyNesootvetstvij.Otvetstvennyj В
		|			(ВЫБРАТЬ
		|				СоставСубъектовПравДоступа.Пользователь КАК Пользователь
		|			ИЗ
		|				РегистрСведений.СоставСубъектовПравДоступа КАК СоставСубъектовПравДоступа
		|			ГДЕ
		|				СоставСубъектовПравДоступа.ПользовательОснование = &Пользователь
		|				И СоставСубъектовПравДоступа.ОбъектОснование ССЫЛКА Справочник.ДелегированиеПрав
		|		
		|			ОБЪЕДИНИТЬ ВСЕ
		|		
		|			ВЫБРАТЬ
		|				&Пользователь)";
	Иначе
		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ra_KomandyNesootvetstvij.OtvetstvennyjZaKachestvo КАК ОтветственныйЗаКачество,
		|	ra_KomandyNesootvetstvij.OtvetstvennyjZaKachestvo
		|			И ra_KomandyNesootvetstvij.RolOrganizacii = ЗНАЧЕНИЕ(Перечисление.ra_RoliOrganizacijDlyaNesootvetstvij.Vyyavivshaya) КАК ОтветственныйЗаКачествоВыявившей,
		|	ra_KomandyNesootvetstvij.LiderNesootvetstviya КАК Лидер,
		|	ra_KomandyNesootvetstvij.LiderNesootvetstviya
		|		И ra_KomandyNesootvetstvij.PervyjDopustivshij КАК ПервыйЛидер
		|ИЗ
		|	РегистрСведений.ra_KomandyNesootvetstvij КАК ra_KomandyNesootvetstvij
		|ГДЕ
		|	ra_KomandyNesootvetstvij.Nesootvetstvie = &Несоответствие
		|	И ra_KomandyNesootvetstvij.Organizaciya = &Организация
		|	И ra_KomandyNesootvetstvij.Otvetstvennyj В
		|			(ВЫБРАТЬ
		|				СоставСубъектовПравДоступа.Пользователь КАК Пользователь
		|			ИЗ
		|				РегистрСведений.СоставСубъектовПравДоступа КАК СоставСубъектовПравДоступа
		|			ГДЕ
		|				СоставСубъектовПравДоступа.ПользовательОснование = &Пользователь
		|				И СоставСубъектовПравДоступа.ОбъектОснование ССЫЛКА Справочник.ДелегированиеПрав
		|		
		|			ОБЪЕДИНИТЬ ВСЕ
		|		
		|			ВЫБРАТЬ
		|				&Пользователь)";
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Новый Структура("ОтветственныйЗаКачество, ОтветственныйЗаКачествоВыявившей, Лидер, ПервыйЛидер",
			Выборка.ОтветственныйЗаКачество, Выборка.ОтветственныйЗаКачествоВыявившей, Выборка.Лидер, Выборка.ПервыйЛидер);
	Иначе
		Возврат Новый Структура("ОтветственныйЗаКачество, ОтветственныйЗаКачествоВыявившей, Лидер, ПервыйЛидер", Ложь, Ложь, Ложь, Ложь);
	КонецЕсли;
	
КонецФункции

#КонецОбласти

#Область ИнтеграцияBitrix

Процедура СформироватьМассивДанныхGetList(Результат, ПолноеИмя, ПараметрыЗапросаHTTP) Экспорт
	
	ОбъектМетаданных = Метаданные.РегистрыСведений.ra_KomandyNesootvetstvij;
	
	ТаблицаРеквизитов = ра_ОбменДанными.ПолучитьТаблицуРеквизитовОбъекта(ОбъектМетаданных);
	
	АктуализироватьТаблицуРеквизитов(ТаблицаРеквизитов);
	
	ТекстЗапросаВложенныеТаблицы = ПолучитьТекстЗапросаВложенныеТаблицы();
	ТекстЗапросаСоединений = ПолучитьТекстЗапросаСоединений();
	
	Запрос = ра_ОбменДанными.ПолучитьЗапрос(ТаблицаРеквизитов, ПараметрыЗапросаHTTP, ПолноеИмя, ТекстЗапросаВложенныеТаблицы, ТекстЗапросаСоединений);
	
	НастройкаФормы = ПараметрыЗапросаHTTP.Получить("$form_settings");
	Если ЗначениеЗаполнено(НастройкаФормы) И НастройкаФормы Тогда
		МассивКолонок = ПолучитьПолучитьМассивКолонокСписка();
		МассивКнопок = ПолучитьМассивКнопок(Запрос.Параметры);
		МассивФильтров = ПолучитьМассивФильтровСписка();
		Результат.Вставить("form_settings", МассивКолонок);
		Результат.Вставить("button_settings", МассивКнопок);
		Результат.Вставить("filter_settings", МассивФильтров);
		Результат.Вставить("header_settings", ПолучитьМассивЗаголовков());
		
		Запрос.Текст = Запрос.Текст + "
		|
		|УПОРЯДОЧИТЬ ПО
		|	RolOrganizacii,
		|	PervyjDopustivshij УБЫВ
		|ИТОГИ
		|	МАКСИМУМ(RolOrganizacii)
		|ПО
		|	Organizaciya_Key";
		
		СтруктураДанных = Новый Структура;
		СтруктураДанных.Вставить("Vyyavivshaya", Новый Массив);
		СтруктураДанных.Вставить("Dopustivshaya", Новый Массив);
		СтруктураДанных.Вставить("Soglasuyushchaya", Новый Массив);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		Выборка = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока Выборка.Следующий() Цикл
			
			ГУИД_Организации = Строка(Выборка.Organizaciya_Key.УникальныйИдентификатор());
			
			ТаблицаНастроек = ра_ОбменДанными.СформироватьПустуюТаблицуНастроек();
			ТаблицаНастроек.Колонки.Добавить("button_DeleteObject");
			СтрокаНастроек = ра_ОбменДанными.ДобавитьСтрокуВТаблицуНастроек(ТаблицаНастроек, Новый Структура("Имя,Синоним,Тип", "Organizaciya", НСтр("ru = 'Организация'; en = 'Organization'"), Новый ОписаниеТипов("СправочникСсылка.Контрагенты")));
			ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "Organizaciya", , Ложь, , , , Выборка.Organizaciya_Key);
			
			Для Каждого Кнопка Из МассивКнопок Цикл
				Если СтрНайти(Кнопка.Name, "DeleteOrganizationApprover") > 0 И Кнопка.ObjectGUID = ГУИД_Организации Тогда
					СтрокаНастроек.button_DeleteObject = Кнопка.Name;
					Прервать;
				КонецЕсли;
			КонецЦикла;
			
			ДанныеОрганизации = Новый Структура;
			ДанныеОрганизации.Вставить("value", Новый Массив);
			
			Для Каждого Кнопка Из МассивКнопок Цикл
				Если СтрНайти(Кнопка.Name, "AddEmployee") > 0 И Кнопка.ObjectGUID = ГУИД_Организации Тогда
					ДанныеОрганизации.Вставить("button_AddRow", Кнопка.Name);
					Прервать;
				КонецЕсли;
			КонецЦикла;
			
			ВыборкаДетали = Выборка.Выбрать();
			Пока ВыборкаДетали.Следующий() Цикл
				
				ГУИД_Сотрудника = Строка(ВыборкаДетали.Otvetstvennyj_Key.УникальныйИдентификатор());
				
				Если ВыборкаДетали.LiderNesootvetstviya Тогда
					ра_ОбменДанными.ДобавитьСтрокуВТаблицуНастроек(ТаблицаНастроек, Новый Структура("Имя,Синоним,Тип", "LiderNesootvetstviya", НСтр("ru = 'Лидер команды D8'; en = 'Leader of the team D8'"), Новый ОписаниеТипов("СправочникСсылка.Пользователи")));
					ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "LiderNesootvetstviya", , Ложь, , , , ВыборкаДетали.Otvetstvennyj_Key);
				КонецЕсли;
				
				Если ВыборкаДетали.OtvetstvennyjZaKachestvo Тогда
					ра_ОбменДанными.ДобавитьСтрокуВТаблицуНастроек(ТаблицаНастроек, Новый Структура("Имя,Синоним,Тип", "OtvetstvennyjZaKachestvo", НСтр("ru = 'Ответственный за качество'; en = 'Responsible for quality'"), Новый ОписаниеТипов("СправочникСсылка.Пользователи")));
					ра_ОбменДанными.ИзменитьСтрокуВТаблицеНастроек(ТаблицаНастроек, "OtvetstvennyjZaKachestvo", , Ложь, , , , ВыборкаДетали.Otvetstvennyj_Key);
				КонецЕсли;
				
				СтруктураСтроки = ра_ОбщегоНазначения.ЭлементВыборкиВСтруктуру(ВыборкаДетали, РезультатЗапроса);
				
				Если Не ВыборкаДетали.LiderNesootvetstviya И Не ВыборкаДетали.OtvetstvennyjZaKachestvo Тогда
					Для Каждого Кнопка Из МассивКнопок Цикл
						Если СтрНайти(Кнопка.Name, "DeleteEmployee") > 0 И Кнопка.ObjectGUID = ГУИД_Сотрудника И Кнопка.OrganizationGUID = ГУИД_Организации Тогда
							СтруктураСтроки.Вставить("button_DeleteRow", Кнопка.Name);
							Прервать;
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
				
				ДанныеОрганизации.value.Добавить(СтруктураСтроки);
				
			КонецЦикла;
			
			Если Выборка.RolOrganizacii = Перечисления.ra_RoliOrganizacijDlyaNesootvetstvij.Vyyavivshaya Тогда
				СтруктураДанных.Vyyavivshaya.Добавить(ДанныеОрганизации);
			ИначеЕсли Выборка.RolOrganizacii = Перечисления.ra_RoliOrganizacijDlyaNesootvetstvij.Dopustivshaya Тогда
				СтруктураДанных.Dopustivshaya.Добавить(ДанныеОрганизации);
			ИначеЕсли Выборка.RolOrganizacii = Перечисления.ra_RoliOrganizacijDlyaNesootvetstvij.Soglasuyushchaya Тогда
				СтруктураДанных.Soglasuyushchaya.Добавить(ДанныеОрганизации);
			КонецЕсли;
			
			ДанныеОрганизации.Вставить("header", ра_ОбменДанными.СформироватьМассивДанныхИзТаблицыНастроек(ТаблицаНастроек));
		КонецЦикла;
		
		Результат.Вставить("value", СтруктураДанных);
	Иначе
		МассивДанных = ра_ОбменДанными.СформироватьМассивДанныхИзЗапроса(Запрос);
		Результат.Вставить("value", МассивДанных);
	КонецЕсли;
	
КонецПроцедуры

Процедура АктуализироватьТаблицуРеквизитов(ТаблицаРеквизитов)
	
КонецПроцедуры

Функция ПолучитьТекстЗапросаВложенныеТаблицы() Экспорт
	
	Возврат "";
	
КонецФункции

Функция ПолучитьТекстЗапросаСоединений() Экспорт
	
	Возврат "";
	
КонецФункции

Функция СформироватьМассивДанныхРолевойМодели(ДокументОбъект, ПараметрыФормирования = Неопределено) Экспорт
	
	Возврат Обработки.ра_ФормыБитрикс.Создать().ОписаниеФормы(Метаданные.РегистрыСведений.ra_KomandyNesootvetstvij, ДокументОбъект, ПараметрыФормирования);
	
КонецФункции

Функция ПолучитьМассивКнопок(МенеджерЗаписи) Экспорт
	
	ВидФормы = "ФормаОбъекта";
	Несоответствие = Документы.ra_Nesootvetstvie.ПустаяСсылка();
	Если ТипЗнч(МенеджерЗаписи) = Тип("Структура") Тогда
		ВидФормы = "ФормаСписка";
		Если МенеджерЗаписи.Свойство("Nesootvetstvie") Тогда
			Несоответствие = МенеджерЗаписи.Nesootvetstvie;
		КонецЕсли;
	Иначе
		Несоответствие = МенеджерЗаписи.Nesootvetstvie;
	КонецЕсли;
	
	МассивКнопок = Новый Массив;
	
	Если ВидФормы = "ФормаСписка" Тогда
		
		ТаблицаДоступа = Новый ТаблицаЗначений;
		ТаблицаДоступа.Колонки.Добавить("Организация");
		ТаблицаДоступа.Колонки.Добавить("ЕстьПравоДобавленияСотрудника");
		
		ИмяКнопки = "AppointLeader";
		ОписаниеКнопки = НСтр("ru = 'Лидера команды'; en = 'Team leader'");
		КнопкаНазначитьЛидера = ра_ОбменДанными.ПолучитьСтруктуруНастроекКнопки(ИмяКнопки, ОписаниеКнопки);
		КнопкаНазначитьЛидера.Availability = Ложь;
		
		ИмяКнопки = "AppointMatchingOrganization";
		ОписаниеКнопки = НСтр("ru = 'Согласующую организацию'; en = 'Matching organization'");
		КнопкаНазначитьСогласующуюОрганизацию = ра_ОбменДанными.ПолучитьСтруктуруНастроекКнопки(ИмяКнопки, ОписаниеКнопки);
		КнопкаНазначитьСогласующуюОрганизацию.Availability = Ложь;
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Nesootvetstvie", Несоответствие);
		Запрос.УстановитьПараметр("ТекущийПользователь", ПараметрыСеанса.ТекущийПользователь);
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ra_KomandyNesootvetstvij.Organizaciya КАК Организация,
		|	МАКСИМУМ(ra_KomandyNesootvetstvij.Otvetstvennyj = &ТекущийПользователь
		|			И ra_KomandyNesootvetstvij.RolOrganizacii = ЗНАЧЕНИЕ(Перечисление.ra_RoliOrganizacijDlyaNesootvetstvij.Dopustivshaya)
		|			И ra_KomandyNesootvetstvij.OtvetstvennyjZaKachestvo) КАК ЕстьПравоНазначенияЛидера,
		|	МАКСИМУМ(ra_KomandyNesootvetstvij.Otvetstvennyj = &ТекущийПользователь
		|			И ra_KomandyNesootvetstvij.LiderNesootvetstviya) КАК ЕстьПравоНазначенияОрганизации,
		|	МАКСИМУМ(ra_KomandyNesootvetstvij.Otvetstvennyj = &ТекущийПользователь
		|			И (ra_KomandyNesootvetstvij.OtvetstvennyjZaKachestvo
		|				ИЛИ ra_KomandyNesootvetstvij.LiderNesootvetstviya)) КАК ЕстьПравоДобавленияСотрудника,
		|	МАКСИМУМ(ra_KomandyNesootvetstvij.RolOrganizacii = ЗНАЧЕНИЕ(Перечисление.ra_RoliOrganizacijDlyaNesootvetstvij.Soglasuyushchaya)) КАК СогласующаяОрганизация
		|ИЗ
		|	РегистрСведений.ra_KomandyNesootvetstvij КАК ra_KomandyNesootvetstvij
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ИсторияСостоянийДокументов.СрезПоследних( , Документ = &Nesootvetstvie) КАК ИсторияСостоянийДокументов
		|		ПО ra_KomandyNesootvetstvij.Nesootvetstvie = ИсторияСостоянийДокументов.Документ
		|			И ИсторияСостоянийДокументов.Состояние <> ЗНАЧЕНИЕ(Перечисление.СостоянияДокументов.ra_Аннулирован)
		|ГДЕ
		|	ra_KomandyNesootvetstvij.Nesootvetstvie = &Nesootvetstvie
		|
		|СГРУППИРОВАТЬ ПО
		|	ra_KomandyNesootvetstvij.Organizaciya
		|ИТОГИ ПО
		|	ОБЩИЕ";
		Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Если Выборка.Следующий() Тогда
			ЕстьУведомлениеНеЗаказчику = ЕстьУведомлениеНеЗаказчику(Несоответствие);
			
			ЕстьПравоНазначенияОрганизации = Выборка.ЕстьПравоНазначенияОрганизации;
			
			КнопкаНазначитьЛидера.Availability = Выборка.ЕстьПравоНазначенияЛидера И ЕстьУведомлениеНеЗаказчику;
			КнопкаНазначитьСогласующуюОрганизацию.Availability = ЕстьПравоНазначенияОрганизации И ЕстьУведомлениеНеЗаказчику;
			
			СчетчикСотрудников = 1;
			СчетчикОрганизаций = 1;
			
			ВыборкаДетали = Выборка.Выбрать();
			Пока ВыборкаДетали.Следующий() Цикл
				ГУИД_Организации = Строка(ВыборкаДетали.Организация.УникальныйИдентификатор());
				ИмяКнопки = "AddEmployee" + Формат(СчетчикСотрудников, "ЧГ=");
				ОписаниеКнопки = НСтр("ru = 'Добавить работника'; en = 'Add employee'");
				КнопкаДобавитьСотрудника = ра_ОбменДанными.ПолучитьСтруктуруНастроекКнопки(ИмяКнопки, ОписаниеКнопки);
				КнопкаДобавитьСотрудника.Вставить("ObjectTypeLink", "Catalog_Контрагенты");
				КнопкаДобавитьСотрудника.Вставить("ObjectGUID", ГУИД_Организации);
				КнопкаДобавитьСотрудника.Availability = ВыборкаДетали.ЕстьПравоДобавленияСотрудника;
				КнопкаДобавитьСотрудника.Visibility = ВыборкаДетали.ЕстьПравоДобавленияСотрудника;
				
				МассивКнопок.Добавить(КнопкаДобавитьСотрудника);
				
				ЗаполнитьЗначенияСвойств(ТаблицаДоступа.Добавить(), ВыборкаДетали);
				
				СчетчикСотрудников = СчетчикСотрудников + 1;
				
				Если ВыборкаДетали.СогласующаяОрганизация Тогда
					ИмяКнопки = "DeleteOrganizationApprover" + Формат(СчетчикОрганизаций, "ЧГ=");
					ОписаниеКнопки = НСтр("ru = 'Удалить согласующую организацию'; en = 'Delete organization approver'");
					
					КнопкаУдалитьОрганизацию = ра_ОбменДанными.ПолучитьСтруктуруНастроекКнопки(ИмяКнопки, ОписаниеКнопки, "Catalog_Контрагенты", ГУИД_Организации);
					КнопкаУдалитьОрганизацию.Availability = ЕстьПравоНазначенияОрганизации;
					КнопкаУдалитьОрганизацию.Visibility = КнопкаУдалитьОрганизацию.Availability;
					
					МассивКнопок.Добавить(КнопкаУдалитьОрганизацию);
					
					СчетчикОрганизаций = СчетчикОрганизаций + 1;
				КонецЕсли;
				
			КонецЦикла;
		КонецЕсли;
		
		КнопкаНазначитьЛидера.Visibility = КнопкаНазначитьЛидера.Availability;
		КнопкаНазначитьСогласующуюОрганизацию.Visibility = КнопкаНазначитьСогласующуюОрганизацию.Availability;
		
		МассивКнопок.Добавить(КнопкаНазначитьЛидера);
		МассивКнопок.Добавить(КнопкаНазначитьСогласующуюОрганизацию);
		
		//Кнопки для удаления сотрудников
		Запрос = Новый Запрос("
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ra_KomandyNesootvetstvij.Organizaciya КАК Организация,
		|	ra_KomandyNesootvetstvij.Otvetstvennyj КАК Ответственный
		|ИЗ
		|	РегистрСведений.ra_KomandyNesootvetstvij КАК ra_KomandyNesootvetstvij
		|ГДЕ
		|	ra_KomandyNesootvetstvij.Nesootvetstvie = &Несоответствие
		|	И НЕ LiderNesootvetstviya
		|	И НЕ OtvetstvennyjZaKachestvo");
		
		Запрос.УстановитьПараметр("Несоответствие", Несоответствие);
		Выборка = Запрос.Выполнить().Выбрать();
		
		СчетчикСотрудников = 1;
		
		Пока Выборка.Следующий() Цикл
			
			ИмяКнопки = "DeleteEmployee" + Формат(СчетчикСотрудников, "ЧГ=");;
			
			ОписаниеКнопки = НСтр("ru = 'Удалить работника'; en = 'Delete employee'");
			ГУИД = Строка(Выборка.Ответственный.УникальныйИдентификатор());
			
			КнопкаУдалитьСотрудника = ра_ОбменДанными.ПолучитьСтруктуруНастроекКнопки(ИмяКнопки, ОписаниеКнопки, "Catalog_Пользователи", ГУИД);
			
			СтрокаТЗ = ТаблицаДоступа.Найти(Выборка.Организация, "Организация");
			Если СтрокаТЗ <> Неопределено Тогда
				КнопкаУдалитьСотрудника.Availability = СтрокаТЗ.ЕстьПравоДобавленияСотрудника;
			КонецЕсли;
			КнопкаУдалитьСотрудника.Visibility = КнопкаУдалитьСотрудника.Availability;
			
			КнопкаУдалитьСотрудника.Вставить("OrganizationGUID", Строка(Выборка.Организация.УникальныйИдентификатор()));	
			
			МассивКнопок.Добавить(КнопкаУдалитьСотрудника);
			
			СчетчикСотрудников = СчетчикСотрудников + 1;
			
		КонецЦикла;
		
	ИначеЕсли ВидФормы = "ФормаОбъекта" Тогда
		
		ИмяКнопки = "Save";
		ОписаниеКнопки = НСтр("ru = 'Сохранить'; en = 'Save'");
		КнопкаСохранить = ра_ОбменДанными.ПолучитьСтруктуруНастроекКнопки(ИмяКнопки, ОписаниеКнопки);
		
		МассивКнопок.Добавить(КнопкаСохранить);
		
	КонецЕсли;
	
	Возврат МассивКнопок;
	
КонецФункции

Функция ПолучитьПолучитьМассивКолонокСписка() Экспорт
	
	МетаданныеРегистра = Метаданные.РегистрыСведений.ra_KomandyNesootvetstvij;
	
	ТаблицаНастроек = ра_ОбменДанными.СформироватьПустуюТаблицуНастроек();
	
	ИзмеренияРегистра = МетаданныеРегистра.Измерения;
	РесурсыРегистра = МетаданныеРегистра.Ресурсы;
	
	ра_ОбменДанными.ДобавитьСтрокуВТаблицуНастроек(ТаблицаНастроек, ИзмеренияРегистра.Otvetstvennyj);
	ра_ОбменДанными.ДобавитьСтрокуВТаблицуНастроек(ТаблицаНастроек, РесурсыРегистра.Dolzhnost);
	ра_ОбменДанными.ДобавитьСтрокуВТаблицуНастроек(ТаблицаНастроек, РесурсыРегистра.Podrazdelenie);
	
	МассивДанных = ра_ОбменДанными.СформироватьМассивДанныхИзТаблицыНастроек(ТаблицаНастроек);
	
	Возврат МассивДанных;
	
КонецФункции

Функция ПолучитьМассивФильтровСписка() Экспорт
	
	МассивДанных = Новый Массив;
	
	Возврат МассивДанных;
	
КонецФункции

Функция ПолучитьМассивЗаголовков(МассивДанных = Неопределено) Экспорт
	
	МассивЗаголовков = Новый Массив;
	
	ТаблицаЗаголовков = Новый ТаблицаЗначений;
	ТаблицаЗаголовков.Колонки.Добавить("Name");
	ТаблицаЗаголовков.Колонки.Добавить("Description");
	
	НоваяСтрока = ТаблицаЗаголовков.Добавить();
	НоваяСтрока.Name = "Vyyavivshaya";
	НоваяСтрока.Description = НСтр("ru = 'ВЫЯВИВШАЯ'; en = 'DETECTING'");
	
	НоваяСтрока = ТаблицаЗаголовков.Добавить();
	НоваяСтрока.Name = "Dopustivshaya";
	НоваяСтрока.Description = НСтр("ru = 'ДОПУСТИВШАЯ'; en = 'ALLOWING'");
	
	НоваяСтрока = ТаблицаЗаголовков.Добавить();
	НоваяСтрока.Name = "Soglasuyushchaya";
	НоваяСтрока.Description = НСтр("ru = 'СОГЛАСУЮЩАЯ'; en = 'APPROVING'");
	
	Для Каждого ТекСтрока Из ТаблицаЗаголовков Цикл
		МассивЗаголовков.Добавить(Новый Структура("Name,Description",ТекСтрока.Name,ТекСтрока.Description));
	КонецЦикла;
	
	Возврат МассивЗаголовков;
	
КонецФункции

Функция ЕстьУведомлениеНеЗаказчику(Несоответствие)

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ra_Uvedomlenie.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ra_Uvedomlenie КАК ra_Uvedomlenie
	|ГДЕ
	|	ra_Uvedomlenie.VidOperacii <> ЗНАЧЕНИЕ(Перечисление.ra_VidyUvedomleniy.UvedomlenieZakazchiku)
	|	И ra_Uvedomlenie.Nesootvetstvie = &Несоответствие";
	
	Запрос.УстановитьПараметр("Несоответствие", Несоответствие);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат НЕ РезультатЗапроса.Пустой();
	
КонецФункции

//V2

Функция ЕстьМетодДополнитьОписаниеМетаданных() Экспорт
	
	Возврат Истина;
	
КонецФункции

Процедура ДополнитьОписаниеМетаданных(ОбработкаОбъект, Данные, ПараметрыФормирования) Экспорт
	
	Если ПараметрыФормирования <> Неопределено Тогда
		Если ПараметрыФормирования.Свойство("Лидер") Тогда
			
			Данные.LiderNesootvetstviya = Истина; // артефакт - перенести в обработку заполнения
			Данные.Organizaciya = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПараметрыСеанса.ТекущийПользователь, "ра_Организация");
			
			ОбработкаОбъект.ДобавитьПоле("", Новый Структура("Имя,Синоним,Тип", "FormCaption", НСтр("ru = 'Новый лидер команды D8'; en = 'New leader of the team D8'"), Новый ОписаниеТипов("Строка",,,, Новый КвалификаторыСтроки(30))));
			
			ОбработкаОбъект.УстановитьСиноним("Otvetstvennyj", НСтр("ru = 'Работник'; en = 'Employee'"));
			
		ИначеЕсли ПараметрыФормирования.Свойство("Сотрудник") Тогда
			
			Данные.Organizaciya = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПараметрыСеанса.ТекущийПользователь, "ра_Организация");
			
			ОбработкаОбъект.ДобавитьПоле("", Новый Структура("Имя,Синоним,Тип", "FormCaption", НСтр("ru = 'Новый работник'; en = 'New employee'"), Новый ОписаниеТипов("Строка",,,, Новый КвалификаторыСтроки(30))));
			
			ОбработкаОбъект.УстановитьСиноним("Otvetstvennyj", НСтр("ru = 'Работник'; en = 'Employee'"));
			
		ИначеЕсли ПараметрыФормирования.Свойство("СогласующаяОрганизация") Тогда
			
			Данные.Organizaciya = Справочники.Контрагенты.ПустаяСсылка(); // артефакт - перенести в обработку заполнения
			Данные.OtvetstvennyjZaKachestvo = Истина; // артефакт - перенести в обработку заполнения
			
			ОбработкаОбъект.ДобавитьПоле("", Новый Структура("Имя,Синоним,Тип", "FormCaption", НСтр("ru = 'Новая согласующая организация'; en = 'New matching organization'"), Новый ОписаниеТипов("Строка",,,, Новый КвалификаторыСтроки(30))));
			
			ОбработкаОбъект.УстановитьВидимость("Organizaciya", Истина);
			
			ОбработкаОбъект.УстановитьДоступность("Organizaciya", Истина);
			
			ОбработкаОбъект.УстановитьПараметрыВыбора("Otvetstvennyj",
				ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Новый ПараметрВыбора("ра_ОтветственныйЗаКачествоВыявивший", Истина)));
			
			ОбработкаОбъект.УстановитьСиноним("Otvetstvennyj", НСтр("ru = 'Ответственный за качество'; en = 'Responsible for quality'"));
			
		КонецЕсли;
	КонецЕсли;
	
	ОбработкаОбъект.УстановитьВидимость("Otvetstvennyj", Истина);
	
	ОбработкаОбъект.УстановитьДоступность("Otvetstvennyj", Истина);
	
	//ОбязательныеРеквизиты = ОбработкаОбъект.ОбязательныеРеквизиты();
	//АктуализироватьМассивОбязательныхРеквизитов(ОбязательныеРеквизиты, Данные);
	//ОбработкаОбъект.УстановитьОбязательность(ОбязательныеРеквизиты, Истина);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли