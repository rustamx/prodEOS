
#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		Если Количество() = 1 Тогда
			
			Если ДанныеЗаполнения.Свойство("Nesootvetstvie") Тогда
				Отбор.Nesootvetstvie.Установить(ДанныеЗаполнения.Nesootvetstvie);
			КонецЕсли;
			Если ДанныеЗаполнения.Свойство("Organizaciya") Тогда
				Отбор.Organizaciya.Установить(ДанныеЗаполнения.Organizaciya);
			КонецЕсли;
			Если ДанныеЗаполнения.Свойство("Otvetstvennyj") Тогда
				Отбор.Otvetstvennyj.Установить(ДанныеЗаполнения.Otvetstvennyj);
			КонецЕсли;
			
			ЗаполнитьЗначенияСвойств(ЭтотОбъект[0], ДанныеЗаполнения);
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, Замещение)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ПроверитьВозможностьУдаления(ЭтотОбъект, Отказ);
	
	Если НЕ ЗначениеЗаполнено(Отбор.Nesootvetstvie.Значение) Тогда
		ВызватьИсключение НСтр("ru = 'Не указано несоответствие при записи команды.'; en = 'Nonconformity have not been specified when saving a team.'");
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Пользователи", ОбщегоНазначенияКлиентСервер.СвернутьМассив(ВыгрузитьКолонку("Otvetstvennyj")));
	Запрос.УстановитьПараметр("Несоответствия", ОбщегоНазначенияКлиентСервер.СвернутьМассив(ВыгрузитьКолонку("Nesootvetstvie")));
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Пользователи.Ссылка КАК Пользователь,
	|	СведенияОПользователяхДокументооборот.Подразделение КАК Podrazdelenie,
	|	СведенияОПользователяхДокументооборот.Должность КАК Dolzhnost,
	|	Пользователи.ра_Организация КАК Organizaciya
	|ИЗ
	|	Справочник.Пользователи КАК Пользователи
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОПользователяхДокументооборот КАК СведенияОПользователяхДокументооборот
	|		ПО Пользователи.Ссылка = СведенияОПользователяхДокументооборот.Пользователь
	|ГДЕ
	|	Пользователи.Ссылка В(&Пользователи)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ra_KomandyNesootvetstvij.Organizaciya КАК Организация,
	|	МАКСИМУМ(ra_KomandyNesootvetstvij.PervyjDopustivshij) КАК ПерваяДопустившая
	|ИЗ
	|	РегистрСведений.ra_KomandyNesootvetstvij КАК ra_KomandyNesootvetstvij
	|ГДЕ
	|	ra_KomandyNesootvetstvij.Nesootvetstvie В(&Несоответствия)
	|	И ra_KomandyNesootvetstvij.RolOrganizacii = ЗНАЧЕНИЕ(Перечисление.ra_RoliOrganizacijDlyaNesootvetstvij.Dopustivshaya)
	|
	|СГРУППИРОВАТЬ ПО
	|	ra_KomandyNesootvetstvij.Organizaciya";
	Результат = Запрос.ВыполнитьПакет();
	
	ДанныеПользователей = Результат[0].Выгрузить();
	Несоответствия = Результат[1].Выгрузить();
	
	ПовторыЛидеров = Новый Соответствие;
	
	Для Каждого Запись Из ЭтотОбъект Цикл
		Найдено = ДанныеПользователей.Найти(Запись.Otvetstvennyj, "Пользователь");
		Если Найдено <> Неопределено Тогда
			Если НЕ ЗначениеЗаполнено(Запись.Podrazdelenie) Тогда
				Запись.Podrazdelenie = Найдено.Podrazdelenie;
			КонецЕсли;
			Если НЕ ЗначениеЗаполнено(Запись.Dolzhnost) Тогда
				Запись.Dolzhnost = Найдено.Dolzhnost;
			КонецЕсли;
			
			Запись.Organizaciya = Найдено.Organizaciya;
			
			Отбор.Organizaciya.Установить(Запись.Organizaciya);
		КонецЕсли;
		
		Если Запись.RolOrganizacii = Перечисления.ra_RoliOrganizacijDlyaNesootvetstvij.Dopustivshaya Тогда
			Найдено = Несоответствия.Найти(Истина, "ПерваяДопустившая");
			Если Найдено = Неопределено ИЛИ Найдено.Организация = Запись.Organizaciya Тогда
				Запись.PervyjDopustivshij = Истина;
			КонецЕсли;
		КонецЕсли;
		
		Если Запись.RolOrganizacii = Перечисления.ra_RoliOrganizacijDlyaNesootvetstvij.Soglasuyushchaya Тогда
			Найдено = Несоответствия.Найти(Запись.Organizaciya, "Организация");
			Если Найдено <> Неопределено и Найдено.ПерваяДопустившая Тогда
				ТекстШаблон = НСтр("ru = 'Организация %1 является первой допустившей'; en = 'Organization %1 is first nonconformity allowed'");
				ВызватьИсключение СтрШаблон(ТекстШаблон, Запись.Organizaciya);
			КонецЕсли;
		КонецЕсли;
		
		ПовторыЛидеров.Вставить(Запись.Organizaciya, ПовторыЛидеров[Запись.Organizaciya] <> Неопределено);
	КонецЦикла;
	
	Организации = "";
	Для каждого Элемент Из ПовторыЛидеров Цикл
		Если Элемент.Значение Тогда
			Организации = Организации + ?(Организации > "", ", ", "") + Элемент.Ключ;
		КонецЕсли;
	КонецЦикла;
	Если Организации > "" Тогда
		ВызватьИсключение СтрШаблон(НСтр("ru = 'Повторяющийся лидер для %1.'; en = 'Reiterative leader for %1.'"), Организации);
	КонецЕсли;
	
	ДополнительныеСвойства.Вставить("МенеджерВременныхТаблиц", Новый МенеджерВременныхТаблиц);
	
	ДобавитьВременныеТаблицыСДанными("ТаблицаСтарыхДанных");
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ, Замещение)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ДобавитьВременныеТаблицыСДанными("ТаблицаНовыхДанных");
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДополнительныеСвойства.МенеджерВременныхТаблиц;
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЛидерыТаблицаСтарыхДанных.Nesootvetstvie КАК Nesootvetstvie,
	|	ЛидерыТаблицаСтарыхДанных.Organizaciya КАК Organizaciya,
	|	ЛидерыТаблицаСтарыхДанных.Otvetstvennyj КАК Otvetstvennyj,
	|	ЛидерыТаблицаСтарыхДанных.Podrazdelenie КАК Podrazdelenie,
	|	ЛидерыТаблицаСтарыхДанных.Dolzhnost КАК Dolzhnost,
	|	ЛидерыТаблицаСтарыхДанных.RolOrganizacii КАК RolOrganizacii,
	|	ЛидерыТаблицаСтарыхДанных.OtvetstvennyjZaKachestvo КАК OtvetstvennyjZaKachestvo,
	|	ЛОЖЬ КАК LiderNesootvetstviya,
	|	ЛидерыТаблицаСтарыхДанных.PervyjDopustivshij КАК PervyjDopustivshij
	|ИЗ
	|	ЛидерыТаблицаСтарыхДанных КАК ЛидерыТаблицаСтарыхДанных
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ЛидерыТаблицаНовыхДанных КАК ЛидерыТаблицаНовыхДанных
	|		ПО ЛидерыТаблицаСтарыхДанных.Nesootvetstvie = ЛидерыТаблицаНовыхДанных.Nesootvetstvie
	|			И ЛидерыТаблицаСтарыхДанных.Organizaciya = ЛидерыТаблицаНовыхДанных.Organizaciya
	|			И ЛидерыТаблицаСтарыхДанных.Otvetstvennyj <> ЛидерыТаблицаНовыхДанных.Otvetstvennyj";
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НаборЗаписей = РегистрыСведений.ra_KomandyNesootvetstvij.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Nesootvetstvie.Установить(Выборка.Nesootvetstvie);
		НаборЗаписей.Отбор.Otvetstvennyj.Установить(Выборка.Otvetstvennyj);
		НаборЗаписей.Отбор.Organizaciya.Установить(Выборка.Organizaciya);
		
		ЗаполнитьЗначенияСвойств(НаборЗаписей.Добавить(), Выборка);
		
		НаборЗаписей.ДополнительныеСвойства.Вставить("ОтключитьКонтрольЛидеров");
		НаборЗаписей.Записать();
	КонецЦикла;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаНовыхДанных.Nesootvetstvie КАК Nesootvetstvie,
	|	ТаблицаНовыхДанных.Otvetstvennyj КАК Otvetstvennyj,
	|	ТаблицаНовыхДанных.OtvetstvennyjZaKachestvo КАК OtvetstvennyjZaKachestvo,
	|	ТаблицаНовыхДанных.LiderNesootvetstviya КАК LiderNesootvetstviya,
	|	НЕ ТаблицаСтарыхДанных.Otvetstvennyj ЕСТЬ NULL КАК ИзменениеЛидера
	|ИЗ
	|	ТаблицаНовыхДанных КАК ТаблицаНовыхДанных
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаСтарыхДанных КАК ТаблицаСтарыхДанных
	|		ПО ТаблицаНовыхДанных.Nesootvetstvie = ТаблицаСтарыхДанных.Nesootvetstvie
	|			И ТаблицаНовыхДанных.Otvetstvennyj = ТаблицаСтарыхДанных.Otvetstvennyj
	|ГДЕ
	|	(ТаблицаСтарыхДанных.Otvetstvennyj ЕСТЬ NULL
	|			ИЛИ ТаблицаСтарыхДанных.LiderNesootvetstviya <> ТаблицаНовыхДанных.LiderNesootvetstviya)
	|ИТОГИ ПО
	|	Nesootvetstvie";
	Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока Выборка.Следующий() Цикл
		Результат = Новый Структура;
		Результат.Вставить("Лидер", Новый Массив);
		Результат.Вставить("ОтветственныеЗаКачество", Новый Массив);
		Результат.Вставить("Прочие", Новый Массив);
		Результат.Вставить("БывшийЛидер", Новый Массив);
		
		ВыборкаДетали = Выборка.Выбрать();
		Пока ВыборкаДетали.Следующий() Цикл
			Если ВыборкаДетали.LiderNesootvetstviya Тогда
				Результат.Лидер.Добавить(ВыборкаДетали.Otvetstvennyj);
			ИначеЕсли ВыборкаДетали.ИзменениеЛидера Тогда
				Результат.БывшийЛидер.Добавить(ВыборкаДетали.Otvetstvennyj);
			ИначеЕсли ВыборкаДетали.OtvetstvennyjZaKachestvo Тогда
				Результат.ОтветственныеЗаКачество.Добавить(ВыборкаДетали.Otvetstvennyj);
			Иначе
				Результат.Прочие.Добавить(ВыборкаДетали.Otvetstvennyj);
			КонецЕсли;
		КонецЦикла;
		
		КонтекстСобытия = Новый ХранилищеЗначения(Результат);
		БизнесСобытияВызовСервера.ЗарегистрироватьСобытие(Выборка.Nesootvetstvie, 
			Справочники.ВидыБизнесСобытий.ра_ИзменениеКомандыНесоответствия, КонтекстСобытия);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ДобавитьВременныеТаблицыСДанными(ИмяТаблицы)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДополнительныеСвойства.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Несоответствие", Отбор.Nesootvetstvie.Значение);
	Запрос.УстановитьПараметр("Организация", Отбор.Organizaciya.Значение);
	Запрос.УстановитьПараметр("Ответственный", Отбор.Otvetstvennyj.Значение);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаДанных.Nesootvetstvie КАК Nesootvetstvie,
	|	ТаблицаДанных.Organizaciya КАК Organizaciya,
	|	ТаблицаДанных.Otvetstvennyj КАК Otvetstvennyj,
	|	ТаблицаДанных.OtvetstvennyjZaKachestvo КАК OtvetstvennyjZaKachestvo,
	|	ТаблицаДанных.LiderNesootvetstviya КАК LiderNesootvetstviya
	|ПОМЕСТИТЬ ТаблицаДанных
	|ИЗ
	|	РегистрСведений.ra_KomandyNesootvetstvij КАК ТаблицаДанных
	|ГДЕ
	|	ТаблицаДанных.Nesootvetstvie = &Несоответствие
	|	И &ОтборПоОрганизации
	|	И &ОтборПоОтветственному
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДанных.Nesootvetstvie КАК Nesootvetstvie,
	|	ТаблицаДанных.Organizaciya КАК Organizaciya,
	|	ТаблицаДанных.Otvetstvennyj КАК Otvetstvennyj,
	|	ТаблицаДанных.Podrazdelenie КАК Podrazdelenie,
	|	ТаблицаДанных.Dolzhnost КАК Dolzhnost,
	|	ТаблицаДанных.RolOrganizacii КАК RolOrganizacii,
	|	ТаблицаДанных.OtvetstvennyjZaKachestvo КАК OtvetstvennyjZaKachestvo,
	|	ТаблицаДанных.LiderNesootvetstviya КАК LiderNesootvetstviya,
	|	ТаблицаДанных.PervyjDopustivshij КАК PervyjDopustivshij
	|ПОМЕСТИТЬ ЛидерыТаблицаДанных
	|ИЗ
	|	РегистрСведений.ra_KomandyNesootvetstvij КАК ТаблицаДанных
	|ГДЕ
	|	ТаблицаДанных.Nesootvetstvie = &Несоответствие
	|	И &ОтборПоОрганизации
	|	И &КонтрольЛидеров
	|	И ТаблицаДанных.LiderNesootvetstviya = ИСТИНА";
	
	Если ЗначениеЗаполнено(Отбор.Organizaciya.Значение) Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОтборПоОрганизации", "ТаблицаДанных.Organizaciya = &Организация");
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОтборПоОрганизации", "ИСТИНА");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Отбор.Otvetstvennyj.Значение) Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОтборПоОтветственному", "ТаблицаДанных.Otvetstvennyj = &Ответственный");
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОтборПоОтветственному", "ИСТИНА");
	КонецЕсли;
	
	Если ДополнительныеСвойства.Свойство("ОтключитьКонтрольЛидеров") Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&КонтрольЛидеров", "ЛОЖЬ");
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&КонтрольЛидеров", "ИСТИНА");
	КонецЕсли;
	
	Запрос.Текст = СтрЗаменить(ТекстЗапроса, "ТаблицаДанных", ИмяТаблицы);
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура ПроверитьВозможностьУдаления(НаборДанных, Отказ)
	
	Если Не НаборДанных.ДополнительныеСвойства.Свойство("УдалениеЗаписей") Тогда
		Возврат;
	КонецЕсли;
	
	Несоответствие = НаборДанных.Отбор.Nesootvetstvie.Значение;
	Организация = НаборДанных.Отбор.Organizaciya.Значение;
	Ответственный = НаборДанных.Отбор.Otvetstvennyj.Значение;
	
	МассивСотрудников = Новый Массив;
	
	Если ЗначениеЗаполнено(Ответственный) Тогда //удаление участника команды
		МассивСотрудников.Добавить(Ответственный);
	Иначе //удаление согласующей организации
		Запрос = Новый Запрос("
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Otvetstvennyj КАК Ответственный
		|ИЗ
		|	РегистрСведений.ra_KomandyNesootvetstvij
		|ГДЕ
		|	Nesootvetstvie = &Несоответствие
		|	И Organizaciya = &Организация");
		
		Запрос.УстановитьПараметр("Несоответствие", Несоответствие);
		Запрос.УстановитьПараметр("Организация", Организация);
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			МассивСотрудников.Добавить(Выборка.Ответственный);
		КонецЦикла;
	КонецЕсли;
	
	Запрос = Новый Запрос("
	//Ответственные за действия
	|ВЫБРАТЬ
	|	ПРЕДСТАВЛЕНИЕ(Otvetstvennyj) КАК Ответственный,
	|	ИСТИНА КАК ОтветственныйЗаДействие,
	|	ПРЕДСТАВЛЕНИЕ(Ссылка) КАК Действие,
	|	ЛОЖЬ КАК Выявивший,
	|	ЛОЖЬ КАК СогласовантУведомления,
	|	НЕОПРЕДЕЛЕНО КАК Уведомление
	|ИЗ
	|	Документ.ra_KorrektiruyushcheeDejstvie
	|ГДЕ
	|	Nesootvetstvie = &Несоответствие
	|	И Otvetstvennyj В(&СписокПользователей)
	|	И НЕ ПометкаУдаления	
	
	|ОБЪЕДИНИТЬ ВСЕ
	
	|ВЫБРАТЬ
	|	ПРЕДСТАВЛЕНИЕ(Otvetstvennyj),
	|	ИСТИНА,
	|	ПРЕДСТАВЛЕНИЕ(Ссылка),
	|	ЛОЖЬ,
	|	ЛОЖЬ,
	|	НЕОПРЕДЕЛЕНО
	|ИЗ
	|	Документ.ra_PreduprezhdayushcheeDejstvie
	|ГДЕ
	|	Nesootvetstvie = &Несоответствие
	|	И Otvetstvennyj В(&СписокПользователей)
	|	И НЕ ПометкаУдаления
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	
	|ВЫБРАТЬ
	|	ПРЕДСТАВЛЕНИЕ(Otvetstvennyj),
	|	ИСТИНА,
	|	ПРЕДСТАВЛЕНИЕ(Ссылка),
	|	ЛОЖЬ,
	|	ЛОЖЬ,
	|	НЕОПРЕДЕЛЕНО
	|ИЗ
	|	Документ.ra_VremennyeSderzhivayushchieDejstviyaIKorrekciya
	|ГДЕ
	|	Nesootvetstvie = &Несоответствие
	|	И Otvetstvennyj В(&СписокПользователей)
	|	И НЕ ПометкаУдаления
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	//Выявивший НС
	|ВЫБРАТЬ
	|	ПРЕДСТАВЛЕНИЕ(VyyavivsheeLico),
	|	ЛОЖЬ,
	|	НЕОПРЕДЕЛЕНО,
	|	ИСТИНА,
	|	ЛОЖЬ,
	|	НЕОПРЕДЕЛЕНО
	|ИЗ
	|	Документ.ra_Nesootvetstvie
	|ГДЕ
	|	Ссылка = &Несоответствие
	|	И VyyavivsheeLico В(&СписокПользователей)

	|ОБЪЕДИНИТЬ ВСЕ
	//Согласовант уведомления
	|ВЫБРАТЬ
	|	ПРЕДСТАВЛЕНИЕ(Polzovatel),
	|	ЛОЖЬ,
	|	НЕОПРЕДЕЛЕНО,
	|	ЛОЖЬ,
	|	ИСТИНА,
	|	ПРЕДСТАВЛЕНИЕ(Ссылка)
	|ИЗ
	|	Документ.ra_Uvedomlenie.Soglasuyushchie
	|ГДЕ
	|	Ссылка.Nesootvetstvie = &Несоответствие
	|	И Polzovatel В(&СписокПользователей)
	|	И НЕ Ссылка.ПометкаУдаления");
	
	Запрос.УстановитьПараметр("Несоответствие", Несоответствие);
	Запрос.УстановитьПараметр("СписокПользователей", МассивСотрудников);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Если Выборка.ОтветственныйЗаДействие Тогда
			ТекстШаблон = НСтр("ru = 'Сотрудник %1 является ответственным за действие %2'; en = 'Employee %1 is responsible for action %2'");
			ТекстСообщения = СтрШаблон(ТекстШаблон, Выборка.Ответственный, Выборка.Действие);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , , , Отказ);
		ИначеЕсли Выборка.Выявивший Тогда
			ТекстШаблон = НСтр("ru = 'Сотрудник %1 является выявившим Несоответствие'; en = 'Employee %1 is Nonconformity identidier'");
			ТекстСообщения = СтрШаблон(ТекстШаблон, Выборка.Ответственный);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , , , Отказ);
		ИначеЕсли Выборка.СогласовантУведомления Тогда
			ТекстШаблон = НСтр("ru = 'Сотрудник %1 является  согласовантом %2'; en = 'Employee %1 is approver for %2'");
			ТекстСообщения = СтрШаблон(ТекстШаблон, Выборка.Ответственный, Выборка.Уведомление);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , , , Отказ);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти