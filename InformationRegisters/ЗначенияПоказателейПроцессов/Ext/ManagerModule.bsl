#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Добавляет запись о значении показателя процесса в регистр.
//
// Параметры:
//  ПоказательПроцесса - СправочникСсылка.ПоказателиПроцессов - Показатель процесса.
//  Значение - Число - Значение показателя.
//  Период - Дата - Период значения показателя.
//  ТекущийПериод - Булево - Расчет выполняется для текущего периода.
//  ВерсияДанных - Строка - Версия данных показателя, для которой расчитано значение.
//
Процедура Добавить(ПоказательПроцесса, Значение, Период, ТекущийПериод, ВерсияДанных) Экспорт
	
	РеквизитыПоказателя = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ПоказательПроцесса, "ВерсияДанных, ТипЗначенияПоказателя");
	Если РеквизитыПоказателя.ВерсияДанных <> ВерсияДанных Тогда
		Возврат;
	КонецЕсли;
	
	НовыйПериод = НачалоЧаса(Период);
	ТекущиеДанные = ТекущиеДанные(ПоказательПроцесса, НовыйПериод - 1);
	
	МенеджерЗаписи = РегистрыСведений.ЗначенияПоказателейПроцессов.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.ПоказательПроцесса = ПоказательПроцесса;
	МенеджерЗаписи.Значение = Значение;
	МенеджерЗаписи.Период = НовыйПериод;
	МенеджерЗаписи.ПредставлениеЗначения =
		ПредставлениеЗначения(РеквизитыПоказателя.ТипЗначенияПоказателя, МенеджерЗаписи.Значение);
	Если ТекущиеДанные <> Неопределено Тогда
		ОбновитьДинамикуПоказателя(
			РеквизитыПоказателя.ТипЗначенияПоказателя,
			МенеджерЗаписи,
			ТекущиеДанные.Значение);
	Иначе
		ОбновитьДинамикуПоказателя(
			РеквизитыПоказателя.ТипЗначенияПоказателя,
			МенеджерЗаписи,
			МенеджерЗаписи.Значение);
	КонецЕсли;
	МенеджерЗаписи.Записать();
	
	Отбор = Новый Структура("ПоказательПроцесса", ПоказательПроцесса);
	Граница = Новый Граница(НовыйПериод, ВидГраницы.Исключая);
	ТекущийСрезПервых = СрезПервых(Граница, Отбор);
	Если ТекущийСрезПервых.Количество() <> 0 Тогда
		СледующийМенеджерЗаписи = РегистрыСведений.ЗначенияПоказателейПроцессов.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(СледующийМенеджерЗаписи, ТекущийСрезПервых[0]);
		ОбновитьДинамикуПоказателя(
			РеквизитыПоказателя.ТипЗначенияПоказателя,
			СледующийМенеджерЗаписи,
			МенеджерЗаписи.Значение);
		СледующийМенеджерЗаписи.Записать();
	КонецЕсли;
	
	Если ТекущийПериод Тогда
		Если МенеджерЗаписи.ИзменениеПроцент <> 0 Тогда
			БизнесСобытияВызовСервера.ЗарегистрироватьСобытие(
				ПоказательПроцесса,
				Справочники.ВидыБизнесСобытий.ИзменениеЗначенияПоказателяПроцесса);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Удаляет данные о значениях показателя процессов.
//
// Параметры:
//  ПоказательПроцесса - СправочникСсылка.ПоказателиПроцессов - Показатель процесса.
//
Процедура Очистить(ПоказательПроцесса) Экспорт
	
	Если Не ЗначениеЗаполнено(ПоказательПроцесса) Тогда
		Возврат;
	КонецЕсли;
	
	НаборЗаписей = РегистрыСведений.ЗначенияПоказателейПроцессов.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ПоказательПроцесса.Установить(ПоказательПроцесса);
	НаборЗаписей.Записать();
	
КонецПроцедуры

// Возвращает текущие данные значения показателя.
//
// Параметры:
//  ПоказательПроцесса - СправочникСсылка.ПоказателиПроцессов - Показатель процесса.
//  Период - Дата - Период, на который нужны текущие данные.
//
// Возвращаемое значение:
//  СтрокаТаблицыЗначений - Текущие данные значения показателя.
//
Функция ТекущиеДанные(ПоказательПроцесса, Период = Неопределено) Экспорт
	
	ТекущиеДанные = Неопределено;
	Если Не ЗначениеЗаполнено(ПоказательПроцесса) Тогда
		Возврат ТекущиеДанные;
	КонецЕсли;
	
	Отбор = Новый Структура("ПоказательПроцесса", ПоказательПроцесса);
	ТекущийСрезПоследних = СрезПоследних(Период, Отбор);
	Если ТекущийСрезПоследних.Количество() <> 0 Тогда
		ТекущиеДанные = ТекущийСрезПоследних[0];
	КонецЕсли;
	
	Возврат ТекущиеДанные;
	
КонецФункции

// Возвращает текущее значение показателя.
//
// Параметры:
//  ПоказательПроцесса - СправочникСсылка.ПоказателиПроцессов - Показатель процесса.
//  Период - Дата - Период, на который нужны текущие данные.
//
// Возвращаемое значение:
//  Число - Текущее значение показателя.
//
Функция ТекущееЗначение(ПоказательПроцесса) Экспорт
	
	ТекущееЗначение = "-";
	
	ТекущиеДанные = ТекущиеДанные(ПоказательПроцесса);
	Если ТекущиеДанные <> Неопределено Тогда
		ТекущееЗначение = ТекущиеДанные.ПредставлениеЗначения;
	КонецЕсли;
	
	Возврат ТекущееЗначение;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Формирет представление значения показателя.
//
// Параметры:
//  ТипЗначенияПоказателя - ПеречислениеСсылка.ТипыЗначенийПоказателейПроцессов - Тип значения показателя.
//  Значение - Число - Значение показателя.
//
// Возвращаемое значение:
//  Строка - Представление значения.
//
Функция ПредставлениеЗначения(ТипЗначенияПоказателя, Значение)
	
	ПредставлениеЗначения = "";
	
	Если ТипЗначенияПоказателя = Перечисления.ТипыЗначенийПоказателейПроцессов.Число Тогда
		ОтображаемоеЧисло = Окр(Значение, 2);
		ПредставлениеЗначения = Формат(ОтображаемоеЧисло, "ЧН=0;");
	ИначеЕсли ТипЗначенияПоказателя = Перечисления.ТипыЗначенийПоказателейПроцессов.Длительность Тогда
		ПредставлениеЗначения = ДлительностьСтрокой(Значение / 86400); // 86400 - число секунд в дне
	ИначеЕсли ТипЗначенияПоказателя = Перечисления.ТипыЗначенийПоказателейПроцессов.Процент Тогда
		ОтображаемоеЧисло = Окр(Значение, 2);
		ПредставлениеЗначения = СтрШаблон(НСтр("ru = '%1%%'; en = '%1%%'"), Формат(ОтображаемоеЧисло * 100, "ЧН=0; ЧГ=")); 
	Иначе
		ПредставлениеЗначения = Строка(Значение);
	КонецЕсли;
	
	Возврат ПредставлениеЗначения;
	
КонецФункции

// Обновляет реквизиты динамики показателя менеджера записи.
//
// Параметры:
//  ТипЗначенияПоказателя - ПеречислениеСсылка.ТипыЗначенийПоказателейПроцессов - Тип значения показателя.
//  МенеджерЗаписи - РегистрСведенийМенеджерЗаписи.ЗначенияПоказателейПроцессов - Мендежер записи.
//  ПредыдущееЗначение -  - Предыдущее значение показателя процесса.
//
Процедура ОбновитьДинамикуПоказателя(ТипЗначенияПоказателя, МенеджерЗаписи, ПредыдущееЗначение)
	
	Изменение = МенеджерЗаписи.Значение - ПредыдущееЗначение;
	
	МенеджерЗаписи.ИзменениеАбсолютное = ?(Изменение >= 0, Изменение, -Изменение);
	МенеджерЗаписи.ПредставлениеИзменения = ПредставлениеЗначения(ТипЗначенияПоказателя, МенеджерЗаписи.ИзменениеАбсолютное);
	Если ПредыдущееЗначение = 0 Тогда
		МенеджерЗаписи.ИзменениеПроцент = ?(МенеджерЗаписи.Значение = 0, 0, 999.99);
	Иначе
		МенеджерЗаписи.ИзменениеПроцент = МенеджерЗаписи.ИзменениеАбсолютное / ПредыдущееЗначение * 100;
	КонецЕсли;
	Если Изменение > 0 Тогда
		МенеджерЗаписи.ДинамикаПоказателя = 1;
	ИначеЕсли Изменение < 0 Тогда
		МенеджерЗаписи.ДинамикаПоказателя = -1;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
