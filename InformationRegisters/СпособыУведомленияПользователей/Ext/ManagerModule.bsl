#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Формирует данные о способах уведомления всех пользователей.
// 
// Возвращаемое значение:
//  ТаблицаЗначений - Данные способов уведомлений.
//
Функция ПолучитьВсеСпособыУведомления() Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	Пользователи.Ссылка КАК Пользователь,
		|	СпособыУведомленияПользователей.СпособУведомления КАК СпособУведомления,
		|	СпособыУведомленияПользователей.ВидКонтактнойИнформации КАК ВидКонтактнойИнформации,
		|	СпособыУведомленияПользователей.Использовать КАК Использовать
		|ПОМЕСТИТЬ СпособыУведомленияВсеПользователи
		|ИЗ
		|	Справочник.Пользователи КАК Пользователи
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СпособыУведомленияПользователей КАК СпособыУведомленияПользователей
		|		ПО (ИСТИНА)
		|ГДЕ
		|	СпособыУведомленияПользователей.Пользователь = ЗНАЧЕНИЕ(Справочник.РабочиеГруппы.ВсеПользователи)
		|	И СпособыУведомленияПользователей.Использовать = ИСТИНА
		|	И Пользователи.ПометкаУдаления = ЛОЖЬ
		|	И Пользователи.Недействителен = ЛОЖЬ
		|	И Пользователи.Служебный = ЛОЖЬ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СпособыУведомленияВсеПользователи.Пользователь КАК Пользователь,
		|	СпособыУведомленияВсеПользователи.СпособУведомления КАК СпособУведомления,
		|	СпособыУведомленияВсеПользователи.ВидКонтактнойИнформации КАК ВидКонтактнойИнформации,
		|	ЕСТЬNULL(ПользователиКонтактнаяИнформация.Представление, """") КАК ДанныеСпособа,
		|	СпособыУведомленияВсеПользователи.Использовать КАК Использовать
		|ПОМЕСТИТЬ КонтактнаяИнформацияПользователей
		|ИЗ
		|	СпособыУведомленияВсеПользователи КАК СпособыУведомленияВсеПользователи
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Пользователи.КонтактнаяИнформация КАК ПользователиКонтактнаяИнформация
		|		ПО СпособыУведомленияВсеПользователи.Пользователь = ПользователиКонтактнаяИнформация.Ссылка
		|			И СпособыУведомленияВсеПользователи.ВидКонтактнойИнформации = ПользователиКонтактнаяИнформация.Вид
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	КонтактнаяИнформацияПользователей.Пользователь КАК Пользователь,
		|	КонтактнаяИнформацияПользователей.СпособУведомления КАК СпособУведомления,
		|	КонтактнаяИнформацияПользователей.ВидКонтактнойИнформации КАК ВидКонтактнойИнформации,
		|	КонтактнаяИнформацияПользователей.ДанныеСпособа КАК ДанныеСпособа,
		|	ЕСТЬNULL(СпособыУведомленияПользователей.Использовать, ИСТИНА) КАК Использовать,
		|	ПРЕДСТАВЛЕНИЕ(КонтактнаяИнформацияПользователей.ДанныеСпособа) КАК Представление
		|ИЗ
		|	КонтактнаяИнформацияПользователей КАК КонтактнаяИнформацияПользователей
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СпособыУведомленияПользователей КАК СпособыУведомленияПользователей
		|		ПО КонтактнаяИнформацияПользователей.Пользователь = СпособыУведомленияПользователей.Пользователь
		|			И КонтактнаяИнформацияПользователей.СпособУведомления = СпособыУведомленияПользователей.СпособУведомления
		|			И КонтактнаяИнформацияПользователей.ДанныеСпособа = СпособыУведомленияПользователей.ДанныеСпособа
		|			И (СпособыУведомленияПользователей.Использовать = ЛОЖЬ)
		|ГДЕ
		|	СпособыУведомленияПользователей.Использовать ЕСТЬ NULL
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	СпособыУведомленияПользователей.Пользователь,
		|	СпособыУведомленияПользователей.СпособУведомления,
		|	СпособыУведомленияПользователей.ВидКонтактнойИнформации,
		|	СпособыУведомленияПользователей.ДанныеСпособа,
		|	СпособыУведомленияПользователей.Использовать,
		|	ПРЕДСТАВЛЕНИЕ(СпособыУведомленияПользователей.ДанныеСпособа)
		|ИЗ
		|	РегистрСведений.СпособыУведомленияПользователей КАК СпособыУведомленияПользователей
		|ГДЕ
		|	СпособыУведомленияПользователей.Пользователь ССЫЛКА Справочник.Пользователи
		|	И СпособыУведомленияПользователей.ВидКонтактнойИнформации = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ПустаяСсылка)
		|	И СпособыУведомленияПользователей.Использовать = ИСТИНА
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	СпособыУведомленияПользователей.Пользователь,
		|	СпособыУведомленияПользователей.СпособУведомления,
		|	СпособыУведомленияПользователей.ВидКонтактнойИнформации,
		|	СпособыУведомленияПользователей.ДанныеСпособа,
		|	СпособыУведомленияПользователей.Использовать,
		|	ПРЕДСТАВЛЕНИЕ(СпособыУведомленияПользователей.ВидКонтактнойИнформации)
		|ИЗ
		|	РегистрСведений.СпособыУведомленияПользователей КАК СпособыУведомленияПользователей
		|ГДЕ
		|	СпособыУведомленияПользователей.Пользователь = ЗНАЧЕНИЕ(Справочник.РабочиеГруппы.ВсеПользователи)
		|	И СпособыУведомленияПользователей.Использовать = ИСТИНА";
	
	СпособыУведомления = Запрос.Выполнить().Выгрузить();
	
	Возврат СпособыУведомления;
	
КонецФункции

// Возвращает данные способа уведомления пользователя.
//
// Параметры:
//  Пользователь - СправочникСсылка.Пользователи - Пользователь.
// 
// Возвращаемое значение:
//  Массив - Данные способа уведомления.
//
Функция ПолучитьСпособУведомленияПользователя(Пользователь, СпособУведомления) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	Пользователи.Ссылка КАК Пользователь,
		|	СпособыУведомленияПользователей.СпособУведомления КАК СпособУведомления,
		|	СпособыУведомленияПользователей.ВидКонтактнойИнформации КАК ВидКонтактнойИнформации
		|ПОМЕСТИТЬ СпособыУведомленияВсеПользователи
		|ИЗ
		|	Справочник.Пользователи КАК Пользователи
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СпособыУведомленияПользователей КАК СпособыУведомленияПользователей
		|		ПО (ИСТИНА)
		|ГДЕ
		|	Пользователи.Ссылка = &Пользователь
		|	И СпособыУведомленияПользователей.Пользователь = ЗНАЧЕНИЕ(Справочник.РабочиеГруппы.ВсеПользователи)
		|	И СпособыУведомленияПользователей.СпособУведомления = &СпособУведомления
		|	И СпособыУведомленияПользователей.Использовать = ИСТИНА
		|	И Пользователи.ПометкаУдаления = ЛОЖЬ
		|	И Пользователи.Недействителен = ЛОЖЬ
		|	И Пользователи.Служебный = ЛОЖЬ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СпособыУведомленияВсеПользователи.Пользователь КАК Пользователь,
		|	СпособыУведомленияВсеПользователи.СпособУведомления КАК СпособУведомления,
		|	ПользователиКонтактнаяИнформация.Представление КАК ДанныеСпособа
		|ПОМЕСТИТЬ КонтактнаяИнформацияПользователей
		|ИЗ
		|	СпособыУведомленияВсеПользователи КАК СпособыУведомленияВсеПользователи
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Пользователи.КонтактнаяИнформация КАК ПользователиКонтактнаяИнформация
		|		ПО СпособыУведомленияВсеПользователи.Пользователь = ПользователиКонтактнаяИнформация.Ссылка
		|			И СпособыУведомленияВсеПользователи.ВидКонтактнойИнформации = ПользователиКонтактнаяИнформация.Вид
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	КонтактнаяИнформацияПользователей.ДанныеСпособа КАК ДанныеСпособа
		|ИЗ
		|	КонтактнаяИнформацияПользователей КАК КонтактнаяИнформацияПользователей
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СпособыУведомленияПользователей КАК СпособыУведомленияПользователей
		|		ПО КонтактнаяИнформацияПользователей.Пользователь = СпособыУведомленияПользователей.Пользователь
		|			И КонтактнаяИнформацияПользователей.СпособУведомления = СпособыУведомленияПользователей.СпособУведомления
		|			И КонтактнаяИнформацияПользователей.ДанныеСпособа = СпособыУведомленияПользователей.ДанныеСпособа
		|			И (СпособыУведомленияПользователей.Использовать = ЛОЖЬ)
		|ГДЕ
		|	СпособыУведомленияПользователей.Использовать ЕСТЬ NULL
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	СпособыУведомленияПользователей.ДанныеСпособа
		|ИЗ
		|	РегистрСведений.СпособыУведомленияПользователей КАК СпособыУведомленияПользователей
		|ГДЕ
		|	СпособыУведомленияПользователей.Пользователь = &Пользователь
		|	И СпособыУведомленияПользователей.СпособУведомления = &СпособУведомления
		|	И СпособыУведомленияПользователей.ВидКонтактнойИнформации = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ПустаяСсылка)
		|	И СпособыУведомленияПользователей.Использовать = ИСТИНА";
	Запрос.УстановитьПараметр("Пользователь", Пользователь);
	Запрос.УстановитьПараметр("СпособУведомления", СпособУведомления);
	
	СпособыУведомления = Новый Массив;
	СпособыУведомленияНРег = Новый Массив;
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Если СпособУведомления = Перечисления.СпособыУведомления.ПоПочте Тогда
			Если РаботаСУведомлениямиКлиентСервер.ЭтоКорректныйСпособУведомленияПоПочте(Выборка.ДанныеСпособа)
				И СпособыУведомленияНРег.Найти(НРег(Выборка.ДанныеСпособа)) = Неопределено Тогда
				СпособыУведомления.Добавить(Выборка.ДанныеСпособа);
				СпособыУведомленияНРег.Добавить(НРег(Выборка.ДанныеСпособа));
			КонецЕсли;
		Иначе
			Если РаботаСУведомлениямиКлиентСервер.ЭтоКорректныйСпособУведомленияПоSMS(Выборка.ДанныеСпособа) Тогда
				ДанныеСпособа = РаботаСУведомлениямиКлиентСервер.НормализоватьНомерТелефона(Выборка.ДанныеСпособа);
				СпособыУведомления.Добавить(ДанныеСпособа);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Возврат СпособыУведомления;
	
КонецФункции

// Формирует список способов уведомлений всех пользователей.
//
// Возвращаемое значение:
//  СписокЗначений - Способы уведомления всех пользователей.
//
Функция ПолучитьСпособыУведомленияВсехПользователей() Экспорт
	
	СпособыУведомления = Новый СписокЗначений;
	
	// Все виды контактной информации.
	Пользователь = Справочники.Пользователи.ПустаяСсылка();
	ВидыКонтактнойИнформация = УправлениеКонтактнойИнформацией.ВидыКонтактнойИнформацияОбъекта(Пользователь);
	Для Каждого ВидКонтактнойИнформации Из ВидыКонтактнойИнформация Цикл
		Если ВидКонтактнойИнформации.Тип <> Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты
			И ВидКонтактнойИнформации.Тип <> Перечисления.ТипыКонтактнойИнформации.Телефон Тогда
			Продолжить;
		КонецЕсли;
		СпособыУведомления.Добавить(
			ВидКонтактнойИнформации.Ссылка,
			ВидКонтактнойИнформации.Представление);
	КонецЦикла;
	
	// Виды контактной информации, по которым уведомляем всех пользователей.
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	СпособыУведомленияПользователей.ВидКонтактнойИнформации КАК ВидКонтактнойИнформации
		|ИЗ
		|	РегистрСведений.СпособыУведомленияПользователей КАК СпособыУведомленияПользователей
		|ГДЕ
		|	СпособыУведомленияПользователей.Пользователь = ЗНАЧЕНИЕ(Справочник.РабочиеГруппы.ВсеПользователи)
		|	И СпособыУведомленияПользователей.Использовать = ИСТИНА");
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		СтрокаСпособа = СпособыУведомления.НайтиПоЗначению(Выборка.ВидКонтактнойИнформации);
		СтрокаСпособа.Пометка = Истина;
	КонецЦикла;
	
	СпособыУведомления.СортироватьПоПредставлению(НаправлениеСортировки.Возр);
	
	Возврат СпособыУведомления;
	
КонецФункции

// Формирует данные о способах уведомления пользователь.
//
// Параметры:
//  Пользователь - СправочникСсылка.Пользователи - Пользователь.
// 
// Возвращаемое значение:
//  ТаблицаЗначений - Данные способов уведомлений.
//
Функция ПолучитьСпособыУведомленияПользователя(Пользователь) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	Пользователи.Ссылка КАК Пользователь,
		|	СпособыУведомленияПользователей.СпособУведомления КАК СпособУведомления,
		|	СпособыУведомленияПользователей.ВидКонтактнойИнформации КАК ВидКонтактнойИнформации,
		|	СпособыУведомленияПользователей.Использовать КАК Использовать
		|ПОМЕСТИТЬ СпособыУведомленияВсеПользователи
		|ИЗ
		|	Справочник.Пользователи КАК Пользователи
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СпособыУведомленияПользователей КАК СпособыУведомленияПользователей
		|		ПО (ИСТИНА)
		|ГДЕ
		|	Пользователи.Ссылка = &Пользователь
		|	И СпособыУведомленияПользователей.Пользователь = ЗНАЧЕНИЕ(Справочник.РабочиеГруппы.ВсеПользователи)
		|	И СпособыУведомленияПользователей.Использовать = ИСТИНА
		|	И Пользователи.ПометкаУдаления = ЛОЖЬ
		|	И Пользователи.Недействителен = ЛОЖЬ
		|	И Пользователи.Служебный = ЛОЖЬ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СпособыУведомленияВсеПользователи.Пользователь КАК Пользователь,
		|	СпособыУведомленияВсеПользователи.СпособУведомления КАК СпособУведомления,
		|	СпособыУведомленияВсеПользователи.ВидКонтактнойИнформации КАК ВидКонтактнойИнформации,
		|	ЕСТЬNULL(ПользователиКонтактнаяИнформация.Представление, """") КАК ДанныеСпособа,
		|	СпособыУведомленияВсеПользователи.Использовать КАК Использовать
		|ПОМЕСТИТЬ КонтактнаяИнформацияПользователей
		|ИЗ
		|	СпособыУведомленияВсеПользователи КАК СпособыУведомленияВсеПользователи
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Пользователи.КонтактнаяИнформация КАК ПользователиКонтактнаяИнформация
		|		ПО СпособыУведомленияВсеПользователи.Пользователь = ПользователиКонтактнаяИнформация.Ссылка
		|			И СпособыУведомленияВсеПользователи.ВидКонтактнойИнформации = ПользователиКонтактнаяИнформация.Вид
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	КонтактнаяИнформацияПользователей.СпособУведомления КАК СпособУведомления,
		|	КонтактнаяИнформацияПользователей.ВидКонтактнойИнформации КАК ВидКонтактнойИнформации,
		|	КонтактнаяИнформацияПользователей.ДанныеСпособа КАК ДанныеСпособа,
		|	ЕСТЬNULL(СпособыУведомленияПользователей.Использовать, ИСТИНА) КАК Использовать,
		|	ПРЕДСТАВЛЕНИЕ(КонтактнаяИнформацияПользователей.ДанныеСпособа) КАК Представление
		|ИЗ
		|	КонтактнаяИнформацияПользователей КАК КонтактнаяИнформацияПользователей
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СпособыУведомленияПользователей КАК СпособыУведомленияПользователей
		|		ПО КонтактнаяИнформацияПользователей.Пользователь = СпособыУведомленияПользователей.Пользователь
		|			И КонтактнаяИнформацияПользователей.СпособУведомления = СпособыУведомленияПользователей.СпособУведомления
		|			И КонтактнаяИнформацияПользователей.ДанныеСпособа = СпособыУведомленияПользователей.ДанныеСпособа
		|			И (СпособыУведомленияПользователей.Использовать = ЛОЖЬ)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	СпособыУведомленияПользователей.СпособУведомления,
		|	СпособыУведомленияПользователей.ВидКонтактнойИнформации,
		|	СпособыУведомленияПользователей.ДанныеСпособа,
		|	СпособыУведомленияПользователей.Использовать,
		|	ПРЕДСТАВЛЕНИЕ(СпособыУведомленияПользователей.ДанныеСпособа)
		|ИЗ
		|	РегистрСведений.СпособыУведомленияПользователей КАК СпособыУведомленияПользователей
		|ГДЕ
		|	СпособыУведомленияПользователей.Пользователь = &Пользователь
		|	И СпособыУведомленияПользователей.ВидКонтактнойИнформации = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ПустаяСсылка)
		|	И СпособыУведомленияПользователей.Использовать = ИСТИНА";
	Запрос.УстановитьПараметр("Пользователь", Пользователь);
	
	СпособыУведомления = Запрос.Выполнить().Выгрузить();
	
	Возврат СпособыУведомления;
	
КонецФункции

// Удаляет способ уведомления пользователя.
//
// Параметры:
//  Пользователь - СправочникСсылка.Пользователи - Пользователь.
//  СпособУведомления - ПеречислениеСсылка.СпособыУведомления - Способ уведомления.
//  ВидКонтактнойИнформации - СправочникСсылка.ВидыКонтактнойИнформации - Вид контактной информации.
//  ДанныеСпособа - Строка - Данные способа.
//
Процедура УдалитьСпособУведомленияПользователя(Пользователь, СпособУведомления, ВидКонтактнойИнформации, ДанныеСпособа) Экспорт
	
	Если ЗначениеЗаполнено(ВидКонтактнойИнформации) Тогда
		// Если указан вид контактной информации - значит нужно создать отказ от способа уведомления по виду контактной информации.
		УстановитьСпособУведомления(Пользователь, СпособУведомления, ДанныеСпособа, ВидКонтактнойИнформации, Ложь);
	Иначе
		// Если не указан вид контактной информации - значит нужно удалить способ уведомления по произвольным данным.
		УдалитьСпособУведомления(Пользователь, СпособУведомления, ДанныеСпособа, ВидКонтактнойИнформации);
	КонецЕсли;
	
КонецПроцедуры

// Удаляет способ уведомления всех пользователей.
//
// Параметры:
//  ВидКонтактнойИнформации - СправочникСсылка.ВидыКонтактнойИнформации - Вид контактной информации.
//
Процедура УдалитьСпособУведомленияВсехПользователей(ВидКонтактнойИнформации) Экспорт
	
	Пользователь = Справочники.РабочиеГруппы.ВсеПользователи;
	Если ВидКонтактнойИнформации.Тип = Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты Тогда
		СпособУведомления = Перечисления.СпособыУведомления.ПоПочте;
	ИначеЕсли ВидКонтактнойИнформации.Тип = Перечисления.ТипыКонтактнойИнформации.Телефон Тогда
		СпособУведомления = Перечисления.СпособыУведомления.ПоSMS;
	Иначе
		ТекстОшибки = СтрШаблон(НСтр("ru = 'Тип контактной информации %1 не подходит для уведомления всех пользователей.'; en = 'Contact information type %1 is not suitable for all users.'"), ВидКонтактнойИнформации.Тип);
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;
	ДанныеСпособа = "";
	
	УдалитьСпособУведомления(Пользователь, СпособУведомления, ДанныеСпособа, ВидКонтактнойИнформации);
	
КонецПроцедуры

// Устанавливает способ уведомления пользователя.
//
// Параметры:
//  Пользователь - СправочникСсылка.Пользователи - Пользователь.
//  СпособУведомления - ПеречислениеСсылка.СпособыУведомления - Способ уведомления.
//  ВидКонтактнойИнформации	 - СправочникСсылка.ВидыКонтактнойИнформации - Вид контактной информации.
//  ДанныеСпособа - Строка - Данные способа.
//
Процедура УстановитьСпособУведомленияПользователя(Пользователь, СпособУведомления, ВидКонтактнойИнформации, ДанныеСпособа) Экспорт
	
	Если ЗначениеЗаполнено(ВидКонтактнойИнформации) Тогда
		// Если указан вид контактной информации - значит нужно удалить отказ от способа уведомления по виду контактной информации.
		УдалитьСпособУведомления(Пользователь, СпособУведомления, ДанныеСпособа, ВидКонтактнойИнформации);
	Иначе
		// Если не указан вид контактной информации - значит нужно добавить способ уведомления по произвольным данным.
		УстановитьСпособУведомления(Пользователь, СпособУведомления, ДанныеСпособа, ВидКонтактнойИнформации, Истина);
	КонецЕсли;
	
КонецПроцедуры

// Устанавливает способ уведомления всех пользователей.
//
// Параметры:
//  ВидКонтактнойИнформации - СправочникСсылка.ВидыКонтактнойИнформации - Вид контактной информации.
//
Процедура УстановитьСпособУведомленияВсехПользователей(ВидКонтактнойИнформации) Экспорт
	
	Пользователь = Справочники.РабочиеГруппы.ВсеПользователи;
	Если ВидКонтактнойИнформации.Тип = Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты Тогда
		СпособУведомления = Перечисления.СпособыУведомления.ПоПочте;
	ИначеЕсли ВидКонтактнойИнформации.Тип = Перечисления.ТипыКонтактнойИнформации.Телефон Тогда
		СпособУведомления = Перечисления.СпособыУведомления.ПоSMS;
	Иначе
		ТекстОшибки = СтрШаблон(НСтр("ru = 'Тип контактной информации %1 не подходит для уведомления всех пользователей.'; en = 'Contact information type %1 is not suitable for all users.'"), ВидКонтактнойИнформации.Тип);
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;
	ДанныеСпособа = "";
	
	УстановитьСпособУведомления(Пользователь, СпособУведомления, ДанныеСпособа, ВидКонтактнойИнформации, Истина);
	
КонецПроцедуры

// Устанавливает способы уведомлений всех пользователей.
//
// Параметры:
//  СпособыУведомления - СписокЗначений - Способы уведомления всех пользователей.
//
Процедура УстановитьСпособыУведомленияВсехПользователей(СпособыУведомления) Экспорт
	
	НачатьТранзакцию();
	Попытка
		
		Для Каждого СпособУведомления Из СпособыУведомления Цикл
			Если СпособУведомления.Пометка Тогда
				УстановитьСпособУведомленияВсехПользователей(СпособУведомления.Значение);
			Иначе
				УдалитьСпособУведомленияВсехПользователей(СпособУведомления.Значение);
			КонецЕсли;
		КонецЦикла;
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		ОтменитьТранзакцию();
		ВызватьИсключение;
	КонецПопытки;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Удаляет способ уведомления.
//
// Параметры:
//  Пользователь - СправочникСсылка.РабочиеГруппы, СправочникСсылка.Пользователи - Пользователь.
//  СпособУведомления - ПеречислениеСсылка.СпособыУведомления - Способ уведомления.
//  ДанныеСпособа - Строка - Данные способа уведомления.
//  ВидКонтактнойИнформации - СправочникСсылка.ВидыКонтактнойИнформации - Вид контактной информации.
//
Процедура УдалитьСпособУведомления(Пользователь, СпособУведомления, ДанныеСпособа, ВидКонтактнойИнформации)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запись = СоздатьМенеджерЗаписи();
	Запись.Пользователь = Пользователь;
	Запись.СпособУведомления = СпособУведомления;
	Запись.ДанныеСпособа = ДанныеСпособа;
	Запись.ВидКонтактнойИнформации = ВидКонтактнойИнформации;
	Запись.Удалить();
	
КонецПроцедуры

// Устанавливает способ уведомления.
//
// Параметры:
//  Пользователь - СправочникСсылка.РабочиеГруппы, СправочникСсылка.Пользователи - Пользователь.
//  СпособУведомления - ПеречислениеСсылка.СпособыУведомления - Способ уведомления.
//  ДанныеСпособа - Строка - Данные способа уведомления.
//  ВидКонтактнойИнформации - СправочникСсылка.ВидыКонтактнойИнформации - Вид контактной информации.
//  Использовать - Булево - Использовать.
//
Процедура УстановитьСпособУведомления(Пользователь, СпособУведомления, ДанныеСпособа, ВидКонтактнойИнформации, Использовать)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запись = СоздатьМенеджерЗаписи();
	Запись.Пользователь = Пользователь;
	Запись.СпособУведомления = СпособУведомления;
	Запись.ДанныеСпособа = ДанныеСпособа;
	Запись.ВидКонтактнойИнформации = ВидКонтактнойИнформации;
	Запись.Использовать = Использовать;
	Запись.Записать();
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
