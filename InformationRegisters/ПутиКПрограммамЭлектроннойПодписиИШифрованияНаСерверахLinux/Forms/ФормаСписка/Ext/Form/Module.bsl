#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Отбор.Свойство("Программа") 
	   И ЗначениеЗаполнено(Параметры.Отбор.Программа) Тогда
		
		Программа = Параметры.Отбор.Программа;
		
		АвтоЗаголовок = Ложь;
		Заголовок = СтрШаблон(НСтр("ru = 'Пути к программе %1 на серверах Linux'; en = 'Paths to program %1 on Linux servers'"), Программа);
		
		Элементы.СписокПрограмма.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокПередНачаломИзменения(Элемент, Отказ)
	
	Если Не ЗначениеЗаполнено(Программа) Тогда
		Возврат;
	КонецЕсли;
	
	Отказ = Истина;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Ключ", Элементы.Список.ТекущаяСтрока);
	ПараметрыФормы.Вставить("ЗначенияЗаполнения", Новый Структура("Программа", Программа));
	
	ОткрытьФорму("РегистрСведений.ПутиКПрограммамЭлектроннойПодписиИШифрованияНаСерверахLinux.ФормаЗаписи",
		ПараметрыФормы, Элементы.Список, ,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПередУдалением(Элемент, Отказ)
	
	УдаляемаяСтрока          = Элементы.Список.ТекущаяСтрока;
	УдаляемаяСтрокаПрограмма = Элементы.Список.ТекущиеДанные.Программа;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПослеУдаления(Элемент)
	
	Оповестить("Запись_ПутиКПрограммамЭлектроннойПодписиИШифрованияНаСерверахLinux",
		Новый Структура("Программа", УдаляемаяСтрокаПрограмма), УдаляемаяСтрока);
	
КонецПроцедуры

#КонецОбласти
