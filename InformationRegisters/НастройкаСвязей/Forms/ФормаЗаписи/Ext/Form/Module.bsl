
//////////////////////////////////////////////////////////////////////////////// 
// ПРОЦЕДУРЫ И ФУНКЦИИ 
// 

&НаКлиентеНаСервереБезКонтекста
Функция ПолучитьТип(Значение)
	
	Если ТипЗнч(Значение) = Тип("Строка") Тогда 
		ИмяТипа = "Строка";
	ИначеЕсли ТипЗнч(Значение) = Тип("СправочникСсылка.ВидыВходящихДокументов") Тогда 
		ИмяТипа = "СправочникСсылка.ВидыВходящихДокументов";
	ИначеЕсли ТипЗнч(Значение) = Тип("СправочникСсылка.ВидыИсходящихДокументов") Тогда 
		ИмяТипа = "СправочникСсылка.ВидыИсходящихДокументов";
	ИначеЕсли ТипЗнч(Значение) = Тип("СправочникСсылка.ВидыВнутреннихДокументов") Тогда 
		ИмяТипа = "СправочникСсылка.ВидыВнутреннихДокументов";
	ИначеЕсли ТипЗнч(Значение) = Тип("СправочникСсылка.Файлы") Тогда
		ИмяТипа = "СправочникСсылка.Файлы";
	ИначеЕсли ТипЗнч(Значение) = Тип("СправочникСсылка.Мероприятия") Тогда 
		ИмяТипа = "СправочникСсылка.Мероприятия";
	ИначеЕсли ТипЗнч(Значение) = Тип("СправочникСсылка.Проекты") Тогда 
		ИмяТипа = "СправочникСсылка.Проекты";
	ИначеЕсли ТипЗнч(Значение) = Тип("ДокументСсылка.ВходящееСообщениеСВД") Тогда 
		ИмяТипа = "ДокументСсылка.ВходящееСообщениеСВД";
	ИначеЕсли ТипЗнч(Значение) = Тип("ДокументСсылка.ИсходящееСообщениеСВД") Тогда 
		ИмяТипа = "ДокументСсылка.ИсходящееСообщениеСВД";	
	ИначеЕсли ВстроеннаяПочтаКлиентСервер.ЭтоВходящееПисьмо(Значение) Тогда
		ИмяТипа = "ДокументСсылка.ВходящееПисьмо";
	ИначеЕсли ВстроеннаяПочтаКлиентСервер.ЭтоИсходящееПисьмо(Значение) Тогда
		ИмяТипа = "ДокументСсылка.ИсходящееПисьмо";
	Иначе	
		ИмяТипа = "";
	КонецЕсли;
	
	Возврат ИмяТипа;
	
КонецФункции

&НаСервере
Функция НайтиЗаписьОбратнойСвязи()
	
	Если Не ЗначениеЗаполнено(Запись.ТипОбратнойСвязи) Тогда 
		Возврат Неопределено;
	КонецЕсли;	
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ИСТИНА 
	|ИЗ
	|	РегистрСведений.НастройкаСвязей КАК НастройкаСвязей
	|ГДЕ
	|	НастройкаСвязей.ТипСвязи = &ТипСвязи
	|	И НастройкаСвязей.СсылкаИз = &СсылкаИз
	|	И НастройкаСвязей.СсылкаНа = &СсылкаНа");
	
	Запрос.УстановитьПараметр("ТипСвязи", Запись.ТипОбратнойСвязи);
	Запрос.УстановитьПараметр("СсылкаИз", Запись.СсылкаНа);
	Запрос.УстановитьПараметр("СсылкаНа", Запись.СсылкаИз);
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда 
		Возврат Неопределено;
	КонецЕсли;
	
	ЗначенияКлюча = Новый Структура("ТипСвязи, СсылкаИз, СсылкаНа",
		Запись.ТипОбратнойСвязи,
		Запись.СсылкаНа,
		Запись.СсылкаИз);
			
	Возврат РегистрыСведений.НастройкаСвязей.СоздатьКлючЗаписи(ЗначенияКлюча);
	
КонецФункции


//////////////////////////////////////////////////////////////////////////////// 
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ
// 

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаписьОбратнойСвязи = Неопределено;
	
	Если ЗначениеЗаполнено(Параметры.Ключ) Тогда
		ЗаписьОбратнойСвязи = НайтиЗаписьОбратнойСвязи();
	ИначеЕсли Не ЗначениеЗаполнено(Параметры.ЗначениеКопирования) Тогда 
		Если Параметры.Свойство("СсылкаИз") Тогда 
			Запись.СсылкаИз = Параметры.СсылкаИз;
		КонецЕсли;
		Если Параметры.Свойство("СсылкаНа") Тогда 
			Запись.СсылкаНа = Параметры.СсылкаНа;
		КонецЕсли;
	ИначеЕсли ЗначениеЗаполнено(Параметры.ЗначениеКопирования) Тогда 	
		Запись.Предопределенная = Ложь;
	КонецЕсли;
	
	ТипСсылкаИз = ПолучитьТип(Запись.СсылкаИз);
	Если Не ЗначениеЗаполнено(ТипСсылкаИз) Тогда 
		Элементы.СсылкаИз.ТолькоПросмотр = Истина;
	ИначеЕсли ТипСсылкаИз = "СправочникСсылка.Мероприятия" 
		Или ТипСсылкаИз = "СправочникСсылка.Файлы" 
		Или ТипСсылкаИз = "СправочникСсылка.Проекты"
		Или ТипСсылкаИз = "ДокументСсылка.ВходящееСообщениеСВД"
		Или ТипСсылкаИз = "ДокументСсылка.ИсходящееСообщениеСВД"
		Или ТипСсылкаИз = "ДокументСсылка.ВходящееПисьмо"
		Или ТипСсылкаИз = "ДокументСсылка.ИсходящееПисьмо" Тогда 
		Элементы.СсылкаИз.ТолькоПросмотр = Истина;
	КонецЕсли;	
	
	ТипСсылкаНа = ПолучитьТип(Запись.СсылкаНа);
	Если Не ЗначениеЗаполнено(ТипСсылкаНа) Тогда 
		Элементы.СсылкаНа.ТолькоПросмотр = Истина;
	ИначеЕсли ТипСсылкаНа = "СправочникСсылка.Мероприятия" 
		Или ТипСсылкаНа = "СправочникСсылка.Файлы"
		Или ТипСсылкаНа = "СправочникСсылка.Проекты"
		Или ТипСсылкаНа = "ДокументСсылка.ВходящееСообщениеСВД"
		Или ТипСсылкаНа = "ДокументСсылка.ИсходящееСообщениеСВД"
		Или ТипСсылкаНа = "ДокументСсылка.ВходящееПисьмо"
		Или ТипСсылкаНа = "ДокументСсылка.ИсходящееПисьмо" Тогда 	
		Элементы.СсылкаНа.ТолькоПросмотр = Истина;
	ИначеЕсли ТипСсылкаНа = "Строка" Тогда 
		Элементы.СсылкаНа.ТолькоПросмотр = Истина;
		Элементы.ТипОбратнойСвязи.ТолькоПросмотр = Истина;
		Элементы.ХарактерОбратнойСвязи.ТолькоПросмотр = Истина;
	КонецЕсли;
	
	Если Запись.Предопределенная Тогда 
		ТолькоПросмотр = Истина;
		Элементы.Декорации.ТекущаяСтраница = Элементы.ПредопределеннаяДекорация;
	Иначе 	
		Элементы.Декорации.ТекущаяСтраница = Элементы.ПустаяДекорация;
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ОбязательнаяНачальноеЗначение = ТекущийОбъект.Обязательная;
	
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если ЗаписьОбратнойСвязи = Неопределено Тогда 
		Если ЗначениеЗаполнено(Запись.ТипОбратнойСвязи) Тогда 
			МенеджерЗаписи = РегистрыСведений.НастройкаСвязей.СоздатьМенеджерЗаписи();
			МенеджерЗаписи.ТипСвязи = Запись.ТипОбратнойСвязи;
			МенеджерЗаписи.СсылкаИз = Запись.СсылкаНа;
			МенеджерЗаписи.СсылкаНа = Запись.СсылкаИз;
			МенеджерЗаписи.ХарактерСвязи = Запись.ХарактерОбратнойСвязи;
			МенеджерЗаписи.ТипОбратнойСвязи = Запись.ТипСвязи;
			МенеджерЗаписи.ХарактерОбратнойСвязи = Запись.ХарактерСвязи;
			МенеджерЗаписи.Записать();
			
			ЗаписьОбратнойСвязи = РегистрыСведений.НастройкаСвязей.СоздатьКлючЗаписи(
				Новый Структура("ТипСвязи, СсылкаИз, СсылкаНа", МенеджерЗаписи.ТипСвязи, МенеджерЗаписи.СсылкаИз, МенеджерЗаписи.СсылкаНа));
		КонецЕсли;	
	Иначе	
		Если ЗначениеЗаполнено(Запись.ТипОбратнойСвязи) Тогда 
			МенеджерЗаписи = РегистрыСведений.НастройкаСвязей.СоздатьМенеджерЗаписи();
			МенеджерЗаписи.ТипСвязи = ЗаписьОбратнойСвязи.ТипСвязи;
			МенеджерЗаписи.СсылкаИз = ЗаписьОбратнойСвязи.СсылкаИз;
			МенеджерЗаписи.СсылкаНа = ЗаписьОбратнойСвязи.СсылкаНа;
			МенеджерЗаписи.Прочитать();
			
			МенеджерЗаписи.ТипСвязи = Запись.ТипОбратнойСвязи;
			МенеджерЗаписи.СсылкаИз = Запись.СсылкаНа;
			МенеджерЗаписи.СсылкаНа = Запись.СсылкаИз;
			МенеджерЗаписи.ХарактерСвязи = Запись.ХарактерОбратнойСвязи;
			МенеджерЗаписи.ТипОбратнойСвязи = Запись.ТипСвязи;
			МенеджерЗаписи.ХарактерОбратнойСвязи = Запись.ХарактерСвязи;
			МенеджерЗаписи.Записать();
			
			ЗаписьОбратнойСвязи = РегистрыСведений.НастройкаСвязей.СоздатьКлючЗаписи(
				Новый Структура("ТипСвязи, СсылкаИз, СсылкаНа", МенеджерЗаписи.ТипСвязи, МенеджерЗаписи.СсылкаИз, МенеджерЗаписи.СсылкаНа));
		Иначе	
			МенеджерЗаписи = РегистрыСведений.НастройкаСвязей.СоздатьМенеджерЗаписи();
			МенеджерЗаписи.ТипСвязи = ЗаписьОбратнойСвязи.ТипСвязи;
			МенеджерЗаписи.СсылкаИз = ЗаписьОбратнойСвязи.СсылкаИз;
			МенеджерЗаписи.СсылкаНа = ЗаписьОбратнойСвязи.СсылкаНа;
			МенеджерЗаписи.Удалить();
			
			ЗаписьОбратнойСвязи = Неопределено;
		КонецЕсли;	
	КонецЕсли;	
	
	Если Запись.Обязательная И Запись.Обязательная <> ОбязательнаяНачальноеЗначение Тогда
		
		ЧислоДокументовСНезаполненнойСвязью = ПолучитьЧислоДокументовСНезаполненнойОбязательнойСвязью(
			Запись.ТипСвязи, Запись.СсылкаИз);
		
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	ПоказатьПредупреждениеОДокументахСНезаполненнойСвязью();
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Если ЗначениеЗаполнено(Запись.ТипОбратнойСвязи) И Не ЗначениеЗаполнено(Запись.ХарактерОбратнойСвязи) Тогда 
		ТекстСообщения = НСтр("ru = 'Поле ""Характер обратной связи"" не заполнено'; en = 'The field ""Nature of reverse relationship"" is not filled'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,"Запись.ХарактерОбратнойСвязи",,Отказ);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Запись.ХарактерОбратнойСвязи) И Не ЗначениеЗаполнено(Запись.ТипОбратнойСвязи) Тогда 
		ТекстСообщения = НСтр("ru = 'Поле ""Тип обратной связи"" не заполнено'; en = 'The field ""Type of reverse relationship"" is not filled'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,, "Запись.ТипОбратнойСвязи",, Отказ);
	КонецЕсли;
	
КонецПроцедуры

//////////////////////////////////////////////////////////////////////////////// 
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ
// 

&НаКлиенте
Процедура ТипСсылкаИзПриИзменении(Элемент)
	
	Если Не ЗначениеЗаполнено(ТипСсылкаИз) Тогда
		Запись.СсылкаИз = Неопределено;
	ИначеЕсли ТипСсылкаИз <> ПолучитьТип(Запись.СсылкаИз) Тогда
		Запись.СсылкаИз = Новый(ТипСсылкаИз);
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ТипСсылкаИз) Тогда
		Элементы.СсылкаИз.ТолькоПросмотр = Истина;
	ИначеЕсли ТипСсылкаИз = "СправочникСсылка.Файлы"
		Или ТипСсылкаИз = "СправочникСсылка.Мероприятия"
		Или ТипСсылкаИз = "СправочникСсылка.Проекты"
		Или ТипСсылкаИз = "ДокументСсылка.ВходящееСообщениеСВД"
		Или ТипСсылкаИз = "ДокументСсылка.ИсходящееСообщениеСВД"
		Или ТипСсылкаИз = "ДокументСсылка.ВходящееПисьмо"
		Или ТипСсылкаИз = "ДокументСсылка.ИсходящееПисьмо" Тогда
		Элементы.СсылкаИз.ТолькоПросмотр = Истина;
	Иначе
		Элементы.СсылкаИз.ТолькоПросмотр = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТипСсылкаНаПриИзменении(Элемент)
	
	Если Не ЗначениеЗаполнено(ТипСсылкаНа) Тогда 
		Запись.СсылкаНа = Неопределено;
	ИначеЕсли ТипСсылкаНа <> ПолучитьТип(Запись.СсылкаНа) Тогда 
		Запись.СсылкаНа = ?(ТипСсылкаНа = "Строка", "", Новый(ТипСсылкаНа));
	КонецЕсли;	
	
	Если Не ЗначениеЗаполнено(ТипСсылкаНа) Тогда 
		Элементы.СсылкаНа.ТолькоПросмотр = Истина;
	ИначеЕсли ТипСсылкаНа = "Строка" Тогда 
		Элементы.СсылкаНа.ТолькоПросмотр = Истина;
		
		Если ЗначениеЗаполнено(Запись.ТипОбратнойСвязи) Тогда 
			Запись.ТипОбратнойСвязи = Неопределено;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Запись.ХарактерОбратнойСвязи) Тогда 
			Запись.ХарактерОбратнойСвязи = Неопределено;
		КонецЕсли;
		
		Элементы.ТипОбратнойСвязи.ТолькоПросмотр = Истина;
		Элементы.ХарактерОбратнойСвязи.ТолькоПросмотр = Истина;
		
	ИначеЕсли ТипСсылкаНа = "СправочникСсылка.Файлы"
		Или ТипСсылкаНа = "СправочникСсылка.Мероприятия"
		Или ТипСсылкаНа = "СправочникСсылка.Проекты"
		Или ТипСсылкаНа = "ДокументСсылка.ВходящееСообщениеСВД"
		Или ТипСсылкаНа = "ДокументСсылка.ИсходящееСообщениеСВД"
		Или ТипСсылкаНа = "ДокументСсылка.ВходящееПисьмо"
		Или ТипСсылкаНа = "ДокументСсылка.ИсходящееПисьмо" Тогда 
		
		Элементы.СсылкаНа.ТолькоПросмотр = Истина;
		
		Элементы.ТипОбратнойСвязи.ТолькоПросмотр = Ложь;
		Элементы.ХарактерОбратнойСвязи.ТолькоПросмотр = Ложь;
	Иначе
		Элементы.СсылкаНа.ТолькоПросмотр = Ложь;
		Элементы.ТипОбратнойСвязи.ТолькоПросмотр = Ложь;
		Элементы.ХарактерОбратнойСвязи.ТолькоПросмотр = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТипОбратнойСвязиПриИзменении(Элемент)
	
	Если Не ЗначениеЗаполнено(Запись.ТипОбратнойСвязи) Тогда 
		Запись.ХарактерОбратнойСвязи = Неопределено;
	КонецЕсли;	
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьЧислоДокументовСНезаполненнойОбязательнойСвязью(ТипСвязи, СсылкаИз)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	
	ТипСсылки = ТипЗнч(СсылкаИз);
	
	Если ЗначениеЗаполнено(СсылкаИз) И 
		(ТипСсылки = Тип("СправочникСсылка.ВидыВнутреннихДокументов")
		Или ТипСсылки = Тип("СправочникСсылка.ВидыВходящихДокументов")
		Или ТипСсылки = Тип("СправочникСсылка.ВидыИсходящихДокументов")) Тогда
	
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	ЕСТЬNULL(КОЛИЧЕСТВО(ВнутренниеДокументы.Ссылка), 0) КАК ЧислоДокументов
			|ИЗ
			|	Справочник.ВнутренниеДокументы КАК ВнутренниеДокументы
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СвязиДокументов КАК СвязиДокументов
			|		ПО (СвязиДокументов.Документ = ВнутренниеДокументы.Ссылка)
			|			И (СвязиДокументов.ТипСвязи = &ТипСвязи)
			|ГДЕ
			|	ВнутренниеДокументы.ВидДокумента = &ВидДокумента
			|	И СвязиДокументов.Документ ЕСТЬ NULL ";
			
		Если ТипСсылки = Тип("СправочникСсылка.ВидыВходящихДокументов") Тогда
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВнутренниеДокументы", "ВходящиеДокументы");
		ИначеЕсли ТипСсылки = Тип("СправочникСсылка.ВидыИсходящихДокументов") Тогда
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВнутренниеДокументы", "ИсходящиеДокументы");
		КонецЕсли;	
		
		Запрос.УстановитьПараметр("ТипСвязи", ТипСвязи);	
		Запрос.УстановитьПараметр("ВидДокумента", СсылкаИз);
		
	Иначе	
		
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	ЕСТЬNULL(КОЛИЧЕСТВО(ОбъектДанных.Ссылка), 0) КАК ЧислоДокументов
			|ИЗ
			|	Справочник.Файлы КАК ОбъектДанных
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СвязиДокументов КАК СвязиДокументов
			|		ПО (СвязиДокументов.Документ = ОбъектДанных.Ссылка)
			|			И (СвязиДокументов.ТипСвязи = &ТипСвязи)
			|ГДЕ
			|	СвязиДокументов.Документ ЕСТЬ NULL ";
			
		Если ТипСсылки = Тип("СправочникСсылка.Проекты") Тогда
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "Справочник.Файлы", "Справочник.Проекты");
		ИначеЕсли ТипСсылки = Тип("СправочникСсылка.Мероприятия") Тогда
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "Справочник.Файлы", "Справочник.Мероприятия");
		ИначеЕсли ТипСсылки = Тип("ДокументСсылка.ВходящееПисьмо") Тогда
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "Справочник.Файлы", "Документ.ВходящееПисьмо");
		ИначеЕсли ТипСсылки = Тип("ДокументСсылка.ИсходящееПисьмо") Тогда
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "Справочник.Файлы", "Документ.ИсходящееПисьмо");
		ИначеЕсли ТипСсылки = Тип("СправочникСсылка.ВидыВнутреннихДокументов") Тогда
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "Справочник.Файлы", "Справочник.ВнутренниеДокументы");
		ИначеЕсли ТипСсылки = Тип("СправочникСсылка.ВидыВходящихДокументов") Тогда
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "Справочник.Файлы", "Справочник.ВходящиеДокументы");
		ИначеЕсли ТипСсылки = Тип("СправочникСсылка.ВидыИсходящихДокументов") Тогда
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "Справочник.Файлы", "Справочник.ИсходящиеДокументы");
		КонецЕсли;	
		
		Запрос.УстановитьПараметр("ТипСвязи", ТипСвязи);	
		
	КонецЕсли;
		
	Выборка = Запрос.Выполнить().Выбрать();	
	Выборка.Следующий();
	Возврат Выборка.ЧислоДокументов;
	
КонецФункции	

&НаКлиенте
Процедура ПоказатьПредупреждениеОДокументахСНезаполненнойСвязью()
	
	// тут показать Предупреждение, если нужно
	Если ЧислоДокументовСНезаполненнойСвязью <> 0 Тогда
		
		ТипСсылки = ТипЗнч(Запись.СсылкаИз);
		
		Если ЗначениеЗаполнено(Запись.СсылкаИз) И 
			(ТипСсылки = Тип("СправочникСсылка.ВидыВнутреннихДокументов")
			Или ТипСсылки = Тип("СправочникСсылка.ВидыВходящихДокументов")
			Или ТипСсылки = Тип("СправочникСсылка.ВидыИсходящихДокументов")) Тогда
		
			Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Вы установили у связи признак ""Обязательная"". 
				|В программе есть документы вида ""%1"" (%2 шт)
				|с не указанной связью ""%3""';
				|en = 'You assigned flag""Required"" to relationship.
				|There are  %2 documents of type ""%1"" with not specified relation ""%3""'"), 
				Запись.СсылкаИз,
				ЧислоДокументовСНезаполненнойСвязью,
				Запись.ТипСвязи);
				
		Иначе
				
			СтрокаНазваниеОбъекта = НСтр("ru = 'файлов'; en = 'files'");
		
			Если ТипСсылки = Тип("СправочникСсылка.Проекты") Тогда
				СтрокаНазваниеОбъекта = НСтр("ru = 'проектов'; en = 'projects'");
			ИначеЕсли ТипСсылки = Тип("СправочникСсылка.Мероприятия") Тогда
				СтрокаНазваниеОбъекта = НСтр("ru = 'мероприятий'; en = 'events'");
			ИначеЕсли ТипСсылки = Тип("ДокументСсылка.ВходящееПисьмо") Тогда
				СтрокаНазваниеОбъекта = НСтр("ru = 'входящих писем'; en = 'incoming emails'");
			ИначеЕсли ТипСсылки = Тип("ДокументСсылка.ИсходящееПисьмо") Тогда
				СтрокаНазваниеОбъекта = НСтр("ru = 'исходящих писем'; en = 'outgoing emails'");
			ИначеЕсли ТипСсылки = Тип("СправочникСсылка.ВидыВходящихДокументов") Тогда 
				СтрокаНазваниеОбъекта = НСтр("ru = 'входящих документов'; en = 'incoming documents'");
			ИначеЕсли ТипСсылки = Тип("СправочникСсылка.ВидыИсходящихДокументов") Тогда 
				СтрокаНазваниеОбъекта = НСтр("ru = 'исходящих документов'; en = 'outgoing documents'");
			ИначеЕсли ТипСсылки = Тип("СправочникСсылка.ВидыВнутреннихДокументов") Тогда 
				СтрокаНазваниеОбъекта = НСтр("ru = 'внутренних документов'; en = 'internal documents'");
			КонецЕсли;	
			
			Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Вы установили у связи признак ""Обязательная"". 
				|В программе есть %1 %2
				|с не указанной связью ""%3""';
				|en = 'You assigned flag""Required"" to relationship. 
				|There are %1 %2 with not specified relation ""%3""'"), 
				ЧислоДокументовСНезаполненнойСвязью,
				СтрокаНазваниеОбъекта,
				Запись.ТипСвязи);
				
		КонецЕсли;		
			
		ЧислоДокументовСНезаполненнойСвязью = 0;
		
		ВыполняетсяПоказПредупреждения = Истина;
		
		ПараметрыОбработчика = Новый Структура;
		Обработчик = Новый ОписаниеОповещения("ПослеПоказаПредупреждения", ЭтотОбъект, ПараметрыОбработчика);
		
		ПоказатьПредупреждение(Обработчик, Текст);
		
	КонецЕсли;	
	
КонецПроцедуры

// Продолжение процедуры (см. выше).
&НаКлиенте
Процедура ПослеПоказаПредупреждения(ПараметрыОбработчика) Экспорт
	
	ВыполняетсяПоказПредупреждения = Ложь;

	Если НужноЗакрытьФорму Тогда
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если ОбщегоНазначенияДокументооборотКлиент.ПередЗакрытием(
		Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка, Модифицированность) Тогда
		Возврат;
	КонецЕсли;
	
	Если ВыполняетсяПоказПредупреждения Тогда
		НужноЗакрытьФорму = Истина;
		Отказ = Истина;
		СтандартнаяОбработка = Ложь;
	КонецЕсли;	
	
КонецПроцедуры


