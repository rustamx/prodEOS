////////////////////////////////////////////////////////////////////////////////
// Подсистема ЕОК.
// Серверные процедуры и функции общего назначения.
// 
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

Функция ПолучитьМассивДействийПоПредмету(ДокументСсылка) Экспорт
	
	ТаблицаЗадач = ра_РаботаСПроцессами.ПолучитьАктивныеЗадачиПоПредмету(ДокументСсылка);
	
	ЗадачиИДействия = Новый Структура;
	ЗадачиИДействия.Вставить("МассивДействий", Новый Массив);
	ЗадачиИДействия.Вставить("Задача", Неопределено);
	
	Если ТаблицаЗадач.Количество() > 0 Тогда
		ЗадачаБП = ТаблицаЗадач[0];
		ЗадачиИДействия.МассивДействий = ра_ОбменДанными.ПолучитьМассивДействийДляЗадачи(ЗадачаБП.Ссылка, ЗадачаБП.ЭтапПринятияУоН, ЗадачаБП.ПодписыватьЭП);
		Для каждого Элемент Из ЗадачиИДействия.МассивДействий Цикл
			ЗадачиИДействия.Вставить(Элемент.Name, Истина);
		КонецЦикла;
		ЗадачиИДействия.Задача = ЗадачаБП;
	КонецЕсли;
	
	Возврат ЗадачиИДействия;
	
КонецФункции

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Проверяет наличие производных документов заданных типов, а также для каждого
// типа документов факт того, что все они имеют статус, заданный для данного типа.
//
// Параметры:
//  Ссылка            - Ссылка на документ ra_Nesootvetstvie, производные документы которого необходимо проверить.
//
//  ПараметрыПроверки - Структура - в качестве ключа передается имя таблицы документа, а в качестве
//                      значения статус документа, который должны иметь все документы.
//
// Возвращаемое значение:
//  Структура         - содержит имена таблиц существующих документов(ключи) и результат проверки статусов (значения).
//
Функция ПроверитьНаличиеПроизводныхДокументовНесоответствия(Несоответствие, ПараметрыПроверки) Экспорт
	
	Если Несоответствие.Пустая() Тогда
		Возврат Новый Структура;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Несоответствие", Несоответствие);
	
	Для каждого Элемент Из ПараметрыПроверки Цикл
		Запрос.УстановитьПараметр("Состояния" + Элемент.Ключ, Элемент.Значение);
	КонецЦикла;
	
	Запрос.Текст = ра_ОбщегоНазначенияПовтИсп.ТекстЗапросаПроверкаНаличияПроизводныхДокументовНесоответствия(ПараметрыПроверки);
	
	Результат = Новый Структура;
	
	РезультатЗапроса = Запрос.Выполнить();
	КоличествоКолонок = РезультатЗапроса.Колонки.Количество();
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		Результат.Вставить(Выборка.ТипДокумента, ?(КоличествоКолонок = 2, Выборка.Состояние, Неопределено));
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Функция ТекстЗапросаПроверкаНаличияПроизводныхДокументовНесоответствия(ПараметрыПроверки) Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	""ra_AktObUstraneniiNesootvetstviya"" КАК ТипДокумента,
	|	ЕСТЬNULL(МИНИМУМ(ИсторияСостоянийДокументов.Состояние В (&Состоянияra_AktObUstraneniiNesootvetstviya)), ЛОЖЬ) КАК Состояние
	|ИЗ
	|	Документ.ra_AktObUstraneniiNesootvetstviya КАК ТаблицаДокумент
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИсторияСостоянийДокументов.СрезПоследних КАК ИсторияСостоянийДокументов
	|		ПО ТаблицаДокумент.Ссылка = ИсторияСостоянийДокументов.Документ
	|ГДЕ
	|	ТаблицаДокумент.Nesootvetstvie = &Несоответствие
	|	И ТаблицаДокумент.ПометкаУдаления = ЛОЖЬ
	|	И ЕСТЬNULL(ИсторияСостоянийДокументов.Состояние <> ЗНАЧЕНИЕ(Перечисление.СостоянияДокументов.ra_Аннулирован), ИСТИНА)
	|
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(ТаблицаДокумент.Ссылка) > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""ra_ItogovyjOtchetONesootvetstvii"",
	|	ЕСТЬNULL(МИНИМУМ(ИсторияСостоянийДокументов.Состояние В (&Состоянияra_ItogovyjOtchetONesootvetstvii)), ЛОЖЬ)
	|ИЗ
	|	Документ.ra_ItogovyjOtchetONesootvetstvii КАК ТаблицаДокумент
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИсторияСостоянийДокументов.СрезПоследних КАК ИсторияСостоянийДокументов
	|		ПО ТаблицаДокумент.Ссылка = ИсторияСостоянийДокументов.Документ
	|ГДЕ
	|	ТаблицаДокумент.Nesootvetstvie = &Несоответствие
	|	И ТаблицаДокумент.ПометкаУдаления = ЛОЖЬ
	|	И ЕСТЬNULL(ИсторияСостоянийДокументов.Состояние <> ЗНАЧЕНИЕ(Перечисление.СостоянияДокументов.ra_Аннулирован), ИСТИНА)
	|
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(ТаблицаДокумент.Ссылка) > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""ra_KorrektiruyushcheeDejstvie"",
	|	ЕСТЬNULL(МИНИМУМ(ИсторияСостоянийДокументов.Состояние В (&Состоянияra_KorrektiruyushcheeDejstvie)), ЛОЖЬ)
	|ИЗ
	|	Документ.ra_KorrektiruyushcheeDejstvie КАК ТаблицаДокумент
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИсторияСостоянийДокументов.СрезПоследних КАК ИсторияСостоянийДокументов
	|		ПО ТаблицаДокумент.Ссылка = ИсторияСостоянийДокументов.Документ
	|ГДЕ
	|	ТаблицаДокумент.Nesootvetstvie = &Несоответствие
	|	И ТаблицаДокумент.ПометкаУдаления = ЛОЖЬ
	|	И ЕСТЬNULL(ИсторияСостоянийДокументов.Состояние <> ЗНАЧЕНИЕ(Перечисление.СостоянияДокументов.ra_Аннулирован), ИСТИНА)
	|
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(ТаблицаДокумент.Ссылка) > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""ra_OcenkaZnachimosti"",
	|	ЕСТЬNULL(МИНИМУМ(ИсторияСостоянийДокументов.Состояние В (&Состоянияra_OcenkaZnachimosti)), ЛОЖЬ)
	|ИЗ
	|	Документ.ra_OcenkaZnachimosti КАК ТаблицаДокумент
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИсторияСостоянийДокументов.СрезПоследних КАК ИсторияСостоянийДокументов
	|		ПО ТаблицаДокумент.Ссылка = ИсторияСостоянийДокументов.Документ
	|ГДЕ
	|	ТаблицаДокумент.Nesootvetstvie = &Несоответствие
	|	И ТаблицаДокумент.ПометкаУдаления = ЛОЖЬ
	|	И ЕСТЬNULL(ИсторияСостоянийДокументов.Состояние <> ЗНАЧЕНИЕ(Перечисление.СостоянияДокументов.ra_Аннулирован), ИСТИНА)
	|
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(ТаблицаДокумент.Ссылка) > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""ra_OtchetONesootvetstviiCHast1"",
	|	ЕСТЬNULL(МИНИМУМ(ИсторияСостоянийДокументов.Состояние В (&Состоянияra_OtchetONesootvetstviiCHast1)), ЛОЖЬ)
	|ИЗ
	|	Документ.ra_OtchetONesootvetstviiCHast1 КАК ТаблицаДокумент
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИсторияСостоянийДокументов.СрезПоследних КАК ИсторияСостоянийДокументов
	|		ПО ТаблицаДокумент.Ссылка = ИсторияСостоянийДокументов.Документ
	|ГДЕ
	|	ТаблицаДокумент.Nesootvetstvie = &Несоответствие
	|	И ТаблицаДокумент.ПометкаУдаления = ЛОЖЬ
	|	И ЕСТЬNULL(ИсторияСостоянийДокументов.Состояние <> ЗНАЧЕНИЕ(Перечисление.СостоянияДокументов.ra_Аннулирован), ИСТИНА)
	|
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(ТаблицаДокумент.Ссылка) > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""ra_OtchetONesootvetstviiCHast2"",
	|	ЕСТЬNULL(МИНИМУМ(ИсторияСостоянийДокументов.Состояние В (&Состоянияra_OtchetONesootvetstviiCHast2)), ЛОЖЬ)
	|ИЗ
	|	Документ.ra_OtchetONesootvetstviiCHast2 КАК ТаблицаДокумент
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИсторияСостоянийДокументов.СрезПоследних КАК ИсторияСостоянийДокументов
	|		ПО ТаблицаДокумент.Ссылка = ИсторияСостоянийДокументов.Документ
	|ГДЕ
	|	ТаблицаДокумент.Nesootvetstvie = &Несоответствие
	|	И ТаблицаДокумент.ПометкаУдаления = ЛОЖЬ
	|	И ЕСТЬNULL(ИсторияСостоянийДокументов.Состояние <> ЗНАЧЕНИЕ(Перечисление.СостоянияДокументов.ra_Аннулирован), ИСТИНА)
	|
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(ТаблицаДокумент.Ссылка) > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""ra_OtchetONesootvetstviiCHast3"",
	|	ЕСТЬNULL(МИНИМУМ(ИсторияСостоянийДокументов.Состояние В (&Состоянияra_OtchetONesootvetstviiCHast3)), ЛОЖЬ)
	|ИЗ
	|	Документ.ra_OtchetONesootvetstviiCHast3 КАК ТаблицаДокумент
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИсторияСостоянийДокументов.СрезПоследних КАК ИсторияСостоянийДокументов
	|		ПО ТаблицаДокумент.Ссылка = ИсторияСостоянийДокументов.Документ
	|ГДЕ
	|	ТаблицаДокумент.Nesootvetstvie = &Несоответствие
	|	И ТаблицаДокумент.ПометкаУдаления = ЛОЖЬ
	|	И ЕСТЬNULL(ИсторияСостоянийДокументов.Состояние <> ЗНАЧЕНИЕ(Перечисление.СостоянияДокументов.ra_Аннулирован), ИСТИНА)
	|
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(ТаблицаДокумент.Ссылка) > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""ra_PreduprezhdayushcheeDejstvie"",
	|	ЕСТЬNULL(МИНИМУМ(ИсторияСостоянийДокументов.Состояние В (&Состоянияra_PreduprezhdayushcheeDejstvie)), ЛОЖЬ)
	|ИЗ
	|	Документ.ra_PreduprezhdayushcheeDejstvie КАК ТаблицаДокумент
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИсторияСостоянийДокументов.СрезПоследних КАК ИсторияСостоянийДокументов
	|		ПО ТаблицаДокумент.Ссылка = ИсторияСостоянийДокументов.Документ
	|ГДЕ
	|	ТаблицаДокумент.Nesootvetstvie = &Несоответствие
	|	И ТаблицаДокумент.ПометкаУдаления = ЛОЖЬ
	|	И ЕСТЬNULL(ИсторияСостоянийДокументов.Состояние <> ЗНАЧЕНИЕ(Перечисление.СостоянияДокументов.ra_Аннулирован), ИСТИНА)
	|
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(ТаблицаДокумент.Ссылка) > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""ra_Uvedomlenie"",
	|	ЕСТЬNULL(МИНИМУМ(ИсторияСостоянийДокументов.Состояние В (&Состоянияra_Uvedomlenie)), ЛОЖЬ)
	|ИЗ
	|	Документ.ra_Uvedomlenie КАК ТаблицаДокумент
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИсторияСостоянийДокументов.СрезПоследних КАК ИсторияСостоянийДокументов
	|		ПО ТаблицаДокумент.Ссылка = ИсторияСостоянийДокументов.Документ
	|ГДЕ
	|	ТаблицаДокумент.Nesootvetstvie = &Несоответствие
	|	И ТаблицаДокумент.ПометкаУдаления = ЛОЖЬ
	|	И ЕСТЬNULL(ИсторияСостоянийДокументов.Состояние <> ЗНАЧЕНИЕ(Перечисление.СостоянияДокументов.ra_Аннулирован), ИСТИНА)
	|
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(ТаблицаДокумент.Ссылка) > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""ra_VremennyeSderzhivayushchieDejstviyaIKorrekciya"",
	|	ЕСТЬNULL(МИНИМУМ(ИсторияСостоянийДокументов.Состояние В (&Состоянияra_VremennyeSderzhivayushchieDejstviyaIKorrekciya)), ЛОЖЬ)
	|ИЗ
	|	Документ.ra_VremennyeSderzhivayushchieDejstviyaIKorrekciya КАК ТаблицаДокумент
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИсторияСостоянийДокументов.СрезПоследних КАК ИсторияСостоянийДокументов
	|		ПО ТаблицаДокумент.Ссылка = ИсторияСостоянийДокументов.Документ
	|ГДЕ
	|	ТаблицаДокумент.Nesootvetstvie = &Несоответствие
	|	И ТаблицаДокумент.ПометкаУдаления = ЛОЖЬ
	|	И ЕСТЬNULL(ИсторияСостоянийДокументов.Состояние <> ЗНАЧЕНИЕ(Перечисление.СостоянияДокументов.ra_Аннулирован), ИСТИНА)
	|
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(ТаблицаДокумент.Ссылка) > 0";
	
	СхемаЗапроса = Новый СхемаЗапроса;
	СхемаЗапроса.УстановитьТекстЗапроса(ТекстЗапроса);
	
	Для каждого Запрос Из СхемаЗапроса.ПакетЗапросов Цикл
		Запрос.ВыбиратьРазрешенные = Истина;
		
		ПодзапросыКУдалению = Новый Массив;
		
		Для каждого Оператор Из Запрос.Операторы Цикл
			Если Оператор.Источники.Количество() Тогда
				ПроверятьСостояние = Неопределено;
				
				Для каждого ИсточникЗапроса Из Оператор.Источники Цикл
					ИмяТаблицы = ИсточникЗапроса.Источник.ИмяТаблицы;
					
					Если ИмяТаблицы <> "РегистрСведений.ИсторияСостоянийДокументов.СрезПоследних" Тогда
						Если Не ПараметрыПроверки.Свойство(СтрЗаменить(ИмяТаблицы, "Документ.", ""), ПроверятьСостояние) Тогда
							ПодзапросыКУдалению.Вставить(0, Запрос.Операторы.Индекс(Оператор));
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
				
				Если ПроверятьСостояние = Неопределено Тогда
					Оператор.КоличествоПолучаемыхЗаписей = 1;
					Для каждого ВыбираемоеПоле Из Оператор.ВыбираемыеПоля Цикл
						Если Найти(ВыбираемоеПоле, "&Состояния") Тогда
							Оператор.ВыбираемыеПоля.Удалить(Оператор.ВыбираемыеПоля.Индекс(ВыбираемоеПоле));
							Прервать;
						КонецЕсли;
					КонецЦикла;
					Оператор.Отбор.Удалить(Оператор.Отбор.Индекс(Оператор.Отбор.Найти("КОЛИЧЕСТВО(ТаблицаДокумент.Ссылка) > 0")));
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		Для Каждого ИндексПодзапроса Из ПодзапросыКУдалению Цикл
			Запрос.Операторы.Удалить(ИндексПодзапроса);
		КонецЦикла;
	КонецЦикла;
	
	Возврат СтрЗаменить(СхемаЗапроса.ПолучитьТекстЗапроса(), "	NULL", "	НЕОПРЕДЕЛЕНО");
	
КонецФункции

Функция УзлыПланаОбменаДляЕОСЗакупки() Экспорт
	
	ТекстЗапроса = "ВЫБРАТЬ
	               |	СлужебныеУзлы.Ссылка КАК СлужебныйУзел,
	               |	СлужебныеУзлы.МеждународныйКонтур КАК МеждународныйКонтур,
	               |	ОбычныеУзлы.Ссылка КАК ОбычныйУзел,
	               |	ОбычныеУзлы.ИмяСистемыПолучателя КАК ИмяСистемыПолучателя
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		ПланОбмена.Ссылка КАК Ссылка,
	               |		ПланОбмена.МеждународныйКонтур КАК МеждународныйКонтур,
	               |		ПланОбмена.ИмяСистемыПолучателя КАК ИмяСистемыПолучателя
	               |	ИЗ
	               |		ПланОбмена.ра_ОбменДаннымиСЕОСЗакупки КАК ПланОбмена
	               |	ГДЕ
	               |		НЕ ПланОбмена.ЭтотУзел
	               |		И ПланОбмена.УзелСВыгруженнымиИзменениями) КАК СлужебныеУзлы
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |			ПланОбмена.Ссылка КАК Ссылка,
	               |			ПланОбмена.МеждународныйКонтур КАК МеждународныйКонтур,
	               |			ПланОбмена.ИмяСистемыПолучателя КАК ИмяСистемыПолучателя
	               |		ИЗ
	               |			ПланОбмена.ра_ОбменДаннымиСЕОСЗакупки КАК ПланОбмена
	               |		ГДЕ
	               |			НЕ ПланОбмена.ЭтотУзел
	               |			И НЕ ПланОбмена.УзелСВыгруженнымиИзменениями) КАК ОбычныеУзлы
	               |		ПО СлужебныеУзлы.ИмяСистемыПолучателя = ОбычныеУзлы.ИмяСистемыПолучателя";
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Функция ЕстьСистемаПоИмени(ИмяСистемыПолучателя) Экспорт 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ра_ОбменДаннымиСЕОСЗакупки.Ссылка КАК Ссылка
		|ИЗ
		|	ПланОбмена.ра_ОбменДаннымиСЕОСЗакупки КАК ра_ОбменДаннымиСЕОСЗакупки
		|ГДЕ
		|	ра_ОбменДаннымиСЕОСЗакупки.ИмяСистемыПолучателя = &ИмяСистемыПолучателя";
	
	Запрос.УстановитьПараметр("ИмяСистемыПолучателя", ИмяСистемыПолучателя);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат Не РезультатЗапроса.Пустой();	
	
КонецФункции	

#КонецОбласти

#Область СлужебныеПроцедурыИФункции


#КонецОбласти
