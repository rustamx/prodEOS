
// Процедура ДобавитьЗначениеКСтрокеЧерезРазделитель добавляет
// к Строке Разделитель и ДобавляемоеЗначение в случае, если Строка и
// ДобавляемоеЗначение не пустые. Если Строка пустая или ДобавляемоеЗначение
// не заполено, то добавляет к Строке ДобавляемоеЗначение.
// 
// Параметры:
// Строка (Строка или любое значение, приводимое к строке). Модифицируется в процедуре.
// Разделитель (Строка или любое значение, приводимое к строке). 
// ДобавляемоеЗначение (Строка или любое значение, приводимое к строке).
//
Процедура ДобавитьЗначениеКСтрокеЧерезРазделитель(Строка, Разделитель, ДобавляемоеЗначение) Экспорт
	Если ПустаяСтрока(Строка) Тогда
		Строка = Строка(ДобавляемоеЗначение);
	ИначеЕсли Не ПустаяСтрока(ДобавляемоеЗначение) Тогда
		Строка = Строка(Строка) + Разделитель + ДобавляемоеЗначение;
	КонецЕсли;
КонецПроцедуры

// Заключает в кавычки строку
// Параметры:
// Строка (Строка или любое значение, приводимое к строке).
Функция ВКавычках(Знач Строка, Знач Кавычка = Неопределено, Знач ВтораяКавычка = Неопределено) Экспорт
	
	Если Кавычка = Неопределено Тогда
		Кавычка = """";
	КонецЕсли;
	Если ВтораяКавычка = Неопределено Тогда
		ВтораяКавычка = Кавычка;
	КонецЕсли;
	
	Возврат Кавычка + Строка + ВтораяКавычка;
	
КонецФункции

// Возвращает пустой уникальный идентификатор
Функция УникальныйИдентификаторПустой() Экспорт
	
	Возврат Новый УникальныйИдентификатор("00000000-0000-0000-0000-000000000000");
	
КонецФункции

// Возвращает текстовое представление длительности в виде количества дней и часов.
//
// Параметры:
//  Длительность - Число - Длительность в днях.
//
// Возвращаемое значение:
//  Строка - Текстовое представление длительности.
//
Функция ДлительностьСтрокой(Длительность) Экспорт
	
	Если ТипЗнч(Длительность) <> Тип("Число") Тогда
		Возврат "";
	КонецЕсли;
	
	Если Длительность = 0 Тогда
		Возврат НСтр("ru = '0 часов'; en = '0 hours'");
	КонецЕсли;
	
	ЧислоДней = Цел(Длительность);
	ЧислоЧасов = Окр((Длительность - ЧислоДней) * 24);
	
	ПодписьДней = ДелопроизводствоКлиентСервер.ПолучитьПодписьДней(ЧислоДней);
	ПодписьЧасов = ДелопроизводствоКлиентСервер.ПолучитьПодписьЧасов(ЧислоЧасов);
	
	Если ЧислоДней > 0 И ЧислоЧасов > 0 Тогда
		Возврат СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = '%1 %2 и %3 %4'; en = '%1 %2 and %3 %4'"),
			Строка(ЧислоДней),
			ПодписьДней,
			Строка(ЧислоЧасов),
			ПодписьЧасов);
	ИначеЕсли ЧислоДней > 0 Тогда
		Возврат СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			"%1 %2",
			Строка(ЧислоДней),
			ПодписьДней);
	ИначеЕсли ЧислоЧасов > 0 Тогда
		Возврат СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			"%1 %2",
			Строка(ЧислоЧасов),
			ПодписьЧасов);
	Иначе
		Возврат НСтр("ru = 'Менее 1 часа'; en = 'Less than 1 hour'");
	КонецЕсли;
	
КонецФункции

// Формирует представление исполнителя строкой.
//
// Параметры:
//  Исполнитель - СправочникСсылка.РолиИсполнителей, СправочникСсылка.Пользователи - Исполнитель.
//  ОсновнойОбъектАдресации - Характеристика.ОбъектыАдресацииЗадач - Основной объект адресации.
//  ДополнительныйОбъектАдресации - Характеристика.ОбъектыАдресацииЗадач - Дополнительный объект адресации.
// 
// Возвращаемое значение:
//  Строка - Представление исполнителя.
//
Функция ПредставлениеИсполнителяСтрокой(Исполнитель, ОсновнойОбъектАдресации, ДополнительныйОбъектАдресации) Экспорт
	
	Представление = "";
	
	Если ЗначениеЗаполнено(ОсновнойОбъектАдресации) И ЗначениеЗаполнено(ДополнительныйОбъектАдресации) Тогда 
		Представление = СтрШаблон(
			"%1 (%2, %3)",
			Исполнитель,
			ОсновнойОбъектАдресации,
			ДополнительныйОбъектАдресации);
	ИначеЕсли ЗначениеЗаполнено(ОсновнойОбъектАдресации) Тогда 
		Представление = СтрШаблон(
			"%1 (%2)",
			Исполнитель,
			ОсновнойОбъектАдресации);
	Иначе
		Представление = Строка(Исполнитель);
	КонецЕсли;
	
	Возврат Представление;
	
КонецФункции


