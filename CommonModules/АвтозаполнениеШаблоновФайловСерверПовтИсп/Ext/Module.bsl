
// Формирует дерево значений с реквизитами и доп. реквизитами документа указанного типа.
//
// Параметры:
//  ВидВладельцаФайла - СправочникСсылка.ВидыВнутреннихДокументов, СправочникСсылка.ВидыИсходящихДокументов - 
//						Текстовое описание параметра процедуры (функции).
//  ТипДокумента - Строка - Строковое представление типа документа
//
// Возвращаемое значение:
//  ДеревоЗначений - дерево значений с реквизитами документа
//	 * Наименование - Строка - Имя реквизита.
//	 * Тип - Строка - Имя типа реквизита.
//	 * ОбъектРодитель - Строка - полный путь до элемента дерева реквизитов
Функция ЗаполнитьДеревоРеквизитовДляВыбора(ВидВладельцаФайла, ТипДокумента) Экспорт
	
	ОбязательныеРеквизиты = Новый СписокЗначений;
	
	Типы = Новый ОписаниеТипов("Строка");
	
	Дерево = Новый ДеревоЗначений;
	Дерево.Колонки.Добавить("Наименование", Типы);
	Дерево.Колонки.Добавить("Тип", Типы);
	Дерево.Колонки.Добавить("ОбъектРодитель", Типы);
	Дерево.Колонки.Добавить("Описание", Типы);
	// ТСК Талько Э.Г.; 16.07.2018; Печать }
	Дерево.Колонки.Добавить("РеквизитТабличнойЧасти", Новый ОписаниеТипов("Булево"));
	
	СправочникМетаданные = ВидВладельцаФайла.Метаданные();
	// ТСК Талько Э.Г.; 16.07.2018; Печать {
	
	НоваяСтрокаВидВладельцаФайла = Дерево.Строки.Добавить();
	НоваяСтрокаВидВладельцаФайла.Наименование = НСтр("ru = 'ВладелецФайла'; en = 'ВладелецФайла'");
	НоваяСтрокаВидВладельцаФайла.Тип = ТипДокумента;
	// ТСК Талько Э.Г.; 16.07.2018; Печать }
	НоваяСтрокаВидВладельцаФайла.Тип = СправочникМетаданные.Синоним;
	// ТСК Талько Э.Г.; 16.07.2018; Печать {
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьУчетПоОрганизациям") Тогда
		ОбязательныеРеквизиты.Добавить("Организация");
	КонецЕсли;
	Если ТипЗнч(ВидВладельцаФайла) = Тип("СправочникСсылка.ВидыВнутреннихДокументов") 
		И ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВидВладельцаФайла, "ВестиУчетСторон") Тогда 
			ОбязательныеРеквизиты.Добавить("КонтактноеЛицо");
			ОбязательныеРеквизиты.Добавить("Контрагент");
	КонецЕсли;	
	
	// ТСК Талько Э.Г.; 16.07.2018; Печать {
	//Для Каждого СправочникМетаданные Из Метаданные.Справочники Цикл
	//	Если СправочникМетаданные.ПредставлениеОбъекта = ТипДокумента  Тогда
	//		ЗаполнитьДеревоРеквизитов(НоваяСтрокаВидВладельцаФайла, СправочникМетаданные.СтандартныеРеквизиты, "ВладелецФайла", 1, ВидВладельцаФайла, ОбязательныеРеквизиты);
	//		ЗаполнитьДеревоРеквизитов(НоваяСтрокаВидВладельцаФайла, СправочникМетаданные.Реквизиты, "ВладелецФайла", 1, ВидВладельцаФайла, ОбязательныеРеквизиты);
	//		
	//		// Реквизит "Получатель" для исходящего документа добавим искусственно.
	//		Если ТипДокумента = "Исходящий документ" Тогда 
	//			НоваяСтрокаПолучатель = НоваяСтрокаВидВладельцаФайла.Строки.Добавить();
	//			НоваяСтрокаПолучатель.Наименование = НСтр("ru = 'Получатель'; en = 'Recipient'");
	//			НоваяСтрокаПолучатель.Тип = Тип("СправочникСсылка.Контрагенты");
	//			НоваяСтрокаПолучатель.ОбъектРодитель = "ВладелецФайла";
	//			НоваяСтрокаПолучатель.Описание = НСтр("ru = 'Получатель'; en = 'Recipient'");
	//		КонецЕсли;
	//		
	//		Прервать;
	//	КонецЕсли
	//КонецЦикла;
	Если ра_ОбщегоНазначенияКлиентСервер.ЭтоДокументКачества(СправочникМетаданные) Тогда
		КоллекцияРеквизитов = Новый Массив;
		КоллекцияРеквизитов.Добавить(СправочникМетаданные.СтандартныеРеквизиты.Дата);
		КоллекцияРеквизитов.Добавить(СправочникМетаданные.СтандартныеРеквизиты.Номер);
		
		ЗаполнитьДеревоРеквизитов(НоваяСтрокаВидВладельцаФайла, КоллекцияРеквизитов, "ВладелецФайла", 1, ВидВладельцаФайла, ОбязательныеРеквизиты);
		ЗаполнитьДеревоРеквизитов(НоваяСтрокаВидВладельцаФайла, СправочникМетаданные.Реквизиты, "ВладелецФайла", 1, ВидВладельцаФайла, ОбязательныеРеквизиты);
		
		ра_НомерТЧ = 0;
		Для каждого ТабличнаяЧасть Из СправочникМетаданные.ТабличныеЧасти Цикл
			НоваяСтрокаСписок = НоваяСтрокаВидВладельцаФайла.Строки.Добавить();
			НоваяСтрокаСписок.Наименование = ТабличнаяЧасть.Имя;
			НоваяСтрокаСписок.Описание = ТабличнаяЧасть.Синоним;
			НоваяСтрокаСписок.РеквизитТабличнойЧасти = Истина;
			ра_НомерТЧ = ра_НомерТЧ + 1;
			
			ЗаполнитьДеревоРеквизитов(НоваяСтрокаСписок, ТабличнаяЧасть.Реквизиты, "ВладелецФайла|ТабличнаяЧасть_" + ра_НомерТЧ, 1, ВидВладельцаФайла, ОбязательныеРеквизиты, Истина, ра_НомерТЧ);
		КонецЦикла;
	Иначе
		ЗаполнитьДеревоРеквизитов(НоваяСтрокаВидВладельцаФайла, СправочникМетаданные.СтандартныеРеквизиты, "ВладелецФайла", 1, ВидВладельцаФайла, ОбязательныеРеквизиты);
		ЗаполнитьДеревоРеквизитов(НоваяСтрокаВидВладельцаФайла, СправочникМетаданные.Реквизиты, "ВладелецФайла", 1, ВидВладельцаФайла, ОбязательныеРеквизиты);
		
		// Реквизит "Получатель" для исходящего документа добавим искусственно.
		Если ТипДокумента = "Исходящий документ" Тогда 
			НоваяСтрокаПолучатель = НоваяСтрокаВидВладельцаФайла.Строки.Добавить();
			НоваяСтрокаПолучатель.Наименование = НСтр("ru = 'Получатель'; en = 'Recipient'");
			НоваяСтрокаПолучатель.Тип = Тип("СправочникСсылка.Контрагенты");
			НоваяСтрокаПолучатель.ОбъектРодитель = "ВладелецФайла";
			НоваяСтрокаПолучатель.Описание = НСтр("ru = 'Получатель'; en = 'Recipient'");
		КонецЕсли;
	КонецЕсли;
	// ТСК Талько Э.Г.; 16.07.2018; Печать }
	
	Попытка
		НаборСвойств = УправлениеСвойствамиСлужебный.ПолучитьНаборыСвойствОбъекта(ВидВладельцаФайла);
		НоваяСтрокаДопРеквизиты = НоваяСтрокаВидВладельцаФайла.Строки.Добавить();
		НоваяСтрокаДопРеквизиты.Наименование = НСтр("ru = 'ДопРеквизиты'; en = 'ДопРеквизиты'");
		НоваяСтрокаДопРеквизиты.Тип = "";
		НоваяСтрокаДопРеквизиты.Описание = НСтр("ru = 'Дополнительные реквизиты'; en = 'Additional attributes'");
		
		Для Каждого ЭлементНабораСвойств Из НаборСвойств Цикл
			Для Каждого ДопРеквизит Из ЭлементНабораСвойств.Набор.ДополнительныеРеквизиты Цикл
				Если ДопРеквизит <> Неопределено И ЗначениеЗаполнено(ДопРеквизит.Свойство) Тогда
					НоваяСтрокаДопРеквизит = НоваяСтрокаДопРеквизиты.Строки.Добавить();
					НоваяСтрокаДопРеквизит.Наименование = ДопРеквизит.Свойство.Наименование;
					НоваяСтрокаДопРеквизит.Тип = ДопРеквизит.Свойство.ТипЗначения;
					НоваяСтрокаДопРеквизит.ОбъектРодитель = "ВладелецФайла.ДопРеквизиты";
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	Исключение
		// у владельца файла может не быть доп.реквизитов
	КонецПопытки;
	
	НоваяСтрокаФайл = Дерево.Строки.Добавить();
	НоваяСтрокаФайл.Наименование = НСтр("ru = 'Файл'; en = 'File'");
	НоваяСтрокаФайл.Тип = НСтр("ru = 'Справочник'; en = 'Catalog'");
	НоваяСтрокаФайл.Описание = НСтр("ru = 'Файл'; en = 'File'");
	НоваяСтрокаФайл.Описание = НСтр("ru = 'Владелец файла'; en = 'File owner'");
	
	ЗаполнитьДеревоРеквизитов(НоваяСтрокаФайл, Метаданные.Справочники.Файлы.СтандартныеРеквизиты, "Файл", 1, ВидВладельцаФайла, ОбязательныеРеквизиты);
	ЗаполнитьДеревоРеквизитов(НоваяСтрокаФайл, Метаданные.Справочники.Файлы.Реквизиты, "Файл", 1, ВидВладельцаФайла, ОбязательныеРеквизиты);
	
	Дерево.Строки.Сортировать("Наименование", Истина);
	
	Возврат Дерево;
	
КонецФункции

Процедура ЗаполнитьДеревоРеквизитов(Родитель, НаборРеквизитов, Путь, УровеньВложенности, ВидВладельцаФайла, ОбязательныеРеквизиты,
	// ТСК Талько Э.Г.; 16.07.2018; Печать }
	РеквизитТабличнойЧасти = Ложь, ра_НомерТЧ = 1)
	// ТСК Талько Э.Г.; 16.07.2018; Печать {
	
	// ТСК Талько Э.Г.; 16.07.2018; Печать }
	//Если УровеньВложенности > 2 Тогда
	Если УровеньВложенности > 3 Тогда
	// ТСК Талько Э.Г.; 16.07.2018; Печать {
		Возврат;
	КонецЕсли;
	
	Для Каждого Реквизит Из НаборРеквизитов Цикл
		
		Если ТипЗнч(Реквизит) <> Тип("ОписаниеСтандартногоРеквизита") Тогда
			Если ОбязательныеРеквизиты.НайтиПоЗначению(Реквизит.Имя) = Неопределено Тогда
				РеквизитВключен = Истина;
				РеквизитВходитВФункциональныеОпции = Ложь;
				
				ДоступныеОпции = АвтозаполнениеШаблоновФайловСерверПовтИсп.ПолучитьСписокФункциональныхОпций(Реквизит.ПолноеИмя());
				РеквизитВходитВФункциональныеОпции = ДоступныеОпции.Независимые.Количество() 
					Или ДоступныеОпции.Параметрические.Количество();
				РеквизитВключен = РеквизитДоступенПоФункциональнымОпциям(ДоступныеОпции, ВидВладельцаФайла);
				
				Если РеквизитВходитВФункциональныеОпции И НЕ РеквизитВключен Тогда
					Продолжить;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		Строка = Родитель.Строки.Добавить();
		Строка.Наименование = Реквизит.Имя;
		Строка.Тип = Реквизит.Тип;
		Строка.ОбъектРодитель = Путь;
		Строка.Описание = Реквизит.Синоним;
		
		Для Каждого СправочникМетаданные Из Метаданные.Справочники Цикл
			Если СправочникМетаданные.ПредставлениеОбъекта <> Строка(Реквизит.Тип) Тогда
				Продолжить;
			КонецЕсли;
			ЗаполнитьДеревоРеквизитов(Строка, СправочникМетаданные.СтандартныеРеквизиты, Путь + "|" + Строка.Наименование, УровеньВложенности + 1, ВидВладельцаФайла, ОбязательныеРеквизиты);
			ЗаполнитьДеревоРеквизитов(Строка, СправочникМетаданные.Реквизиты, Путь + "|" + Строка.Наименование, УровеньВложенности + 1, ВидВладельцаФайла, ОбязательныеРеквизиты);
			Попытка
				Если СправочникМетаданные.ТабличныеЧасти.Найти("ДополнительныеРеквизиты") <> Неопределено Тогда
					ЗаполнитьСписокДопРеквизитов(Строка, СправочникМетаданные, Путь + "|" + Реквизит.Имя, ВидВладельцаФайла);
				КонецЕсли;
			Исключение
				// у справочника может не быть ни одного настроенного доп.реквизита
			КонецПопытки;
			Если СправочникМетаданные.ТабличныеЧасти.Найти("КонтактнаяИнформация") <> Неопределено Тогда
				ЗаполнитьСписокКонтактнойИнформации(Строка, СправочникМетаданные, Путь + "|" + Реквизит.Имя);
			КонецЕсли;
			Прервать;
		КонецЦикла;
		
		// ТСК Шепелев М.Н. 22.06.2018 {
		Для Каждого ДокументМетаданные Из Метаданные.Документы Цикл
			Если ДокументМетаданные.ПредставлениеОбъекта <> Строка(Реквизит.Тип) Тогда
				Продолжить;
			КонецЕсли;
			
			ЗаполнитьДеревоРеквизитов(Строка, ДокументМетаданные.Реквизиты, Путь + "|" + Строка.Наименование, УровеньВложенности + 1, ВидВладельцаФайла, ОбязательныеРеквизиты, РеквизитТабличнойЧасти, ра_НомерТЧ);
			Прервать;
		КонецЦикла;
		// ТСК Шепелев М.Н. 22.06.2018 }
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьСписокДопРеквизитов(Строка, СправочникМетаданные, Путь, ВидВладельцаФайла)
	
	УстановитьПривилегированныйРежим(Истина);
	Объект = Справочники[СправочникМетаданные.Имя].СоздатьЭлемент();
	Если ДелопроизводствоКлиентСервер.ЭтоДокумент(Объект) Тогда
		Объект.ВидДокумента = ВидВладельцаФайла;
	КонецЕсли;
	НаборСвойств = УправлениеСвойствамиСлужебный.ПолучитьНаборыСвойствОбъекта(Объект);
	КоличествоНаборов = НаборСвойств.Количество();
	
	Если КоличествоНаборов > 0 Тогда
		НоваяСтрокаДопРеквизиты = Строка.Строки.Добавить();
		НоваяСтрокаДопРеквизиты.Наименование = НСтр("ru = 'ДопРеквизиты'; en = 'ДопРеквизиты'");
		НоваяСтрокаДопРеквизиты.Тип = "";
		НоваяСтрокаДопРеквизиты.Описание = НСтр("ru = 'Дополнительные реквизиты'; en = 'Additional attributes'");
		
		Для Каждого ВложенныйНаборСвойств Из НаборСвойств Цикл
			НоваяСтрокаВложенныеДопРеквизиты = НоваяСтрокаДопРеквизиты.Строки.Добавить();
			НоваяСтрокаВложенныеДопРеквизиты.Наименование = ВложенныйНаборСвойств.Набор.Наименование;
			НоваяСтрокаВложенныеДопРеквизиты.Тип = "";
			Для Каждого ДопРеквизит Из ВложенныйНаборСвойств.Набор.ДополнительныеРеквизиты Цикл
				НоваяСтрокаДопРеквизит = НоваяСтрокаВложенныеДопРеквизиты.Строки.Добавить();
				НоваяСтрокаДопРеквизит.Наименование = ДопРеквизит.Свойство.Наименование;
				НоваяСтрокаДопРеквизит.Тип = ДопРеквизит.Свойство.ТипЗначения;
				
				Если КоличествоНаборов = 1 Тогда 
					НаборНаименование = "";
				Иначе 
					НаборНаименование = ВложенныйНаборСвойств.Набор.Наименование;
				КонецЕсли;
				
				НоваяСтрокаДопРеквизит.ОбъектРодитель = Путь + "|" + НоваяСтрокаДопРеквизиты.Наименование 
					+ ?(ЗначениеЗаполнено(НаборНаименование), "|" + НаборНаименование, "");
				НоваяСтрокаДопРеквизит.ОбъектРодитель = СтрЗаменить(НоваяСтрокаДопРеквизит.ОбъектРодитель, 
					НСтр("ru = 'Доп. свойства'; en = 'Additional properties'"), НСтр("ru = 'ДопСвойства'; en = 'ДопСвойства'"));
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

Процедура ЗаполнитьСписокКонтактнойИнформации(Строка, СправочникМетаданные, Путь)
	
	//Получение набора контактной информации для данного справочника
	// Получим список видов КИ
	ИмяСправочника = СправочникМетаданные.Имя;
	ГруппаВидовКИ = Справочники.ВидыКонтактнойИнформации["Справочник" + ИмяСправочника];
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВидыКонтактнойИнформации.Ссылка КАК Вид,
	|	ВидыКонтактнойИнформации.Наименование,
	|	ВидыКонтактнойИнформации.Тип,
	|	ВидыКонтактнойИнформации.РедактированиеТолькоВДиалоге,
	|	ВидыКонтактнойИнформации.АдресТолькоРоссийский,
	|	ВидыКонтактнойИнформации.ПометкаУдаления КАК ПометкаУдаления,
	|	ИСТИНА КАК Использовать
	|ИЗ
	|	Справочник.ВидыКонтактнойИнформации КАК ВидыКонтактнойИнформации
	|ГДЕ
	|	ВидыКонтактнойИнформации.Родитель = &ГруппаВидовКИ
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПометкаУдаления,
	|	ВидыКонтактнойИнформации.РеквизитДопУпорядочивания";
	
	Запрос.УстановитьПараметр("ГруппаВидовКИ", ГруппаВидовКИ);
	УстановитьПривилегированныйРежим(Истина);
	КонтактнаяИнформация = Запрос.Выполнить().Выгрузить();
	УстановитьПривилегированныйРежим(Ложь);
	Если КонтактнаяИнформация.Количество() > 0 Тогда
		НоваяСтрокаКонтактнаяИнформация = Строка.Строки.Добавить();
		НоваяСтрокаКонтактнаяИнформация.Наименование = НСтр("ru = 'Контактная информация'; en = 'Contact information'");
		НоваяСтрокаКонтактнаяИнформация.Тип = "";
		НоваяСтрокаКонтактнаяИнформация.Описание = НСтр("ru = 'Контактная информация'; en = 'Contact information'");

		Для Каждого Запись Из КонтактнаяИнформация Цикл
			НоваяСтрока = НоваяСтрокаКонтактнаяИнформация.Строки.Добавить();
			НоваяСтрока.Наименование = Запись.Наименование;
			НоваяСтрока.Тип = Запись.Тип;
			НоваяСтрока.ОбъектРодитель = Путь 
				+ "|" 
				+ СтрЗаменить(
					НоваяСтрокаКонтактнаяИнформация.Наименование, 
					НСтр("ru = 'Контактная информация'; en = 'Contact information'"), 
					НСтр("ru = 'КонтактнаяИнформация'; en = 'КонтактнаяИнформация'"));
		КонецЦикла;
	КонецЕсли;	
	
КонецПроцедуры

// Формирует дерево значений с реквизитами и доп. реквизитами документа указанного типа.
//
// Параметры:
//  ВидВладельцаФайла - СправочникСсылка.ВидыВнутреннихДокументов, СправочникСсылка.ВидыИсходящихДокументов - 
//						Текстовое описание параметра процедуры (функции).
//  ТипДокумента - Тип - тип заполняемого документа.
//  Параметры - Структура - вспомогательные параметры.
//
// Возвращаемое значение:
//  ДеревоЗначений - дерево значений с реквизитами документа
//	 * Наименование - Строка - Имя реквизита.
//	 * Тип - Строка - Имя типа реквизита.
//	 * ОбъектРодитель - Строка - полный путь до элемента дерева реквизитов
Функция ЗаполнитьДеревоРеквизитовДляВыбораКраткойФормы(ВидВладельцаФайла, ТипДокумента, Параметры) Экспорт
	
	ИсключенияРеквизитов = Новый СписокЗначений;
	ОбязательныеРеквизиты = Новый СписокЗначений;
	
	Типы = Новый ОписаниеТипов("Строка");
	ТипБулево = Новый ОписаниеТипов("Булево");
	КЧ = Новый КвалификаторыЧисла(10, 0);
	ТипЧисло = Новый ОписаниеТипов("Число",,, КЧ);
	КЧ1 = Новый КвалификаторыЧисла(1, 0);
	ТипЧисло1 = Новый ОписаниеТипов("Число",,, КЧ1);
	
	Дерево = Новый ДеревоЗначений;
	Дерево.Колонки.Добавить("Наименование", Типы);
	Дерево.Колонки.Добавить("НаименованиеДляWord", Типы);
	Дерево.Колонки.Добавить("Тип", Типы);
	Дерево.Колонки.Добавить("ОбъектРодитель", Типы);
	Дерево.Колонки.Добавить("Описание", Типы);
	Дерево.Колонки.Добавить("ОписаниеПоляЗамены", Типы);
	Дерево.Колонки.Добавить("РеквизитРодитель", Типы);
	
	Дерево.Колонки.Добавить("ПолеФайла", Типы);
	Дерево.Колонки.Добавить("СоздатьПоле", ТипБулево);
	Дерево.Колонки.Добавить("РеквизитТабличнойЧасти", ТипБулево);
	Дерево.Колонки.Добавить("ДополнительныйРеквизит", ТипБулево);
	Дерево.Колонки.Добавить("КонтактнаяИнформация", ТипБулево);
	Дерево.Колонки.Добавить("НомерКолонкиТабличнойЧасти", ТипЧисло);
	Дерево.Колонки.Добавить("ФорматСвойства", Типы);
	Дерево.Колонки.Добавить("КоличествоПолей", ТипЧисло1);
	// ТСК Талько Э.Г.; 16.07.2018; Печать {
	Дерево.Колонки.Добавить("ра_КодТЧ", Новый ОписаниеТипов("Строка",,,, Новый КвалификаторыСтроки(100)));
	Дерево.Колонки.Добавить("ра_ЗначениеЗамены", Новый ОписаниеТипов("Строка"));
	
	ЭтоДокументКачества = Ложь;
	// ТСК Талько Э.Г.; 16.07.2018; Печать }
	
	ИсключенияРеквизитов.Добавить("ВидДокумента");
	ИсключенияРеквизитов.Добавить("ЗапретитьАвтоматическоеДобавлениеУчастниковРабочейГруппы");
	ИсключенияРеквизитов.Добавить("ПодписанЭП");
	ИсключенияРеквизитов.Добавить("УдалитьЗапретитьАвтоматическоеДобавлениеУчастниковРабочейГруппы");
	ИсключенияРеквизитов.Добавить("УдалитьШаблон");
	ИсключенияРеквизитов.Добавить("ЧисловойНомер");
	ИсключенияРеквизитов.Добавить("Шаблон");	
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьУчетПоОрганизациям") Тогда
		ОбязательныеРеквизиты.Добавить("Организация");
	КонецЕсли;
	
	// ТСК Талько Э.Г.; 16.07.2018; Печать {
	Документ = ра_ОбщегоНазначенияКлиентСервер.ДокументКачества(ТипДокумента);
	// ТСК Талько Э.Г.; 16.07.2018; Печать }
	
	ЭтоИсходящий = Ложь;
	Если ТипЗнч(ТипДокумента) = Тип("СправочникСсылка.ВидыИсходящихДокументов") Тогда 
		СправочникМетаданные = Метаданные.Справочники.ИсходящиеДокументы;
		// Исходящие документы
		ИсключенияРеквизитов.Добавить("УдалитьПолучателиДляСписков");
		ИсключенияРеквизитов.Добавить("ГотовКОтправке");
		ЭтоИсходящий = Истина;
		
		Документ = Справочники.ИсходящиеДокументы.СоздатьЭлемент();
	// ТСК Талько Э.Г.; 16.07.2018; Печать {
	ИначеЕсли Документ <> Неопределено Тогда
		СправочникМетаданные = Документ.Метаданные();
		ЭтоДокументКачества = Истина;
		
		КоллекцияРеквизитов = Новый Массив;
		КоллекцияРеквизитов.Добавить(СправочникМетаданные.СтандартныеРеквизиты.Дата);
		КоллекцияРеквизитов.Добавить(СправочникМетаданные.СтандартныеРеквизиты.Номер);
		ЗаполнитьДеревоРеквизитовКраткойФормы(Дерево, КоллекцияРеквизитов, "ВладелецФайла", 1,
			ВидВладельцаФайла, ОбязательныеРеквизиты, ИсключенияРеквизитов);
	// ТСК Талько Э.Г.; 16.07.2018; Печать }
	Иначе 
		СправочникМетаданные = Метаданные.Справочники.ВнутренниеДокументы;
		// Внутренние документы
		ИсключенияРеквизитов.Добавить("Бессрочный");
		ИсключенияРеквизитов.Добавить("УдалитьКонтрагентыДляСписков");
		ИсключенияРеквизитов.Добавить("НеДействует");
				
		Если Не Параметры.УчетНДС Тогда 
			ИсключенияРеквизитов.Добавить("СуммаНДС");
			ИсключенияРеквизитов.Добавить("СуммаНДСПрописью");
		КонецЕсли;
		
		Если ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВидВладельцаФайла, "ВестиУчетСторон") Тогда 
			ОбязательныеРеквизиты.Добавить("КонтактноеЛицо");
			ОбязательныеРеквизиты.Добавить("Контрагент");
		КонецЕсли;	
		
		Документ = Справочники.ВнутренниеДокументы.СоздатьЭлемент();
	КонецЕсли;
	
	ЗаполнитьДеревоРеквизитовКраткойФормы(Дерево, СправочникМетаданные.Реквизиты, "ВладелецФайла", 1,
		ВидВладельцаФайла, ОбязательныеРеквизиты, ИсключенияРеквизитов);
		
	Если ЭтоИсходящий Тогда 
		ДобавитьСтроку(Дерево, "ВладелецФайла", "Получатель", НСтр("ru = 'Получатель'; en = 'Recipient'"),
			Тип("Строка"), Ложь);
		
	// ТСК Мусабеков Роман 27.04.2018 {
	ИначеЕсли ЭтоДокументКачества Тогда
		ра_НомерТЧ = 0;
		Для каждого ТабличнаяЧасть Из СправочникМетаданные.ТабличныеЧасти Цикл
			НоваяСтрокаСписок = Дерево.Строки.Добавить();
			НоваяСтрокаСписок.Наименование = ТабличнаяЧасть.Имя;
			НоваяСтрокаСписок.НаименованиеДляWord = ТабличнаяЧасть.Имя;
			НоваяСтрокаСписок.Описание = ТабличнаяЧасть.Синоним;
			НоваяСтрокаСписок.РеквизитТабличнойЧасти = Истина;
			ра_НомерТЧ = ра_НомерТЧ + 1;
			ЗаполнитьДеревоРеквизитовКраткойФормы(НоваяСтрокаСписок, ТабличнаяЧасть.Реквизиты, 
				"ВладелецФайла|ТабличнаяЧасть_" + ра_НомерТЧ, 1, ВидВладельцаФайла, ОбязательныеРеквизиты, ИсключенияРеквизитов, , Истина, ра_НомерТЧ);
		КонецЦикла;
		
	// ТСК Мусабеков Роман 27.04.2018 }
	ИначеЕсли Параметры.Свойство("ВестиУчетТоваровИУслуг") И Параметры.ВестиУчетТоваровИУслуг Тогда 
		
		НоваяСтрокаСписок = Дерево.Строки.Добавить();
		НоваяСтрокаСписок.Наименование = "СписокТоваровИУслуг";
		НоваяСтрокаСписок.НаименованиеДляWord = "СписокТоваровИУслуг";
		НоваяСтрокаСписок.Описание = НСтр("ru = 'Список товаров и услуг'; en = 'List of products and services'");
		НоваяСтрокаСписок.РеквизитТабличнойЧасти = Истина;
		
		Если Не Параметры.УчетНДС Тогда 
			ИсключенияРеквизитов.Добавить("СтавкаНДС");
			ИсключенияРеквизитов.Добавить("СуммаНДС");
		КонецЕсли;
		
		ЗаполнитьДеревоРеквизитовКраткойФормы(НоваяСтрокаСписок, СправочникМетаданные.ТабличныеЧасти.Товары.Реквизиты, 
			"ВладелецФайла|ТабличнаяЧасть", 1, ВидВладельцаФайла, ОбязательныеРеквизиты, ИсключенияРеквизитов, , Истина);
	КонецЕсли;
	
	Попытка
		Документ.ВидДокумента = ВидВладельцаФайла;
		НаборСвойств = УправлениеСвойствамиСлужебный.ПолучитьНаборыСвойствОбъекта(Документ);
		
		Если НаборСвойств.Количество() = 0 Тогда 
			Возврат Дерево;
		КонецЕсли;
		
		Для Каждого ЭлементНабораСвойств Из НаборСвойств Цикл
			Для Каждого ДопРеквизит Из ЭлементНабораСвойств.Набор.ДополнительныеРеквизиты Цикл
				Если ДопРеквизит <> Неопределено И ЗначениеЗаполнено(ДопРеквизит.Свойство) Тогда
					РеквизитыСвойства = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДопРеквизит.Свойство,
						"ПометкаУдаления, Заголовок, ТипЗначения, УникальныйКодДляПоля, ФорматСвойства");
					Если ДопРеквизит.ПометкаУдаления Или РеквизитыСвойства.ПометкаУдаления = Истина Тогда 
						Продолжить;
					КонецЕсли;
					
					НоваяСтрокаДопРеквизит = Дерево.Строки.Добавить();
					НоваяСтрокаДопРеквизит.Наименование = РеквизитыСвойства.УникальныйКодДляПоля;
					НоваяСтрокаДопРеквизит.НаименованиеДляWord = РеквизитыСвойства.УникальныйКодДляПоля;
					НоваяСтрокаДопРеквизит.Тип = РеквизитыСвойства.ТипЗначения;
					НоваяСтрокаДопРеквизит.ОбъектРодитель = "ВладелецФайла.ДопРеквизиты";
					НоваяСтрокаДопРеквизит.Описание = РеквизитыСвойства.Заголовок;
					НоваяСтрокаДопРеквизит.ОписаниеПоляЗамены = РеквизитыСвойства.Заголовок;
					НоваяСтрокаДопРеквизит.ДополнительныйРеквизит = Истина;
					НоваяСтрокаДопРеквизит.ФорматСвойства = РеквизитыСвойства.ФорматСвойства;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	Исключение
		// У владельца файла может не быть доп.реквизитов
	КонецПопытки;
	
	Дерево.Строки.Сортировать("Описание", Истина);
	
	Возврат Дерево;
	
КонецФункции

Процедура ЗаполнитьДеревоРеквизитовКраткойФормы(
	Родитель, 
	НаборРеквизитов, 
	Путь, 
	УровеньВложенности, 
	ВидВладельцаФайла,
	ОбязательныеРеквизиты,
	ИсключенияРеквизитов,
	Знач ТочечныеИсключенияРеквизитов = Неопределено,
	РеквизитТабличнойЧасти = Ложь,
	// ТСК Мусабеков Роман 27.04.2018 {
	ра_НомерТЧ = 1)
	// ТСК Мусабеков Роман 27.04.2018 }
	
	// ТСК Мусабеков Роман 27.04.2018 {
	//Если УровеньВложенности > 2 Тогда
	Если УровеньВложенности > 3 Тогда
	// ТСК Мусабеков Роман 27.04.2018 }
		Возврат;
	КонецЕсли;
	
	Для Каждого Реквизит Из НаборРеквизитов Цикл
		
		Если ТипЗнч(Реквизит) <> Тип("ОписаниеСтандартногоРеквизита") Тогда			
			Если ОбязательныеРеквизиты.НайтиПоЗначению(Реквизит.Имя) = Неопределено Тогда
				Если ИсключенияРеквизитов.НайтиПоЗначению(Реквизит.Имя) <> Неопределено 
					Или (ТочечныеИсключенияРеквизитов <> Неопределено И 
						ТочечныеИсключенияРеквизитов.НайтиПоЗначению(Реквизит.Имя) <> Неопределено) Тогда 
						Продолжить;
				КонецЕсли;
				
				РеквизитВключен = Истина;
				РеквизитВходитВФункциональныеОпции = Ложь;
				
				ДоступныеОпции = АвтозаполнениеШаблоновФайловСерверПовтИсп.ПолучитьСписокФункциональныхОпций(Реквизит.ПолноеИмя());
				РеквизитВходитВФункциональныеОпции = ДоступныеОпции.Независимые.Количество() 
					Или ДоступныеОпции.Параметрические.Количество();
				РеквизитВключен = РеквизитДоступенПоФункциональнымОпциям(ДоступныеОпции, ВидВладельцаФайла);
				
				Если РеквизитВходитВФункциональныеОпции И Не РеквизитВключен Тогда
					Продолжить;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		Строка = Родитель.Строки.Добавить();
		Строка.Наименование = Реквизит.Имя;
		
		Если Реквизит.Имя = "ПредставлениеВПереписке" Тогда 
			Строка.НаименованиеДляWord = "ВПереписке";
		ИначеЕсли Реквизит.Имя = "ПредставлениеВПерепискеСРангом" Тогда 
			Строка.НаименованиеДляWord = "ВПерепискеСРангом";
		Иначе 
			Строка.НаименованиеДляWord = Реквизит.Имя;
		КонецЕсли;
		
		Строка.Тип = Реквизит.Тип;
		Строка.ОбъектРодитель = Путь;
		Строка.РеквизитТабличнойЧасти = РеквизитТабличнойЧасти;
		
		Если Не РеквизитТабличнойЧасти Тогда 
			РеквизитРодитель = СтрЗаменить(Путь,"ВладелецФайла", "");
			РеквизитРодитель = СтрЗаменить(РеквизитРодитель, "|", "_");
			Строка.РеквизитРодитель = РеквизитРодитель;
			Если Лев(Строка.РеквизитРодитель, 1) = "_" Тогда 
				Строка.РеквизитРодитель = Прав(Строка.РеквизитРодитель, СтрДлина(Строка.РеквизитРодитель) - 1);
			КонецЕсли;
		Иначе 
			Строка.НомерКолонкиТабличнойЧасти = 10000;
			// ТСК Мусабеков Роман 27.04.2018 {
			//Строка.РеквизитРодитель = "ТЧ";
			Строка.РеквизитРодитель = "L" + ра_НомерТЧ;
			// ТСК Мусабеков Роман 27.04.2018 }
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(Реквизит.Синоним) Тогда 
			Строка.Описание = Реквизит.Имя;
			Строка.ОписаниеПоляЗамены = Реквизит.Имя;
		Иначе 
			Строка.Описание = Реквизит.Синоним;
			Строка.ОписаниеПоляЗамены = Реквизит.Синоним;
		КонецЕсли;
		// ТСК Талько Э.Г.; 16.07.2018; Печать {
		Строка.ра_ЗначениеЗамены = СтрШаблон("{%1|%2}", Строка.ОбъектРодитель, Строка.Наименование);
		// ТСК Талько Э.Г.; 16.07.2018; Печать }
		
		Для Каждого СправочникМетаданные Из Метаданные.Справочники Цикл
			
			Если СправочникМетаданные.ПредставлениеОбъекта <> Строка(Реквизит.Тип) Тогда
				Продолжить;
			ИначеЕсли СправочникМетаданные.Имя = "ВидыДокументов"
				Или СправочникМетаданные.Имя = "Валюты" 
				Или СправочникМетаданные.Имя = "ГрифыДоступа" Тогда
				Продолжить;
				
			ИначеЕсли СправочникМетаданные.Имя = "Пользователи" Тогда 
				ТочечныеИсключения = Новый СписокЗначений;
				ТочечныеИсключения.Добавить("Недействителен");
				ТочечныеИсключения.Добавить("Комментарий");
				ТочечныеИсключения.Добавить("Служебный");
				ТочечныеИсключения.Добавить("Подготовлен");
				ТочечныеИсключения.Добавить("ИдентификаторПользователяИБ");
				ТочечныеИсключения.Добавить("РазрешенныеВебСерверы");
				ТочечныеИсключения.Добавить("СвойстваПользователяИБ");
				ТочечныеИсключения.Добавить("ИдентификаторПользователяСервиса");
				ТочечныеИсключения.Добавить("КодЯзыка");
				ТочечныеИсключения.Добавить("Подразделение");
				ТочечныеИсключения.Добавить("ФизическоеЛицо");
				
			ИначеЕсли СправочникМетаданные.Имя = "Номенклатура" Тогда
				
				ТочечныеИсключения = Новый СписокЗначений;
				ТочечныеИсключения.Добавить("Цена");
				ТочечныеИсключения.Добавить("ЕдиницаИзмерения");
				ТочечныеИсключения.Добавить("СтавкаНДС");
				
			ИначеЕсли СправочникМетаданные.Имя = "Контрагенты" Тогда 
				
				ТочечныеИсключения = Новый СписокЗначений;
				ТочечныеИсключения.Добавить("ГруппаДоступа");
				ТочечныеИсключения.Добавить("Комментарий");
				ТочечныеИсключения.Добавить("ДействуетНаОсновании");
				ТочечныеИсключения.Добавить("ЮрФизЛицо");
				
			ИначеЕсли СправочникМетаданные.Имя = "ДелаХраненияДокументов" Тогда 
				
				ТочечныеИсключения = Новый СписокЗначений;
				ТочечныеИсключения.Добавить("УдалитьМестоХранения");
				
			КонецЕсли;
			
			ЗаполнитьДеревоРеквизитовКраткойФормы(Строка, СправочникМетаданные.Реквизиты, Путь + "|" + Строка.Наименование,
				УровеньВложенности + 1, ВидВладельцаФайла, ОбязательныеРеквизиты, ИсключенияРеквизитов, ТочечныеИсключения, 
				// ТСК Талько Э.Г.; 16.07.2018; Печать {
				//РеквизитТабличнойЧасти);
				РеквизитТабличнойЧасти, ра_НомерТЧ);
				// ТСК Талько Э.Г.; 16.07.2018; Печать }
			ТочечныеИсключения = Новый СписокЗначений;
			Попытка
				Если СправочникМетаданные.ТабличныеЧасти.Найти("ДополнительныеРеквизиты") <> Неопределено Тогда
					Если СправочникМетаданные.Имя = "Номенклатура" Тогда
						ЗаполнитьСписокДопРеквизитовКраткойФормы(Родитель, СправочникМетаданные, Путь + "|" + Реквизит.Имя, 
							ВидВладельцаФайла, РеквизитТабличнойЧасти);
					Иначе 
						ЗаполнитьСписокДопРеквизитовКраткойФормы(Строка, СправочникМетаданные, Путь + "|" + Реквизит.Имя, 
							ВидВладельцаФайла, РеквизитТабличнойЧасти);
					КонецЕсли;
				КонецЕсли;
			Исключение
				// У справочника может не быть ни одного настроенного доп.реквизита
			КонецПопытки;
			
			Если СправочникМетаданные.ТабличныеЧасти.Найти("КонтактнаяИнформация") <> Неопределено Тогда
				ЗаполнитьСписокКонтактнойИнформацииКраткойФормы(Строка, СправочникМетаданные, Путь + "|" + Реквизит.Имя);
			КонецЕсли;
			
			Прервать;
		КонецЦикла;
		
		// ТСК Шепелев М.Н. 22.06.2018 {
		Для Каждого ДокументМетаданные Из Метаданные.Документы Цикл
			
			Если ДокументМетаданные.ПредставлениеОбъекта <> Строка(Реквизит.Тип) Тогда
				Продолжить;
			КонецЕсли;
			
			ТочечныеИсключения = Новый СписокЗначений;
			
			ЗаполнитьДеревоРеквизитовКраткойФормы(Строка, ДокументМетаданные.Реквизиты, Путь + "|" + Строка.Наименование,
				УровеньВложенности + 1, ВидВладельцаФайла, ОбязательныеРеквизиты, ИсключенияРеквизитов, ТочечныеИсключения, 
				РеквизитТабличнойЧасти, ра_НомерТЧ);
			Прервать;
		КонецЦикла;
		// ТСК Шепелев М.Н. 22.06.2018 }
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьСписокДопРеквизитовКраткойФормы(Строка, СправочникМетаданные, Путь, ВидВладельцаФайла, РеквизитТабличнойЧасти, ТипКонтрагента = Неопределено)
	
	УстановитьПривилегированныйРежим(Истина);
	Объект = Справочники[СправочникМетаданные.Имя].СоздатьЭлемент();
	
	Если ЗначениеЗаполнено(ТипКонтрагента) Тогда 
		Объект.ЮридическоеФизическоеЛицо = ТипКонтрагента;
	КонецЕсли;
	
	НаборСвойств = УправлениеСвойствамиСлужебный.ПолучитьНаборыСвойствОбъекта(Объект);
	КоличествоНаборов = НаборСвойств.Количество();
	
	Если КоличествоНаборов > 0 Тогда
		Для Каждого ВложенныйНаборСвойств Из НаборСвойств Цикл
			Для Каждого ДопРеквизит Из ВложенныйНаборСвойств.Набор.ДополнительныеРеквизиты Цикл
				РеквизитыСвойства = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДопРеквизит.Свойство,
					"ПометкаУдаления, Заголовок, Наименование, ТипЗначения, Комментарий, УникальныйКодДляПоля, ФорматСвойства");
				Если ДопРеквизит.ПометкаУдаления Или РеквизитыСвойства.ПометкаУдаления = Истина Тогда 
					Продолжить;
				КонецЕсли;
				
				НоваяСтрокаДопРеквизит = Строка.Строки.Добавить();
				НоваяСтрокаДопРеквизит.Наименование = РеквизитыСвойства.УникальныйКодДляПоля;
				НоваяСтрокаДопРеквизит.НаименованиеДляWord = РеквизитыСвойства.УникальныйКодДляПоля;
				НоваяСтрокаДопРеквизит.Тип = РеквизитыСвойства.ТипЗначения;
				НоваяСтрокаДопРеквизит.Описание = РеквизитыСвойства.Заголовок;
				НоваяСтрокаДопРеквизит.ДополнительныйРеквизит = Истина;
				НоваяСтрокаДопРеквизит.ФорматСвойства = РеквизитыСвойства.ФорматСвойства;
				
				Если КоличествоНаборов = 1 Тогда 
					НаборНаименование = "";
				Иначе 
					НаборНаименование = ВложенныйНаборСвойств.Набор.Наименование;
				КонецЕсли;
				
				НоваяСтрокаДопРеквизит.ОбъектРодитель = Путь + "|" + НСтр("ru = 'ДопРеквизиты'") 
					+ ?(ЗначениеЗаполнено(НаборНаименование), "|" + НаборНаименование, "");
				НоваяСтрокаДопРеквизит.ОбъектРодитель = СтрЗаменить(НоваяСтрокаДопРеквизит.ОбъектРодитель, 
					НСтр("ru = 'Доп. свойства'; en = 'Additional properties'"), НСтр("ru = 'ДопСвойства'"));
					
					
				НоваяСтрокаДопРеквизит.РеквизитТабличнойЧасти = РеквизитТабличнойЧасти;
				
				Если Не РеквизитТабличнойЧасти Тогда 
					РеквизитРодитель = СтрЗаменить(НоваяСтрокаДопРеквизит.ОбъектРодитель,"ВладелецФайла", "");
					РеквизитРодитель = СтрЗаменить(РеквизитРодитель, "|", "_");
					НоваяСтрокаДопРеквизит.РеквизитРодитель = РеквизитРодитель;
					Если Лев(НоваяСтрокаДопРеквизит.РеквизитРодитель, 1) = "_" Тогда 
						НоваяСтрокаДопРеквизит.РеквизитРодитель = Прав(НоваяСтрокаДопРеквизит.РеквизитРодитель, 
							СтрДлина(НоваяСтрокаДопРеквизит.РеквизитРодитель) - 1);
					КонецЕсли;
				Иначе 
					НоваяСтрокаДопРеквизит.НомерКолонкиТабличнойЧасти = 10000;
					НоваяСтрокаДопРеквизит.РеквизитРодитель = "ТЧ";
				КонецЕсли;
				
				Если ЗначениеЗаполнено(РеквизитыСвойства.Комментарий) Тогда 
					НоваяСтрокаДопРеквизит.ОписаниеПоляЗамены = РеквизитыСвойства.Комментарий;
				Иначе 
					НоваяСтрокаДопРеквизит.ОписаниеПоляЗамены = РеквизитыСвойства.Заголовок;
				КонецЕсли;
				
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

Процедура ЗаполнитьСписокКонтактнойИнформацииКраткойФормы(Строка, СправочникМетаданные, Путь)
	
	//Получение набора контактной информации для данного справочника
	// Получим список видов КИ
	ИмяСправочника = СправочникМетаданные.Имя;
	ГруппаВидовКИ = Справочники.ВидыКонтактнойИнформации["Справочник" + ИмяСправочника];
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВидыКонтактнойИнформации.Ссылка КАК Вид,
	|	ВидыКонтактнойИнформации.Ссылка.ИмяПредопределенныхДанных Как УникальноеИмя,
	|	ВидыКонтактнойИнформации.Наименование,
	|	ВидыКонтактнойИнформации.Тип,
	|	ВидыКонтактнойИнформации.ПометкаУдаления КАК ПометкаУдаления
	|ИЗ
	|	Справочник.ВидыКонтактнойИнформации КАК ВидыКонтактнойИнформации
	|ГДЕ
	|	ВидыКонтактнойИнформации.Родитель = &ГруппаВидовКИ
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПометкаУдаления,
	|	ВидыКонтактнойИнформации.РеквизитДопУпорядочивания";
	
	Запрос.УстановитьПараметр("ГруппаВидовКИ", ГруппаВидовКИ);
	УстановитьПривилегированныйРежим(Истина);
	КонтактнаяИнформация = Запрос.Выполнить().Выгрузить();
	УстановитьПривилегированныйРежим(Ложь);
	Если КонтактнаяИнформация.Количество() > 0 Тогда
		Для Каждого Запись Из КонтактнаяИнформация Цикл
			Если Не Запись.ПометкаУдаления Тогда 
				НоваяСтрока = Строка.Строки.Добавить();
				Если ЗначениеЗаполнено(Запись.УникальноеИмя) Тогда 
					ИмяРеквизита = Запись.УникальноеИмя;
				Иначе 
					ИмяРеквизита = Запись.Наименование;
				КонецЕсли;
				
				НоваяСтрока.Наименование = ИмяРеквизита;
				НоваяСтрока.НаименованиеДляWord = ИмяРеквизита;
				НоваяСтрока.Тип = Запись.Тип;
				НоваяСтрока.ОбъектРодитель = Путь 
					+ "|КонтактнаяИнформация";
				НоваяСтрока.Описание = Запись.Наименование;
				НоваяСтрока.ОписаниеПоляЗамены = ИмяРеквизита;
				
				РеквизитРодитель = СтрЗаменить(НоваяСтрока.ОбъектРодитель,"ВладелецФайла", "");
				РеквизитРодитель = СтрЗаменить(РеквизитРодитель, "|", "_");
				НоваяСтрока.РеквизитРодитель = РеквизитРодитель;
				Если Лев(НоваяСтрока.РеквизитРодитель, 1) = "_" Тогда 
					НоваяСтрока.РеквизитРодитель = Прав(НоваяСтрока.РеквизитРодитель, 
						СтрДлина(НоваяСтрока.РеквизитРодитель) - 1);
				КонецЕсли;
				НоваяСтрока.КонтактнаяИнформация = Истина;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

Процедура ДобавитьСтроку(Строка, Путь, Наименование, Описание, Тип, РеквизитТабличнойЧасти, ОписаниеПоляЗамены = "")
	
	НоваяСтрока = Строка.Строки.Добавить();
	
	НоваяСтрока.Наименование = Наименование;
	НоваяСтрока.НаименованиеДляWord = Наименование;
	НоваяСтрока.Тип = Тип;
	НоваяСтрока.Описание = Описание;
	НоваяСтрока.ОбъектРодитель = СтрШаблон("%1|%2", Путь, Наименование);
	НоваяСтрока.РеквизитТабличнойЧасти = РеквизитТабличнойЧасти;
	
	Если Не РеквизитТабличнойЧасти Тогда 
		РеквизитРодитель = СтрЗаменить(Путь + "|" + Наименование, "ВладелецФайла", "");
		РеквизитРодитель = СтрЗаменить(РеквизитРодитель, "|", "_");
		НоваяСтрока.РеквизитРодитель = РеквизитРодитель;
		Если Лев(НоваяСтрока.РеквизитРодитель, 1) = "_" Тогда 
			НоваяСтрока.РеквизитРодитель = Прав(НоваяСтрока.РеквизитРодитель,
				СтрДлина(НоваяСтрока.РеквизитРодитель) - 1);
		КонецЕсли;
	КонецЕсли;
	
	Если ОписаниеПоляЗамены = "" Тогда 
		НоваяСтрока.ОписаниеПоляЗамены = Описание;
	Иначе 
		НоваяСтрока.ОписаниеПоляЗамены = ОписаниеПоляЗамены;
	КонецЕсли;
	
КонецПроцедуры

// Формирует дерево значений с реквизитами и доп. реквизитами документа указанного типа.
//
// Параметры:
//  ВидДокумента - СправочникСсылка.ВидыВнутреннихДокументов, СправочникСсылка.ВидыИсходящихДокументов, СправочникСсылка.ВидыВходящихДокументов - 
//		Текстовое описание параметра процедуры (функции).
//  ПоказыватьВсеРеквизиты - Булево - показывает или скрывает часть реквизитов объекта.
//
// Возвращаемое значение:
//  ДеревоЗначений - дерево значений с реквизитами документа
//
Функция ЗаполнитьДеревоРеквизитовДляШаблона(ВидДокумента, ПоказыватьВсеРеквизиты = Ложь) Экспорт
	
	ИсключенияРеквизитов = Новый СписокЗначений;
	ОбязательныеРеквизиты = Новый СписокЗначений;
	
	Типы = Новый ОписаниеТипов("Строка");
	ТипБулево = Новый ОписаниеТипов("Булево");
	КЧ = Новый КвалификаторыЧисла(10, 0);
	
	Дерево = Новый ДеревоЗначений;
	Дерево.Колонки.Добавить("Наименование", Типы);
	Дерево.Колонки.Добавить("Тип", Типы);
	Дерево.Колонки.Добавить("ОбъектРодитель", Типы);
	Дерево.Колонки.Добавить("Описание", Типы);
	Дерево.Колонки.Добавить("ОписаниеПоляЗамены", Типы);
	Дерево.Колонки.Добавить("РеквизитРодитель", Типы);
	Дерево.Колонки.Добавить("ДополнительныйРеквизит", ТипБулево);
	
	ИсключенияРеквизитов.Добавить("Заголовок");
	ИсключенияРеквизитов.Добавить("УдалитьЗапретитьАвтоматическоеДобавлениеУчастниковРабочейГруппы");
	ИсключенияРеквизитов.Добавить("ЗапретитьАвтоматическоеДобавлениеУчастниковРабочейГруппы");
	ИсключенияРеквизитов.Добавить("ПодписанЭП");
	ИсключенияРеквизитов.Добавить("ЧисловойНомер");
	ИсключенияРеквизитов.Добавить("Шаблон");
	ИсключенияРеквизитов.Добавить("УдалитьШаблон");
	
	Если Не ПоказыватьВсеРеквизиты Тогда 
		ИсключенияРеквизитов.Добавить("ГрифДоступа");
		ИсключенияРеквизитов.Добавить("КоличествоЛистов");
		ИсключенияРеквизитов.Добавить("КоличествоПриложений");
		ИсключенияРеквизитов.Добавить("КоличествоЭкземпляров");
		ИсключенияРеквизитов.Добавить("ЛистовВПриложениях");
		ИсключенияРеквизитов.Добавить("Содержание");
		ИсключенияРеквизитов.Добавить("Комментарий");
	КонецЕсли;
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьУчетПоОрганизациям") Тогда
		ОбязательныеРеквизиты.Добавить("Организация");
	КонецЕсли;
	
	ЭтоИсходящий = Ложь;
	Если ТипЗнч(ВидДокумента) = Тип("СправочникСсылка.ВидыИсходящихДокументов") Тогда 
		СправочникМетаданные = Метаданные.Справочники.ИсходящиеДокументы;
		// Исходящие документы
		ИсключенияРеквизитов.Добавить("УдалитьПолучателиДляСписков");
		ЭтоИсходящий = Истина;
		
		Документ = Справочники.ИсходящиеДокументы.СоздатьЭлемент();
	ИначеЕсли ТипЗнч(ВидДокумента) = Тип("СправочникСсылка.ВидыВходящихДокументов") Тогда 
		СправочникМетаданные = Метаданные.Справочники.ВходящиеДокументы;
		// Входящие документы
		Документ = Справочники.ВходящиеДокументы.СоздатьЭлемент();
	Иначе 
		СправочникМетаданные = Метаданные.Справочники.ВнутренниеДокументы;
		// Внутренние документы
		ИсключенияРеквизитов.Добавить("Бессрочный");
		ИсключенияРеквизитов.Добавить("НеДействует");
		ИсключенияРеквизитов.Добавить("УдалитьКонтрагентыДляСписков");
		Если Не ПоказыватьВсеРеквизиты Тогда 
			ИсключенияРеквизитов.Добавить("ПорядокПродления");
		КонецЕсли;
		
		Если ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВидДокумента, "ВестиУчетСторон") Тогда 
			ОбязательныеРеквизиты.Добавить("КонтактноеЛицо");
			ОбязательныеРеквизиты.Добавить("Контрагент");
		КонецЕсли;	
		
		Документ = Справочники.ВнутренниеДокументы.СоздатьЭлемент();
	КонецЕсли;
	
	ЗаполнитьРеквизитыДляШаблона(Дерево, СправочникМетаданные.Реквизиты, "", 1, 
		ВидДокумента, ОбязательныеРеквизиты, ИсключенияРеквизитов, , ПоказыватьВсеРеквизиты);
		
	Если ЭтоИсходящий Тогда 
		ДобавитьСтрокуДляШаблона(Дерево, "", "Получатель", НСтр("ru = 'Получатель'; en = 'Recipient'"),
			Тип("Строка"));
	КонецЕсли;
	
	Попытка
		Документ.ВидДокумента = ВидДокумента;
		НаборСвойств = УправлениеСвойствамиСлужебный.ПолучитьНаборыСвойствОбъекта(Документ);
		
		Если НаборСвойств.Количество() = 0 Тогда
			Возврат Дерево;
		КонецЕсли;
		
		Массив = Новый Массив;
		Массив.Добавить(Тип("Булево"));
		ОписаниеБулева = Новый ОписаниеТипов(Массив);
		Для Каждого ЭлементНабораСвойств Из НаборСвойств Цикл
			Для Каждого ДопРеквизит Из ЭлементНабораСвойств.Набор.ДополнительныеРеквизиты Цикл
				Если ДопРеквизит <> Неопределено И ЗначениеЗаполнено(ДопРеквизит.Свойство) Тогда
					РеквизитыСвойства = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДопРеквизит.Свойство,
						"ПометкаУдаления, Заголовок, ТипЗначения, ФорматСвойства");
					Если ДопРеквизит.ПометкаУдаления Или РеквизитыСвойства.ПометкаУдаления = Истина Тогда 
						Продолжить;
					КонецЕсли;
					
					Если Не ПоказыватьВсеРеквизиты И РеквизитыСвойства.ТипЗначения = ОписаниеБулева Тогда 
						Продолжить;
					КонецЕсли;
					
					НоваяСтрокаДопРеквизит = Дерево.Строки.Добавить();
					НоваяСтрокаДопРеквизит.Наименование = РеквизитыСвойства.Заголовок;
					НоваяСтрокаДопРеквизит.Тип = РеквизитыСвойства.ТипЗначения;
					НоваяСтрокаДопРеквизит.ОбъектРодитель = "ДопРеквизиты";
					НоваяСтрокаДопРеквизит.Описание = РеквизитыСвойства.Заголовок;
					НоваяСтрокаДопРеквизит.ОписаниеПоляЗамены = РеквизитыСвойства.Заголовок;
					НоваяСтрокаДопРеквизит.ДополнительныйРеквизит = Истина;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	Исключение
		// У владельца файла может не быть доп.реквизитов
	КонецПопытки;
	
	Дерево.Строки.Сортировать("Описание", Истина);
	
	Возврат Дерево;
	
КонецФункции

Процедура ЗаполнитьРеквизитыДляШаблона(
	Родитель, 
	НаборРеквизитов, 
	Путь, 
	УровеньВложенности, 
	ВидВладельца,
	ОбязательныеРеквизиты,
	ИсключенияРеквизитов,
	Знач ТочечныеИсключенияРеквизитов = Неопределено,
	ПоказыватьВсеРеквизиты)
	
	Если УровеньВложенности > 2 Тогда
		Возврат;
	КонецЕсли;
	
	Массив = Новый Массив;
	Массив.Добавить(Тип("Булево"));
	ОписаниеБулева = Новый ОписаниеТипов(Массив);
	Для Каждого Реквизит Из НаборРеквизитов Цикл
		
		Если ТипЗнч(Реквизит) <> Тип("ОписаниеСтандартногоРеквизита") Тогда
			Если ОбязательныеРеквизиты.НайтиПоЗначению(Реквизит.Имя) = Неопределено Тогда
				Если ИсключенияРеквизитов.НайтиПоЗначению(Реквизит.Имя) <> Неопределено 
					Или (ТочечныеИсключенияРеквизитов <> Неопределено И 
						ТочечныеИсключенияРеквизитов.НайтиПоЗначению(Реквизит.Имя) <> Неопределено)
					Или (Не ПоказыватьВсеРеквизиты И Реквизит.Тип = ОписаниеБулева) Тогда 
					Продолжить;
				КонецЕсли;

				РеквизитВключен = Истина;
				РеквизитВходитВФункциональныеОпции = Ложь;
				
				ДоступныеОпции = АвтозаполнениеШаблоновФайловСерверПовтИсп.ПолучитьСписокФункциональныхОпций(Реквизит.ПолноеИмя());
				РеквизитВходитВФункциональныеОпции = ДоступныеОпции.Независимые.Количество() 
					Или ДоступныеОпции.Параметрические.Количество();
				РеквизитВключен = РеквизитДоступенПоФункциональнымОпциям(ДоступныеОпции, ВидВладельца);
				
				Если РеквизитВходитВФункциональныеОпции И НЕ РеквизитВключен Тогда
					Продолжить;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		Строка = Родитель.Строки.Добавить();
		Строка.Наименование = Реквизит.Имя;
		Строка.Тип = Реквизит.Тип;
		Строка.ОбъектРодитель = Путь;
		
		РеквизитРодитель = СтрЗаменить(РеквизитРодитель, "|", "_");
		Строка.РеквизитРодитель = РеквизитРодитель;
		Если Лев(Строка.РеквизитРодитель, 1) = "_" Тогда 
			Строка.РеквизитРодитель = Прав(Строка.РеквизитРодитель, СтрДлина(Строка.РеквизитРодитель) - 1);
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(Реквизит.Синоним) Тогда 
			Строка.Описание = Реквизит.Имя;
			Строка.ОписаниеПоляЗамены = Реквизит.Имя;
		Иначе 
			Строка.Описание = Реквизит.Синоним;
			Строка.ОписаниеПоляЗамены = Реквизит.Синоним;
		КонецЕсли;
		
		Для Каждого СправочникМетаданные Из Метаданные.Справочники Цикл
			
			Если СправочникМетаданные.ПредставлениеОбъекта <> Строка(Реквизит.Тип) Тогда
				Продолжить;
			ИначеЕсли СправочникМетаданные.Имя = "Валюты" 
				Или СправочникМетаданные.Имя = "ГрифыДоступа" Тогда
				Продолжить;
				
			ИначеЕсли СправочникМетаданные.Имя = "Пользователи" Тогда 
				ТочечныеИсключения = Новый СписокЗначений;
				ТочечныеИсключения.Добавить("Недействителен");
				ТочечныеИсключения.Добавить("Комментарий");
				ТочечныеИсключения.Добавить("Служебный");
				ТочечныеИсключения.Добавить("Подготовлен");
				ТочечныеИсключения.Добавить("ИдентификаторПользователяИБ");
				ТочечныеИсключения.Добавить("РазрешенныеВебСерверы");
				ТочечныеИсключения.Добавить("СвойстваПользователяИБ");
				ТочечныеИсключения.Добавить("ИдентификаторПользователяСервиса");
				ТочечныеИсключения.Добавить("КодЯзыка");
				ТочечныеИсключения.Добавить("Подразделение");
				ТочечныеИсключения.Добавить("ФизическоеЛицо");
				
			ИначеЕсли СправочникМетаданные.Имя = "Контрагенты" Тогда 
				
				ТочечныеИсключения = Новый СписокЗначений;
				ТочечныеИсключения.Добавить("ГруппаДоступа");
				ТочечныеИсключения.Добавить("Комментарий");
				ТочечныеИсключения.Добавить("ЮрФизЛицо");
				
			ИначеЕсли СправочникМетаданные.Имя = "ВидыВнутреннихДокументов" 
				Или СправочникМетаданные.Имя = "ВидыВходящихДокументов"
				Или СправочникМетаданные.Имя = "ВидыИсходящихДокументов" Тогда 
				
				ТочечныеИсключения = Новый СписокЗначений;
				ТочечныеИсключения.Добавить("НаборСвойств");
				ТочечныеИсключения.Добавить("УдалитьНумератор");
				ТочечныеИсключения.Добавить("УдалитьСпособНумерации");
				ТочечныеИсключения.Добавить("СрокИсполнения");
				ТочечныеИсключения.Добавить("Комментарий");
				
			ИначеЕсли СправочникМетаданные.Имя = "ДелаХраненияДокументов" Тогда 
				
				ТочечныеИсключения = Новый СписокЗначений;
				ТочечныеИсключения.Добавить("УдалитьМестоХранения");
				
			КонецЕсли;
			
			НовыйПуть = ?(ЗначениеЗаполнено(Путь), Путь + "|" + Строка.Наименование, Строка.Наименование);
			ЗаполнитьРеквизитыДляШаблона(Строка, СправочникМетаданные.Реквизиты, НовыйПуть,
				УровеньВложенности + 1, ВидВладельца, ОбязательныеРеквизиты, ИсключенияРеквизитов, ТочечныеИсключения, ПоказыватьВсеРеквизиты);
			ТочечныеИсключения = Новый СписокЗначений;
			Попытка
				НовыйПуть = ?(ЗначениеЗаполнено(Путь), Путь + "|" + Реквизит.Имя, Реквизит.Имя);
				Если СправочникМетаданные.ТабличныеЧасти.Найти("ДополнительныеРеквизиты") <> Неопределено Тогда
					ЗаполнитьСписокДопРеквизитовДляШаблона(Строка, СправочникМетаданные, НовыйПуть, 
						ВидВладельца, ПоказыватьВсеРеквизиты);
				КонецЕсли;
			Исключение
				// У справочника может не быть ни одного настроенного доп.реквизита
			КонецПопытки;
			
			Прервать;
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьСписокДопРеквизитовДляШаблона(Строка, СправочникМетаданные, Путь, ВидВладельцаФайла, ПоказыватьВсеРеквизиты)
	
	УстановитьПривилегированныйРежим(Истина);
	Объект = Справочники[СправочникМетаданные.Имя].СоздатьЭлемент();
	
	НаборСвойств = УправлениеСвойствамиСлужебный.ПолучитьНаборыСвойствОбъекта(Объект);
	КоличествоНаборов = НаборСвойств.Количество();
	
	Если КоличествоНаборов > 0 Тогда
		Массив = Новый Массив;
		Массив.Добавить(Тип("Булево"));
		ОписаниеБулева = Новый ОписаниеТипов(Массив);
		
		Для Каждого ВложенныйНаборСвойств Из НаборСвойств Цикл
			Для Каждого ДопРеквизит Из ВложенныйНаборСвойств.Набор.ДополнительныеРеквизиты Цикл
				РеквизитыСвойства = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДопРеквизит.Свойство,
					"ПометкаУдаления, Заголовок, Наименование, ТипЗначения, Комментарий, ФорматСвойства");
				Если ДопРеквизит.ПометкаУдаления Или РеквизитыСвойства.ПометкаУдаления = Истина Тогда 
					Продолжить;
				КонецЕсли;
				
				Если Не ПоказыватьВсеРеквизиты И РеквизитыСвойства.ТипЗначения = ОписаниеБулева Тогда 
					Продолжить;
				КонецЕсли;
				
				НоваяСтрокаДопРеквизит = Строка.Строки.Добавить();
				НоваяСтрокаДопРеквизит.Наименование = РеквизитыСвойства.Заголовок;
				НоваяСтрокаДопРеквизит.Тип = РеквизитыСвойства.ТипЗначения;
				НоваяСтрокаДопРеквизит.Описание = РеквизитыСвойства.Заголовок;
				НоваяСтрокаДопРеквизит.ДополнительныйРеквизит = Истина;
				
				Если КоличествоНаборов = 1 Тогда 
					НаборНаименование = "";
				Иначе 
					НаборНаименование = ВложенныйНаборСвойств.Набор.Наименование;
				КонецЕсли;
				
				НоваяСтрокаДопРеквизит.ОбъектРодитель = Путь + "|" + НСтр("ru = 'ДопРеквизиты'") 
					+ ?(ЗначениеЗаполнено(НаборНаименование), "|" + НаборНаименование, "");
				НоваяСтрокаДопРеквизит.ОбъектРодитель = СтрЗаменить(НоваяСтрокаДопРеквизит.ОбъектРодитель, 
					НСтр("ru = 'Доп. свойства'; en = 'Additional properties'"), НСтр("ru = 'ДопСвойства'"));
			
				РеквизитРодитель = СтрЗаменить(РеквизитРодитель, "|", "_");
				НоваяСтрокаДопРеквизит.РеквизитРодитель = РеквизитРодитель;
				Если Лев(НоваяСтрокаДопРеквизит.РеквизитРодитель, 1) = "_" Тогда 
					НоваяСтрокаДопРеквизит.РеквизитРодитель = Прав(НоваяСтрокаДопРеквизит.РеквизитРодитель, 
						СтрДлина(НоваяСтрокаДопРеквизит.РеквизитРодитель) - 1);
				КонецЕсли;
				
				Если ЗначениеЗаполнено(РеквизитыСвойства.Комментарий) Тогда 
					НоваяСтрокаДопРеквизит.ОписаниеПоляЗамены = РеквизитыСвойства.Комментарий;
				Иначе 
					НоваяСтрокаДопРеквизит.ОписаниеПоляЗамены = РеквизитыСвойства.Заголовок;
				КонецЕсли;
				
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

Процедура ДобавитьСтрокуДляШаблона(Строка, Путь, Наименование, Описание, Тип, ОписаниеПоляЗамены = "")
	
	НоваяСтрока = Строка.Строки.Добавить();
	
	НоваяСтрока.Наименование = Наименование;
	НоваяСтрока.Тип = Тип;
	НоваяСтрока.Описание = Описание;
	НоваяСтрока.ОбъектРодитель = Путь;
	
	РеквизитРодитель = СтрЗаменить(НоваяСтрока.ОбъектРодитель, "|", "_");
	НоваяСтрока.ОбъектРодитель = РеквизитРодитель;
	Если Лев(НоваяСтрока.ОбъектРодитель, 1) = "_" Тогда 
		НоваяСтрока.ОбъектРодитель = Прав(НоваяСтрока.ОбъектРодитель, СтрДлина(НоваяСтрока.ОбъектРодитель) - 1);
	КонецЕсли;
	
	Если ОписаниеПоляЗамены = "" Тогда 
		НоваяСтрока.ОписаниеПоляЗамены = Описание;
	Иначе 
		НоваяСтрока.ОписаниеПоляЗамены = ОписаниеПоляЗамены;
	КонецЕсли;
	
КонецПроцедуры

// Формирует структуру с описаниями функциональных опций, в состав которых входит объект
//	метаданных, указанный в параметре функции.
//
// Параметры:
//  ОбъектМетаданных - Строка - Строка с полным именем объекта метаданных конфигурации. Например:
//	 Справочник.Организации. Необязательный.
//
// Возвращаемое значение:
//  Структура, с двумя полями-описаниями типа Структура.
//	 * Ключ - Строка - варианты: "Независимые" или "Параметрические".
//	 * Значение - Структура - Описание функциональной опции.
//	Структура описания функциональной опции:
//	 * Ключ - Строка - имя функциональной опции
//	 * Значение - Структура с полями: 
//		"Хранение" - Структура - поля: Тип - Строка - тип объекта хранения ФО (например, "Справочник"),
//		Вид - Строка - вид объекта хранения ФО (например, "Организации"), ПолноеИмя - Строка - полное
//		имя объекта хранения (например: Справочник.Организации)
//		"Параметры" - Неопределено или Структура - описание см. функцию ПолучитьПараметрыФункциональнойОпции
//
Функция ПолучитьСписокФункциональныхОпций(ИмяОбъектаМетаданных = "") Экспорт
	
	СписокДоступныхОпций = Новый Структура("Независимые, Параметрические", Новый Структура, Новый Структура);
	
	ОбъектМетаданных = Неопределено;
	Если ЗначениеЗаполнено(ИмяОбъектаМетаданных) Тогда
		ОбъектМетаданных = Метаданные.НайтиПоПолномуИмени(ИмяОбъектаМетаданных);
		Если ОбъектМетаданных = Неопределено Тогда
			Возврат СписокДоступныхОпций;	
		КонецЕсли;
	КонецЕсли;
	
	Для Каждого ФункциональнаяОпция Из Метаданные.ФункциональныеОпции Цикл
		Если Не ФункциональнаяОпция.Состав.Содержит(ОбъектМетаданных) Тогда
			Продолжить;
		КонецЕсли;
		
		МассивСтрок = СтрРазделить(ФункциональнаяОпция.Хранение.ПолноеИмя(), ".");
		Если МассивСтрок.Количество() < 2 Тогда				
			Продолжить;
		КонецЕсли;
		
		ОписаниеХранения = Новый Структура;
		ОписаниеХранения.Вставить("Тип", МассивСтрок[0]);
		ОписаниеХранения.Вставить("Вид", МассивСтрок[1]);
		ОписаниеХранения.Вставить("ПолноеИмя", СтрШаблон("%1.%2", МассивСтрок[0], МассивСтрок[1]));
		
		Если СтрСравнить(ОписаниеХранения.Тип, "Константа") = 0 Тогда
			ОписаниеОпции = Новый Структура;
			ОписаниеОпции.Вставить("Хранение", ОписаниеХранения);
			ОписаниеОпции.Вставить("Параметры", Неопределено);
			
			СписокДоступныхОпций.Независимые.Вставить(ФункциональнаяОпция.Имя, ОписаниеОпции);
		Иначе
			// Получим подходящие для функциональной опции параметры
			ПараметрыОпции = АвтозаполнениеШаблоновФайловСерверПовтИсп.ПолучитьПараметрыФункциональнойОпции(ОписаниеХранения.ПолноеИмя);
			
			Если ПараметрыОпции.Количество() Тогда
				ОписаниеОпции = Новый Структура;
				ОписаниеОпции.Вставить("Хранение", ОписаниеХранения);
				ОписаниеОпции.Вставить("Параметры", ПараметрыОпции);
				
				СписокДоступныхОпций.Параметрические.Вставить(ФункциональнаяОпция.Имя, ОписаниеОпции);
			КонецЕсли;
		КонецЕсли;		
	КонецЦикла;
	
	Возврат СписокДоступныхОпций;
	
КонецФункции

// Формирует структуру со списком параметров функциональной опции
//
// Параметры:
//  ОбъектХраненияЗначения - Строка - Полное имя объекта метаданных конфигурации (например:
//	"Справочник.Организации").
//
// Возвращаемое значение:
//  Структура
//	 * Ключ - Строка - имя параметра ФО
//	 * Значение - Структура - описание параметра ФО
//  Структура описания параметра ФО:
//	Поля структуры описания параметра функциональной опции:
//	 * Поле - Строка - Имя измерения регистра сведений или "Ссылка".
//	 * Тип - Описание типов - описание типов поля
//
Функция ПолучитьПараметрыФункциональнойОпции(ОбъектХраненияЗначения) Экспорт
	
	СписокПараметров = Новый Структура;
	
	Для Каждого Параметр Из Метаданные.ПараметрыФункциональныхОпций Цикл
		ОписаниеХранения = Новый Структура;		
		Для Каждого Использование Из Параметр.Использование Цикл
			МассивСтрок = СтрРазделить(Использование.ПолноеИмя(), ".");			
			Если МассивСтрок.Количество() < 2 Тогда
				Продолжить;
			КонецЕсли;
						
			Если СтрСравнить(СтрШаблон("%1.%2", МассивСтрок[0], МассивСтрок[1]), ОбъектХраненияЗначения) = 0 Тогда
				Если СтрСравнить(МассивСтрок[0], "Справочник") = 0 Тогда
					ОписаниеХранения.Вставить("Поле", "Ссылка");
					ОписаниеХранения.Вставить("Тип", Новый ОписаниеТипов(СтрШаблон("%1Ссылка.%2", МассивСтрок[0], МассивСтрок[1])));
				Иначе
					ОписаниеХранения.Вставить("Поле", МассивСтрок[3]);
					ОписаниеХранения.Вставить("Тип", Использование.Тип);
				КонецЕсли;
				
				Прервать;
			КонецЕсли;			
		КонецЦикла;
		
		Если ОписаниеХранения.Количество() Тогда
			СписокПараметров.Вставить(Параметр.Имя, ОписаниеХранения);
		КонецЕсли;
	КонецЦикла;
	
	Возврат СписокПараметров;
	
КонецФункции

Функция РеквизитДоступенПоФункциональнымОпциям(ДоступныеОпции, ЗначениеПараметра)
	
	РеквизитДоступен = Ложь;
	
	Если ДоступныеОпции.Независимые.Количество() Тогда
		Для Каждого Опция Из ДоступныеОпции.Независимые Цикл
			РеквизитДоступен = ПолучитьФункциональнуюОпцию(Опция.Ключ);
			Если РеквизитДоступен Тогда
				Прервать;
			КонецЕсли;
		КонецЦикла;
	
		Если Не РеквизитДоступен Тогда
			Возврат РеквизитДоступен;
		КонецЕсли;
	КонецЕсли;
	
	Для Каждого Опция Из ДоступныеОпции.Параметрические Цикл
		ПараметрыОпции = Новый Структура;
		Для Каждого Параметр Из Опция.Значение.Параметры Цикл
			Если (Справочники.ТипВсеСсылки().СодержитТип(ТипЗнч(ЗначениеПараметра))
					И СтрСравнить(Опция.Значение.Хранение.ПолноеИмя, ЗначениеПараметра.Метаданные().ПолноеИмя()) = 0)
					Или (СтрСравнить(Опция.Значение.Хранение.Тип, "РегистрСведений") = 0 
						И Параметр.Значение.Тип.СодержитТип(ТипЗнч(ЗначениеПараметра))) Тогда
				
				ПараметрыОпции.Вставить(Параметр.Ключ, ЗначениеПараметра);
						
			КонецЕсли;
		КонецЦикла;
			
		Если ПараметрыОпции.Количество() Тогда
			РеквизитДоступен = ПолучитьФункциональнуюОпцию(Опция.Ключ, ПараметрыОпции);
			Если РеквизитДоступен Тогда
				Прервать;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Возврат РеквизитДоступен;
	
КонецФункции


