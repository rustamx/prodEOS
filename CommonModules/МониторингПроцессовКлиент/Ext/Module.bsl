////////////////////////////////////////////////////////////////////////////////
// Подсистема "Мониторинг процессов".
//
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Восстанавливает набор показателей по умолчанию для текущего пользователя,
// при этом удаляя все существующие показатели.
//
Процедура ВосстановитьПоказателиПоУмолчанию() Экспорт
	
	ОписаниеОповещения = 
		Новый ОписаниеОповещения("ВосстановитьПоказателиПоУмолчаниюЗавершение", ЭтотОбъект);
	ТекстВопроса =НСтр(
		"ru = 'Внимание! Все существующие показатели будут удалены и восстановлены показатели по умолчанию.
		|Восстановить состав показателей процессов по умолчанию?';
		|en = 'Attention! All the existing metrics will be removed and the default metrics will be restored.
		|Restore default process metrics?'");
	
	ОбщегоНазначенияДокументооборотКлиент.ПоказатьВопросДаНет(ОписаниеОповещения, ТекстВопроса);
	
КонецПроцедуры

// Создает показатель процесса.
//
// Параметры:
//  Владелец - УправляемаяФорма - Владелец открывшейся формы.
//
Процедура ОткрытьДиалогСозданияПоказателяПроцесса(Владелец) Экспорт
	
	ОписаниеОповещения =
		Новый ОписаниеОповещения("ОткрытьДиалогСозданияПоказателяПроцессаЗавершение", ЭтотОбъект);
	ОткрытьФормуВыбораИзБиблиотеки(
		"СозданиеПоказателя",
		Владелец,
		ОписаниеОповещения);
	
КонецПроцедуры

// Открывает форму все показатели.
//
Процедура ОткрытьФормуВсеПоказатели() Экспорт
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ВариантФормы", "ВсеПоказатели");
	ОткрытьФорму("Справочник.ПоказателиПроцессов.Форма.МониторингПроцессов", ПараметрыФормы);
	
КонецПроцедуры

// Открывает форму выбора варианта расчета и помещает результат в показатель процесса.
//
// Параметры:
//  ПоказательПроцесса - ДанныеФормыКоллекция - Имя реквизита показателя процесса.
//  Владелец - УправляемаяФорма - Владелец открывшейся формы.
//  Представление - Строка - Имя реквизита представления вариант расчета.
//  ВариантРасчета - Структура - Вариант расчет показателя. См. Справочники.ПоказателиПроцессов.ВариантРасчета().
//
Процедура ВыбратьВариантРасчета(ПоказательПроцесса, Владелец, Представление, ВариантРасчета) Экспорт
	
	ПараметрыОбработчика = Новый Структура;
	ПараметрыОбработчика.Вставить("ПоказательПроцесса", ПоказательПроцесса);
	ПараметрыОбработчика.Вставить("Представление", Представление);
	ПараметрыОбработчика.Вставить("Владелец", Владелец);
	ОписаниеОповещения = 
		Новый ОписаниеОповещения("ВыбратьВариантРасчетаЗавершение", ЭтотОбъект, ПараметрыОбработчика);
	
	ОткрытьФормуВыбораИзБиблиотеки(
		"ВыборВариантаРасчета",
		Владелец,
		ОписаниеОповещения,
		ВариантРасчета);
	
КонецПроцедуры

// Открывает форму выбора варианта расчета и помещает результат в показатель процесса.
//
// Параметры:
//  ПоказательПроцесса - ДанныеФормыКоллекция - Имя реквизита показателя процесса.
//  Владелец - УправляемаяФорма - Владелец открывшейся формы.
//  Представление - Строка - Имя реквизита представления вариант отбор.
//  НаборВариантовОтбора - Массив - Набор вариантов отбора показателя.
//
Процедура ВыбратьВариантОтбора(ПоказательПроцесса, Владелец, Представление,
	ВариантРасчета, НаборВариантовОтбора) Экспорт
	
	ПараметрыОбработчика = Новый Структура;
	ПараметрыОбработчика.Вставить("ПоказательПроцесса", ПоказательПроцесса);
	ПараметрыОбработчика.Вставить("Представление", Представление);
	ПараметрыОбработчика.Вставить("Владелец", Владелец);
	ОписаниеОповещения =
		Новый ОписаниеОповещения("ВыбратьВариантОтбораЗавершение", ЭтотОбъект, ПараметрыОбработчика);
	
	ОткрытьФормуВыбораИзБиблиотеки(
		"ВыборВариантаОтбора",
		Владелец,
		ОписаниеОповещения,
		ВариантРасчета,
		НаборВариантовОтбора);
	
КонецПроцедуры

// Выполняет пересчет показателей.
//
// Параметры:
//  ПоказателиПроцессов - Массив - Показатели процессов.
//  ДатаПересчета - Дата - Дата до которой следует выполнить пересчет.
//  УдалитьСтарыеЗначения - Булево - Очистить ранее рассчитанные значения показателя.
//
Процедура ПересчитатьПоказатели(ПоказателиПроцессов, ДатаПересчета, УдалитьСтарыеЗначения) Экспорт
	
	МониторингПроцессовВызовСервера.ПересчитатьПоказатели(
		ПоказателиПроцессов,
		ДатаПересчета,
		УдалитьСтарыеЗначения);
	
	КоличествоПоказателей = ПоказателиПроцессов.Количество();
	Если КоличествоПоказателей = 1 Тогда
		ПоказательПроцесса = ПоказателиПроцессов[0];
		ТекстОповещения = НСтр("ru = 'Запланирован пересчет показателя'; en = 'Scheduled recalculation of metric'");
		Пояснение = Строка(ПоказательПроцесса);
		НавигационнаяСсылка = ПолучитьНавигационнуюСсылку(ПоказательПроцесса);
		ИзмененныйОбъект = ПоказательПроцесса;
	Иначе
		ТекстОповещения = СтрШаблон(
			НСтр("ru = 'Запланирован пересчет показателей (%1)'; en = 'Scheduled recalculation of metrics (%1)'"),
			КоличествоПоказателей);
		Пояснение = Неопределено;
		НавигационнаяСсылка = Неопределено;
		ИзмененныйОбъект = Тип("СправочникСсылка.ПоказателиПроцессов");
	КонецЕсли;
	
	ПоказатьОповещениеПользователя(
		ТекстОповещения,
		НавигационнаяСсылка,
		Пояснение,
		БиблиотекаКартинок.Информация32);
	
	ОповеститьОбИзменении(ИзмененныйОбъект);
	
КонецПроцедуры

// Выполняет пересчет показателя.
//
// Параметры:
//  ПоказательПроцесса - СправочникСсылка.ПоказателиПроцессов - Показатель процесса.
//  ДатаПересчета - Дата - Дата до которой следует выполнить пересчет.
//  УдалитьСтарыеЗначения - Булево - Очистить ранее рассчитанные значения показателя.
//
Процедура ПересчитатьПоказатель(ПоказательПроцесса, ДатаПересчета, УдалитьСтарыеЗначения) Экспорт
	
	ПоказателиПроцессов = Новый Массив;
	ПоказателиПроцессов.Добавить(ПоказательПроцесса);
	ПересчитатьПоказатели(ПоказателиПроцессов, ДатаПересчета, УдалитьСтарыеЗначения);
	
КонецПроцедуры

// Изменяет подписку на переданные показатели.
//
// Параметры:
//  ПоказателиПроцессов -  Массив - Показатели процессов.
//
Процедура Отслеживать(ПоказателиПроцессов) Экспорт
	
	Результат = МониторингПроцессовВызовСервера.Отслеживать(ПоказателиПроцессов);
	
	Если Результат.КоличествоОбработанныхЭлементов = 1 Тогда
		Если Результат.УстановленоОтслеживание Тогда
			ТекстОповещения = НСтр("ru = 'Установлено отслеживание показателя'; en = 'Started monitoring of metric'");
		Иначе
			ТекстОповещения = НСтр("ru = 'Снято отслеживание показателя'; en = 'Stopped monitoring of metric'");
		КонецЕсли;
		Пояснение = Строка(Результат.ОбработанныйЭлемент);
		НавигационнаяСсылка = ПолучитьНавигационнуюСсылку(Результат.ОбработанныйЭлемент);
		ИзмененныйОбъект = Результат.ОбработанныйЭлемент;
	Иначе
		Если Результат.УстановленоОтслеживание Тогда
			ТекстОповещения = СтрШаблон(НСтр("ru = 'Установлено отслеживание показателей (%1)'; en = 'Started monitoring of metrics (%1)'"),
				Результат.КоличествоОбработанныхЭлементов);
		Иначе
			ТекстОповещения = СтрШаблон(НСтр("ru = 'Снято отслеживание показателей (%1)'; en = 'Stopped monitoring of metrics (%1)'"),
				Результат.КоличествоОбработанныхЭлементов);
		КонецЕсли;
		Пояснение = Неопределено;
		НавигационнаяСсылка = Неопределено;
		ИзмененныйОбъект = Тип("СправочникСсылка.ПоказателиПроцессов");
	КонецЕсли;
	
	ПоказатьОповещениеПользователя(
		ТекстОповещения,
		НавигационнаяСсылка,
		Пояснение,
		БиблиотекаКартинок.Информация32);
	
	ОповеститьОбИзменении(ИзмененныйОбъект);
	Оповестить("Запись_ПодпискиНаПоказателиПроцессов", ИзмененныйОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Обработчик описания оповещения процедуры ВосстановитьПоказателиПоУмолчанию.
//
Процедура ВосстановитьПоказателиПоУмолчаниюЗавершение(Результат, Параметры) Экспорт
	
	Если Результат <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	МониторингПроцессовВызовСервера.ВосстановитьПоказателиПоУмолчанию();
	ОповеститьОбИзменении(Тип("СправочникСсылка.ПоказателиПроцессов"));
	
КонецПроцедуры

// Обработчик описания оповещения процедуры ОткрытьДиалогСозданияПоказателяПроцесса.
//
Процедура ОткрытьДиалогСозданияПоказателяПроцессаЗавершение(Результат, Параметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Показатель = МониторингПроцессовВызовСервера.ДобавитьБиблиотечныйПоказатель(
		Результат.ВариантРасчета, Результат.НаборВариантовОтбора);
	
	ПоказатьОповещениеПользователя(
		НСтр("ru = 'Создание:'; en = 'Added:'"),
		ПолучитьНавигационнуюСсылку(Показатель),
		Строка(Показатель),
		БиблиотекаКартинок.Информация32);
	
	Оповестить("Запись_ПоказательПроцесса", Показатель);
	
КонецПроцедуры

// Обработчик описания оповещения процедуры ВыбратьВариантРасчета.
//
Процедура ВыбратьВариантРасчетаЗавершение(Результат, Параметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(Параметры.ПоказательПроцесса, Результат.ВариантРасчета);
	Параметры.Владелец[Параметры.Представление] = Результат.ВариантРасчетаТекст;
	
КонецПроцедуры

// Обработчик описания оповещения процедуры ВыбратьВариантОтбора.
//
Процедура ВыбратьВариантОтбораЗавершение(Результат, Параметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Параметры.ПоказательПроцесса.ОтборыДанных.Очистить();
	Для Каждого ВариантОтбора Из Результат.НаборВариантовОтбора Цикл
		НовыйВариантОтбора = Параметры.ПоказательПроцесса.ОтборыДанных.Добавить();
		ЗаполнитьЗначенияСвойств(НовыйВариантОтбора, ВариантОтбора);
	КонецЦикла;
	Параметры.Владелец[Параметры.Представление] = Результат.ВариантОтбораТекст;
	
КонецПроцедуры

// Открывает форму выбора из библиотеки.
//
// Параметры:
//  ВариантФормы - Строка - Вариант формы выбора из библиотеки.
//  Владелец - УправляемаяФорма - Владелец открывшейся формы.
//  ОписаниеОповещения - ОписаниеОповещения - Описание оповещения.
//
Процедура ОткрытьФормуВыбораИзБиблиотеки(ВариантФормы, Владелец, ОписаниеОповещения,
	ТекущийВариантРасчета = Неопределено, ТекущийНаборВариантовОтбора = Неопределено)
	
	Если ТекущийНаборВариантовОтбора = Неопределено Тогда
		ТекущийНаборВариантовОтбора = Новый Массив;
	КонецЕсли;
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("ВариантФормы", ВариантФормы);
	ПараметрыОткрытия.Вставить("ТекущийВариантРасчета", ТекущийВариантРасчета);
	ПараметрыОткрытия.Вставить("ТекущийНаборВариантовОтбора", ТекущийНаборВариантовОтбора);
	
	ОткрытьФорму("Справочник.ПоказателиПроцессов.Форма.ВыборИзБиблиотеки",
		ПараметрыОткрытия,
		Владелец,,,,
		ОписаниеОповещения);
	
КонецПроцедуры

#КонецОбласти
