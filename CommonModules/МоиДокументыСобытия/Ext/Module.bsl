
// Обработчик подписки на событие ДобавлениеВМоиДокументыПередЗаписью.
// Формирует структуру старых реквизитов источника
//
// Параметры:
//   Источник - ЛюбаяСсылка - ссылка на объект-источник события
//
Процедура ДобавлениеВМоиДокументыПередЗаписьюПередЗаписью(Источник, Отказ) Экспорт
	
	Если Источник.ОбменДанными.Загрузка 
		Или Источник.ДополнительныеСвойства.Свойство("РеорганизацияРолейСОбъектамиАдресации") Тогда
		Возврат;
	КонецЕсли;
	
	ПользователиПустаяСсылка = Справочники.Пользователи.ПустаяСсылка();
	
	Если ТипЗнч(Источник.Ссылка) = Тип("ЗадачаСсылка.ЗадачаИсполнителя") Тогда 
		
		Если Источник.ДополнительныеСвойства.Свойство("ВидЗаписи")
			И Источник.ДополнительныеСвойства.ВидЗаписи <> 
				"ЗаписьСОбновлением_МоихДокументов_КешаИнформацииОбОбъектах_ВизСогласования_ПредметовПодчиненныхПроцессов_ДопРеквизитовПоПредметам_СобытийИзмененияПредметов" Тогда
			
			Возврат;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Источник.Ссылка) Тогда 
			СтарыеРеквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Источник.Ссылка, 
				"Исполнитель, Автор, ПометкаУдаления, Выполнена, СостояниеБизнесПроцесса");
		Иначе
			СтарыеРеквизиты = Новый Структура("Исполнитель, Автор, ПометкаУдаления, Выполнена, СостояниеБизнесПроцесса",
				ПользователиПустаяСсылка,
				ПользователиПустаяСсылка,
				Ложь,
				Ложь,
				Перечисления.СостоянияБизнесПроцессов.ПустаяСсылка());
		КонецЕсли;
		
		Источник.ДополнительныеСвойства.Вставить("СтарыйИсполнитель", 		СтарыеРеквизиты.Исполнитель);
		Источник.ДополнительныеСвойства.Вставить("СтарыйАвтор", 			СтарыеРеквизиты.Автор);
		Источник.ДополнительныеСвойства.Вставить("СтараяПометкаУдаления", 	СтарыеРеквизиты.ПометкаУдаления);
		Источник.ДополнительныеСвойства.Вставить("СтароеВыполнена", 		СтарыеРеквизиты.Выполнена);
		Источник.ДополнительныеСвойства.Вставить("СтароеСостояние", 		СтарыеРеквизиты.СостояниеБизнесПроцесса);
	КонецЕсли;
	
	Если ДелопроизводствоКлиентСервер.ЭтоДокумент(Источник.Ссылка) Тогда 
		
		Если ЗначениеЗаполнено(Источник.Ссылка) Тогда 
			СтарыеРеквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Источник.Ссылка, 
				"Ответственный, ПометкаУдаления");
		Иначе
			СтарыеРеквизиты = Новый Структура("Ответственный, ПометкаУдаления",
				ПользователиПустаяСсылка,
				Ложь);
		КонецЕсли;
		
		Источник.ДополнительныеСвойства.Вставить("СтарыйОтветственный", 	СтарыеРеквизиты.Ответственный);
		Источник.ДополнительныеСвойства.Вставить("СтараяПометкаУдаления",	СтарыеРеквизиты.ПометкаУдаления);
		
	КонецЕсли;
	
	Если ДелопроизводствоКлиентСервер.ЭтоИсходящийДокумент(Источник.Ссылка) Тогда 
		
		Если ЗначениеЗаполнено(Источник.Ссылка) Тогда 
			СтарыеРеквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Источник.Ссылка, 
				"Подготовил");
		Иначе
			СтарыеРеквизиты = Новый Структура("Подготовил",
				ПользователиПустаяСсылка);
		КонецЕсли;
		
		Источник.ДополнительныеСвойства.Вставить("СтарыйПодготовил", СтарыеРеквизиты.Подготовил);
		
	КонецЕсли;
	
	Если ДелопроизводствоКлиентСервер.ЭтоВнутреннийДокумент(Источник.Ссылка) Тогда

		Если ЗначениеЗаполнено(Источник.Ссылка) Тогда 
			СтарыеРеквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Источник.Ссылка, 
				"Подготовил, Подписал, Стороны, ГрифыУтверждения");
		Иначе
			ПустаяТаблицаСторон = Новый ТаблицаЗначений;
			ПустаяТаблицаСторон.Колонки.Добавить("Сторона");
			ПустаяТаблицаСторон.Колонки.Добавить("Подписал");
			
			ПустаяТаблицаГрифов = Новый ТаблицаЗначений;
			ПустаяТаблицаГрифов.Колонки.Добавить("АвторУтверждения");
			
			СтарыеРеквизиты = Новый Структура("Подготовил, Подписал, Стороны, ГрифыУтверждения",
				ПользователиПустаяСсылка, ПользователиПустаяСсылка, ПустаяТаблицаСторон, ПустаяТаблицаГрифов);
		КонецЕсли;
		
		Источник.ДополнительныеСвойства.Вставить("СтарыйПодготовил", СтарыеРеквизиты.Подготовил);
		Источник.ДополнительныеСвойства.Вставить("СтарыйПодписал", СтарыеРеквизиты.Подписал);
		
		СтарыеПодписанты = РаботаСПодписямиДокументов.ПодписантыСторонДокумента(СтарыеРеквизиты.Стороны);
		Источник.ДополнительныеСвойства.Вставить("СтарыеПодписанты", СтарыеПодписанты);
		
		СтарыеАвторыГрифов = РаботаСГрифамиУтверждений.АвторыУтвержденийДокумента(СтарыеРеквизиты.ГрифыУтверждения);
		Источник.ДополнительныеСвойства.Вставить("СтарыеАвторыГрифов", СтарыеАвторыГрифов);
		
	КонецЕсли;	
	
	Если ДелопроизводствоКлиентСервер.ЭтоВходящийДокумент(Источник.Ссылка) Тогда 
		
		Если ЗначениеЗаполнено(Источник.Ссылка) Тогда 
			СтарыеРеквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Источник.Ссылка, 
				"Зарегистрировал");
		Иначе
			СтарыеРеквизиты = Новый Структура("Зарегистрировал",
				ПользователиПустаяСсылка);
		КонецЕсли;
		
		Источник.ДополнительныеСвойства.Вставить("СтарыйПодготовил", СтарыеРеквизиты.Зарегистрировал);
		
	КонецЕсли;
	
КонецПроцедуры

// Обработчик подписки на событие ДобавлениеВМоиДокументыПриЗаписи.
// Записывает документ в регистр МоиДокументы.
//
// Параметры:
//   Источник - ЛюбаяСсылка - ссылка на объект-источник события
//
Процедура ДобавлениеВМоиДокументыПриЗаписиПриЗаписи(Источник, Отказ) Экспорт
	
	Если Источник.ОбменДанными.Загрузка 
		Или Источник.ДополнительныеСвойства.Свойство("РеорганизацияРолейСОбъектамиАдресации") Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(Источник.Ссылка) = Тип("ЗадачаСсылка.ЗадачаИсполнителя")
		И Источник.ДополнительныеСвойства.Свойство("ВидЗаписи")
		И Источник.ДополнительныеСвойства.ВидЗаписи <> 
			"ЗаписьСОбновлением_МоихДокументов_КешаИнформацииОбОбъектах_ВизСогласования_ПредметовПодчиненныхПроцессов_ДопРеквизитовПоПредметам_СобытийИзмененияПредметов" Тогда
		
		Возврат;
	КонецЕсли;
	
	ДобавлениеВМоиДокументыНазначенаЗадачаМне(Источник);
	
	ДобавлениеВМоиДокументыЯвляюсьОтветственнымЗаДокумент(Источник);
	
	ДобавлениеВМоиДокументыЯвляюсьАвторомДокумента(Источник);
	
	ДобавлениеВМоиДокументыЯвляюсьПодписантомДокумента(Источник);
	
	ДобавлениеВМоиДокументыЯвляюсьАвторомУтверждения(Источник);	
	
КонецПроцедуры

// Обработчик подписки на событие ДобавлениеВМоиДокументыПриЗаписиРегистра.
// Исключает документ в регистр МоиДокументы при изменении состояния.
//
// Параметры:
//   Источник - РегистрСведенийНаборЗаписей.ТекущиеСостоянияДокументов - 
//				набор записей регистра ТекущиеСостоянияДокументов
//
Процедура ДобавлениеВМоиДокументыПриЗаписиРегистраПриЗаписи(Источник, Отказ, Замещение) Экспорт
	
	Если Источник.ОбменДанными.Загрузка 
		Или Источник.ДополнительныеСвойства.Свойство("РеорганизацияРолейСОбъектамиАдресации") Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	Для Каждого Строка Из Источник Цикл
		
		Если ДелопроизводствоКлиентСервер.ЭтоИсходящийДокумент(Строка.Документ) Тогда 
			// документ исключается, когда зарегистрирован и отправлен 
			
			РеквизитыДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Строка.Документ, 
				"Ссылка, РегистрационныйНомер, Получатели");
			
			Получатели = РеквизитыДокумента.Получатели.Выгрузить();
			
			Исключается = ЗначениеЗаполнено(РеквизитыДокумента.РегистрационныйНомер)
				И Получатели.Найти(Ложь, "Отправлен") = Неопределено;
			
		ИначеЕсли ДелопроизводствоКлиентСервер.ЭтоВнутреннийДокумент(Строка.Документ) Тогда 	
			// документ исключается, когда зарегистрирован и исполнен 
			
			РеквизитыДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Строка.Документ, 
				"Ссылка, РегистрационныйНомер");
			
			ВсеСостояния = Делопроизводство.ПолучитьВсеСостоянияДокумента(РеквизитыДокумента.Ссылка);
			
			Исключается = ЗначениеЗаполнено(РеквизитыДокумента.РегистрационныйНомер)
				И ВсеСостояния.Найти(Перечисления.СостоянияДокументов.Исполнен, "Состояние") <> Неопределено;
			
		Иначе
			Продолжить;
		КонецЕсли;
		
		Если Исключается Тогда 
			МоиДокументы.УдалитьЗаписьИзМоиДокументы(Строка.Документ,
				Перечисления.ПричиныДобавленияВМоиДокументы.ЯвляюсьАвторомДокумента,
				Строка.Документ.Подготовил);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ДобавлениеВМоиДокументыНазначенаЗадачаМне(Источник)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если ТипЗнч(Источник.Ссылка) <> Тип("ЗадачаСсылка.ЗадачаИсполнителя") Тогда 
		Возврат;
	КонецЕсли;
	
	Если Источник.ДополнительныеСвойства.СтарыйИсполнитель = Источник.Исполнитель 
	   И Источник.ДополнительныеСвойства.СтарыйАвтор = Источник.Автор 
	   И Источник.ДополнительныеСвойства.СтараяПометкаУдаления = Источник.ПометкаУдаления
	   И Источник.ДополнительныеСвойства.СтароеВыполнена = Источник.Выполнена
	   И Источник.ДополнительныеСвойства.СтароеСостояние = Источник.СостояниеБизнесПроцесса Тогда 
		Возврат;
	КонецЕсли;
	
	ТипыПредметов = МультипредметностьКлиентСервер.ПолучитьТипыДокументов();
	Предметы = МультипредметностьКлиентСервер.ПолучитьМассивПредметовОбъекта(Источник, ТипыПредметов);
	Если Предметы.Количество() = 0 Тогда 
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	МоиДокументы.Пользователь,
	|	МоиДокументы.Документ,
	|	МоиДокументы.Причина
	|ИЗ
	|	РегистрСведений.МоиДокументы КАК МоиДокументы
	|ГДЕ
	|	МоиДокументы.Документ В(&Предметы)
	|	И МоиДокументы.Пользователь В(&Пользователи)
	|	И МоиДокументы.Причина В(&Причины)";
	
	Запрос.УстановитьПараметр("Предметы", Предметы);
	
	Причины = Новый Массив;
	Причины.Добавить(Перечисления.ПричиныДобавленияВМоиДокументы.НазначенаЗадачаМне);
	Причины.Добавить(Перечисления.ПричиныДобавленияВМоиДокументы.ОтправленаЗадачаОтМеня);
	Запрос.УстановитьПараметр("Причины", Причины);
	
	МассивПользователи = Новый Массив;
	Если ЗначениеЗаполнено(Источник.ДополнительныеСвойства.СтарыйИсполнитель) Тогда 
		МассивПользователи.Добавить(Источник.ДополнительныеСвойства.СтарыйИсполнитель);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Источник.ДополнительныеСвойства.СтарыйАвтор) Тогда 
		МассивПользователи.Добавить(Источник.ДополнительныеСвойства.СтарыйАвтор);
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Пользователи", МассивПользователи);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		МенеджерЗаписи = РегистрыСведений.МоиДокументы.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(МенеджерЗаписи, Выборка);
		МенеджерЗаписи.Удалить();
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗадачаИсполнителяПредметы.Предмет КАК Предмет,
	|	ЗадачаИсполнителяПредметы.Ссылка.Исполнитель КАК Исполнитель,
	|	"""" КАК Автор
	|ИЗ
	|	Задача.ЗадачаИсполнителя.Предметы КАК ЗадачаИсполнителяПредметы
	|ГДЕ
	|	ЗадачаИсполнителяПредметы.Предмет В(&Предметы)
	|	И НЕ ЗадачаИсполнителяПредметы.Ссылка.ПометкаУдаления
	|	И НЕ ЗадачаИсполнителяПредметы.Ссылка.Выполнена
	|	И ЗадачаИсполнителяПредметы.Ссылка.СостояниеБизнесПроцесса = ЗНАЧЕНИЕ(Перечисление.СостоянияБизнесПроцессов.Активен)
	|	И ЗадачаИсполнителяПредметы.Ссылка.Исполнитель В(&Пользователи)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗадачаИсполнителяПредметы.Предмет,
	|	"""",
	|	ЗадачаИсполнителяПредметы.Ссылка.Автор
	|ИЗ
	|	Задача.ЗадачаИсполнителя.Предметы КАК ЗадачаИсполнителяПредметы
	|ГДЕ
	|	ЗадачаИсполнителяПредметы.Предмет В(&Предметы)
	|	И НЕ ЗадачаИсполнителяПредметы.Ссылка.ПометкаУдаления
	|	И НЕ ЗадачаИсполнителяПредметы.Ссылка.Выполнена
	|	И ЗадачаИсполнителяПредметы.Ссылка.СостояниеБизнесПроцесса = ЗНАЧЕНИЕ(Перечисление.СостоянияБизнесПроцессов.Активен)
	|	И ЗадачаИсполнителяПредметы.Ссылка.Автор В(&Авторы)";
	
	Запрос.УстановитьПараметр("Предметы", Предметы);
	
	МассивПользователи.Добавить(Источник.Исполнитель);
	МассивПользователи.Добавить(Источник.Автор);
	Запрос.УстановитьПараметр("Пользователи", МассивПользователи);
	
	МассивАвторы = Новый Массив;
	МассивАвторы.Добавить(Источник.Автор);
	
	Если ЗначениеЗаполнено(Источник.ДополнительныеСвойства.СтарыйАвтор) Тогда 
		МассивАвторы.Добавить(Источник.ДополнительныеСвойства.СтарыйАвтор);
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Авторы", МассивАвторы);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Если ЗначениеЗаполнено(Выборка.Исполнитель) 
			И ТипЗнч(Выборка.Исполнитель) = Тип("СправочникСсылка.Пользователи") Тогда 
			МоиДокументы.ДобавитьЗаписьВМоиДокументы(Выборка.Предмет, 
				Перечисления.ПричиныДобавленияВМоиДокументы.НазначенаЗадачаМне,
				Выборка.Исполнитель);
		КонецЕсли;
			
		Если ЗначениеЗаполнено(Выборка.Автор)
			И ТипЗнч(Выборка.Автор) = Тип("СправочникСсылка.Пользователи") Тогда 
			МоиДокументы.ДобавитьЗаписьВМоиДокументы(Выборка.Предмет, 
				Перечисления.ПричиныДобавленияВМоиДокументы.ОтправленаЗадачаОтМеня,
				Выборка.Автор);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ДобавлениеВМоиДокументыЯвляюсьОтветственнымЗаДокумент(Источник)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если Не ДелопроизводствоКлиентСервер.ЭтоДокумент(Источник.Ссылка) Тогда 
		Возврат;
	КонецЕсли;
	
	Документ = Источник.Ссылка;
	
	// изменилась пометка удаления
	СтараяПометкаУдаления = Источник.ДополнительныеСвойства.СтараяПометкаУдаления;
	Если СтараяПометкаУдаления <> Источник.ПометкаУдаления Тогда 
		
		Если Не СтараяПометкаУдаления И Источник.ПометкаУдаления Тогда 
			
			МоиДокументы.УдалитьЗаписьИзМоиДокументы(Документ,
				Перечисления.ПричиныДобавленияВМоиДокументы.ЯвляюсьОтветственнымЗаДокумент,
				Источник.Ответственный);
			
		ИначеЕсли СтараяПометкаУдаления И Не Источник.ПометкаУдаления Тогда 		
			
			МоиДокументы.ДобавитьЗаписьВМоиДокументы(Документ, 
				Перечисления.ПричиныДобавленияВМоиДокументы.ЯвляюсьОтветственнымЗаДокумент,
				Источник.Ответственный);
			
		КонецЕсли;
	КонецЕсли;
	
	// изменился ответственный
	СтарыйОтветственный = Источник.ДополнительныеСвойства.СтарыйОтветственный;
	Если СтарыйОтветственный <> Источник.Ответственный Тогда 
		
		Если ЗначениеЗаполнено(СтарыйОтветственный) Тогда 
			МоиДокументы.УдалитьЗаписьИзМоиДокументы(Документ,
				Перечисления.ПричиныДобавленияВМоиДокументы.ЯвляюсьОтветственнымЗаДокумент,
				СтарыйОтветственный);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Источник.Ответственный) Тогда 
			МоиДокументы.ДобавитьЗаписьВМоиДокументы(Документ, 
				Перечисления.ПричиныДобавленияВМоиДокументы.ЯвляюсьОтветственнымЗаДокумент,
				Источник.Ответственный);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ДобавлениеВМоиДокументыЯвляюсьАвторомДокумента(Источник)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если Не ДелопроизводствоКлиентСервер.ЭтоДокумент(Источник.Ссылка) Тогда 
		Возврат;
	КонецЕсли;
	
	Если ДелопроизводствоКлиентСервер.ЭтоИсходящийДокумент(Источник.Ссылка) Тогда 
		
		Подготовил = Источник.Подготовил;
		
		// документ исключается, когда зарегистрирован и отправлен 
		Исключается = ЗначениеЗаполнено(Источник.РегистрационныйНомер)
			И Источник.Получатели.Найти(Ложь, "Отправлен") = Неопределено;
			
	ИначеЕсли ДелопроизводствоКлиентСервер.ЭтоВнутреннийДокумент(Источник.Ссылка) Тогда 
		
		Подготовил = Источник.Подготовил;
		
		// документ исключается, когда зарегистрирован и исполнен 
		ВсеСостояния = Делопроизводство.ПолучитьВсеСостоянияДокумента(Источник.Ссылка);
		Исключается = ЗначениеЗаполнено(Источник.РегистрационныйНомер)
			И ВсеСостояния.Найти(Перечисления.СостоянияДокументов.Исполнен, "Состояние") <> Неопределено;
			
	ИначеЕсли ДелопроизводствоКлиентСервер.ЭтоВходящийДокумент(Источник.Ссылка) Тогда 
			
		Подготовил = Источник.Зарегистрировал;
		
		// документ исключается, когда зарегистрирован
		Исключается = ЗначениеЗаполнено(Источник.РегистрационныйНомер);
		
	КонецЕсли; 
	
	Документ = Источник.Ссылка;
	
	// изменилась пометка удаления
	СтараяПометкаУдаления = Источник.ДополнительныеСвойства.СтараяПометкаУдаления;
	Если СтараяПометкаУдаления <> Источник.ПометкаУдаления Тогда 
		
		Если Не СтараяПометкаУдаления И Источник.ПометкаУдаления Тогда 
			
			МоиДокументы.УдалитьЗаписьИзМоиДокументы(Документ,
				Перечисления.ПричиныДобавленияВМоиДокументы.ЯвляюсьАвторомДокумента,
				Подготовил);
			
		ИначеЕсли СтараяПометкаУдаления И Не Источник.ПометкаУдаления И Не Исключается Тогда
			
			МоиДокументы.ДобавитьЗаписьВМоиДокументы(Документ, 
				Перечисления.ПричиныДобавленияВМоиДокументы.ЯвляюсьАвторомДокумента,
				Подготовил);
			
		КонецЕсли;
	КонецЕсли;
	
	// изменился подготовивший
	СтарыйПодготовил = Источник.ДополнительныеСвойства.СтарыйПодготовил;
	Если СтарыйПодготовил <> Подготовил Тогда 
		
		Если ЗначениеЗаполнено(СтарыйПодготовил) Тогда 
			МоиДокументы.УдалитьЗаписьИзМоиДокументы(Документ,
				Перечисления.ПричиныДобавленияВМоиДокументы.ЯвляюсьАвторомДокумента,
				СтарыйПодготовил);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Подготовил) И Не Исключается Тогда 
			МоиДокументы.ДобавитьЗаписьВМоиДокументы(Документ, 
				Перечисления.ПричиныДобавленияВМоиДокументы.ЯвляюсьАвторомДокумента,
				Подготовил);
		КонецЕсли;
			
	КонецЕсли;
		
	Если Исключается Тогда 
		МоиДокументы.УдалитьЗаписьИзМоиДокументы(Документ,
			Перечисления.ПричиныДобавленияВМоиДокументы.ЯвляюсьАвторомДокумента,
			Подготовил);
	КонецЕсли;
	
КонецПроцедуры

Процедура ДобавлениеВМоиДокументыЯвляюсьАвторомУтверждения(Источник)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если Не ДелопроизводствоКлиентСервер.ЭтоВнутреннийДокумент(Источник.Ссылка) Тогда 
		Возврат;
	КонецЕсли;
				
	// документ исключается, когда утверждён
	ВсеСостояния = Делопроизводство.ПолучитьВсеСостоянияДокумента(Источник.Ссылка);
	Исключается = ВсеСостояния.Найти(Перечисления.СостоянияДокументов.Утвержден, "Состояние") <> Неопределено;
	
	Документ = Источник.Ссылка;
	
	АвторыГрифов = РаботаСГрифамиУтверждений.АвторыУтвержденийДокумента(Источник.ГрифыУтверждения.Выгрузить());
	
	// изменилась пометка удаления
	СтараяПометкаУдаления = Источник.ДополнительныеСвойства.СтараяПометкаУдаления;
	Если СтараяПометкаУдаления <> Источник.ПометкаУдаления Тогда 
		Для Каждого Автор Из АвторыГрифов Цикл
			Если Не СтараяПометкаУдаления И Источник.ПометкаУдаления Тогда 
				
				МоиДокументы.УдалитьЗаписьИзМоиДокументы(Документ,
					Перечисления.ПричиныДобавленияВМоиДокументы.ЯвляюсьАвторомУтвержденияДокумента,
					Автор);
				
			ИначеЕсли СтараяПометкаУдаления И Не Источник.ПометкаУдаления И Не Исключается Тогда
				
				МоиДокументы.ДобавитьЗаписьВМоиДокументы(Документ, 
					Перечисления.ПричиныДобавленияВМоиДокументы.ЯвляюсьАвторомУтвержденияДокумента,
					Автор);
				
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	СтарыеАвторыГрифов = Источник.ДополнительныеСвойства.СтарыеАвторыГрифов;
	
	// изменились авторы грифов	
	Если ОбщегоНазначенияДокументооборотКлиентСервер.ЕстьОтличияВМассивах(СтарыеАвторыГрифов, АвторыГрифов) Тогда 
		
		Для Каждого СтарыйАвтор Из СтарыеАвторыГрифов Цикл
			Если ЗначениеЗаполнено(СтарыйАвтор) Тогда 
				МоиДокументы.УдалитьЗаписьИзМоиДокументы(Документ,
					Перечисления.ПричиныДобавленияВМоиДокументы.ЯвляюсьАвторомУтвержденияДокумента,
					СтарыйАвтор);
			КонецЕсли;
		КонецЦикла;
		
		Для Каждого Автор Из АвторыГрифов Цикл
			Если ЗначениеЗаполнено(Автор) И Не Исключается Тогда 
				МоиДокументы.ДобавитьЗаписьВМоиДокументы(Документ, 
					Перечисления.ПричиныДобавленияВМоиДокументы.ЯвляюсьАвторомУтвержденияДокумента,
					Автор);
			КонецЕсли;
		КонецЦикла;
			
	КонецЕсли;
		
	Если Исключается Тогда
		Для Каждого Автор Из АвторыГрифов Цикл 
			МоиДокументы.УдалитьЗаписьИзМоиДокументы(Документ,
				Перечисления.ПричиныДобавленияВМоиДокументы.ЯвляюсьАвторомУтвержденияДокумента,
				Автор);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

Процедура ДобавлениеВМоиДокументыЯвляюсьПодписантомДокумента(Источник)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если Не ДелопроизводствоКлиентСервер.ЭтоВнутреннийДокумент(Источник.Ссылка) Тогда 
		Возврат;
	КонецЕсли;
				
	// документ исключается, когда подписан
	ВсеСостояния = Делопроизводство.ПолучитьВсеСостоянияДокумента(Источник.Ссылка);
	Исключается = ВсеСостояния.Найти(Перечисления.СостоянияДокументов.Подписан, "Состояние") <> Неопределено;
	
	Документ = Источник.Ссылка;
	
	Подписанты = РаботаСПодписямиДокументов.ПодписантыСторонДокумента(Источник.Стороны.Выгрузить());
	Если ЗначениеЗаполнено(Источник.Подписал) Тогда
		Подписанты.Добавить(Источник.Подписал);
	КонецЕсли;
	
	// изменилась пометка удаления
	СтараяПометкаУдаления = Источник.ДополнительныеСвойства.СтараяПометкаУдаления;
	Если СтараяПометкаУдаления <> Источник.ПометкаУдаления Тогда 
		Для Каждого Подписант Из Подписанты Цикл
			Если Не СтараяПометкаУдаления И Источник.ПометкаУдаления Тогда 
				
				МоиДокументы.УдалитьЗаписьИзМоиДокументы(Документ,
					Перечисления.ПричиныДобавленияВМоиДокументы.ЯвляюсьПодписантомДокумента,
					Подписант);
				
			ИначеЕсли СтараяПометкаУдаления И Не Источник.ПометкаУдаления И Не Исключается Тогда
				
				МоиДокументы.ДобавитьЗаписьВМоиДокументы(Документ, 
					Перечисления.ПричиныДобавленияВМоиДокументы.ЯвляюсьПодписантомДокумента,
					Подписант);
				
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	СтарыеПодписанты = Источник.ДополнительныеСвойства.СтарыеПодписанты;
	Если ЗначениеЗаполнено(Источник.ДополнительныеСвойства.СтарыйПодписал) Тогда
		СтарыеПодписанты.Добавить(Источник.ДополнительныеСвойства.СтарыйПодписал);
	КонецЕсли;
	
	// изменились подписанты	
	Если ОбщегоНазначенияДокументооборотКлиентСервер.ЕстьОтличияВМассивах(СтарыеПодписанты, Подписанты) Тогда 
		
		Для Каждого СтарыйПодписант Из СтарыеПодписанты Цикл
			Если ЗначениеЗаполнено(СтарыйПодписант) Тогда 
				МоиДокументы.УдалитьЗаписьИзМоиДокументы(Документ,
					Перечисления.ПричиныДобавленияВМоиДокументы.ЯвляюсьПодписантомДокумента,
					СтарыйПодписант);
			КонецЕсли;
		КонецЦикла;
		
		Для Каждого Подписант Из Подписанты Цикл
			Если ЗначениеЗаполнено(Подписант) И Не Исключается Тогда 
				МоиДокументы.ДобавитьЗаписьВМоиДокументы(Документ, 
					Перечисления.ПричиныДобавленияВМоиДокументы.ЯвляюсьПодписантомДокумента,
					Подписант);
			КонецЕсли;
		КонецЦикла;
			
	КонецЕсли;
		
	Если Исключается Тогда
		Для Каждого Подписант Из Подписанты Цикл 
			МоиДокументы.УдалитьЗаписьИзМоиДокументы(Документ,
				Перечисления.ПричиныДобавленияВМоиДокументы.ЯвляюсьПодписантомДокумента,
				Подписант);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

