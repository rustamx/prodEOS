////////////////////////////////////////////////////////////////////////////////
// Модуль для работы с пометкой прочтения.
//
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Функция предназначена для определения типа просматриваемого объекта и вызова
// соответствующей функции: для просмотра объекта либо массива.
// Если устанавливаемое значение Прочтен отличается от имеющегося в регистре, тогда
// производится запись в регистр сведений СведенияОПрочтении и функция возвращает Истина.
// Если записи в регистр не производилось, возвращает Ложь.
// Если Объект пустой, тогда возвращает Ложь.
Функция УстановитьСвойствоПрочтен(Ссылка, Прочтен = Истина, ОбновитьПрочтениеГруппы = Истина) Экспорт
	
	Если Не ЗначениеЗаполнено(Ссылка) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если ТипЗнч(Ссылка) = Тип("СправочникСсылка.СообщенияОбсуждений")
		ИЛИ ТипЗнч(Ссылка) = Тип("ДокументСсылка.ВходящееПисьмо")
		ИЛИ ТипЗнч(Ссылка) = Тип("ДокументСсылка.ИсходящееПисьмо") Тогда
		ПрочтениеУстановлено = УстановитьСвойствоПрочтенОбъект(Ссылка, Прочтен, ОбновитьПрочтениеГруппы);
		
	ИначеЕсли ТипЗнч(Ссылка) = Тип("Массив") Тогда
		ПрочтениеУстановлено = УстановитьСвойствоПрочтенМассив(Ссылка, Прочтен, ОбновитьПрочтениеГруппы);
		
	ИначеЕсли ТипЗнч(Ссылка) = Тип("Тип") Тогда
		ПрочтениеУстановлено = УстановитьСвойствоПрочтенТип(Ссылка, Прочтен);
		
	ИначеЕсли ТипЗнч(Ссылка) = Тип("СправочникСсылка.ТемыОбсуждений") Тогда
		ПрочтениеУстановлено = УстановитьСвойствоПрочтенОбъектыГруппы(Ссылка, Прочтен);
		
	Иначе
		ПрочтениеУстановлено = Ложь;
	КонецЕсли;
	
	Возврат ПрочтениеУстановлено;
	
КонецФункции

// Процедура предназначена для установки свойства прочтен у группы Объекта.
// Определяет группу объекта, в зависимости от типа объекта,
// и вызывает процедуру УстановитьСвойствоПрочтенГруппа. 
Процедура ОбновитьПрочтениеГруппы(Объект) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если ТипЗнч(Объект) = Тип("СправочникСсылка.СообщенияОбсуждений") Тогда
		Группа = Объект.ВладелецСообщения;
	Иначе
		Возврат;
	КонецЕсли;
	
	УстановитьСвойствоПрочтенГруппа(Группа);
	
КонецПроцедуры

// Процедура предназначена для установки свойства прочтен у конкретной Группы.
// В процедуре происходит проверка пометки прочтения у элементов группы,
// и исходя из нее устанавливается пометка прочтения группы.
Процедура УстановитьСвойствоПрочтенГруппа(Группа, Прочтен = Неопределено) Экспорт
	
	Если ЗначениеЗаполнено(Группа) Тогда
		
		Если Прочтен = Неопределено Тогда
			Прочтен = Истина;
			
			Если ТипЗнч(Группа) = Тип("СправочникСсылка.ТемыОбсуждений") Тогда
				Запрос = Новый Запрос;
				Запрос.Текст = 
					"ВЫБРАТЬ
					|	МИНИМУМ(ЕСТЬNULL(СведенияОПрочтении.Прочтен, ЛОЖЬ)) КАК Прочтен
					|ИЗ
					|	Справочник.СообщенияОбсуждений КАК СообщенияОбсуждений
					|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОПрочтении КАК СведенияОПрочтении
					|		ПО СообщенияОбсуждений.Ссылка = СведенияОПрочтении.Объект
					|			И (СведенияОПрочтении.Пользователь = &Пользователь)
					|ГДЕ
					|	СообщенияОбсуждений.ВладелецСообщения = &Тема
					|	И СообщенияОбсуждений.ПометкаУдаления = ЛОЖЬ
					|
					|СГРУППИРОВАТЬ ПО
					|	СообщенияОбсуждений.ВладелецСообщения";
				
				Запрос.УстановитьПараметр("Тема", Группа);
				Запрос.УстановитьПараметр("Пользователь", ПользователиКлиентСервер.ТекущийПользователь());
				
				Результат = Запрос.Выполнить();
				Выборка = Результат.Выбрать();
				Если Выборка.Следующий() Тогда
					Прочтен = Выборка.Прочтен;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		ПрочтенЗначениеВРегистре = РегистрыСведений.СведенияОПрочтении.ОбъектБылПрочтен(Группа);
		Если Прочтен <> ПрочтенЗначениеВРегистре Тогда
			РегистрыСведений.СведенияОПрочтении.УстановитьСведенияОПрочтении(Группа, Прочтен);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Процедура предназначена для снятия пометки прочтения для всех пользователей.
Процедура УстановитьОбъектКакНеПрочитанный(Объект) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если ЗначениеЗаполнено(Объект) Тогда
		РегистрыСведений.СведенияОПрочтении.УбратьСведенияОПрочтении(Объект);
	КонецЕсли;
	
	Если ТипЗнч(Объект) = Тип("СправочникСсылка.СообщенияОбсуждений") Тогда
		Группа = Объект.ВладелецСообщения;
	КонецЕсли;
	
	Если Группа <> Неопределено Тогда
		РегистрыСведений.СведенияОПрочтении.УбратьСведенияОПрочтении(Группа);
	КонецЕсли;
	
КонецПроцедуры

// Функция возвращает значение пометки прочтения объекта.
Функция ПолучитьСвойствоПрочтен(Объект) Экспорт
	
	Если ЗначениеЗаполнено(Объект) Тогда
		Возврат РегистрыСведений.СведенияОПрочтении.ОбъектБылПрочтен(Объект);
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции

// Устанавливает признак прочтенности всех писем указанной папки.
//
// Параметры:
//  Папка        - СправочникСсылка.ПапкиПисем - папка, письма которой нужно пометить прочтенными.
//  Пользователь - СправочникСсылка.Пользователи - по которому утснавливается признак прочтенности.
//
Процедура ПометитьВсеПисьмаКакПрочтенные(Папка, Пользователь) Экспорт
	
	// Выборка всех писем в указанной папке 
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ЭлектроннаяПочта.Ссылка КАК Письмо
		|ИЗ
		|	ЖурналДокументов.ЭлектроннаяПочта КАК ЭлектроннаяПочта
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОПрочтении КАК СведенияОПрочтении
		|		ПО ЭлектроннаяПочта.Ссылка = СведенияОПрочтении.Объект
		|			И (СведенияОПрочтении.Пользователь = &Пользователь)
		|ГДЕ
		|	ЭлектроннаяПочта.Папка = &Папка
		|	И НЕ ЭлектроннаяПочта.ПометкаУдаления
		|	И ЕСТЬNULL(СведенияОПрочтении.Прочтен, ЛОЖЬ) = ЛОЖЬ";
		
	УстановитьПривилегированныйРежим(Истина);
	Запрос.УстановитьПараметр("Папка", Папка);
	Запрос.УстановитьПараметр("Пользователь", Пользователь);
	
	ТаблицаПисьма = Запрос.Выполнить().Выгрузить();
	Письма = ТаблицаПисьма.ВыгрузитьКолонку("Письмо");
	УстановитьСвойствоПрочтен(Письма, Истина);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Функция предназначена для установки текущему пользователю значения Прочтен для Объекта.
// Если устанавливаемое значение Прочтен отличается от имеющегося в регистре, тогда
// производится запись в регистр сведений СведенияОПрочтении и функция возвращает Истина.
// Если записи в регистр не производилось, возвращает Ложь.
Функция УстановитьСвойствоПрочтенОбъект(Объект, Прочтен, ОбновитьПрочтениеГруппы)
	
	Если ЗначениеЗаполнено(Объект) Тогда
		
		ПрочтенЗначениеВРегистре = РегистрыСведений.СведенияОПрочтении.ОбъектБылПрочтен(Объект);
		
		Если Прочтен <> ПрочтенЗначениеВРегистре Тогда
			
			Если ВстроеннаяПочтаКлиентСервер.ЭтоПисьмо(Объект) Тогда
				ПапкаПисьма = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект, "Папка");
				РегистрыСведений.КоличествоПисемВПапках.ОчиститьЗаписиПоПапке(ПапкаПисьма);
			КонецЕсли;
			
			РегистрыСведений.СведенияОПрочтении.УстановитьСведенияОПрочтении(Объект, Прочтен);
			
			Если ОбновитьПрочтениеГруппы Тогда
				ОбновитьПрочтениеГруппы(Объект);
			КонецЕсли;
			
			Возврат Истина;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции

// Функция предназначена для установки свойства Прочтен объектам из массива.
// Возвращаемые значение:
//		Истина - для какого-либо объекта в массиве было перезаписано свойство прочтен,
//				и следует обновить информацию о прочтении.
//		Ложь - новой информации о прочтении записано не было.
Функция УстановитьСвойствоПрочтенМассив(Массив, Прочтен, ОбновитьПрочтениеГруппы)
	
	ПрочтениеУстановлено = Ложь;
	
	Для каждого Объект Из Массив Цикл
		ПрочтениеУстановленоДляОбъекта = УстановитьСвойствоПрочтен(Объект, Прочтен, ОбновитьПрочтениеГруппы);
		ПрочтениеУстановлено = ПрочтениеУстановлено Или ПрочтениеУстановленоДляОбъекта;
	КонецЦикла;
	
	Возврат ПрочтениеУстановлено;
	
КонецФункции

// Функция предназначена для установки свойства Прочтен всем объектам типа.
// Возвращаемые значение:
//		Истина - для какого-либо объекта в типе было перезаписано свойство прочтен,
//				и следует обновить информацию о прочтении.
//		Ложь - новой информации о прочтении записано не было.
Функция УстановитьСвойствоПрочтенТип(Тип, Прочтен)
	
	Если Тип = Тип("СправочникСсылка.СообщенияОбсуждений") Тогда
		ТекстЗапроса =
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	СообщенияОбсуждений.Ссылка
			|ИЗ
			|	Справочник.СообщенияОбсуждений КАК СообщенияОбсуждений";
		ТипГруппы = Тип("СправочникСсылка.ТемыОбсуждений");
	КонецЕсли;
	
	ПрочтениеУстановлено = Ложь;
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Результат = Запрос.Выполнить();
	
	Если Не Результат.Пустой() Тогда
		ТаблицаРезультата = Результат.Выгрузить();
		МассивРезультата = ТаблицаРезультата.ВыгрузитьКолонку("Ссылка");
		ПрочтениеУстановлено = УстановитьСвойствоПрочтен(МассивРезультата, Прочтен, Ложь);
	КонецЕсли;
	
	Если ТипГруппы = Тип("СправочникСсылка.ТемыОбсуждений") Тогда
		Запрос = Новый Запрос;
		Запрос.Текст =
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ТемыОбсуждений.Ссылка
			|ИЗ
			|	Справочник.ТемыОбсуждений КАК ТемыОбсуждений";
		
		Результат = Запрос.Выполнить();
		Выборка = Результат.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			УстановитьСвойствоПрочтенГруппа(Выборка.Ссылка, Прочтен)
		КонецЦикла;
	КонецЕсли;
	
	Возврат ПрочтениеУстановлено;
	
КонецФункции

// Функция предназначена для установки свойства Прочтен всем объектам типа.
// Возвращаемые значение:
//		Истина - для какого-либо объекта в типе было перезаписано свойство прочтен,
//				и следует обновить информацию о прочтении.
//		Ложь - новой информации о прочтении записано не было.
Функция УстановитьСвойствоПрочтенОбъектыГруппы(Группа, Прочтен)
	
	Если ТипЗнч(Группа) = Тип("СправочникСсылка.ТемыОбсуждений") Тогда
		ТекстЗапроса =
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	СообщенияОбсуждений.Ссылка
			|ИЗ
			|	Справочник.СообщенияОбсуждений КАК СообщенияОбсуждений
			|ГДЕ
			|	СообщенияОбсуждений.ВладелецСообщения = &Группа";
	КонецЕсли;
	
	ПрочтениеУстановлено = Ложь;
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Группа", Группа);
	Результат = Запрос.Выполнить();
	
	Если Не Результат.Пустой() Тогда
		ТаблицаРезультата = Результат.Выгрузить();
		МассивРезультата = ТаблицаРезультата.ВыгрузитьКолонку("Ссылка");
		ПрочтениеУстановлено = УстановитьСвойствоПрочтен(МассивРезультата, Прочтен, Ложь);
	КонецЕсли;
	
	УстановитьСвойствоПрочтенГруппа(Группа);
	
	Возврат ПрочтениеУстановлено;
	
КонецФункции

#КонецОбласти
