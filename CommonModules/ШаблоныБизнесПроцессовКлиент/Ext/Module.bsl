
#Область ПрограммныйИнтерфейс

// Открывает форму выбора шаблона процесса
// Параметры
//   Тип - Строка с типом вида "ШаблоныИсполнения" 
//   ДоступныеЭлементы - СписокЗначений  - те шаблоны, из которых можно выбирать
//   ОписаниеОповещения  - которое вызовется после закрытия формы выбора
//
Процедура ВыбратьШаблонБизнесПроцесса(Тип, ДоступныеЭлементы = Неопределено, ОписаниеОповещения = Неопределено) Экспорт
	
	Если Тип = "ШаблоныИсполнения" 
		Или Тип = "ШаблоныОзнакомления" 	
		Или Тип = "ШаблоныПоручения"
		Или Тип = "ШаблоныРассмотрения"
		Или Тип = "ШаблоныРегистрации"
		Или Тип = "ШаблоныСогласования"
		Или Тип = "ШаблоныУтверждения"
		Или Тип = "ШаблоныПриглашения"
		Или Тип = "ШаблоныКомплексныхБизнесПроцессов" Тогда 
		
		Если ТипЗнч(ДоступныеЭлементы) = Тип("СписокЗначений") И ДоступныеЭлементы.Количество() > 0 Тогда 
			ПараметрыФормы = Новый Структура("ДоступныеЭлементы", ДоступныеЭлементы);
			ОткрытьФорму(
				"Справочник." + Тип + ".ФормаВыбора",
				ПараметрыФормы,,,,,
				ОписаниеОповещения,
				РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		Иначе
			ОткрытьФорму(
				"Справочник." + Тип + ".ФормаВыбора",,,,,,
				ОписаниеОповещения,
				РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		КонецЕсли;	
	Иначе
		
		ПараметрыФормы = Новый Структура;
		
		Если ТипЗнч(ДоступныеЭлементы) = Тип("СписокЗначений") И ДоступныеЭлементы.Количество() > 0 Тогда 
			
			ПараметрыФормы.Вставить("ДоступныеЭлементы", ДоступныеЭлементы);
			ПараметрыФормы.Вставить("ТипШаблона", "СоставнойПроцесс");
			
		Иначе
				
			ПараметрыФормы.Вставить("Отбор", Новый Структура("ТипШаблона", Тип));
			ПараметрыФормы.Вставить("ТипШаблона", Тип);
			
		КонецЕсли;
		
		ОткрытьФорму(
			"ОбщаяФорма.ВыборШаблонаБизнесПроцесса",
			ПараметрыФормы,,,,,
			ОписаниеОповещения,
			РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
	КонецЕсли;	
		
КонецПроцедуры

// Выполняет обработку события Выбор таблицы формы УсловияЗапретаВыполнения.
//
// Параметры:
//  Форма - УправляемаяФорма - Форма.
//  Поле - ПолеФормы - Выбранное поле.
//  СтандартнаяОбработка - Булево - Признак стандартной обработки.
//
Процедура УсловияЗапретаВыполненияВыбор(Форма, Поле, СтандартнаяОбработка) Экспорт
	
	Если Поле = Форма.Элементы.УсловияЗапретаВыполненияТекстПредупреждения Тогда
		
		СтандартнаяОбработка = Ложь;
		ТекущиеДанные = Форма.Элементы.УсловияЗапретаВыполнения.ТекущиеДанные;
		Если ТекущиеДанные = Неопределено Тогда 
			Возврат;
		КонецЕсли;
		
		ИменаПредметов = Новый Массив;
		Для Каждого Предмет Из Форма.Объект.Предметы Цикл
			ИменаПредметов.Добавить(Строка(Предмет.ИмяПредмета));
		КонецЦикла;
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("ТекстПредупреждения", ТекущиеДанные.ТекстПредупреждения);
		ПараметрыФормы.Вставить("ИменаПредметов", ИменаПредметов);
		ПараметрыФормы.Вставить("ТолькоПросмотр", Форма.ТолькоПросмотр);
		
		ПараметрыОбработчика = Новый Структура;
		ПараметрыОбработчика.Вставить("ТекущиеДанные", ТекущиеДанные);
		ОписаниеОповещения = Новый ОписаниеОповещения(
			"УсловияЗапретаВыполненияВыборЗавершение",
			ЭтотОбъект,
			ПараметрыОбработчика);
		
		ОткрытьФорму(
			"ОбщаяФорма.РедактированиеТекстаПредупрежденияЗапретаВыполнения",
			ПараметрыФормы,,,,,
			ОписаниеОповещения);
		
	КонецЕсли;
	
КонецПроцедуры

// Обработчик описания оповещения процедыр УсловияЗапретаВыполненияВыбор.
//
Процедура УсловияЗапретаВыполненияВыборЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ДополнительныеПараметры.ТекущиеДанные.ТекстПредупреждения = Результат;
	
КонецПроцедуры

// Показывает оповещение после записи шаблона процесса из карточки.
//
// Параметры:
//  Форма - УправляемаяФорма - карточка шаблона процесса.
//
Процедура ПоказатьОповещениеПослеЗаписиШаблона(Форма) Экспорт
	
	ПоказатьОповещениеПользователя(
		НСтр("ru = 'Изменение:'; en = 'Changed:'"),
		ПолучитьНавигационнуюСсылку(Форма.Объект.Ссылка),
		Строка(Форма.Объект.Ссылка),
		БиблиотекаКартинок.Информация32);
	
КонецПроцедуры

#КонецОбласти

#Область ПрограммныйИнтерфейс_ДоступностьШаблоновПроцессов

// Сбрасывает доступность в карточке шаблона процесса.
// Процедура предназначена для вызова при изменении полей,
// влияющих на доступность шаблона.
//
// Параметры:
//  Форма - УправляемаяФорма - карточка шаблона процесса.
//
Процедура ОтключитьДоступностьШаблона(Форма) Экспорт
	
	Форма.ДоступенАвтоматическийЗапускПоШаблону = Ложь;
	Форма.ДоступенРучнойЗапускПоШаблону = Ложь;
	
	ШаблоныБизнесПроцессовКлиентСервер.ОбновитьОтображениеДоступностиШаблона(Форма);
	
КонецПроцедуры

#КонецОбласти
