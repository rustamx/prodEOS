
////////////////////////////////////////////////////////////////////////////////
// РаботаСКомплекснымиБизнесПроцессамиКлиентСервер: содержит, вызываемые с клиента,
//													процедуры работы с комплексными
//													процессами на сервере.
//  
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Возвращает признак необходимости проверки заполнения исполнителей в настройке действия
// комплексного процесса.
//
// Параметры:
//  Действие			 - СправочникСсылка.<ИмяШаблонаПроцесса> - служебный шаблон комплексного процесса.
//  ВладелецШаблона		 - СправочникСсылка.ШаблоныКомплексныхБизнесПроцессов,
//                         БизнесПроцессСсылка.КомплексныйПроцесс - владелец служебного шаблона.
//  КомплексныйПроцесс	 - БизнесПроцессСсылка.КомплексныйПроцесс - комплексный процесс служебного шаблона.
// 
// Возвращаемое значение:
//   - Булево
//
Функция ТребуетсяПроверкаЗаполненияИсполнителейДействия(
	Действие, ВладелецШаблона, КомплексныйПроцесс) Экспорт
	
	СтруктураДействия = Новый Структура;
	СтруктураДействия.Вставить("Ссылка", Действие);
	СтруктураДействия.Вставить("ВладелецШаблона", ВладелецШаблона);
	СтруктураДействия.Вставить("КомплексныйПроцесс", КомплексныйПроцесс);
	
	ВладелецВерхнегоУровня = 
		РаботаСКомплекснымиБизнесПроцессамиСервер.ВладелецВерхнегоУровня(СтруктураДействия);
	
	Если Не ЗначениеЗаполнено(ВладелецВерхнегоУровня) Тогда
		
		Если Не ЗначениеЗаполнено(СтруктураДействия.Ссылка) Тогда
			Возврат Ложь;
		КонецЕсли;
		
		Возврат БизнесСобытияВызовСервера.ЕстьЗаписиАвтоСтартаБизнесПроцессовДляШаблонаБизнесПроцессов(
			СтруктураДействия.Ссылка);
		
	ИначеЕсли ТипЗнч(ВладелецВерхнегоУровня) = Тип("БизнесПроцессСсылка.КомплексныйПроцесс") Тогда
		Возврат Истина;
	Иначе
		Возврат БизнесСобытияВызовСервера.ЕстьЗаписиАвтоСтартаБизнесПроцессовДляШаблонаБизнесПроцессов(
			ВладелецВерхнегоУровня);
	КонецЕсли;
	
КонецФункции

#КонецОбласти

#Область ПрограммныйИнтерфейс_СхемаПроцесса

// Возвращает графическую схему процесса по умолчанию.
//
// Возвращаемое значение:
//  ГрафическаяСхема
//
Функция ГрафическаяСхемаПроцессаПоУмолчанию() Экспорт
	
	Возврат Справочники.СхемыКомплексныхПроцессов.ПолучитьМакет("СхемаПоУмолчанию");
	
КонецФункции

#Область Действия

Функция ПолучитьИмяФормыДляОткрытияДействия(Ссылка) Экспорт
	
	Возврат Ссылка.Метаданные().ПолноеИмя() + ".ФормаОбъекта";
	
КонецФункции

#КонецОбласти

#Область КэшДанныхДействий

// Обновляет данные действия в кэше.
//
// Параметры:
//  ПроцессШаблон - БизнесПроцессСсылка, СправочникСсылка -  процесс или шаблон действия.
//  КэшДанныхДействий - Структура - см. функцию РаботаСКомплекснымиБизнесПроцессамиСервер.КэшДанныхДействий.
//
Процедура ОбновитьДанныеДействияВКэше(ПроцессШаблон, КэшДанныхДействий) Экспорт
	
	Если Не ЗначениеЗаполнено(ПроцессШаблон) Тогда
		Возврат;
	КонецЕсли;
	
	МенеджерПроцессаШаблона = ОбщегоНазначения.МенеджерОбъектаПоСсылке(ПроцессШаблон);
	
	Данные = МенеджерПроцессаШаблона.ДанныеДействия(ПроцессШаблон);
	
	РаботаСКомплекснымиБизнесПроцессамиСервер.ПоместитьДанныеДействияВКэш(
		ПроцессШаблон, Данные, КэшДанныхДействий);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
