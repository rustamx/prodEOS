#Область ПрограммныйИнтерфейс

// Возвращает уровни доступа, отсортированные по приоритетам.
// 
// Возвращаемое значение: Массив
// 
Функция УровниДоступаВПорядкеПриоритетов(ДляЛокальныхАдминистраторов = Ложь) Экспорт
	
	Возврат НастройкиДоступаВызовСервера.УровниДоступаВПорядкеПриоритетов(ДляЛокальныхАдминистраторов);
	
КонецФункции

// Возвращает ссылку на уровень доступа, который имеет переданный приоритет.
// 
// Возвращаемое значение:
//  Соответствие
//   * Ключ - приоритет уровня доступа
//   * Значение - СправочникСсылка.УровниДоступа
// 
Функция ПриоритетыУровнейДоступа(ДляЛокальныхАдминистраторов = Ложь) Экспорт
	
	Возврат НастройкиДоступаВызовСервера.ПриоритетыУровнейДоступа(ДляЛокальныхАдминистраторов);
	
КонецФункции

// Возвращает ссылку на уровень доступа, который имеет переданный приоритет.
// 
// Параметры:
// 	Приоритет - Число.
// 
// Возвращаемое значение:
//  СправочникСсылка - ссылка на уровень доступа.
// 
Функция УровеньДоступаПоПриоритету(Приоритет) Экспорт
	
	УровеньДоступа = НастройкиДоступаКлиентСерверПовтИсп.ПриоритетыУровнейДоступа().Получить(Приоритет);
	
	Возврат УровеньДоступа;
	
КонецФункции

// Возвращает приоритет переданного уровня доступа.
//
// Параметры:
//  УровеньДоступа - СправочникСсылка.УровниДоступа.
//
// Возвращаемое значение:
//  Число, Неопределено - приоритет.
//
Функция ПриоритетУровняДоступа(УровеньДоступа) Экспорт
	
	Результат = Неопределено;
	
	Для Каждого КлючИЗначение Из НастройкиДоступаКлиентСерверПовтИсп.ПриоритетыУровнейДоступа() Цикл
		Если КлючИЗначение.Значение = УровеньДоступа Тогда
			Результат = КлючИЗначение.Ключ;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
#КонецОбласти
