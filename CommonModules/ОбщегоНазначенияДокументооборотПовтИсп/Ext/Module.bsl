#Область ПрограммныйИнтерфейс

// Находит или создает полную роль по исходной роли, дополненной объектами адресации.
//
// Параметры:
//   ИсходнаяРоль - СправочникСсылка.РолиИсполнителей - исходная роль.
//   ОсновнойОбъектАдресации - Характеристика.ОбъектыАдресацииЗадач - основной объект адресации.
//   ДополнительныйОбъектАдресации - Характеристика.ОбъектыАдресацииЗадач - доп. объект адресации.
//
// Возвращаемое значение:
//   СправочникСсылка.ПолныеРоли - полная роль, найденная в справочнике или созданная на
//     основании исходной роли.
//
Функция НайтиСоздатьПолнуюРоль(ИсходнаяРоль, Знач ОсновнойОбъектАдресации, 
	Знач ДополнительныйОбъектАдресации = Неопределено) Экспорт
	
	Возврат Справочники.ПолныеРоли.НайтиСоздатьПолнуюРоль(
		ИсходнаяРоль,
		ОсновнойОбъектАдресации,
		ДополнительныйОбъектАдресации);
	
КонецФункции

// Проверяет наличие метода менеджера объекта.
// Для проверки используется дополнительный метод "ЕстьМетод<ИмяМетода>".
//
// Параметры:
//  ПолноеИмяОбъекта - Строка - полное имя объекта метаданных.
//  ИмяМетода - Строка - имя метода, наличие которого нужно проверить.
//
// Возвращаемое значение:
//  Булево - Истина, если есть метод, Ложь в противном случае.
//
Функция ЕстьМетодМенеджера(ПолноеИмяОбъекта, ИмяМетода) Экспорт
	
	ЕстьМетод = Ложь;
	
	МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(ПолноеИмяОбъекта);
	Попытка
		ЕстьМетод = Вычислить("МенеджерОбъекта.ЕстьМетод" + ИмяМетода + "()");
	Исключение
	КонецПопытки;
	
	Возврат ЕстьМетод;
	
КонецФункции

// Возвращает тип платформы сервера.
//
// Возвращаемое значение:
//   ТипПлатформы; Неопределено.
//
Функция ТипПлатформыСервера() Экспорт
	
	ТипПлатформыСервераСтрокой = ТипПлатформыСервераСтрокой();
	
	Если ТипПлатформыСервераСтрокой = "Linux_x86" Тогда
		Возврат ТипПлатформы.Linux_x86;
		
	ИначеЕсли ТипПлатформыСервераСтрокой = "Linux_x86_64" Тогда
		Возврат ТипПлатформы.Linux_x86_64;
		
	ИначеЕсли ТипПлатформыСервераСтрокой = "Windows_x86" Тогда
		Возврат ТипПлатформы.Windows_x86;
		
	ИначеЕсли ТипПлатформыСервераСтрокой = "Windows_x86_64" Тогда
		Возврат ТипПлатформы.Windows_x86_64;
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

// Возвращает тип платформы строкой.
Функция ТипПлатформыСервераСтрокой() Экспорт
	
	СистемнаяИнфо = Новый СистемнаяИнформация;
	
	Если СистемнаяИнфо.ТипПлатформы = ТипПлатформы.Linux_x86 Тогда
		Возврат "Linux_x86";
		
	ИначеЕсли СистемнаяИнфо.ТипПлатформы = ТипПлатформы.Linux_x86_64 Тогда
		Возврат "Linux_x86_64";
		
	ИначеЕсли СистемнаяИнфо.ТипПлатформы = ТипПлатформы.Windows_x86 Тогда
		Возврат "Windows_x86";
		
	ИначеЕсли СистемнаяИнфо.ТипПлатформы = ТипПлатформы.Windows_x86_64 Тогда
		Возврат "Windows_x86_64";
		
	ИначеЕсли СистемнаяИнфо.ТипПлатформы = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ВызватьИсключение СтрШаблон(НСтр("ru = 'Неизвестный тип платформы ""%1""'; en = 'Unknown platform type ""%1""'"), Строка(СистемнаяИнфо.ТипПлатформы));
	
КонецФункции

#КонецОбласти
