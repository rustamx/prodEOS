
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

// Возвращает Истина, если включено использование прав доступа
Функция ВключеноИспользованиеПравДоступа() Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Возврат Константы.ДокументооборотИспользоватьОграничениеПравДоступа.Получить();
	
КонецФункции

// Возвращает Истина, если включено отложенное обновление прав доступа
Функция ОтложенноеОбновлениеПравДоступа() Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Возврат Константы.ДокументооборотИспользоватьОтложенноеОбновлениеПравДоступа.Получить();
	
КонецФункции	

// Возвращает признак ИспользоватьГрупповойРасчет и размер порции для группового расчета
// 
Функция РазмерПорцииДескрипторовДляРасчета(ИндивидуальныеДескрипторы) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Результат = 500;
	
	Если ИндивидуальныеДескрипторы <> Истина Тогда
		РазмерПорцииПоУмолчанию = 100;
		РазмерПорции = Константы.ГрупповойРасчетПравДоступаРазмерПорции.Получить();
		Результат = ?(РазмерПорции = 0, РазмерПорцииПоУмолчанию, РазмерПорции);
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Функция РазмерПорцииДескрипторовДляРасширенияПравСоставомСубъектов() Экспорт
	
	РазмерПорции = 500;
	
	Возврат РазмерПорции;
	
КонецФункции

// Вычисляет хэш значение по строке
// используется для заполнения реквизита дескриптора Хэш,
// который позволяет быстро находить существующий дескриптор по шаблону
//
Функция ВычислитьХэшПоСтроке(Строка) Экспорт
	
	ХешированиеДанных = Новый ХешированиеДанных(ХешФункция.CRC32);
	ХешированиеДанных.Добавить(Строка);
	
	Возврат ХешированиеДанных.ХешСумма;
	
КонецФункции

// Возвращает состав рабочей группы. Если указано значение Неопределено, то 
// возвращаются все пользователи.
//
Функция ПолучитьСоставРабочейГруппы(РабочаяГруппа) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если РабочаяГруппа = ПредопределенноеЗначение("Справочник.РабочиеГруппы.ВсеПользователи") 
		ИЛИ РабочаяГруппа = Неопределено Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	Пользователи.Ссылка КАК Пользователь
			|ИЗ
			|	Справочник.Пользователи КАК Пользователи
			|ГДЕ
			|	Пользователи.ПометкаУдаления = ЛОЖЬ";
			
		Возврат Запрос.Выполнить().Выгрузить();
		
	Иначе
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	РабочиеГруппыСостав.Пользователь КАК Пользователь
			|ИЗ
			|	Справочник.РабочиеГруппы.Состав КАК РабочиеГруппыСостав
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Пользователи КАК Пользователи
			|		ПО РабочиеГруппыСостав.Пользователь = Пользователи.Ссылка
			|ГДЕ
			|	РабочиеГруппыСостав.Ссылка.ПометкаУдаления = ЛОЖЬ
			|	И РабочиеГруппыСостав.Ссылка В ИЕРАРХИИ(&Ссылка)
			|	И Пользователи.ПометкаУдаления = ЛОЖЬ";
			
		Запрос.УстановитьПараметр("Ссылка", РабочаяГруппа.Ссылка);

		Возврат Запрос.Выполнить().Выгрузить();

	КонецЕсли;
	
КонецФункции

// Функция возвращает Истина, если для указанного вида доступа
// в этой группе установлено "Разрешены все, кроме указанных",
// Ложь, если установлено "Запрещены все, кроме указанных"
// и Неопределено в противном случае
Функция ВидДоступаРазрешен(ГруппаДоступа, ВидДоступа) Экспорт
	
	// Перебор всех видов доступа
	Для Каждого ЭлементДоступа Из ГруппаДоступа.ВидыДоступа Цикл
		
		Если ЭлементДоступа.ВидДоступа = ВидДоступа Тогда
			Возврат ЭлементДоступа.ДоступРазрешен;
		КонецЕсли	
		
	КонецЦикла;
	
	Возврат Неопределено;
	
КонецФункции	

// Возвращает соответствие типов папок и метаданных хранящихся в них объектах. 
// Ключ - тип папки,
// Значение - массив метаданных хранящихся в ней объектов
//
Функция ТипыПапокИСодержимого() Экспорт
	
	Результат = Новый Соответствие;
	
	// Внутренние документы
	МассивМетаданныхСодержимого = Новый Массив;
	МассивМетаданныхСодержимого.Добавить(Метаданные.Справочники.ВнутренниеДокументы);
	Результат.Вставить(Тип("СправочникСсылка.ПапкиВнутреннихДокументов"), МассивМетаданныхСодержимого);
	
	// Файлы
	МассивМетаданныхСодержимого = Новый Массив;
	МассивМетаданныхСодержимого.Добавить(Метаданные.Справочники.Файлы);
	Результат.Вставить(Тип("СправочникСсылка.ПапкиФайлов"), МассивМетаданныхСодержимого);
	
	ДокументооборотПраваДоступаПереопределяемый.ДополнитьТипыПапокИСодержимого(Результат);
	
	Возврат Результат;
	
КонецФункции

// Возвращает массив типов объектов, которые используют доступ по дескрипторам.
// 
Функция ТипыОбъектовИспользующихДоступПоДескрипторам() Экспорт
	
	Результат = Метаданные.ПодпискиНаСобытия.ДокументооборотПраваДоступаПриЗаписиОбъектаДоступа.Источник.Типы();
	
	Возврат Результат;
	
КонецФункции

// Возвращает массив типов объектов, которые используют доступ по дескрипторам.
// 
Функция ТипыСсылокИспользующихДоступПоДескрипторам() Экспорт
	
	Результат = Новый Массив;
	
	ТипыОбъектов = Метаданные.ПодпискиНаСобытия.ДокументооборотПраваДоступаПриЗаписиОбъектаДоступа.Источник.Типы();
	Для Каждого ТипОбъекта Из ТипыОбъектов Цикл
		НовыйОбъект = Новый(ТипОбъекта);
		Результат.Добавить(ТипЗнч(НовыйОбъект.Ссылка));
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

// Возвращает массив идентификаторов объектов, которые используют доступ по дескрипторам.
//
Функция ВсеОбъектыМеханизмаПравДоступа() Экспорт
	
	Результат = Новый Массив;
	
	ТипыОбъектовМеханизмаПрав =
		ДокументооборотПраваДоступаПовтИсп.ТипыОбъектовИспользующихДоступПоДескрипторам();
	
	Для Каждого ТипОбъекта Из ТипыОбъектовМеханизмаПрав Цикл
		Результат.Добавить(ОбщегоНазначения.ИдентификаторОбъектаМетаданных(ТипОбъекта));
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

// Текст запроса, который возвращает выборку с правами по дескрипторам
// для объектов, которые не имеют собственного алгоритма расчета прав.
// 
// Параметры:
//  
//  УчитыватьНастройкиПравПапок - учитывать настройки прав папки, соответствующие переданным дескрипторам
//  УчитыватьПолитикиДоступа - учитывать разрешения политик доступа
//  
// Возвращаемое значение - Строка - текст запроса
//  
Функция ТекстЗапросаДляСтандартногоРасчетаПрав(
			УчитыватьНастройкиПравПапок,
			УчитыватьПолитикиДоступа) Экспорт
	
	Если Не УчитыватьПолитикиДоступа И Не УчитыватьНастройкиПравПапок Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ТаблицаДескрипторов.Дескриптор,
		|	ТаблицаДескрипторов.ВидДоступа,
		|	ТаблицаДескрипторов.ЗначениеДоступа
		|ПОМЕСТИТЬ Дескрипторы
		|ИЗ
		|	&ТаблицаДескрипторов КАК ТаблицаДескрипторов
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПользователиВКонтейнерах.Пользователь КАК Пользователь,
		|	ИСТИНА КАК Чтение,
		|	МАКСИМУМ(ПраваРолей.Добавление) КАК Добавление,
		|	МАКСИМУМ(ПраваРолей.Изменение) КАК Изменение,
		|	МАКСИМУМ(ПраваРолей.Изменение) КАК Удаление,
		|	МАКСИМУМ(ПраваРолей.ЧтениеБезОграничения) КАК ЧтениеБезОграничения,
		|	МАКСИМУМ(ПраваРолей.ДобавлениеБезОграничения) КАК ДобавлениеБезОграничения,
		|	МАКСИМУМ(ПраваРолей.ИзменениеБезОграничения) КАК ИзменениеБезОграничения
		|ПОМЕСТИТЬ ПраваПоРолям
		|ИЗ
		|	РегистрСведений.ПолномочияПользователей КАК ПолномочияПользователей
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ПрофилиГруппДоступа.Роли КАК ПрофилиГруппДоступаРоли
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПраваРолей КАК ПраваРолей
		|			ПО ПрофилиГруппДоступаРоли.Роль = ПраваРолей.Роль
		|		ПО ПолномочияПользователей.Полномочия = ПрофилиГруппДоступаРоли.Ссылка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПользователиВКонтейнерах КАК ПользователиВКонтейнерах
		|		ПО ПолномочияПользователей.Владелец = ПользователиВКонтейнерах.Контейнер
		|ГДЕ
		|	ПраваРолей.ОбъектМетаданных = &Идентификатор
		|
		|СГРУППИРОВАТЬ ПО
		|	ПользователиВКонтейнерах.Пользователь
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Дескрипторы.Дескриптор КАК Дескриптор,
		// ТСК Талько Э.Г.; 09.06.2018; Управление доступом {
		//|	ЕСТЬNULL(КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Дескрипторы1.ЗначениеДоступа), 0) КАК КолРазрезов
		|	ЕСТЬNULL(КОЛИЧЕСТВО(РАЗЛИЧНЫЕ 1), 0) КАК КолРазрезов
		// ТСК Талько Э.Г.; 09.06.2018; Управление доступом }
		|ПОМЕСТИТЬ КолРазрезовДескрипторов
		|ИЗ
		|	Дескрипторы КАК Дескрипторы
		|		ЛЕВОЕ СОЕДИНЕНИЕ Дескрипторы КАК Дескрипторы1
		|		ПО Дескрипторы.Дескриптор = Дескрипторы1.Дескриптор
		|			И (Дескрипторы1.ЗначениеДоступа <> НЕОПРЕДЕЛЕНО)
		|
		|СГРУППИРОВАТЬ ПО
		|	Дескрипторы.Дескриптор
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РазрешенияИсключительные.Дескриптор,
		|	РазрешенияИсключительные.Пользователь,
		|	РазрешенияИсключительные.Коллекция,
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ РазрешенияИсключительные.ЗначениеДоступа) КАК КолРазрезовДоступа,
		|	МИНИМУМ(РазрешенияИсключительные.Чтение) КАК Чтение,
		|	МИНИМУМ(РазрешенияИсключительные.Изменение) КАК Изменение,
		|	МИНИМУМ(РазрешенияИсключительные.Добавление) КАК Добавление,
		|	МИНИМУМ(РазрешенияИсключительные.Удаление) КАК Удаление
		|ПОМЕСТИТЬ РазрешенияДоступа
		|ИЗ
		|	(ВЫБРАТЬ
		|		Дескрипторы.Дескриптор КАК Дескриптор,
		|		ПользователиВКонтейнерах.Пользователь КАК Пользователь,
		|		КоллекцииЗначенийДоступаЗначенияДоступа.Ссылка КАК Коллекция,
		// ТСК Талько Э.Г.; 09.06.2018; Управление доступом {
		//|		Дескрипторы.ЗначениеДоступа КАК ЗначениеДоступа,
		|		1 КАК ЗначениеДоступа,
		// ТСК Талько Э.Г.; 09.06.2018; Управление доступом }
		|		МАКСИМУМ(УровниДоступа.Чтение) КАК Чтение,
		|		МАКСИМУМ(УровниДоступа.Изменение) КАК Изменение,
		|		МАКСИМУМ(УровниДоступа.Добавление) КАК Добавление,
		|		МАКСИМУМ(УровниДоступа.Удаление) КАК Удаление
		|	ИЗ
		|		Дескрипторы КАК Дескрипторы
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РазрешенияДляРазрезовДоступа КАК РазрешенияДляРазрезовДоступа
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КоллекцииЗначенийДоступа.ЗначенияДоступа КАК КоллекцииЗначенийДоступаЗначенияДоступа
		|					ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РазрешенияДоступаИсключительные КАК РазрешенияДоступаИсключительные
		|						ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПользователиВКонтейнерах КАК ПользователиВКонтейнерах
		|						ПО РазрешенияДоступаИсключительные.Пользователь = ПользователиВКонтейнерах.Контейнер
		|						ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.УровниДоступа КАК УровниДоступа
		|						ПО РазрешенияДоступаИсключительные.УровеньДоступа = УровниДоступа.Ссылка
		|					ПО КоллекцииЗначенийДоступаЗначенияДоступа.Ссылка = РазрешенияДоступаИсключительные.КоллекцияЗначенийДоступа
		|				ПО РазрешенияДляРазрезовДоступа.Разрешение = КоллекцииЗначенийДоступаЗначенияДоступа.Значение
		|			ПО Дескрипторы.ЗначениеДоступа = РазрешенияДляРазрезовДоступа.РазрезДоступа
		|	ГДЕ
		|		РазрешенияДоступаИсключительные.Предмет = &ИдентификаторДляПроверкиПолитикДоступа
		|	
		|	СГРУППИРОВАТЬ ПО
		|		Дескрипторы.Дескриптор,
		|		ПользователиВКонтейнерах.Пользователь,
		|		КоллекцииЗначенийДоступаЗначенияДоступа.Ссылка,
		// ТСК Талько Э.Г.; 09.06.2018; Управление доступом {
		//|		Дескрипторы.ЗначениеДоступа) КАК РазрешенияИсключительные
		|		1) КАК РазрешенияИсключительные
		// ТСК Талько Э.Г.; 09.06.2018; Управление доступом }
		|
		|СГРУППИРОВАТЬ ПО
		|	РазрешенияИсключительные.Дескриптор,
		|	РазрешенияИсключительные.Пользователь,
		|	РазрешенияИсключительные.Коллекция
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	РазрешенияОбщие.Дескриптор,
		|	РазрешенияОбщие.Пользователь,
		|	НЕОПРЕДЕЛЕНО,
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ РазрешенияОбщие.ЗначениеДоступа),
		|	МИНИМУМ(РазрешенияОбщие.Чтение),
		|	МИНИМУМ(РазрешенияОбщие.Изменение),
		|	МИНИМУМ(РазрешенияОбщие.Добавление),
		|	МИНИМУМ(РазрешенияОбщие.Удаление)
		|ИЗ
		|	(ВЫБРАТЬ
		|		Дескрипторы.Дескриптор КАК Дескриптор,
		|		ПользователиВКонтейнерах.Пользователь КАК Пользователь,
		// ТСК Талько Э.Г.; 09.06.2018; Управление доступом {
		//|		Дескрипторы.ЗначениеДоступа КАК ЗначениеДоступа,
		|		1 КАК ЗначениеДоступа,
		// ТСК Талько Э.Г.; 09.06.2018; Управление доступом }
		|		МАКСИМУМ(УровниДоступа.Чтение) КАК Чтение,
		|		МАКСИМУМ(УровниДоступа.Изменение) КАК Изменение,
		|		МАКСИМУМ(УровниДоступа.Добавление) КАК Добавление,
		|		МАКСИМУМ(УровниДоступа.Удаление) КАК Удаление
		|	ИЗ
		|		Дескрипторы КАК Дескрипторы
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РазрешенияДляРазрезовДоступа КАК РазрешенияДляРазрезовДоступа
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РазрешенияДоступаОбщие КАК РазрешенияДоступаОбщие
		|					ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПользователиВКонтейнерах КАК ПользователиВКонтейнерах
		|					ПО РазрешенияДоступаОбщие.Пользователь = ПользователиВКонтейнерах.Контейнер
		|					ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.УровниДоступа КАК УровниДоступа
		|					ПО РазрешенияДоступаОбщие.УровеньДоступа = УровниДоступа.Ссылка
		|				ПО РазрешенияДляРазрезовДоступа.Разрешение = РазрешенияДоступаОбщие.ЗначениеДоступа
		|			ПО Дескрипторы.ЗначениеДоступа = РазрешенияДляРазрезовДоступа.РазрезДоступа
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПользователиВКонтейнерах КАК ПользователиВКонтейнерахИскл
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РазрешенияДоступаИсключительные КАК РазрешенияДоступаИсключительные
		|				ПО ПользователиВКонтейнерахИскл.Контейнер = РазрешенияДоступаИсключительные.Пользователь
		|					И (РазрешенияДоступаИсключительные.Предмет = &ИдентификаторДляПроверкиПолитикДоступа)
		|			ПО (ПользователиВКонтейнерах.Пользователь = ПользователиВКонтейнерахИскл.Пользователь)
		|	ГДЕ
		|		ПользователиВКонтейнерахИскл.Пользователь ЕСТЬ NULL 
		|	
		|	СГРУППИРОВАТЬ ПО
		|		Дескрипторы.Дескриптор,
		|		Дескрипторы.ЗначениеДоступа,
		// ТСК Талько Э.Г.; 09.06.2018; Управление доступом {
		//|		Дескрипторы.ЗначениеДоступа,
		|		1,
		// ТСК Талько Э.Г.; 09.06.2018; Управление доступом }
		|		ПользователиВКонтейнерах.Пользователь) КАК РазрешенияОбщие
		|
		|СГРУППИРОВАТЬ ПО
		|	РазрешенияОбщие.Дескриптор,
		|	РазрешенияОбщие.Пользователь
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	КолРазрезовДескрипторов.Дескриптор,
		|	Пользователи.Ссылка,
		|	НЕОПРЕДЕЛЕНО,
		|	0,
		|	ИСТИНА,
		|	ИСТИНА,
		|	ИСТИНА,
		|	ИСТИНА
		|ИЗ
		|	Справочник.Пользователи КАК Пользователи,
		|	КолРазрезовДескрипторов КАК КолРазрезовДескрипторов
		|ГДЕ
		|	КолРазрезовДескрипторов.КолРазрезов = 0
		|	И НЕ Пользователи.ПометкаУдаления
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РазрешенияДоступа.Дескриптор,
		|	РазрешенияДоступа.Пользователь,
		|	МАКСИМУМ(РазрешенияДоступа.Чтение) КАК Чтение,
		|	МАКСИМУМ(РазрешенияДоступа.Изменение) КАК Изменение,
		|	МАКСИМУМ(РазрешенияДоступа.Добавление) КАК Добавление,
		|	МАКСИМУМ(РазрешенияДоступа.Удаление) КАК Удаление
		|ПОМЕСТИТЬ ПраваПоРазрешениямДоступа
		|ИЗ
		|	РазрешенияДоступа КАК РазрешенияДоступа
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ КолРазрезовДескрипторов КАК КолРазрезовДескрипторов
		|		ПО РазрешенияДоступа.Дескриптор = КолРазрезовДескрипторов.Дескриптор
		|			И РазрешенияДоступа.КолРазрезовДоступа = КолРазрезовДескрипторов.КолРазрезов
		|
		|СГРУППИРОВАТЬ ПО
		|	РазрешенияДоступа.Дескриптор,
		|	РазрешенияДоступа.Пользователь
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВложенныйЗапрос.Дескриптор,
		|	ВложенныйЗапрос.Пользователь,
		|	МАКСИМУМ(ВложенныйЗапрос.Чтение) КАК Чтение,
		|	МАКСИМУМ(ВложенныйЗапрос.Изменение) КАК Изменение,
		|	МАКСИМУМ(ВложенныйЗапрос.Добавление) КАК Добавление,
		|	МАКСИМУМ(ВложенныйЗапрос.Удаление) КАК Удаление,
		|	МАКСИМУМ(ВложенныйЗапрос.УправлениеПравами) КАК УправлениеПравами
		|ПОМЕСТИТЬ ПраваПоРолямИРазрешениям
		|ИЗ
		|	(ВЫБРАТЬ
		|		ПраваПоРазрешениямДоступа.Дескриптор КАК Дескриптор,
		|		ПраваПоРазрешениямДоступа.Пользователь КАК Пользователь,
		|		ПраваПоРазрешениямДоступа.Чтение КАК Чтение,
		|		ПраваПоРазрешениямДоступа.Изменение
		|			И ПраваПоРолям.Изменение КАК Изменение,
		|		ПраваПоРазрешениямДоступа.Добавление
		|			И ПраваПоРолям.Добавление КАК Добавление,
		|		ПраваПоРазрешениямДоступа.Удаление
		|			И ПраваПоРолям.Удаление КАК Удаление,
		|		ЛОЖЬ КАК УправлениеПравами
		|	ИЗ
		|		ПраваПоРолям КАК ПраваПоРолям
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПраваПоРазрешениямДоступа КАК ПраваПоРазрешениямДоступа
		|			ПО ПраваПоРолям.Пользователь = ПраваПоРазрешениямДоступа.Пользователь
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		Дескрипторы.Дескриптор,
		|		ПраваПоРолям.Пользователь,
		|		ПраваПоРолям.ЧтениеБезОграничения,
		|		ПраваПоРолям.ИзменениеБезОграничения,
		|		ПраваПоРолям.ИзменениеБезОграничения,
		|		ПраваПоРолям.ИзменениеБезОграничения,
		|		ЛОЖЬ
		|	ИЗ
		|		Дескрипторы КАК Дескрипторы,
		|		ПраваПоРолям КАК ПраваПоРолям
		|	ГДЕ
		|		ПраваПоРолям.ЧтениеБезОграничения) КАК ВложенныйЗапрос
		|
		|СГРУППИРОВАТЬ ПО
		|	ВложенныйЗапрос.Дескриптор,
		|	ВложенныйЗапрос.Пользователь
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПравилаОбработкиНастроекПапки.Настройка КАК Настройка,
		|	ПравилаОбработкиНастроекПапки.Чтение,
		|	ПравилаОбработкиНастроекПапки.Добавление,
		|	ПравилаОбработкиНастроекПапки.Изменение,
		|	ПравилаОбработкиНастроекПапки.Удаление,
		|	ПравилаОбработкиНастроекПапки.УправлениеПравами
		|ПОМЕСТИТЬ ПравилаОбработкиНастроекПапки
		|ИЗ
		|	&ПравилаОбработкиНастроекПапки КАК ПравилаОбработкиНастроекПапки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВложенныйЗапрос.Дескриптор,
		|	ВложенныйЗапрос.Пользователь,
		|	ВложенныйЗапрос.Право,
		|	МАКСИМУМ(ВложенныйЗапрос.ПравоЗапрещено) КАК ПравоЗапрещено
		|ПОМЕСТИТЬ НастройкиПапок
		|ИЗ
		|	(ВЫБРАТЬ
		|		ДескрипторыДоступаОбъектов.Ссылка КАК Дескриптор,
		|		ПользователиВКонтейнерах.Пользователь КАК Пользователь,
		|		ДескрипторыВладельцевНастройкаПрав.Право КАК Право,
		|		ДескрипторыВладельцевНастройкаПрав.ПравоЗапрещено КАК ПравоЗапрещено
		|	ИЗ
		|		Справочник.ДескрипторыДоступаОбъектов КАК ДескрипторыДоступаОбъектов
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ДескрипторыДляОбъектов КАК ДескрипторыДляОбъектов
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ДескрипторыДоступаОбъектов.НастройкаПрав КАК ДескрипторыВладельцевНастройкаПрав
		|					ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПользователиВКонтейнерах КАК ПользователиВКонтейнерах
		|					ПО ДескрипторыВладельцевНастройкаПрав.Пользователь = ПользователиВКонтейнерах.Контейнер
		|				ПО ДескрипторыДляОбъектов.Дескриптор = ДескрипторыВладельцевНастройкаПрав.Ссылка
		|			ПО ДескрипторыДоступаОбъектов.Папка = ДескрипторыДляОбъектов.Объект
		|	ГДЕ
		|		ДескрипторыДоступаОбъектов.Ссылка В(&Дескрипторы)
		|		И ДескрипторыВладельцевНастройкаПрав.НаследованиеРазрешено
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ДескрипторыДоступаОбъектов.Ссылка,
		|		ПользователиВКонтейнерах.Пользователь,
		|		ДескрипторыВладельцевНастройкаПрав.Право,
		|		ДескрипторыВладельцевНастройкаПрав.ПравоЗапрещено
		|	ИЗ
		|		Справочник.ДескрипторыДоступаОбъектов КАК ДескрипторыДоступаОбъектов
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ДескрипторыДляОбъектов КАК ДескрипторыДляОбъектов
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ДескрипторыДоступаОбъектов.НастройкаПрав КАК ДескрипторыВладельцевНастройкаПрав
		|					ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПользователиВКонтейнерах КАК ПользователиВКонтейнерах
		|					ПО ДескрипторыВладельцевНастройкаПрав.Пользователь = ПользователиВКонтейнерах.Контейнер
		|				ПО ДескрипторыДляОбъектов.Дескриптор = ДескрипторыВладельцевНастройкаПрав.Ссылка
		|			ПО ДескрипторыДоступаОбъектов.Папка = ДескрипторыДляОбъектов.Объект
		|	ГДЕ
		|		ДескрипторыДоступаОбъектов.Ссылка В(&Дескрипторы)
		|		И НЕ ДескрипторыВладельцевНастройкаПрав.НаследованиеРазрешено
		|		И ДескрипторыДоступаОбъектов.ПапкаПередаетВсеПрава) КАК ВложенныйЗапрос
		|
		|СГРУППИРОВАТЬ ПО
		|	ВложенныйЗапрос.Дескриптор,
		|	ВложенныйЗапрос.Пользователь,
		|	ВложенныйЗапрос.Право
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВложенныйЗапрос.Дескриптор,
		|	ВложенныйЗапрос.Пользователь,
		|	МАКСИМУМ(ВложенныйЗапрос.Чтение) КАК Чтение,
		|	МАКСИМУМ(ВложенныйЗапрос.Добавление) КАК Добавление,
		|	МАКСИМУМ(ВложенныйЗапрос.Изменение) КАК Изменение,
		|	МАКСИМУМ(ВложенныйЗапрос.Удаление) КАК Удаление,
		|	МАКСИМУМ(ВложенныйЗапрос.УправлениеПравами) КАК УправлениеПравами
		|ПОМЕСТИТЬ ПраваОтПапок
		|ИЗ
		|	(ВЫБРАТЬ
		|		НастройкиПапок.Дескриптор КАК Дескриптор,
		|		НастройкиПапок.Пользователь КАК Пользователь,
		|		ПравилаОбработкиНастроекПапки.Чтение
		|			И НЕ НастройкиПапок.ПравоЗапрещено КАК Чтение,
		|		ПравилаОбработкиНастроекПапки.Добавление
		|			И НЕ НастройкиПапок.ПравоЗапрещено КАК Добавление,
		|		ПравилаОбработкиНастроекПапки.Изменение
		|			И НЕ НастройкиПапок.ПравоЗапрещено КАК Изменение,
		|		ПравилаОбработкиНастроекПапки.Удаление
		|			И НЕ НастройкиПапок.ПравоЗапрещено КАК Удаление,
		|		ПравилаОбработкиНастроекПапки.УправлениеПравами
		|			И НЕ НастройкиПапок.ПравоЗапрещено КАК УправлениеПравами
		|	ИЗ
		|		НастройкиПапок КАК НастройкиПапок
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПравилаОбработкиНастроекПапки КАК ПравилаОбработкиНастроекПапки
		|			ПО НастройкиПапок.Право = ПравилаОбработкиНастроекПапки.Настройка
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ДескрипторыДоступаОбъектов.Ссылка,
		|		ПользователиСпр.Ссылка,
		|		ИСТИНА,
		|		ИСТИНА,
		|		ИСТИНА,
		|		ИСТИНА,
		|		ЛОЖЬ
		|	ИЗ
		|		Справочник.ДескрипторыДоступаОбъектов КАК ДескрипторыДоступаОбъектов
		|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДескрипторыДоступаОбъектов.НастройкаПрав КАК ДескрипторыДоступаОбъектовНастройкаПрав
		|			ПО ДескрипторыДоступаОбъектов.Ссылка = ДескрипторыДоступаОбъектовНастройкаПрав.Ссылка,
		|		Справочник.Пользователи КАК ПользователиСпр
		|	ГДЕ
		|		&ЭтоПапка = ЛОЖЬ
		|		И ДескрипторыДоступаОбъектов.Ссылка В(&Дескрипторы)
		|		И ДескрипторыДоступаОбъектов.Папка = НЕОПРЕДЕЛЕНО
		|		И ДескрипторыДоступаОбъектовНастройкаПрав.Ссылка ЕСТЬ NULL 
		|		И НЕ ПользователиСпр.ПометкаУдаления) КАК ВложенныйЗапрос
		|
		|СГРУППИРОВАТЬ ПО
		|	ВложенныйЗапрос.Дескриптор,
		|	ВложенныйЗапрос.Пользователь
		|
		|ИМЕЮЩИЕ
		|	МАКСИМУМ(ВложенныйЗапрос.Чтение) = ИСТИНА
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПраваОтПапок.Дескриптор КАК Дескриптор,
		|	ПраваОтПапок.Пользователь КАК Пользователь,
		|	ПраваОтПапок.Чтение
		|		И ПраваПоРолямИРазрешениям.Чтение КАК Чтение,
		|	ПраваОтПапок.Добавление
		|		И ПраваПоРолямИРазрешениям.Добавление КАК Добавление,
		|	ПраваОтПапок.Изменение
		|		И ПраваПоРолямИРазрешениям.Изменение КАК Изменение,
		|	ПраваОтПапок.Удаление
		|		И ПраваПоРолямИРазрешениям.Удаление КАК Удаление,
		|	ПраваОтПапок.УправлениеПравами КАК УправлениеПравами
		|ПОМЕСТИТЬ НовыеПрава
		|ИЗ
		|	ПраваОтПапок КАК ПраваОтПапок
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПраваПоРолямИРазрешениям КАК ПраваПоРолямИРазрешениям
		|		ПО ПраваОтПапок.Дескриптор = ПраваПоРолямИРазрешениям.Дескриптор
		|			И ПраваОтПапок.Пользователь = ПраваПоРолямИРазрешениям.Пользователь";
		
	СхемаЗапроса = Новый СхемаЗапроса;
	СхемаЗапроса.УстановитьТекстЗапроса(ТекстЗапроса);
	
	ПодзапросыКУдалению = Новый Массив;
	
	Если Не УчитыватьПолитикиДоступа Тогда
		Для Сч = 0 По 5 Цикл
			ПодзапросыКУдалению.Вставить(0, Сч);
		КонецЦикла;
		ПодзапросыКУдалению.Вставить(0, 9);
	КонецЕсли;
	
	Если Не УчитыватьНастройкиПравПапок Тогда
		Для Сч = 6 По 9 Цикл
			ПодзапросыКУдалению.Вставить(0, Сч);
		КонецЦикла;
	КонецЕсли;
	
	Для Каждого ИндексПодзапроса Из ПодзапросыКУдалению Цикл
		СхемаЗапроса.ПакетЗапросов.Удалить(ИндексПодзапроса);
	КонецЦикла;
	
	КоличествоПодзапросов = СхемаЗапроса.ПакетЗапросов.Количество();
	ПодзапросНовыеПрава = СхемаЗапроса.ПакетЗапросов[КоличествоПодзапросов - 1];
	ПодзапросНовыеПрава.ТаблицаДляПомещения = "НовыеПрава";
	
	ТекстЗапроса = СхемаЗапроса.ПолучитьТекстЗапроса();
	ДокументооборотПраваДоступа.ДополнитьТекстЗапросаПоПравам(ТекстЗапроса);
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Текст запроса для индивидуальных дескрипторов доступа.
// Т.е. для дескрипторов, у которых заполнен реквизит "контейнер пользователей".
// 
Функция ТекстЗапросаДляРасчетаПравИндивидуальныхДескрипторов() Экспорт
	
	ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ДескрипторыДоступаОбъектов.Ссылка КАК Дескриптор,
		|	ПользователиВКонтейнерах.Пользователь КАК Пользователь,
		|	ИСТИНА КАК Чтение,
		|	ДескрипторыДоступаОбъектов.Изменение КАК Изменение,
		|	ДескрипторыДоступаОбъектов.Изменение КАК Добавление,
		|	ДескрипторыДоступаОбъектов.Изменение КАК Удаление,
		|	ЛОЖЬ КАК УправлениеПравами
		|ПОМЕСТИТЬ НовыеПрава
		|ИЗ
		|	Справочник.ДескрипторыДоступаОбъектов КАК ДескрипторыДоступаОбъектов
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПользователиВКонтейнерах КАК ПользователиВКонтейнерах
		|		ПО ДескрипторыДоступаОбъектов.КонтейнерПользователей = ПользователиВКонтейнерах.Контейнер
		|ГДЕ
		|	ДескрипторыДоступаОбъектов.Ссылка В(&Дескрипторы)
		|
		|СГРУППИРОВАТЬ ПО
		|	ДескрипторыДоступаОбъектов.Ссылка,
		|	ПользователиВКонтейнерах.Пользователь";
		
	ДокументооборотПраваДоступа.ДополнитьТекстЗапросаПоПравам(ТекстЗапроса);
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Текст запроса для дескрипторов локальных администраторов.
// 
Функция ТекстЗапросаДляРасчетаПравДляЛокальныхАдминистраторов() Экспорт
	
	ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ТаблицаДескрипторов.Дескриптор,
		|	ТаблицаДескрипторов.ВидДоступа,
		|	ТаблицаДескрипторов.ЗначениеДоступа
		|ПОМЕСТИТЬ Дескрипторы
		|ИЗ
		|	&ТаблицаДескрипторов КАК ТаблицаДескрипторов
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПользователиВКонтейнерах.Пользователь КАК Пользователь,
		|	ИСТИНА КАК Чтение,
		|	МАКСИМУМ(ПраваРолей.Добавление) КАК Добавление,
		|	МАКСИМУМ(ПраваРолей.Изменение) КАК Изменение,
		|	МАКСИМУМ(ПраваРолей.Изменение) КАК Удаление,
		|	МАКСИМУМ(ПраваРолей.ЧтениеБезОграничения) КАК ЧтениеБезОграничения,
		|	МАКСИМУМ(ПраваРолей.ДобавлениеБезОграничения) КАК ДобавлениеБезОграничения,
		|	МАКСИМУМ(ПраваРолей.ИзменениеБезОграничения) КАК ИзменениеБезОграничения
		|ПОМЕСТИТЬ ПраваПоРолям
		|ИЗ
		|	РегистрСведений.ПолномочияПользователей КАК ПолномочияПользователей
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ПрофилиГруппДоступа.Роли КАК ПрофилиГруппДоступаРоли
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПраваРолей КАК ПраваРолей
		|			ПО ПрофилиГруппДоступаРоли.Роль = ПраваРолей.Роль
		|		ПО ПолномочияПользователей.Полномочия = ПрофилиГруппДоступаРоли.Ссылка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПользователиВКонтейнерах КАК ПользователиВКонтейнерах
		|		ПО ПолномочияПользователей.Владелец = ПользователиВКонтейнерах.Контейнер
		|ГДЕ
		|	ПраваРолей.ОбъектМетаданных = &Идентификатор
		|
		|СГРУППИРОВАТЬ ПО
		|	ПользователиВКонтейнерах.Пользователь
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Дескрипторы.Дескриптор КАК Дескриптор,
		// ТСК Талько Э.Г.; 09.06.2018; Управление доступом {
		//|	ЕСТЬNULL(КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Дескрипторы1.ЗначениеДоступа), 0) КАК КолРазрезов
		|	ЕСТЬNULL(КОЛИЧЕСТВО(РАЗЛИЧНЫЕ 1), 0) КАК КолРазрезов
		// ТСК Талько Э.Г.; 09.06.2018; Управление доступом }
		|ПОМЕСТИТЬ КолРазрезовДескрипторов
		|ИЗ
		|	Дескрипторы КАК Дескрипторы
		|		ЛЕВОЕ СОЕДИНЕНИЕ Дескрипторы КАК Дескрипторы1
		|		ПО Дескрипторы.Дескриптор = Дескрипторы1.Дескриптор
		|			И (Дескрипторы1.ЗначениеДоступа <> НЕОПРЕДЕЛЕНО)
		|
		|СГРУППИРОВАТЬ ПО
		|	Дескрипторы.Дескриптор
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РазрешенияДляЛокальныхАдминистраторов.Дескриптор,
		|	РазрешенияДляЛокальныхАдминистраторов.Пользователь,
		|	РазрешенияДляЛокальныхАдминистраторов.Коллекция,
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ РазрешенияДляЛокальныхАдминистраторов.ЗначениеДоступа) КАК КолРазрезовДоступа,
		|	МИНИМУМ(РазрешенияДляЛокальныхАдминистраторов.Чтение) КАК Чтение,
		|	МИНИМУМ(РазрешенияДляЛокальныхАдминистраторов.Изменение) КАК Изменение,
		|	МИНИМУМ(РазрешенияДляЛокальныхАдминистраторов.Добавление) КАК Добавление,
		|	МИНИМУМ(РазрешенияДляЛокальныхАдминистраторов.Удаление) КАК Удаление
		|ПОМЕСТИТЬ РазрешенияДоступа
		|ИЗ
		|	(ВЫБРАТЬ
		|		Дескрипторы.Дескриптор КАК Дескриптор,
		|		ПользователиВКонтейнерах.Пользователь КАК Пользователь,
		|		КоллекцииЗначенийДоступаЗначенияДоступа.Ссылка КАК Коллекция,
		// ТСК Талько Э.Г.; 09.06.2018; Управление доступом {
		//|		Дескрипторы.ЗначениеДоступа КАК ЗначениеДоступа,
		|		1 КАК ЗначениеДоступа,
		// ТСК Талько Э.Г.; 09.06.2018; Управление доступом }
		|		МАКСИМУМ(УровниДоступа.ЧтениеБезОграничения) КАК Чтение,
		|		МАКСИМУМ(УровниДоступа.ИзменениеБезОграничения) КАК Изменение,
		|		МАКСИМУМ(УровниДоступа.ИзменениеБезОграничения) КАК Добавление,
		|		МАКСИМУМ(УровниДоступа.ИзменениеБезОграничения) КАК Удаление
		|	ИЗ
		|		Дескрипторы КАК Дескрипторы
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РазрешенияДляРазрезовДоступа КАК РазрешенияДляРазрезовДоступа
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КоллекцииЗначенийДоступа.ЗначенияДоступа КАК КоллекцииЗначенийДоступаЗначенияДоступа
		|					ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РазрешенияДляЛокальныхАдминистраторов КАК РазрешенияДляЛокальныхАдминистраторов
		|						ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПользователиВКонтейнерах КАК ПользователиВКонтейнерах
		|						ПО РазрешенияДляЛокальныхАдминистраторов.Пользователь = ПользователиВКонтейнерах.Контейнер
		|						ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.УровниДоступа КАК УровниДоступа
		|						ПО РазрешенияДляЛокальныхАдминистраторов.УровеньДоступа = УровниДоступа.Ссылка
		|					ПО КоллекцииЗначенийДоступаЗначенияДоступа.Ссылка = РазрешенияДляЛокальныхАдминистраторов.КоллекцияЗначенийДоступа
		|				ПО РазрешенияДляРазрезовДоступа.Разрешение = КоллекцииЗначенийДоступаЗначенияДоступа.Значение
		|			ПО Дескрипторы.ЗначениеДоступа = РазрешенияДляРазрезовДоступа.РазрезДоступа
		|	ГДЕ
		|		РазрешенияДляЛокальныхАдминистраторов.Предмет = &ИдентификаторДляПроверкиПолитикДоступа
		|		И УровниДоступа.ЧтениеБезОграничения
		|	
		|	СГРУППИРОВАТЬ ПО
		|		Дескрипторы.Дескриптор,
		|		ПользователиВКонтейнерах.Пользователь,
		|		КоллекцииЗначенийДоступаЗначенияДоступа.Ссылка,
		// ТСК Талько Э.Г.; 09.06.2018; Управление доступом {
		//|		Дескрипторы.ЗначениеДоступа) КАК РазрешенияДляЛокальныхАдминистраторов
		|		1) КАК РазрешенияДляЛокальныхАдминистраторов
		// ТСК Талько Э.Г.; 09.06.2018; Управление доступом }
		|
		|СГРУППИРОВАТЬ ПО
		|	РазрешенияДляЛокальныхАдминистраторов.Дескриптор,
		|	РазрешенияДляЛокальныхАдминистраторов.Пользователь,
		|	РазрешенияДляЛокальныхАдминистраторов.Коллекция
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РазрешенияДоступа.Дескриптор,
		|	РазрешенияДоступа.Пользователь,
		|	МАКСИМУМ(РазрешенияДоступа.Чтение) КАК Чтение,
		|	МАКСИМУМ(РазрешенияДоступа.Изменение) КАК Изменение,
		|	МАКСИМУМ(РазрешенияДоступа.Добавление) КАК Добавление,
		|	МАКСИМУМ(РазрешенияДоступа.Удаление) КАК Удаление
		|ПОМЕСТИТЬ ПраваПоРазрешениямДоступа
		|ИЗ
		|	РазрешенияДоступа КАК РазрешенияДоступа
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ КолРазрезовДескрипторов КАК КолРазрезовДескрипторов
		|		ПО РазрешенияДоступа.Дескриптор = КолРазрезовДескрипторов.Дескриптор
		|			И РазрешенияДоступа.КолРазрезовДоступа = КолРазрезовДескрипторов.КолРазрезов
		|
		|СГРУППИРОВАТЬ ПО
		|	РазрешенияДоступа.Дескриптор,
		|	РазрешенияДоступа.Пользователь
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВложенныйЗапрос.Дескриптор,
		|	ВложенныйЗапрос.Пользователь,
		|	МАКСИМУМ(ВложенныйЗапрос.Чтение) КАК Чтение,
		|	МАКСИМУМ(ВложенныйЗапрос.Изменение) КАК Изменение,
		|	МАКСИМУМ(ВложенныйЗапрос.Добавление) КАК Добавление,
		|	МАКСИМУМ(ВложенныйЗапрос.Удаление) КАК Удаление,
		|	МАКСИМУМ(ВложенныйЗапрос.УправлениеПравами) КАК УправлениеПравами
		|ПОМЕСТИТЬ НовыеПрава
		|ИЗ
		|	(ВЫБРАТЬ
		|		ПраваПоРазрешениямДоступа.Дескриптор КАК Дескриптор,
		|		ПраваПоРазрешениямДоступа.Пользователь КАК Пользователь,
		|		ПраваПоРазрешениямДоступа.Чтение КАК Чтение,
		|		ПраваПоРазрешениямДоступа.Изменение
		|			И ПраваПоРолям.Изменение КАК Изменение,
		|		ПраваПоРазрешениямДоступа.Добавление
		|			И ПраваПоРолям.Добавление КАК Добавление,
		|		ПраваПоРазрешениямДоступа.Удаление
		|			И ПраваПоРолям.Удаление КАК Удаление,
		|		ЛОЖЬ КАК УправлениеПравами
		|	ИЗ
		|		ПраваПоРолям КАК ПраваПоРолям
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПраваПоРазрешениямДоступа КАК ПраваПоРазрешениямДоступа
		|			ПО ПраваПоРолям.Пользователь = ПраваПоРазрешениямДоступа.Пользователь
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		Дескрипторы.Дескриптор,
		|		ПраваПоРолям.Пользователь,
		|		ПраваПоРолям.ЧтениеБезОграничения,
		|		ПраваПоРолям.ИзменениеБезОграничения,
		|		ПраваПоРолям.ИзменениеБезОграничения,
		|		ПраваПоРолям.ИзменениеБезОграничения,
		|		ЛОЖЬ
		|	ИЗ
		|		Дескрипторы КАК Дескрипторы,
		|		ПраваПоРолям КАК ПраваПоРолям
		|	ГДЕ
		|		ПраваПоРолям.ЧтениеБезОграничения) КАК ВложенныйЗапрос
		|
		|СГРУППИРОВАТЬ ПО
		|	ВложенныйЗапрос.Дескриптор,
		|	ВложенныйЗапрос.Пользователь";
		
	ДокументооборотПраваДоступа.ДополнитьТекстЗапросаПоПравам(ТекстЗапроса);
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Текст запроса для объектов, которые являются разрезами доступа.
// Выдает права всем, кто входит в общие разрешения по разрезу,
//  или в исключительное разрешение, использующее этот разрез.
// 
// Возвращаемое значение - Строка - текст запроса
// 
Функция ТекстЗапросаДляРасчетаПравРазрезаДоступа() Экспорт
	
	ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ТаблицаДескрипторов.Дескриптор,
		|	ТаблицаДескрипторов.ВидДоступа,
		|	ТаблицаДескрипторов.ЗначениеДоступа
		|ПОМЕСТИТЬ Дескрипторы
		|ИЗ
		|	&ТаблицаДескрипторов КАК ТаблицаДескрипторов
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПользователиВКонтейнерах.Пользователь КАК Пользователь,
		|	ИСТИНА КАК Чтение,
		|	МАКСИМУМ(ПраваРолей.Добавление) КАК Добавление,
		|	МАКСИМУМ(ПраваРолей.Изменение) КАК Изменение,
		|	МАКСИМУМ(ПраваРолей.Изменение) КАК Удаление,
		|	МАКСИМУМ(ПраваРолей.ЧтениеБезОграничения) КАК ЧтениеБезОграничения,
		|	МАКСИМУМ(ПраваРолей.ДобавлениеБезОграничения) КАК ДобавлениеБезОграничения,
		|	МАКСИМУМ(ПраваРолей.ИзменениеБезОграничения) КАК ИзменениеБезОграничения
		|ПОМЕСТИТЬ ПраваПоРолям
		|ИЗ
		|	РегистрСведений.ПолномочияПользователей КАК ПолномочияПользователей
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ПрофилиГруппДоступа.Роли КАК ПрофилиГруппДоступаРоли
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПраваРолей КАК ПраваРолей
		|			ПО ПрофилиГруппДоступаРоли.Роль = ПраваРолей.Роль
		|		ПО ПолномочияПользователей.Полномочия = ПрофилиГруппДоступаРоли.Ссылка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПользователиВКонтейнерах КАК ПользователиВКонтейнерах
		|		ПО ПолномочияПользователей.Владелец = ПользователиВКонтейнерах.Контейнер
		|ГДЕ
		|	ПраваРолей.ОбъектМетаданных = &Идентификатор
		|
		|СГРУППИРОВАТЬ ПО
		|	ПользователиВКонтейнерах.Пользователь
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Дескрипторы.Дескриптор КАК Дескриптор,
		// ТСК Талько Э.Г.; 09.06.2018; Управление доступом {
		//|	ЕСТЬNULL(КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Дескрипторы1.ЗначениеДоступа), 0) КАК КолРазрезов
		|	ЕСТЬNULL(КОЛИЧЕСТВО(РАЗЛИЧНЫЕ 1), 0) КАК КолРазрезов
		// ТСК Талько Э.Г.; 09.06.2018; Управление доступом }
		|ПОМЕСТИТЬ КолРазрезовДескрипторов
		|ИЗ
		|	Дескрипторы КАК Дескрипторы
		|		ЛЕВОЕ СОЕДИНЕНИЕ Дескрипторы КАК Дескрипторы1
		|		ПО Дескрипторы.Дескриптор = Дескрипторы1.Дескриптор
		|			И (Дескрипторы1.ЗначениеДоступа <> НЕОПРЕДЕЛЕНО)
		|
		|СГРУППИРОВАТЬ ПО
		|	Дескрипторы.Дескриптор
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВложенныйЗапрос.Дескриптор,
		|	ВложенныйЗапрос.Пользователь,
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВложенныйЗапрос.ЗначениеДоступа) КАК КолРазрезовДоступа,
		|	МАКСИМУМ(ВложенныйЗапрос.Чтение) КАК Чтение,
		|	МАКСИМУМ(ВложенныйЗапрос.Изменение) КАК Изменение,
		|	МАКСИМУМ(ВложенныйЗапрос.Добавление) КАК Добавление,
		|	МАКСИМУМ(ВложенныйЗапрос.Удаление) КАК Удаление
		|ПОМЕСТИТЬ РазрешенияДоступа
		|ИЗ
		|	(ВЫБРАТЬ
		|		Дескрипторы.Дескриптор КАК Дескриптор,
		|		ПользователиВКонтейнерах.Пользователь КАК Пользователь,
		// ТСК Талько Э.Г.; 09.06.2018; Управление доступом {
		//|		Дескрипторы.ЗначениеДоступа КАК ЗначениеДоступа,
		|		1 КАК ЗначениеДоступа,
		// ТСК Талько Э.Г.; 09.06.2018; Управление доступом }
		|		УровниДоступа.Чтение КАК Чтение,
		|		УровниДоступа.Изменение КАК Изменение,
		|		УровниДоступа.Добавление КАК Добавление,
		|		УровниДоступа.Удаление КАК Удаление
		|	ИЗ
		|		Дескрипторы КАК Дескрипторы
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РазрешенияДляРазрезовДоступа КАК РазрешенияДляРазрезовДоступа
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РазрешенияДоступаОбщие КАК РазрешенияДоступаОбщие
		|					ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПользователиВКонтейнерах КАК ПользователиВКонтейнерах
		|					ПО РазрешенияДоступаОбщие.Пользователь = ПользователиВКонтейнерах.Контейнер
		|					ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.УровниДоступа КАК УровниДоступа
		|					ПО РазрешенияДоступаОбщие.УровеньДоступа = УровниДоступа.Ссылка
		|				ПО РазрешенияДляРазрезовДоступа.Разрешение = РазрешенияДоступаОбщие.ЗначениеДоступа
		|			ПО Дескрипторы.ЗначениеДоступа = РазрешенияДляРазрезовДоступа.РазрезДоступа
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		Дескрипторы.Дескриптор,
		|		ПользователиВКонтейнерах.Пользователь,
		// ТСК Талько Э.Г.; 09.06.2018; Управление доступом {
		//|		Дескрипторы.ЗначениеДоступа,
		|		1,
		// ТСК Талько Э.Г.; 09.06.2018; Управление доступом }
		|		УровниДоступа.Чтение,
		|		УровниДоступа.Изменение,
		|		УровниДоступа.Добавление,
		|		УровниДоступа.Удаление
		|	ИЗ
		|		Дескрипторы КАК Дескрипторы
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РазрешенияДляРазрезовДоступа КАК РазрешенияДляРазрезовДоступа
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КоллекцииЗначенийДоступа.ЗначенияДоступа КАК КоллекцииЗначенийДоступаЗначенияДоступа
		|					ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РазрешенияДоступаИсключительные КАК РазрешенияДоступаИсключительные
		|						ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПользователиВКонтейнерах КАК ПользователиВКонтейнерах
		|						ПО РазрешенияДоступаИсключительные.Пользователь = ПользователиВКонтейнерах.Контейнер
		|						ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.УровниДоступа КАК УровниДоступа
		|						ПО РазрешенияДоступаИсключительные.УровеньДоступа = УровниДоступа.Ссылка
		|					ПО КоллекцииЗначенийДоступаЗначенияДоступа.Ссылка = РазрешенияДоступаИсключительные.КоллекцияЗначенийДоступа
		|				ПО РазрешенияДляРазрезовДоступа.Разрешение = КоллекцииЗначенийДоступаЗначенияДоступа.Значение
		|			ПО Дескрипторы.ЗначениеДоступа = РазрешенияДляРазрезовДоступа.РазрезДоступа
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		Дескрипторы.Дескриптор,
		|		ПользователиВКонтейнерах.Пользователь,
		// ТСК Талько Э.Г.; 09.06.2018; Управление доступом {
		//|		Дескрипторы.ЗначениеДоступа,
		|		1,
		// ТСК Талько Э.Г.; 09.06.2018; Управление доступом }
		|		УровниДоступа.ЧтениеБезОграничения,
		|		УровниДоступа.ИзменениеБезОграничения,
		|		УровниДоступа.ИзменениеБезОграничения,
		|		УровниДоступа.ИзменениеБезОграничения
		|	ИЗ
		|		Дескрипторы КАК Дескрипторы
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РазрешенияДляРазрезовДоступа КАК РазрешенияДляРазрезовДоступа
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КоллекцииЗначенийДоступа.ЗначенияДоступа КАК КоллекцииЗначенийДоступаЗначенияДоступа
		|					ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РазрешенияДляЛокальныхАдминистраторов КАК РазрешенияДляЛокальныхАдминистраторов
		|						ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПользователиВКонтейнерах КАК ПользователиВКонтейнерах
		|						ПО РазрешенияДляЛокальныхАдминистраторов.Пользователь = ПользователиВКонтейнерах.Контейнер
		|						ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.УровниДоступа КАК УровниДоступа
		|						ПО РазрешенияДляЛокальныхАдминистраторов.УровеньДоступа = УровниДоступа.Ссылка
		|					ПО КоллекцииЗначенийДоступаЗначенияДоступа.Ссылка = РазрешенияДляЛокальныхАдминистраторов.КоллекцияЗначенийДоступа
		|				ПО РазрешенияДляРазрезовДоступа.Разрешение = КоллекцииЗначенийДоступаЗначенияДоступа.Значение
		|			ПО Дескрипторы.ЗначениеДоступа = РазрешенияДляРазрезовДоступа.РазрезДоступа) КАК ВложенныйЗапрос
		|
		|СГРУППИРОВАТЬ ПО
		|	ВложенныйЗапрос.Дескриптор,
		|	ВложенныйЗапрос.Пользователь
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	КолРазрезовДескрипторов.Дескриптор,
		|	Пользователи.Ссылка,
		|	0,
		|	ИСТИНА,
		|	ИСТИНА,
		|	ИСТИНА,
		|	ИСТИНА
		|ИЗ
		|	Справочник.Пользователи КАК Пользователи,
		|	КолРазрезовДескрипторов КАК КолРазрезовДескрипторов
		|ГДЕ
		|	КолРазрезовДескрипторов.КолРазрезов = 0
		|	И НЕ Пользователи.ПометкаУдаления
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РазрешенияДоступа.Дескриптор,
		|	РазрешенияДоступа.Пользователь,
		|	МАКСИМУМ(РазрешенияДоступа.Чтение) КАК Чтение,
		|	МАКСИМУМ(РазрешенияДоступа.Изменение) КАК Изменение,
		|	МАКСИМУМ(РазрешенияДоступа.Добавление) КАК Добавление,
		|	МАКСИМУМ(РазрешенияДоступа.Удаление) КАК Удаление
		|ПОМЕСТИТЬ ПраваПоРазрешениямДоступа
		|ИЗ
		|	РазрешенияДоступа КАК РазрешенияДоступа
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ КолРазрезовДескрипторов КАК КолРазрезовДескрипторов
		|		ПО РазрешенияДоступа.Дескриптор = КолРазрезовДескрипторов.Дескриптор
		|			И РазрешенияДоступа.КолРазрезовДоступа = КолРазрезовДескрипторов.КолРазрезов
		|
		|СГРУППИРОВАТЬ ПО
		|	РазрешенияДоступа.Дескриптор,
		|	РазрешенияДоступа.Пользователь
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВложенныйЗапрос.Дескриптор,
		|	ВложенныйЗапрос.Пользователь,
		|	МАКСИМУМ(ВложенныйЗапрос.Чтение) КАК Чтение,
		|	МАКСИМУМ(ВложенныйЗапрос.Изменение) КАК Изменение,
		|	МАКСИМУМ(ВложенныйЗапрос.Добавление) КАК Добавление,
		|	МАКСИМУМ(ВложенныйЗапрос.Удаление) КАК Удаление,
		|	МАКСИМУМ(ВложенныйЗапрос.УправлениеПравами) КАК УправлениеПравами
		|ПОМЕСТИТЬ НовыеПрава
		|ИЗ
		|	(ВЫБРАТЬ
		|		ПраваПоРазрешениямДоступа.Дескриптор КАК Дескриптор,
		|		ПраваПоРазрешениямДоступа.Пользователь КАК Пользователь,
		|		ПраваПоРазрешениямДоступа.Чтение КАК Чтение,
		|		ПраваПоРазрешениямДоступа.Изменение
		|			И ПраваПоРолям.Изменение КАК Изменение,
		|		ПраваПоРазрешениямДоступа.Добавление
		|			И ПраваПоРолям.Добавление КАК Добавление,
		|		ПраваПоРазрешениямДоступа.Удаление
		|			И ПраваПоРолям.Удаление КАК Удаление,
		|		ЛОЖЬ КАК УправлениеПравами
		|	ИЗ
		|		ПраваПоРолям КАК ПраваПоРолям
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПраваПоРазрешениямДоступа КАК ПраваПоРазрешениямДоступа
		|			ПО ПраваПоРолям.Пользователь = ПраваПоРазрешениямДоступа.Пользователь
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		Дескрипторы.Дескриптор,
		|		ПраваПоРолям.Пользователь,
		|		ПраваПоРолям.ЧтениеБезОграничения,
		|		ПраваПоРолям.ДобавлениеБезОграничения,
		|		ПраваПоРолям.ДобавлениеБезОграничения,
		|		ПраваПоРолям.ДобавлениеБезОграничения,
		|		ЛОЖЬ
		|	ИЗ
		|		Дескрипторы КАК Дескрипторы,
		|		ПраваПоРолям КАК ПраваПоРолям
		|	ГДЕ
		|		ПраваПоРолям.ЧтениеБезОграничения) КАК ВложенныйЗапрос
		|
		|СГРУППИРОВАТЬ ПО
		|	ВложенныйЗапрос.Дескриптор,
		|	ВложенныйЗапрос.Пользователь";
	
	ДокументооборотПраваДоступа.ДополнитьТекстЗапросаПоПравам(ТекстЗапроса);
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Текст запроса, который возвращает выборку с правами по дескрипторам.
// Работает аналогично стандартному запросу, но использует другой подзапрос для получения настроек прав.
// 
// Возвращаемое значение - Строка - текст запроса
// 
Функция ТекстЗапросаДляРасчетаПравПапок() Экспорт
	
	ТекстЗапросаКНастройкамПапок =
		"ВЫБРАТЬ
		|	ДескрипторыДоступаОбъектовНастройкаПрав.Ссылка КАК Дескриптор,
		|	ПользователиВКонтейнерах.Пользователь КАК Пользователь,
		|	ДескрипторыДоступаОбъектовНастройкаПрав.Право КАК Право,
		|	МАКСИМУМ(ДескрипторыДоступаОбъектовНастройкаПрав.ПравоЗапрещено) КАК ПравоЗапрещено
		|ПОМЕСТИТЬ НастройкиПапок
		|ИЗ
		|	Справочник.ДескрипторыДоступаОбъектов.НастройкаПрав КАК ДескрипторыДоступаОбъектовНастройкаПрав
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПользователиВКонтейнерах КАК ПользователиВКонтейнерах
		|		ПО ДескрипторыДоступаОбъектовНастройкаПрав.Пользователь = ПользователиВКонтейнерах.Контейнер
		|ГДЕ
		|	ДескрипторыДоступаОбъектовНастройкаПрав.Ссылка В(&Дескрипторы)
		|
		|СГРУППИРОВАТЬ ПО
		|	ДескрипторыДоступаОбъектовНастройкаПрав.Ссылка,
		|	ПользователиВКонтейнерах.Пользователь,
		|	ДескрипторыДоступаОбъектовНастройкаПрав.Право";
		
	ТекстСтандартногоЗапроса = ТекстЗапросаДляСтандартногоРасчетаПрав(Истина, Ложь);
	
	СхемаЗапроса = Новый СхемаЗапроса();
	СхемаЗапроса.УстановитьТекстЗапроса(ТекстСтандартногоЗапроса);
	ПакетЗапросов = СхемаЗапроса.ПакетЗапросов;
	
	Для Каждого Подзапрос Из ПакетЗапросов Цикл
		Если Подзапрос.ТаблицаДляПомещения = "НастройкиПапок" Тогда
			Подзапрос.УстановитьТекстЗапроса(ТекстЗапросаКНастройкамПапок);
		КонецЕсли;
	КонецЦикла;
	
	ТекстЗапроса = СхемаЗапроса.ПолучитьТекстЗапроса();
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Запрос, который выбирает значения доступа, соответствующие дескрипторам, по всем актуальным видам.
// 
Функция ЗапросПоДескрипторамСВидамиДоступа() Экспорт
	
	Запрос = Новый Запрос;
	
	АктуальныеВидыДоступа = ДокументооборотПраваДоступаПовтИсп.ТаблицаРазрезовДоступа();
	
	Если АктуальныеВидыДоступа.Количество() = 0 Тогда
		
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	ТаблицаДескрипторов.Ссылка КАК Дескриптор,
			|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыДоступа.ПустаяСсылка) КАК ВидДоступа,
			|	ЕСТЬNULL(ТаблицаДескрипторов1.Ссылка, НЕОПРЕДЕЛЕНО) КАК ЗначениеДоступа
			|ИЗ
			|	Справочник.ДескрипторыДоступаОбъектов КАК ТаблицаДескрипторов
					// Для того, чтобы тип колонки выгруженной таблицы не был пустым,
					// и таблицу можно было использовать в запросе для расчета прав.
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДескрипторыДоступаОбъектов КАК ТаблицаДескрипторов1
			|		ПО ЛОЖЬ
			|ГДЕ
			|	ТаблицаДескрипторов.Ссылка В(&Дескрипторы)";
			
		Возврат Запрос;
			
	КонецЕсли;
	
	ШаблонЗапроса =
		"ВЫБРАТЬ
		|	ТаблицаДескрипторов.Ссылка КАК Дескриптор,
		|	%ПараметрВидДоступа% КАК ВидДоступа,
		|	ЕСТЬNULL(ТаблицаЗначенийДоступа.Ссылка, НЕОПРЕДЕЛЕНО) КАК ЗначениеДоступа
		|ИЗ
		|	Справочник.ДескрипторыДоступаОбъектов КАК ТаблицаДескрипторов
		|		%ТЧ%
		|		ЛЕВОЕ СОЕДИНЕНИЕ %ТаблицаЗначенийДоступа% КАК ТаблицаЗначенийДоступа
		|		ПО %ТаблицаСоединенияСоЗначением%.%ПолеСоединенияСоЗначением% = ТаблицаЗначенийДоступа.Ссылка
		|ГДЕ
		|	ТаблицаДескрипторов.Ссылка В (&Дескрипторы)";
		
	ЭтоПерваяСтрока = Истина;
	Для Каждого Стр Из АктуальныеВидыДоступа Цикл
		
		ФрагментТекста = СтрЗаменить(ШаблонЗапроса, "%ПараметрВидДоступа%", "&" + Стр.Имя);
		ФрагментТекста = СтрЗаменить(ФрагментТекста, "%ТаблицаЗначенийДоступа%", Стр.ИмяТаблицыЗначенийДоступа);
		ФрагментТекста = СтрЗаменить(ФрагментТекста, "%ПолеСоединенияСоЗначением%", Стр.ИмяПоляТаблицыДескриптора);
		
		Если ЗначениеЗаполнено(Стр.ИмяТЧДескриптора) Тогда
			ФрагментТекста = СтрЗаменить(ФрагментТекста, "%ТЧ%", 
				"ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДескрипторыДоступаОбъектов." + Стр.ИмяТЧДескриптора + " КАК ТЧДескрипторов"
				+ "
				|		ПО ТаблицаДескрипторов.Ссылка = ТЧДескрипторов.Ссылка");
			ФрагментТекста = СтрЗаменить(ФрагментТекста, "%ТаблицаСоединенияСоЗначением%", "ТЧДескрипторов");
		Иначе
			ФрагментТекста = СтрЗаменить(ФрагментТекста, "%ТЧ%", "");
			ФрагментТекста = СтрЗаменить(ФрагментТекста, "%ТаблицаСоединенияСоЗначением%", "ТаблицаДескрипторов");
		КонецЕсли;
		
		Запрос.Текст = Запрос.Текст + ?(ЭтоПерваяСтрока, "", Символы.ПС + "ОБЪЕДИНИТЬ ВСЕ" + Символы.ПС);
		Запрос.Текст = Запрос.Текст + ФрагментТекста;
		
		Запрос.УстановитьПараметр(Стр.Имя, Стр.ВидДоступа);
		
		ЭтоПерваяСтрока = Ложь;
		
	КонецЦикла;
	
	Возврат Запрос;
	
КонецФункции

Функция ТаблицаРазрезовДоступа(ТолькоАктуальные = Истина) Экспорт
	
	Возврат ДокументооборотПраваДоступаПереопределяемый.ТаблицаРазрезовДоступа(ТолькоАктуальные);
	
КонецФункции

Функция ДеревоЗначенийДоступа() Экспорт
	
	Дерево = Новый ДеревоЗначений;
	Дерево.Колонки.Добавить("ВидДоступа");
	Дерево.Колонки.Добавить("ЗначениеДоступа");
	Дерево.Колонки.Добавить("Представление");
	Дерево.Колонки.Добавить("ЭтоГруппа");
	
	ШаблонТекстаЗапросаПоЗначениямДоступа =
		"ВЫБРАТЬ
		|	ТаблицаВидаДоступа.Ссылка КАК ЗначениеДоступа,
		|	ТаблицаВидаДоступа.Представление КАК Представление
		|ИЗ
		|	%1 КАК ТаблицаВидаДоступа
		|
		|ГДЕ НЕ ПометкаУдаления
		|
		|%2";
	
	ТаблицаРазрезовДоступа = ДокументооборотПраваДоступаПовтИсп.ТаблицаРазрезовДоступа();
	ТаблицаРазрезовДоступа.Сортировать("Имя");
	Для Каждого СтрВидаДоступа Из ТаблицаРазрезовДоступа Цикл
		
		ИмяТаблицыЗначенийДоступа = СтрВидаДоступа.ИмяТаблицыЗначенийДоступа;
		МетаданныеТаблицы = Метаданные.НайтиПоПолномуИмени(ИмяТаблицыЗначенийДоступа);
		ЭтоИерархическийСправочник = 
			Метаданные.Справочники.Содержит(МетаданныеТаблицы) И МетаданныеТаблицы.Иерархический;
		
		Запрос = Новый Запрос(СтрШаблон(ШаблонТекстаЗапросаПоЗначениямДоступа,
			ИмяТаблицыЗначенийДоступа, 
			?(ЭтоИерархическийСправочник, "УПОРЯДОЧИТЬ ПО ТаблицаВидаДоступа.Ссылка ИЕРАРХИЯ", "")));
			
		Результат = Запрос.Выполнить();
		
		Если Результат.Пустой() Тогда
			// Если нет ни одного значения, вид доступа не добавляется.
			Продолжить;
		КонецЕсли;
		
		НоваяСтрокаВида = Дерево.Строки.Добавить();
		НоваяСтрокаВида.ВидДоступа = СтрВидаДоступа.ВидДоступа;
		НоваяСтрокаВида.ЗначениеДоступа = СтрВидаДоступа.ВидДоступа;
		НоваяСтрокаВида.Представление = Строка(СтрВидаДоступа.ВидДоступа);
		
		ДеревоРазрезаДоступа = Результат.Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
		ДеревоРазрезаДоступа.Строки.Сортировать("Представление", Истина);
		
		ПеренестиСтрокиВДеревоВидовДоступа(НоваяСтрокаВида, ДеревоРазрезаДоступа, СтрВидаДоступа.ВидДоступа);
		
	КонецЦикла;
	
	Возврат Дерево;
	
КонецФункции

Процедура ПеренестиСтрокиВДеревоВидовДоступа(Приемник, Источник, ВидДоступа = Неопределено)
	
	ПарыКОбработке = Новый Массив;
	ПарыКОбработке.Добавить(Новый Структура("Приемник, Источник", Приемник, Источник));
	
	Пока ПарыКОбработке.Количество() > 0 Цикл
		
		ТекущийПриемник = ПарыКОбработке[0].Приемник;
		ТекущийИсточник = ПарыКОбработке[0].Источник;
		
		Для Каждого СтрИсточника Из ТекущийИсточник.Строки Цикл
			
			СтрПриемника = ТекущийПриемник.Строки.Добавить();
			ЗаполнитьЗначенияСвойств(СтрПриемника, СтрИсточника);
			Если ЗначениеЗаполнено(ВидДоступа) Тогда
				СтрПриемника.ВидДоступа = ВидДоступа;
				СтрПриемника.ЭтоГруппа = СтрПриемника.ЗначениеДоступа.ЭтоГруппа;
			КонецЕсли;
			
			ПарыКОбработке.Добавить(Новый Структура("Приемник, Источник", СтрПриемника, СтрИсточника));
			
		КонецЦикла;
		
		ПарыКОбработке.Удалить(0);
		
	КонецЦикла;
	
КонецПроцедуры

// Возвращает массив неиспользуемых разрезов доступа.
//
// Параметры:
//  ОтключенныеПоФункциональнымОпциям - Булево - включать разрезы, отключенные по функциональным опциям.
//  ОтключенныеВручную - Булево - включать разрезы, отключенные вручную.
//
// Возвращаемое значение:
//  Массив - массив отключенных разрезов доступа.
//
Функция ОтключенныеРазрезыДоступа(
			ОтключенныеПоФункциональнымОпциям = Истина,
			ОтключенныеВручную = Истина) Экспорт
	
	Возврат ДокументооборотПраваДоступаПереопределяемый.ОтключенныеРазрезыДоступа(
		ОтключенныеПоФункциональнымОпциям, ОтключенныеВручную);
	
КонецФункции

// Возвращает соответствие разрезов доступа и имен реквизитов Дескриптора.
//
Функция ИменаРеквизитовДескрпитораПоРазрезамДоступа() Экспорт
	
	Возврат ДокументооборотПраваДоступаПереопределяемый.ИменаРеквизитовДескрпитораПоРазрезамДоступа();
	
КонецФункции

// Возвращает массив неиспользуемых реквизитов дескриптора.
// 
// Параметры:
//  ИдентификаторОбъектаМетаданных - Ссылка на ИОМ - значение одноименного реквизита дескриптора.
// 
// Возвращаемое значение:
//  Массив - список имен неиспользуемых реквизитов.
// 
Функция НеиспользуемыеРеквизитыДескриптора(ИдентификаторОбъектаМетаданных) Экспорт
	
	Возврат ДокументооборотПраваДоступаПереопределяемый.НеиспользуемыеРеквизитыДескриптора(
		ИдентификаторОбъектаМетаданных);
	
КонецФункции

// Возвращает массив типов объектов, которые имеют разрезы доступа.
//
Функция ТипыСсылокИспользующиеРазрезыДоступа() Экспорт
	
	Результат = Новый Массив;
	
	ПредметыДоступаСРазрезами = ДокументооборотПраваДоступаПереопределяемый.ПредметыДоступаСРазрезами();
	ИдентификаторыПредметов = ПредметыДоступаСРазрезами.ВыгрузитьКолонку("ОбъектМетаданных");
	ПустыеСсылки = ОбщегоНазначения.ЗначениеРеквизитаОбъектов(ИдентификаторыПредметов, "ЗначениеПустойСсылки");
	
	Для Каждого КлючИЗначение Из ПустыеСсылки Цикл
		Результат.Добавить(ТипЗнч(КлючИЗначение.Значение));
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

#КонецЕсли
