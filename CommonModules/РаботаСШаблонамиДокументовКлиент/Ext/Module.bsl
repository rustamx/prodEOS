//Показывает общую форму создания документа по шаблону, который используется при создании документа
//Параметры: 
//	ТипШаблонаДокумента - строка "ШаблоныВнутреннихДокументов", "ШаблоныВходящих документов" или "ШаблоныИсходящихДокументов"
//	ПапкаСозданияДокумента - справочник "ПапкиВнутреннихДокументов"
//	СозданиеОбращенияГраждан - Булево - (по умолчанию Ложь) при создании обращений граждан используем не все шаблоны
//Возвращает: ссылку на шаблон документа, если пользователь нажал на кнопку "СоздатьПоШаблону"
//			  строку "СоздатьПустойДокумент", если создается пустой документ
//			  Неопределено, если пользователь нажал на Отмену
Процедура ПоказатьФормуСозданияДокументаПоШаблону(
	ОписаниеОповещения,
	ТипШаблонаДокумента, 
	ПапкаСозданияДокумента = Неопределено, 
	СозданиеОбращенияГраждан = Ложь) Экспорт
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ТипШаблонаДокумента", ТипШаблонаДокумента);
	ПараметрыФормы.Вставить("ВозможностьСозданияПустогоДокумента", Истина); 
	ПараметрыФормы.Вставить("ПапкаСозданияДокумента", ПапкаСозданияДокумента);
		
	Если СозданиеОбращенияГраждан Тогда 
		ПараметрыФормы.Вставить("СозданиеОбращенияГраждан", СозданиеОбращенияГраждан);
	КонецЕсли;
	
	Попытка
		ПараметрыОбработчика = Новый Структура;
		ПараметрыОбработчика.Вставить("ОписаниеОповещения", ОписаниеОповещения);
		ОписаниеОповещенияФормы = Новый ОписаниеОповещения(
			"ПоказатьФормуСозданияДокументаПоШаблонуПродолжение",
			ЭтотОбъект,
			ПараметрыОбработчика);
		
		ОткрытьФорму(
			"ОбщаяФорма.СозданиеДокументаПоШаблону", 
			ПараметрыФормы,,,,,
			ОписаниеОповещенияФормы,
			РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	Исключение
		Инфо = ИнформацияОбОшибке();
		Если Инфо.Описание = "СоздатьПустойДокумент" Тогда
			Результат = "СоздатьПустойДокумент";
			ВыполнитьОбработкуОповещения(ОписаниеОповещенияФормы, Результат);
		Иначе
			ВызватьИсключение;
		КонецЕсли;
	КонецПопытки;
		
КонецПроцедуры

Процедура ПоказатьФормуСозданияДокументаПоШаблонуПродолжение(Результат, Параметры) Экспорт
	
	Если Результат = "ПрерватьОперацию" Или Не ЗначениеЗаполнено(Результат) Тогда
		Возврат;
	КонецЕсли;
	
	ВыполнитьОбработкуОповещения(Параметры.ОписаниеОповещения, Результат);
	
КонецПроцедуры

//Показывает общую форму создания документа по шаблону, который используется для заполнения только созданного документа
//Параметры: ТипШаблонаДокумента - строка "ШаблоныВнутреннихДокументов", "ШаблоныВходящих документов" или "ШаблоныИсходящихДокументов"
//Возвращает: ссылку на шаблон документа, если пользователь нажал на кнопку "СоздатьПоШаблону"
//			  Неопределено, если пользователь нажал на Отмену
Процедура ПоказатьФормуЗаполненияДокументаПоШаблону(ОписаниеОповещения, ТипШаблонаДокумента, ПапкаСозданияДокумента = Неопределено) Экспорт
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ТипШаблонаДокумента", ТипШаблонаДокумента);
	ПараметрыФормы.Вставить("ВозможностьСозданияПустогоДокумента", Ложь);
	ПараметрыФормы.Вставить("НаименованиеКнопкиВыбора", НСтр("ru = 'Заполнить по шаблону'; en = 'Fill with template content'"));
	ПараметрыФормы.Вставить("ПапкаСозданияДокумента", ПапкаСозданияДокумента);
	
	ПараметрыОбработчика = Новый Структура;
	ПараметрыОбработчика.Вставить("ОписаниеОповещения", ОписаниеОповещения);
	ОписаниеОповещенияФормы = Новый ОписаниеОповещения(
		"ПоказатьФормуЗаполненияДокументаПоШаблонуПродолжение",
		ЭтотОбъект,
		ПараметрыОбработчика);
	Попытка
		ОткрытьФорму(
			"ОбщаяФорма.СозданиеДокументаПоШаблону",
			ПараметрыФормы,,,,,
			ОписаниеОповещенияФормы,
			РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	Исключение
		Инфо = ИнформацияОбОшибке();
		Если Инфо.Описание = "СоздатьПустойДокумент" Тогда
			Результат = "СоздатьПустойДокумент";
			ВыполнитьОбработкуОповещения(ОписаниеОповещенияФормы, Результат);
		Иначе
			ВызватьИсключение;
		КонецЕсли;
	КонецПопытки;
		
КонецПроцедуры

Процедура ПоказатьФормуЗаполненияДокументаПоШаблонуПродолжение(Результат, Параметры) Экспорт
	
	Если Результат = "ПрерватьОперацию" Тогда
		Результат = Неопределено;
	КонецЕсли;
	ВыполнитьОбработкуОповещения(Параметры.ОписаниеОповещения, Результат);
	
КонецПроцедуры

Процедура ПоказатьФормуВыбораЗначения(Форма, Элемент) Экспорт
	
	КоличествоТипов = Элемент.Родитель.ТекущиеДанные.ТипЗначения.Типы().Количество(); 
	
	ПараметрыОбработчика = Новый Структура;
	ПараметрыОбработчика.Вставить("Форма", Форма);
	ПараметрыОбработчика.Вставить("Элемент", Элемент);
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"ПоказатьФормуВыбораЗначенияПродолжение",
		ЭтотОбъект,
		параметрыОбработчика);
	
	Если КоличествоТипов = 1 Тогда
		ТипДляВвода = Элемент.Родитель.ТекущиеДанные.ТипЗначения.Типы()[0];
		ВыполнитьОбработкуОповещения(ОписаниеОповещения, ТипДляВвода);
	ИначеЕсли КоличествоТипов > 1 Тогда
		СписокТипов = Новый СписокЗначений;
		СписокТипов.ЗагрузитьЗначения(Элемент.Родитель.ТекущиеДанные.ТипЗначения.Типы());
		Форма.ПоказатьВыборИзСписка(ОписаниеОповещения, СписокТипов, Элемент);
		Возврат;
	КонецЕсли;
	
	                                                                          		
КонецПроцедуры

Процедура ПоказатьФормуВыбораЗначенияПродолжение(ТипДляВвода, Параметры) Экспорт
	
	Если ТипДляВвода = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Если ТипЗнч(ТипДляВвода) = Тип("ЭлементСпискаЗначений") Тогда
		ТипДляВвода = ТипДляВвода.Значение;
	КонецЕсли;
	
	Если ТипДляВвода = Тип("СправочникСсылка.ЗначенияСвойствОбъектов") Тогда
		Отбор = Новый Структура("Владелец", Параметры.Элемент.Родитель.ТекущиеДанные.Свойство);
		ПараметрыФормы = Новый Структура("Отбор, РежимВыбора", Отбор, Истина);
		ОткрытьФорму("Справочник.ЗначенияСвойствОбъектов.ФормаВыбора", ПараметрыФормы, Параметры.Элемент);
		
	Иначе
		
		ПараметрыОповещения = Новый Структура();
		ПараметрыОповещения.Вставить("Элемент", Параметры.Элемент); 
		ОписаниеОповещения = Новый ОписаниеОповещения(
			"ВводЗначенияПродолжение",
			ЭтотОбъект,
			ПараметрыОповещения);
			
		Если ТипДляВвода = Тип("Строка") Тогда
			МногострочныйРежим = ОбщегоНазначенияДокументооборотВызовСервера.ЗначениеРеквизитаОбъекта(
				Параметры.Элемент.Родитель.ТекущиеДанные.Свойство, "МногострочноеПолеВвода") > 0;
			
			ПоказатьВводСтроки(
				ОписаниеОповещения,
				Параметры.Элемент.Родитель.ТекущиеДанные.Значение, 
				Строка(Параметры.Элемент.Родитель.ТекущиеДанные.Свойство),,
				МногострочныйРежим);
		Иначе 
			ПоказатьВводЗначения(
				ОписаниеОповещения,
				Параметры.Элемент.Родитель.ТекущиеДанные.Значение, 
				Строка(Параметры.Элемент.Родитель.ТекущиеДанные.Свойство),
				ТипДляВвода);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ВводЗначенияПродолжение(Значение, Параметры) Экспорт
	
	Если Значение <> Неопределено Тогда
		Параметры.Элемент.Родитель.ТекущиеДанные.Значение = Значение;	
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьИконку(Пользователь)
	Возврат ?(ТипЗнч(Пользователь) = Тип("СправочникСсылка.РабочиеГруппы"), 0, 2);
КонецФункции


