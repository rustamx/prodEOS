////////////////////////////////////////////////////////////////////////////////
// НагрузочноеТестированиеКлиент:
//  Содержит код, реализующий алгоритм выполнения сценариев.
//
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Разбирает строку запуска клиента, считывает сценарии и запускает их выполнение.
//
// Параметры:
//  Параметры - Строка - Параметры запуска клиента.
//
Процедура ЗапуститьВыполнениеСценариев(Параметры) Экспорт
	
	НТТекущиеСценарии = Новый Массив;
	НТИндексТекущегоСценария = 0;
	НТЗавершитьРаботуПослеВыполненияСценариев = Ложь;
	
	Если ПустаяСтрока(Параметры) Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыВРег = ВРег(Параметры);
	ПараметрыМассив = СтрРазделить(ПараметрыВРег, ";");
	
	// Найден признак запуска нагрузочного теста.
	Если ПараметрыМассив[0] = "RUNHLT" Тогда
		
		НТЗавершитьРаботуПослеВыполненияСценариев = Истина;
		
		// Чтение файла с последовательностью сценариев.
		Файл = Новый ЧтениеТекста(ПараметрыМассив[1]);
		ИмяСценария = Файл.ПрочитатьСтроку();
		Пока ИмяСценария <> Неопределено Цикл
			НТТекущиеСценарии.Добавить(ИмяСценария);
			ИмяСценария = Файл.ПрочитатьСтроку();
		КонецЦикла;
		
		ЗапуститьВыполнениеСценария(ПолучитьТекущийСценарий());
		
	КонецЕсли;
	
КонецПроцедуры

// Запускает выполнение текущего сценария.
//
// Параметры:
//  Сценарий - Массив - Текущий сценарий.
//
Процедура ЗапуститьВыполнениеСценария(Сценарий) Экспорт
	
	Если Сценарий = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	НТТекущийСценарий = Сценарий;
	НТИндексТекущегоШагаСценария = 0;
	ВыполнитьТекущийШагСценария();
	
КонецПроцедуры

// Получает текущий сценарий для выполнения.
// 
// Возвращаемое значение:
//  Сценарий.
//
Функция ПолучитьТекущийСценарий() Экспорт
	
	Если НТИндексТекущегоСценария > НТТекущиеСценарии.ВГраница() Тогда
		Если НТЗавершитьРаботуПослеВыполненияСценариев Тогда
			ЗавершитьРаботуСистемы(Ложь);
		КонецЕсли;
		Возврат Неопределено;
	КонецЕсли;
	
	ИмяСценария = НТТекущиеСценарии[НТИндексТекущегоСценария];
	Сценарий = Вычислить("НагрузочноеТестированиеСценарии." + ИмяСценария + "()");
	Возврат Сценарий;
	
КонецФункции

// Возвращает параметры текущего шага сценария.
// 
// Возвращаемое значение:
//  Структура - Параметры шага сценария.
//
Функция ПолучитьПараметрыТекущегоШагаСценария() Экспорт
	
	ТекущийШагТеста = ПолучитьТекущийШагСценария();
	Возврат ТекущийШагТеста.Параметры;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Выполняет текущий шаг сценария. Если шагов в сценарии нет, то запускает выполнение
// следующего сценария.
// 
// Возвращаемое значение:
//  Булево - Результат выполнения шага.
//
Функция ВыполнитьТекущийШагСценария()
	
	ТекущийШагСценария = ПолучитьТекущийШагСценария();
	Если ТекущийШагСценария = Неопределено Тогда
		НТИндексТекущегоСценария = НТИндексТекущегоСценария + 1;
		ЗапуститьВыполнениеСценария(ПолучитьТекущийСценарий());
		Возврат Истина;
	КонецЕсли;
	
	ШагВыполнен = Вычислить("НагрузочноеТестированиеДействия.Действие_" + ТекущийШагСценария.Действие + "()");
	
	Если ШагВыполнен Тогда
		ПодключитьОбработчикОжидания("ПерейтиКСледующемуШагуСценария", ТекущийШагСценария.Пауза, Истина);
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

// Возвращает текущий шаг сценария.
// 
// Возвращаемое значение:
//  Структура или Неопределено
//
Функция ПолучитьТекущийШагСценария()
	
	Если НТИндексТекущегоШагаСценария > НТТекущийСценарий.ВГраница() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Возврат НТТекущийСценарий[НТИндексТекущегоШагаСценария];
	
КонецФункции

// Выполняет переход к следующему шагу сценария.
// 
// Возвращаемое значение:
//  Булево
//
Функция ПерейтиКСледующемуШагуСценарияНеГлобальный() Экспорт
	
	НТИндексТекущегоШагаСценария = НТИндексТекущегоШагаСценария + 1;
	Возврат ВыполнитьТекущийШагСценария();
	
КонецФункции

#КонецОбласти
