
#Область ПрограммныйИнтерфейс

// Обработчик регламентного задания ОбменСМобильнымиРегистрацияИзменений
Процедура ОбменСМобильнымиРегистрацияИзменений() Экспорт

	ОбщегоНазначения.ПриНачалеВыполненияРегламентногоЗадания();

	Если ПолучитьФункциональнуюОпцию("ИспользоватьМобильныеКлиенты") = Ложь Тогда
		Возврат;
	КонецЕсли;

	ОбменСМобильнымиСервер.ВыполнитьРегистрациюИзмененийДляМобильныхУстройств();

КонецПроцедуры

// Обработчик регзадания УдалениеСообщенийИнтеграцииСМобильнымКлиентом.
// Выполняет окончательное удаление помеченных на удаление СообщенийИнтегрированныхСистем, 
// относящихся к интеграции с мобильным клиентом
Процедура УдалениеСообщенийИнтеграцииСМобильнымКлиентом() Экспорт

	ОбщегоНазначения.ПриНачалеВыполненияРегламентногоЗадания();

	Если ПолучитьФункциональнуюОпцию("ИспользоватьМобильныеКлиенты") <> Истина Тогда
		Возврат;
	КонецЕсли;

	УдалениеСообщенийИнтеграцииПоКлиенту();

КонецПроцедуры

// Обработчик регламентного задания УдалениеСтарыхЗаписейПротоколаМобильныхКлиентов.
// Удаляет старые записи протокола работы с мобильными клиентами.
Процедура УдалениеСтарыхЗаписейПротоколаМобильногоКлиента() Экспорт
	
	ОбщегоНазначения.ПриНачалеВыполненияРегламентногоЗадания();
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьМобильныеКлиенты") <> Истина Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	// Удаляются записи старше 2-х недель
	ГраницаВыборкиЗаписей = ТекущаяДатаСеанса() - 14*24*60*60;
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПротоколРаботыСМобильнымиКлиентами.МоментВремени,
		|	ПротоколРаботыСМобильнымиКлиентами.Период,
		|	ПротоколРаботыСМобильнымиКлиентами.МобильныйКлиент
		|ИЗ
		|	РегистрСведений.ПротоколРаботыСМобильнымиКлиентами КАК ПротоколРаботыСМобильнымиКлиентами
		|ГДЕ
		|	ПротоколРаботыСМобильнымиКлиентами.Период <= &Период";
	Запрос.УстановитьПараметр("Период", ГраницаВыборкиЗаписей);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		МенеджерЗаписи = РегистрыСведений.ПротоколРаботыСМобильнымиКлиентами.СоздатьМенеджерЗаписи();
		МенеджерЗаписи.МоментВремени = Выборка.МоментВремени;
		МенеджерЗаписи.Период = Выборка.Период;
		МенеджерЗаписи.МобильныйКлиент = Выборка.МобильныйКлиент;
		МенеджерЗаписи.Удалить();
	КонецЦикла;

КонецПроцедуры

// Обработчик регзадания УдалениеСообщенийИнтеграцииСМобильнымКлиентом.
//  Выполняет окончательное удаление помеченных на удаление СообщенийИнтегрированныхСистем,
//  относящихся к интеграции с мобильным клиентом.
//
// Параметры:
//  МобильныйКлиент - ПланОбменаСсылка.Мобильный - Ссылка на узел обмена мобильного устройства.
//
Процедура УдалениеСообщенийИнтеграцииПоКлиенту(МобильныйКлиент = Неопределено) Экспорт

	УстановитьПривилегированныйРежим(Истина);

	// удаление устаревших сообщений
	МобильныеКлиенты = ОбменСМобильнымиСерверПовтИсп.ПолучитьВсеУзлы();
	Для Каждого МобильныйКлиент Из МобильныеКлиенты Цикл

		СрокУстареванияДанных = 
			РегистрыСведений.ОбменСМобильнымиНастройкиПользователей.ПолучитьНастройку(
				МобильныйКлиент.Пользователь,
				Перечисления.ОбменСМобильнымиТипыНастроекПользователей.СрокУстареванияДанных);

		Если СрокУстареванияДанных = 0 Тогда
			Продолжить;
		КонецЕсли;

		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ДатаСоздания", ТекущаяДатаСеанса() - СрокУстареванияДанных * 24 * 60 * 60);
		Запрос.УстановитьПараметр("МобильныйКлиент", МобильныйКлиент);
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	СообщенияИнтегрированныхСистем.Ссылка
			|ИЗ
			|	Справочник.СообщенияИнтегрированныхСистем КАК СообщенияИнтегрированныхСистем
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОчередиСообщенийОбменаСМобильнымиКлиентами КАК ОчередиСообщенийОбменаСМобильнымиКлиентами
			|		ПО СообщенияИнтегрированныхСистем.Очередь = ОчередиСообщенийОбменаСМобильнымиКлиентами.Очередь
			|ГДЕ
			|	СообщенияИнтегрированныхСистем.ДатаСоздания < &ДатаСоздания
			|	И ОчередиСообщенийОбменаСМобильнымиКлиентами.МобильныйКлиент = &МобильныйКлиент";

		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			СообщениеОбъект = Выборка.Ссылка.ПолучитьОбъект();
			Если СообщениеОбъект <> Неопределено Тогда
				СообщениеОбъект.Удалить();
			КонецЕсли;
		КонецЦикла;

	КонецЦикла;

	// Пометка на удаление узлов, которые не синхронизировались больше 30 дней.
	// Устанавливаем порог: Если мобильный не использовался больше месяца - помечаем его на удаление
	Порог = ДобавитьМесяц(НачалоДня(ТекущаяДата()), - 1);

	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Порог", Порог);
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СведенияОМобильныхКлиентах.МобильныйКлиент КАК Ссылка
		|ИЗ
		|	РегистрСведений.СведенияОМобильныхКлиентах КАК СведенияОМобильныхКлиентах
		|ГДЕ
		|	СведенияОМобильныхКлиентах.ДатаПоследнейАктивности = &Порог";

	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл

		МобильныйКлиент = Выборка.МобильныйКлиент.ПолучитьОбъект();
		Если Не МобильныйКлиент = Неопределено Тогда
			МобильныйКлиент.УстановитьПометкуУдаления(Истина);
		КонецЕсли;

	КонецЦикла;

	// удаление сообщений по помеченным на удаление мобильным клиентам
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СообщенияИнтегрированныхСистем.Ссылка
		|ИЗ
		|	Справочник.СообщенияИнтегрированныхСистем КАК СообщенияИнтегрированныхСистем
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ОчередиСообщенийОбменаСМобильнымиКлиентами КАК ОчередиСообщенийОбменаСМобильнымиКлиентами
		|		ПО СообщенияИнтегрированныхСистем.Очередь = ОчередиСообщенийОбменаСМобильнымиКлиентами.Очередь
		|ГДЕ
		|	ОчередиСообщенийОбменаСМобильнымиКлиентами.МобильныйКлиент.ПометкаУдаления";

	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		СообщениеОбъект = Выборка.Ссылка.ПолучитьОбъект();
		Если СообщениеОбъект <> Неопределено Тогда
			СообщениеОбъект.Удалить();
		КонецЕсли;
	КонецЦикла;

	// Удаление помеченных на удаление мобильных клиентов
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Мобильный.Ссылка
		|ИЗ
		|	ПланОбмена.Мобильный КАК Мобильный
		|ГДЕ
		|	Мобильный.ПометкаУдаления";

	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ПланыОбмена.УдалитьРегистрациюИзменений(Выборка.Ссылка);
		Выборка.Ссылка.ПолучитьОбъект().Удалить();
	КонецЦикла;

КонецПроцедуры

// Получает массив ссылок на узла плана обмена Мобильный, принадлежащие указанному пользователю
//
// Параметры:
//  Пользователь - Справочник.Пользователи - Ссылка на пользователя.
// 
// Возвращаемое значение:
//  Массив - Список узлов обмена доступных пользователю.
//
Функция ПолучитьУзлыОбменаПоВладельцу(Пользователь) Экспорт

	Возврат ОбменСМобильнымиСерверПовтИсп.ПолучитьУзлыОбменаПоВладельцу(Пользователь);

КонецФункции

#КонецОбласти
