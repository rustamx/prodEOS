////////////////////////////////////////////////////////////////////////////////
// МОДУЛЬ ПО РАБОТЕ С ИНСТРУКЦИЯМИ
//
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Возвращает текст инструкции.
//
// Параметры:
//  СсылкаНаИнструкцию        - СправочникСсылка.Инструкции
//  УстановитьСтильОформления - Булево - Если истина, то в HTML-код инструкции встраивается
//                              общий стиль оформления инструкций.
//
// Возвращаемое значение:
//  Строка - HTML-код инструкции для вставки в поле HTML документа.
//
Функция ТекстИнструкции(СсылкаНаИнструкцию, УстановитьСтильОформления = Истина) Экспорт
	
	Возврат РаботаСИнструкциями.ТекстИнструкции(СсылкаНаИнструкцию, УстановитьСтильОформления);
	
КонецФункции

// Форматирует текст инструкции. Все изображения считываются и вшиваются в html-код текста 
// инструкции.
//
Функция ОтформатироватьТекстИнструкции(ПутьКФайлуИнструкции = "", HTMLКодИнструкции = "",
	ЗаголовокИнструкции = "") Экспорт
	
	ЧтениеHTML = Новый ЧтениеHTML;
	
	Если ПутьКФайлуИнструкции <> "" Тогда
		Файл = Новый Файл(ПутьКФайлуИнструкции);
		ЧтениеHTML.ОткрытьФайл(ПутьКФайлуИнструкции);
	ИначеЕсли HTMLКодИнструкции <> "" Тогда
		ЧтениеHTML.УстановитьСтроку(HTMLКодИнструкции);
	Иначе
		Возврат "";
	КонецЕсли;
	
	ПостроительDOM = Новый ПостроительDOM;
	ДокументDOM = ПостроительDOM.Прочитать(ЧтениеHTML);
	
	// получение заголовка инструкции
	Если ДокументDOM.ПолучитьЭлементыПоИмени("h1").Количество() > 0 Тогда
		ЗаголовокИнструкции = ДокументDOM.ПолучитьЭлементыПоИмени("h1").Элемент(0).ТекстовоеСодержимое;
	КонецЕсли;
	
	// обработка картинок
	Для ш = 0 По ДокументDOM.Картинки.Количество() - 1 Цикл
		
		ПутьКФайлуКартинки = ДокументDOM.Картинки[ш].ПолучитьАтрибут("src");
		
		// пропускаем картинки, "вшитые" в html-код
		Если Найти(ПутьКФайлуКартинки, "data:image/") > 0 Тогда
			Продолжить;
		КонецЕсли;
		
		Если ПутьКФайлуИнструкции <> "" Тогда
			ПутьКФайлуКартинки = Файл.Путь + ПутьКФайлуКартинки;
		КонецЕсли;
		
		ПутьКФайлуКартинки = СтрЗаменить(ПутьКФайлуКартинки, "%20", " ");
		ОбъектКартинка = Новый Картинка(ПутьКФайлуКартинки);
		
		ДвоичныеДанныеКартинки = ОбъектКартинка.ПолучитьДвоичныеДанные();
		Base64ДанныеКартинки = Base64Строка(ДвоичныеДанныеКартинки);
		
		ЗначениеКартинки = "data:image/" + ОбъектКартинка.Формат() + ";base64," + Base64ДанныеКартинки;
		
		ДокументDOM.Картинки[ш].УстановитьАтрибут("src", ЗначениеКартинки);
		
	КонецЦикла;
	
	ЗаписьDOM = Новый ЗаписьDOM; 
	ЗаписьHTML = Новый ЗаписьHTML; 
	ЗаписьHTML.УстановитьСтроку(); 
	ЗаписьDOM.Записать(ДокументDOM, ЗаписьHTML); 
	HTML = ЗаписьHTML.Закрыть();
	
	Возврат HTML;
	
КонецФункции

// Обрабатывает открытие ссылки в поле HTML-документа.
//
Процедура ОткрытьСсылку(Href, Element, HTMLДокумент = Неопределено) Экспорт
	
	ВыбраннаяСсылка = Неопределено;
	
	Если Href <> Неопределено Тогда
		// Если у данных события заполнено свойство Href - будем считать что переход будет по этой ссылке
		ВыбраннаяСсылка = Href;
	Иначе
		Попытка
			// Если у элемента события заполнено свойство Href и элемент AREA - будем считать что переход
			// будет по этой ссылке.
			Если ВРег(Element.tagName) = "AREA" Тогда
				ВыбраннаяСсылка = Element.Href;
			КонецЕсли;
		Исключение
		КонецПопытки;
	КонецЕсли;
	
	Если ПустаяСтрока(ВыбраннаяСсылка) Тогда
		Возврат;
	КонецЕсли;
	
	#Если ВебКлиент Тогда
	Если Найти(ВыбраннаяСсылка, "javascript:_1c") = 1 Тогда
		
		// FF - используется javascript такого вида
		ПозицияНавигационнойСсылки = Найти(ВыбраннаяСсылка, "e1cib/");
		
		Если ПозицияНавигационнойСсылки <> 0 Тогда
			ВыбраннаяСсылка = 
				"v8doc:" 
				+ Сред(
					ВыбраннаяСсылка, 
					ПозицияНавигационнойСсылки, 
					СтрДлина(ВыбраннаяСсылка) - ПозицияНавигационнойСсылки - 2);
		Иначе
			СтандартнаяОбработка = Истина;
			Возврат;
		КонецЕсли;
		
	КонецЕсли;
	
	ПозицияРазделителя = Найти(ВыбраннаяСсылка, "#");
	ПозицияВнутреннейНавигационнойСсылки = Найти(ВыбраннаяСсылка, "#e1cib/");
	
	Если ПозицияРазделителя = 1  Тогда
		
		// Safari - передается просто относительная ссылка
		СтандартнаяОбработка = Истина;
		Возврат;
		
	КонецЕсли;
	
	Если Найти(ВыбраннаяСсылка, ПолучитьНавигационнуюСсылкуИнформационнойБазы()) = 1 Тогда
		
		// Chrome, IE - передаётся полная ссылка
		Если ПозицияРазделителя <> 0 И ПозицияВнутреннейНавигационнойСсылки = 0 Тогда
			
			СтандартнаяОбработка = Истина;
			Возврат;
			
		КонецЕсли;
		
	КонецЕсли;
	
	#Иначе
	Если Найти(ВыбраннаяСсылка, ПолучитьНавигационнуюСсылкуИнформационнойБазы()) = 1 Тогда
		
		ElementID = Сред(ВыбраннаяСсылка, Найти(ВыбраннаяСсылка, "#") + 1);
		ElementByID = HTMLДокумент.getElementById(ElementID);
		
		Если ElementByID <> Неопределено Тогда
			ElementByID.scrollIntoView(true);
			Возврат;
		КонецЕсли;
		
	КонецЕсли;
	#КонецЕсли
	
	СхемаСсылки = ОпределитьСхемуСсылки(ВыбраннаяСсылка);
	
	Если СхемаСсылки = "v8doc:" Тогда
		
		ОбработатьСсылку1СДокументооборота(ВыбраннаяСсылка, HTMLДокумент);
		
	ИначеЕсли СхемаСсылки = "e1c://" 
		ИЛИ (СхемаСсылки = "http://" И Найти(ВыбраннаяСсылка, "e1cib") > 0)
		ИЛИ (СхемаСсылки = "https://" И Найти(ВыбраннаяСсылка, "e1cib") > 0) Тогда
		
		ПерейтиПоНавигационнойСсылке(ВыбраннаяСсылка);
		
	ИначеЕсли СхемаСсылки = "http://"
		Или СхемаСсылки = "https://"
		Или СхемаСсылки = "ftp://"
		Или СхемаСсылки = "file://" Тогда
		
		#Если ВебКлиент Тогда
		ПерейтиПоНавигационнойСсылке(ВыбраннаяСсылка);
		#Иначе
		ЗапуститьПриложение(ВыбраннаяСсылка);
		#КонецЕсли
		
	Иначе
		
		ПерейтиПоНавигационнойСсылке(ВыбраннаяСсылка);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Обработчик ссылки для 1С Документооборот.
//
Процедура ОбработатьСсылку1СДокументооборота(Ссылка1СДокументооборота, HTMLДокумент)
	
	СхемаСсылок1СДокументооборота = "v8doc:";
	
	Если ОпределитьСхемуСсылки(Ссылка1СДокументооборота) <> СхемаСсылок1СДокументооборота Тогда
		Возврат;
	КонецЕсли;
	
	Ссылка1СДокументооборота = Сред(Ссылка1СДокументооборота,
		СтрДлина(СхемаСсылок1СДокументооборота) + 1);
	ТипСсылки = ОпределитьТипСсылки1СДокументооборота(Ссылка1СДокументооборота);
	
	Если ТипСсылки = "e1cib/" Тогда
		
		ПерейтиПоНавигационнойСсылке(Ссылка1СДокументооборота);
		
	КонецЕсли;
	
КонецПроцедуры

// Определяет тип ссылки 1С:Документооборота.
//
Функция ОпределитьТипСсылки1СДокументооборота(Ссылка1СДокументооборота)
	
	Если СтрокаНачинаетсяСПодстроки(Ссылка1СДокументооборота, "e1cib/") Тогда
		
		Возврат "e1cib/";
		
	ИначеЕсли СтрокаНачинаетсяСПодстроки(Ссылка1СДокументооборота, "mail/") Тогда
		
		Возврат "mail/"
		
	Иначе
		
		Возврат "";
		
	КонецЕсли;
	
КонецФункции

// Определяет схему ссылки.
//
Функция ОпределитьСхемуСсылки(Href)
	
	Если СтрокаНачинаетсяСПодстроки(Href, "v8doc:") Тогда
		
		Возврат "v8doc:";
		
	ИначеЕсли СтрокаНачинаетсяСПодстроки(Href, "http://") Тогда
		
		Возврат "http://";
		
	ИначеЕсли СтрокаНачинаетсяСПодстроки(Href, "https://") Тогда
		
		Возврат "https://";
		
	ИначеЕсли СтрокаНачинаетсяСПодстроки(Href, "ftp://") Тогда
		
		Возврат "ftp://";
		
	ИначеЕсли СтрокаНачинаетсяСПодстроки(Href, "e1c://") Тогда
		
		Возврат "e1c://";
		
	ИначеЕсли СтрокаНачинаетсяСПодстроки(Href, "file://") Тогда
		
		Возврат "file://";
		
	ИначеЕсли СтрокаНачинаетсяСПодстроки(Href, "mailto:") Тогда
		
		Возврат "mailto:";
		
	Иначе
		
		Возврат "";
		
	КонецЕсли;
	
КонецФункции

// Проверяет, содержит ли ссылка схему.
//
Функция СтрокаНачинаетсяСПодстроки(Строка, Подстрока)
	
	Если Найти(НРег(СокрЛ(Строка)), НРег(Подстрока)) = 1 Тогда
		
		Возврат Истина;
		
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции

#КонецОбласти
