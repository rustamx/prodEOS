
Процедура ПрименитьПравилоКПапке(
		ПравилоСсылка, 
		ПапкаСсылка, 
		ВключатьПодпапки, 
		ВариантПримененияПравила,
		ВыводитьСообщения) Экспорт
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗначенияУсловийПриОбработкеПисем.Правило,
		|	ЗначенияУсловийПриОбработкеПисем.ПараметрУсловия КАК Параметр,
		|	ЗначенияУсловийПриОбработкеПисем.ВидУсловия КАК Вид,
		|	ЗначенияУсловийПриОбработкеПисем.Порядок КАК Порядок,
		|	ЗначенияУсловийПриОбработкеПисем.ЭтоЗначенияИсключения КАК ЭтоЗначенияИсключения,
		|	NULL КАК ТекстАвтоответа
		|ИЗ
		|	РегистрСведений.ЗначенияУсловийПриОбработкеПисем КАК ЗначенияУсловийПриОбработкеПисем
		|ГДЕ
		|	ЗначенияУсловийПриОбработкеПисем.Правило = &Правило
		|
		|СГРУППИРОВАТЬ ПО
		|	ЗначенияУсловийПриОбработкеПисем.ВидУсловия,
		|	ЗначенияУсловийПриОбработкеПисем.Правило,
		|	ЗначенияУсловийПриОбработкеПисем.ПараметрУсловия,
		|	ЗначенияУсловийПриОбработкеПисем.Порядок,
		|	ЗначенияУсловийПриОбработкеПисем.ЭтоЗначенияИсключения
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЗначенияДействийПриОбработкеПисем.Правило,
		|	ЗначенияДействийПриОбработкеПисем.ПараметрДействия,
		|	ЗначенияДействийПриОбработкеПисем.ВидДействия,
		|	0,
		|	ЛОЖЬ,
		|	ЗначенияДействийПриОбработкеПисем.ТекстАвтоответа
		|ИЗ
		|	РегистрСведений.ЗначенияДействийПриОбработкеПисем КАК ЗначенияДействийПриОбработкеПисем
		|ГДЕ
		|	ЗначенияДействийПриОбработкеПисем.Правило = &Правило
		|
		|УПОРЯДОЧИТЬ ПО
		|	Порядок";
		
	Запрос.УстановитьПараметр("Правило", ПравилоСсылка);
	ТаблицаПараметров = Запрос.Выполнить().Выгрузить();
	
	Запрос = Новый Запрос;
	Если ВключатьПодпапки Тогда
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ЭлектроннаяПочта.Ссылка
		|ИЗ
		|	ЖурналДокументов.ЭлектроннаяПочта КАК ЭлектроннаяПочта
		|ГДЕ
		|	ЭлектроннаяПочта.Папка В ИЕРАРХИИ(&Папка)
		|	И ЭлектроннаяПочта.ПометкаУдаления = ЛОЖЬ";
	Иначе
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ЭлектроннаяПочта.Ссылка
		|ИЗ
		|	ЖурналДокументов.ЭлектроннаяПочта КАК ЭлектроннаяПочта
		|ГДЕ
		|	ЭлектроннаяПочта.Папка = &Папка
		|	И ЭлектроннаяПочта.ПометкаУдаления = ЛОЖЬ";
	КонецЕсли;
	Запрос.УстановитьПараметр("Папка", ПапкаСсылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если Не РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		Сч = 0;
		КоличествоИтераций = Выборка.Количество();
		Пока Выборка.Следующий() Цикл
			Сч = Сч + 1;
			Если ВариантПримененияПравила <> Перечисления.ВариантыПримененияПравилаПисем.КоВсемПисьмам Тогда
				
				Прочтен = РегистрыСведений.СведенияОПрочтении.ОбъектБылПрочтен(Выборка.Ссылка);
				
				Если ВариантПримененияПравила = Перечисления.ВариантыПримененияПравилаПисем.ТолькоКПрочитаннымПисьмам
					И Не Прочтен
					ИЛИ ВариантПримененияПравила = Перечисления.ВариантыПримененияПравилаПисем.ТолькоКНепрочитаннымПисьмам
					И Прочтен Тогда
					
					Продолжить;
					
				КонецЕсли;
				
			КонецЕсли;
			Попытка
								
				ДействияВыполнялись = Ложь;
				НеобходимоЗаписатьПисьмо = Ложь;
				Если ТипЗнч(Выборка.Ссылка) = Тип("ДокументСсылка.ВходящееПисьмо") И ПравилоСсылка.ДляВходящихПисем Тогда
					
					РеквизитыПисьма = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
						Выборка.Ссылка, 
						"Тема, 
						|ОтправительАдресат, 
						|ТекстПисьмаHTMLХранилище, 
						|ТекстПисьмаПростойТекстХранилище, 
						|ТекстПисьмаРазмеченныйТекстХранилище,
						|ДатаПолучения,
						|ЕстьВложения,
						|УчетнаяЗапись,
						|Папка,
						|Ссылка"); 
								
					Если ВстроеннаяПочтаСервер.ПроверитьУсловияПравилаДляВходящих(
								Выборка.Ссылка, 
								ПравилоСсылка.Ссылка, 
								ТаблицаПараметров, 
								РеквизитыПисьма, 
								Ложь) 
						И НЕ ВстроеннаяПочтаСервер.ПроверитьУсловияПравилаДляВходящих(
							Выборка.Ссылка, 
							ПравилоСсылка.Ссылка, 
							ТаблицаПараметров, 
							РеквизитыПисьма, 
							Истина) Тогда
						
						ПисьмоОбъект = Выборка.Ссылка.ПолучитьОбъект();
						ВстроеннаяПочтаСервер.ВыполнитьДействияПравилаДляВходящих(ПисьмоОбъект, ПравилоСсылка.Ссылка, ТаблицаПараметров, ДействияВыполнялись, НеобходимоЗаписатьПисьмо);
						Если ДействияВыполнялись И НеобходимоЗаписатьПисьмо Тогда
							ЗаблокироватьДанныеДляРедактирования(Выборка.Ссылка);
							ПисьмоОбъект.Записать();
							РазблокироватьДанныеДляРедактирования(Выборка.Ссылка);
						КонецЕсли;
						
					КонецЕсли;
				ИначеЕсли ТипЗнч(Выборка.Ссылка) = Тип("ДокументСсылка.ИсходящееПисьмо") И ПравилоСсылка.ДляИсходящихПисем Тогда
					ДополнительныеСвойстваОбъекта = Новый Структура;
					РеквизитыПисьма = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
						Выборка.Ссылка, 
						"Тема, 
						|ОтправительКонтакт, 
						|ТекстПисьмаHTMLХранилище, 
						|ТекстХранилище, 
						|ДатаОтправки,
						|ЕстьВложения,
						|УчетнаяЗапись,
						|Ссылка,
						|ТипОтвета,
						|Папка,
						|ПисьмоОснование");
					Если ВстроеннаяПочтаСервер.ПроверитьУсловияПравилаДляИсходящих(
							Выборка.Ссылка, 
							ПравилоСсылка.Ссылка, 
							ТаблицаПараметров, 
							РеквизитыПисьма, 
							Ложь, 
							ДополнительныеСвойстваОбъекта) 
						И НЕ ВстроеннаяПочтаСервер.ПроверитьУсловияПравилаДляИсходящих(
							Выборка.Ссылка, 
							ПравилоСсылка.Ссылка, 
							ТаблицаПараметров, 
							РеквизитыПисьма, 
							Истина, 
							ДополнительныеСвойстваОбъекта) Тогда
						
						ПисьмоОбъект = Выборка.Ссылка.ПолучитьОбъект();
						Для Каждого КлючЗначение Из ДополнительныеСвойстваОбъекта Цикл
							ПисьмоОбъект.ДополнительныеСвойства.Вставить(КлючЗначение.Ключ, КлючЗначение.Значение);	
						КонецЦикла;
						ВстроеннаяПочтаСервер.ВыполнитьДействияПравилаДляИсходящих(ПисьмоОбъект, ПравилоСсылка.Ссылка, ТаблицаПараметров, Истина, ДействияВыполнялись, НеобходимоЗаписатьПисьмо);
						Если ДействияВыполнялись И НеобходимоЗаписатьПисьмо Тогда
							ЗаблокироватьДанныеДляРедактирования(Выборка.Ссылка);
							ПисьмоОбъект.Записать();
							РазблокироватьДанныеДляРедактирования(Выборка.Ссылка);
						КонецЕсли;
						
					КонецЕсли;
				КонецЕсли;
			Исключение
				Инфо = ИнформацияОбОшибке();
				СообщениеОбОшибке = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Ошибка при обработке письма правилами: 
						|%1';
						|en = 'Error email processing rules: 
						|%1'"),
					ПодробноеПредставлениеОшибки(Инфо));
				Почта.ЗаписатьОшибкуВЖурналРегистрации(СообщениеОбОшибке, ПисьмоОбъект.Ссылка);	
				РазблокироватьДанныеДляРедактирования(ПисьмоОбъект.Ссылка);
			КонецПопытки;
			
			Если ВыводитьСообщения Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю("###" + Формат(Сч * 100 / КоличествоИтераций, "ЧДЦ=0; ЧН=; ЧГ="));
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;		
	
КонецПроцедуры

Процедура СформироватьУсловияПоПисьму(
	Письмо,
	СписокУсловия,
	ДляВходящихПисем,
	ДляИсходящихПисем) Экспорт
	
	СписокУсловия.Очистить();
	
	Если ДляВходящихПисем Тогда
		
		ДобавитьУсловие(
		    СписокУсловия,
			Перечисления.ВидыУсловийОтбораВходящихПисем.ТемаСодержитУказанныеСлова,
			Письмо.Тема);
			
		ПредставлениеАдресата = Письмо.ОтправительАдресат.Адрес;	
		ДобавитьУсловие(
		    СписокУсловия,
			Перечисления.ВидыУсловийОтбораВходящихПисем.АдресОтправителяСодержитУказанныеСлова,
			ПредставлениеАдресата);
			
		АдресованоМне = Ложь;
		ТекущийПользователь = ПользователиКлиентСервер.ТекущийПользователь();
		
		Если АдресованоМне Тогда
			Если Письмо.ПолучателиПисьма.Количество() = 1 Тогда
				ДобавитьУсловие(
				    СписокУсловия,
					Перечисления.ВидыУсловийОтбораВходящихПисем.АдресованоТолькоМне,
					Истина);
			Иначе
				ДобавитьУсловие(
				    СписокУсловия,
					Перечисления.ВидыУсловийОтбораВходящихПисем.АдресованоМне,
					Истина);	
			КонецЕсли;
		Иначе
			ДобавитьУсловие(
			    СписокУсловия,
				Перечисления.ВидыУсловийОтбораВходящихПисем.АдресованоМне,
				Неопределено);	
		КонецЕсли;
		
		ДобавитьУсловие(
		    СписокУсловия,
			Перечисления.ВидыУсловийОтбораВходящихПисем.ИмеетВложения,
			?(Письмо.ЕстьВложения, Письмо.ЕстьВложения, Неопределено));
			
	ИначеЕсли ДляИсходящихПисем Тогда
		
		ДобавитьУсловие(
		    СписокУсловия,
			Перечисления.ВидыУсловийОтбораИсходящихПисем.ТемаСодержитУказанныеСлова,
			Письмо.Тема);
			
		Если Письмо.ПолучателиПисьма.Количество() <> 0 Тогда	
				
			ПредставлениеПолучателя = Письмо.ПолучателиПисьма[0].Адресат.Адрес;
				
			ДобавитьУсловие(
			    СписокУсловия,
				Перечисления.ВидыУсловийОтбораИсходящихПисем.ОтправленоНаУказанныеАдреса,
				ПредставлениеПолучателя);
				
		КонецЕсли;	
			
		ПисьмоОснование = Письмо.ПисьмоОснование;
		ТипОтвета = Письмо.ТипОтвета;
		
		Если ТипОтвета = Перечисления.ТипыОтвета.ОтветНаПисьмо Тогда
			ДобавитьУсловие(
			    СписокУсловия,
				Перечисления.ВидыУсловийОтбораИсходящихПисем.ЯвляетсяОтветомНаПисьмо,
				Истина);	
		ИначеЕсли ТипОтвета = Перечисления.ТипыОтвета.ПересылкаПисьма Тогда
			Если ТипЗнч(ПисьмоОснование) = Тип("ДокументСсылка.ВходящееПисьмо") Тогда
				ДобавитьУсловие(
				    СписокУсловия,
					Перечисления.ВидыУсловийОтбораИсходящихПисем.ПересылаетВходящееПисьмо,
					Истина);
			ИначеЕсли ТипЗнч(ПисьмоОснование) = Тип("ДокументСсылка.ИсходящееПисьмо") Тогда
				ДобавитьУсловие(
				    СписокУсловия,
					Перечисления.ВидыУсловийОтбораИсходящихПисем.ПересылаетИсходящееПисьмо,
					Истина);	
			КонецЕсли;
			
		КонецЕсли;
				
	КонецЕсли;	
	
КонецПроцедуры

Процедура СформироватьДействияПоПисьму(
	Письмо,
	СписокДействия,
	ДляВходящихПисем,
	ДляИсходящихПисем) Экспорт
	
	СписокДействия.Очистить();
	
	Флаг = РегистрыСведений.ФлагиОбъектов.ПолучитьФлаг(
			Письмо,
			ПользователиКлиентСервер.ТекущийПользователь());
			
	Если ДляВходящихПисем Тогда
		
		ПисьмоПрочтено = РегистрыСведений.СведенияОПрочтении.ОбъектБылПрочтен(Письмо);
	
		ДобавитьДействие(
			СписокДействия,
			Перечисления.ВидыДействийПриОбработкеВходящихПисем.УстановитьПометкуПрочтения,
			?(ПисьмоПрочтено, ПисьмоПрочтено, Неопределено));
			
		ДобавитьДействие(
			СписокДействия,
			Перечисления.ВидыДействийПриОбработкеВходящихПисем.ПереместитьВУказаннуюПапку,
			Письмо.Папка);
			
		ДобавитьДействие(
			СписокДействия,
			Перечисления.ВидыДействийПриОбработкеВходящихПисем.УстановитьУказанныйФлаг,
			Флаг);	
			
	ИначеЕсли ДляИсходящихПисем Тогда
		
		ДобавитьДействие(
			СписокДействия,
			Перечисления.ВидыДействийПриОбработкеИсходящихПисем.ПереместитьВУказаннуюПапку,
			Письмо.Папка);
			
		ДобавитьДействие(
			СписокДействия,
			Перечисления.ВидыДействийПриОбработкеИсходящихПисем.УстановитьУказанныйФлаг,
			Флаг);
				
	КонецЕсли;	
	
КонецПроцедуры

Процедура ДобавитьУсловие(СписокУсловия, Вид, Значение) Экспорт
	
	Структура = Новый Структура;
	Структура.Вставить("Вид", Вид);
	Структура.Вставить("Значение", Значение);
	СписокУсловия.Добавить(Структура);		
	
КонецПроцедуры

Процедура ДобавитьДействие(СписокДействия, Вид, Значение) Экспорт
	
	Структура = Новый Структура;
	Структура.Вставить("Вид", Вид);
	Структура.Вставить("Значение", Значение);
	СписокДействия.Добавить(Структура);		
	
КонецПроцедуры

Функция ПолучитьОписаниеПравила(ПравилоСсылка, НеобходимоПолучитьТаблицуПолучателейПисьма)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗначенияУсловийПриОбработкеПисем.Правило,
		|	ЗначенияУсловийПриОбработкеПисем.ПараметрУсловия КАК Параметр,
		|	ЗначенияУсловийПриОбработкеПисем.ВидУсловия КАК Вид,
		|	ЗначенияУсловийПриОбработкеПисем.Порядок КАК Порядок,
		|	ЗначенияУсловийПриОбработкеПисем.ЭтоЗначенияИсключения КАК ЭтоЗначенияИсключения,
		|	NULL КАК ТекстАвтоответа
		|ИЗ
		|	РегистрСведений.ЗначенияУсловийПриОбработкеПисем КАК ЗначенияУсловийПриОбработкеПисем
		|ГДЕ
		|	ЗначенияУсловийПриОбработкеПисем.Правило = &Правило
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЗначенияДействийПриОбработкеПисем.Правило,
		|	ЗначенияДействийПриОбработкеПисем.ПараметрДействия,
		|	ЗначенияДействийПриОбработкеПисем.ВидДействия,
		|	0,
		|	ЛОЖЬ,
		|	ЗначенияДействийПриОбработкеПисем.ТекстАвтоответа
		|ИЗ
		|	РегистрСведений.ЗначенияДействийПриОбработкеПисем КАК ЗначенияДействийПриОбработкеПисем
		|ГДЕ
		|	ЗначенияДействийПриОбработкеПисем.Правило = &Правило
		|
		|УПОРЯДОЧИТЬ ПО
		|	Порядок";
		
	Запрос.УстановитьПараметр("Правило", ПравилоСсылка);
	ОписаниеПравила = Запрос.Выполнить().Выгрузить();	
	
	// Если в условиях правила установлено значение для одного из указанных ниже условий, то для такого правила необходимо
	//	получить таблицу с получателями письма. Таблица получается только один раз для ускорения процесса.
	Для Каждого Строка Из ОписаниеПравила Цикл
		Если Строка.Вид = Перечисления.ВидыУсловийОтбораВходящихПисем.ОтправленоНаУказанныеАдреса
			Или Строка.Вид = Перечисления.ВидыУсловийОтбораВходящихПисем.АдресованоМне
			Или Строка.Вид = Перечисления.ВидыУсловийОтбораВходящихПисем.АдресованоТолькоМне 
			Или Строка.Вид = Перечисления.ВидыУсловийОтбораВходящихПисем.ПолучательВходитВГруппы
			Или Строка.Вид = Перечисления.ВидыУсловийОтбораИсходящихПисем.ОтправленоНаУказанныеАдреса 
			Или Строка.Вид = Перечисления.ВидыУсловийОтбораИсходящихПисем.ПолучательВходитВГруппы Тогда		
			НеобходимоПолучитьТаблицуПолучателейПисьма = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Возврат ОписаниеПравила;
	
КонецФункции

Функция  ПрименитьПравилоКПисьму(Правило, ПисьмоСсылка) Экспорт
	
	ОписаниеПравила = ПолучитьОписаниеПравила(Правило, Истина);
	Если ТипЗнч(ПисьмоСсылка) = Тип("ДокументСсылка.ВходящееПисьмо") И Правило.ДляВходящихПисем Тогда
		Возврат ПрименитьПравилоКВходящемуПисьму(ПисьмоСсылка, Правило, ОписаниеПравила, Истина);
	ИначеЕсли ТипЗнч(ПисьмоСсылка) = Тип("ДокументСсылка.ИсходящееПисьмо") И Правило.ДляИсходящихПисем Тогда
		Возврат ПрименитьПравилоКИсходящемуПисьму(ПисьмоСсылка, Правило, ОписаниеПравила, Истина);
	КонецЕсли;	
	
	Возврат Ложь;
	
КонецФункции

Функция ПрименитьПравилоКВходящемуПисьму(ПисьмоСсылка, ПравилоСсылка, ОписаниеПравила, НеобходимоПолучитьТаблицуПолучателейПисьма)
	
	ДействияВыполнялись = Ложь;
	НеобходимоЗаписатьПисьмо = Ложь;
			
	РеквизитыПисьма = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
		ПисьмоСсылка, 
		"Тема, 
		|ОтправительАдресат, 
		|ТекстПисьмаHTMLХранилище, 
		|ТекстПисьмаПростойТекстХранилище, 
		|ТекстПисьмаРазмеченныйТекстХранилище,
		|ДатаПолучения,
		|ЕстьВложения,
		|УчетнаяЗапись,
		|Ссылка,
		|Папка,
		|ВидМаршрутизации"); 
		
	Если ВстроеннаяПочтаСервер.ПроверитьУсловияПравилаДляВходящих(
				ПисьмоСсылка, 
				ПравилоСсылка, 
				ОписаниеПравила, 
				РеквизитыПисьма, 
				Ложь) 
		И НЕ ВстроеннаяПочтаСервер.ПроверитьУсловияПравилаДляВходящих(
			ПисьмоСсылка, 
			ПравилоСсылка, 
			ОписаниеПравила, 
			РеквизитыПисьма, 
			Истина) Тогда
			
		// Если письмо удовлетворяет всем условиям правила и не удовлетворяет ни одному из исключений, то выполняется применение действий правила.	
		ПисьмоОбъект = ПисьмоСсылка.ПолучитьОбъект();
		ВстроеннаяПочтаСервер.ВыполнитьДействияПравилаДляВходящих(
			ПисьмоОбъект, ПравилоСсылка.Ссылка, ОписаниеПравила, ДействияВыполнялись, НеобходимоЗаписатьПисьмо);
		ПисьмоОбъект.Заблокировать();
		Если ДействияВыполнялись И НеобходимоЗаписатьПисьмо Тогда
			ПисьмоОбъект.Записать();
		КонецЕсли;
		Если ПисьмоОбъект.ДополнительныеСвойства.Свойство("Правила_УстановитьПометкуУдаления")
			И ПисьмоОбъект.ДополнительныеСвойства.Правила_УстановитьПометкуУдаления Тогда
			ПисьмоОбъект.УстановитьПометкуУдаления(Истина);
		КонецЕсли;
		ПисьмоОбъект.Разблокировать();
	КонецЕсли;	
	
	Возврат ДействияВыполнялись;
	
КонецФункции

Функция ПрименитьПравилоКИсходящемуПисьму(ПисьмоСсылка, ПравилоСсылка, ОписаниеПравила, НеобходимоПолучитьТаблицуПолучателейПисьма)
	
	ДействияВыполнялись = Ложь;
	НеобходимоЗаписатьПисьмо = Ложь;
	ДополнительныеСвойстваОбъекта = Новый Структура;
	РеквизитыПисьма = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
		ПисьмоСсылка, 
		"Тема, 
		|ОтправительКонтакт, 
		|ТекстПисьмаHTMLХранилище, 
		|ТекстХранилище, 
		|ДатаОтправки,
		|ЕстьВложения,
		|УчетнаяЗапись,
		|Ссылка,
		|ТипОтвета,
		|Папка,
		|ПисьмоОснование,
		|ВидМаршрутизации");
		
	Если ВстроеннаяПочтаСервер.ПроверитьУсловияПравилаДляИсходящих(
			ПисьмоСсылка, 
			ПравилоСсылка, 
			ОписаниеПравила, 
			РеквизитыПисьма, 
			Ложь, 
			ДополнительныеСвойстваОбъекта) 
		И НЕ ВстроеннаяПочтаСервер.ПроверитьУсловияПравилаДляИсходящих(
			ПисьмоСсылка, 
			ПравилоСсылка, 
			ОписаниеПравила, 
			РеквизитыПисьма, 
			Истина, 
			ДополнительныеСвойстваОбъекта) Тогда
			
		// Если письмо удовлетворяет всем условиям правила и не удовлетворяет ни одному из исключений, то выполняется применение действий правила.	
		ПисьмоОбъект = ПисьмоСсылка.ПолучитьОбъект();
		Для Каждого КлючЗначение Из ДополнительныеСвойстваОбъекта Цикл
			ПисьмоОбъект.ДополнительныеСвойства.Вставить(КлючЗначение.Ключ, КлючЗначение.Значение);	
		КонецЦикла;
		ВстроеннаяПочтаСервер.ВыполнитьДействияПравилаДляИсходящих(
			ПисьмоОбъект, ПравилоСсылка.Ссылка, ОписаниеПравила, Истина, ДействияВыполнялись, НеобходимоЗаписатьПисьмо);
		ПисьмоОбъект.Заблокировать();
		Если ДействияВыполнялись И НеобходимоЗаписатьПисьмо Тогда
			ПисьмоОбъект.Записать();
		КонецЕсли;
		Если ПисьмоОбъект.ДополнительныеСвойства.Свойство("Правила_УстановитьПометкуУдаления")
			И ПисьмоОбъект.ДополнительныеСвойства.Правила_УстановитьПометкуУдаления Тогда
			ПисьмоОбъект.УстановитьПометкуУдаления(Истина);
		КонецЕсли;
		ПисьмоОбъект.Разблокировать();
	КонецЕсли;	
	
	Возврат ДействияВыполнялись;
	
КонецФункции

