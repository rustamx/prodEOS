////////////////////////////////////////////////////////////////////////////////
// Подсистема ЕОК
//
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

Функция ИнтернетАдресЕОСК() Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Возврат Константы.ра_ИнтернетАдресЕОСК.Получить();
	
КонецФункции

Процедура РасчетПоказателей() Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ра_НазначениеПоказателейОтчетов.ВидДокумента КАК ВидДокумента,
	|	ра_НазначениеПоказателейОтчетов.Показатель КАК Показатель,
	|	ра_НазначениеПоказателейОтчетов.Документ КАК Документ,
	|	ра_НазначениеПоказателейОтчетов.ПравилоОбработки КАК ПравилоОбработки,
	|	ра_НазначениеПоказателейОтчетов.Параметр1 КАК Параметр1,
	|	ра_НазначениеПоказателейОтчетов.Параметр2 КАК Параметр2,
	|	ра_НазначениеПоказателейОтчетов.Параметр3 КАК Параметр3,
	|	ра_НазначениеПоказателейОтчетов.Параметр4 КАК Параметр4,
	|	ра_НазначениеПоказателейОтчетов.Параметр5 КАК Параметр5
	|ПОМЕСТИТЬ ПоказателиДляРасчета
	|ИЗ
	|	РегистрСведений.ра_НазначениеПоказателейОтчетов КАК ра_НазначениеПоказателейОтчетов
	|ГДЕ
	|	ра_НазначениеПоказателейОтчетов.ПоказательРассчитан = ЛОЖЬ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 500
	|	Т.Документ КАК Документ,
	|	Т.ПравилоОбработки КАК ПравилоОбработки,
	|	Т.Параметр1 КАК Параметр1,
	|	Т.Параметр2 КАК Параметр2,
	|	Т.Параметр3 КАК Параметр3,
	|	Т.Параметр4 КАК Параметр4,
	|	Т.Параметр5 КАК Параметр5,
	|	Т.Дата КАК Дата,
	|	ПоказателиДляРасчета.ВидДокумента КАК ВидДокумента,
	|	ПоказателиДляРасчета.Показатель КАК Показатель
	|ИЗ
	|	ПоказателиДляРасчета КАК ПоказателиДляРасчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			Док.Ссылка КАК Документ,
	|			ПоказателиДляРасчета.ВидДокумента КАК ВидДокумента,
	|			ПоказателиДляРасчета.Показатель КАК Показатель,
	|			ПоказателиДляРасчета.ПравилоОбработки КАК ПравилоОбработки,
	|			ПоказателиДляРасчета.Параметр1 КАК Параметр1,
	|			ПоказателиДляРасчета.Параметр2 КАК Параметр2,
	|			ПоказателиДляРасчета.Параметр3 КАК Параметр3,
	|			ПоказателиДляРасчета.Параметр4 КАК Параметр4,
	|			ПоказателиДляРасчета.Параметр5 КАК Параметр5,
	|			Док.Дата КАК Дата
	|		ИЗ
	|			ПоказателиДляРасчета КАК ПоказателиДляРасчета
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ra_Nesootvetstvie КАК Док
	|				ПО ПоказателиДляРасчета.ВидДокумента = Док.ВидДокумента
	|					И (ПоказателиДляРасчета.Документ.Дата ЕСТЬ NULL
	|						ИЛИ ПоказателиДляРасчета.Документ.Дата <= Док.Дата)
	|					И (НЕ ПоказателиДляРасчета.Документ = Док.Ссылка)
	|					И (Док.Проведен)
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			Док.Ссылка,
	|			ПоказателиДляРасчета.ВидДокумента,
	|			ПоказателиДляРасчета.Показатель,
	|			ПоказателиДляРасчета.ПравилоОбработки,
	|			ПоказателиДляРасчета.Параметр1,
	|			ПоказателиДляРасчета.Параметр2,
	|			ПоказателиДляРасчета.Параметр3,
	|			ПоказателиДляРасчета.Параметр4,
	|			ПоказателиДляРасчета.Параметр5,
	|			Док.Дата
	|		ИЗ
	|			ПоказателиДляРасчета КАК ПоказателиДляРасчета
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ra_VremennyeSderzhivayushchieDejstviyaIKorrekciya КАК Док
	|				ПО ПоказателиДляРасчета.ВидДокумента = Док.ВидДокумента
	|					И (ПоказателиДляРасчета.Документ.Дата ЕСТЬ NULL
	|						ИЛИ ПоказателиДляРасчета.Документ.Дата <= Док.Дата)
	|					И (НЕ ПоказателиДляРасчета.Документ = Док.Ссылка)
	|					И (Док.Проведен)
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			Док.Ссылка,
	|			ПоказателиДляРасчета.ВидДокумента,
	|			ПоказателиДляРасчета.Показатель,
	|			ПоказателиДляРасчета.ПравилоОбработки,
	|			ПоказателиДляРасчета.Параметр1,
	|			ПоказателиДляРасчета.Параметр2,
	|			ПоказателиДляРасчета.Параметр3,
	|			ПоказателиДляРасчета.Параметр4,
	|			ПоказателиДляРасчета.Параметр5,
	|			Док.Дата
	|		ИЗ
	|			ПоказателиДляРасчета КАК ПоказателиДляРасчета
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ra_KorrektiruyushcheeDejstvie КАК Док
	|				ПО ПоказателиДляРасчета.ВидДокумента = Док.ВидДокумента
	|					И (ПоказателиДляРасчета.Документ.Дата ЕСТЬ NULL
	|						ИЛИ ПоказателиДляРасчета.Документ.Дата <= Док.Дата)
	|					И (НЕ ПоказателиДляРасчета.Документ = Док.Ссылка)
	|					И (Док.Проведен)
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			Док.Ссылка,
	|			ПоказателиДляРасчета.ВидДокумента,
	|			ПоказателиДляРасчета.Показатель,
	|			ПоказателиДляРасчета.ПравилоОбработки,
	|			ПоказателиДляРасчета.Параметр1,
	|			ПоказателиДляРасчета.Параметр2,
	|			ПоказателиДляРасчета.Параметр3,
	|			ПоказателиДляРасчета.Параметр4,
	|			ПоказателиДляРасчета.Параметр5,
	|			Док.Дата
	|		ИЗ
	|			ПоказателиДляРасчета КАК ПоказателиДляРасчета
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ra_PreduprezhdayushcheeDejstvie КАК Док
	|				ПО ПоказателиДляРасчета.ВидДокумента = Док.ВидДокумента
	|					И (ПоказателиДляРасчета.Документ.Дата ЕСТЬ NULL
	|						ИЛИ ПоказателиДляРасчета.Документ.Дата <= Док.Дата)
	|					И (НЕ ПоказателиДляРасчета.Документ = Док.Ссылка)
	|					И (Док.Проведен)
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			Док.Ссылка,
	|			ПоказателиДляРасчета.ВидДокумента,
	|			ПоказателиДляРасчета.Показатель,
	|			ПоказателиДляРасчета.ПравилоОбработки,
	|			ПоказателиДляРасчета.Параметр1,
	|			ПоказателиДляРасчета.Параметр2,
	|			ПоказателиДляРасчета.Параметр3,
	|			ПоказателиДляРасчета.Параметр4,
	|			ПоказателиДляРасчета.Параметр5,
	|			Док.Дата
	|		ИЗ
	|			ПоказателиДляРасчета КАК ПоказателиДляРасчета
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ra_ZayavkaNaKontrolnuyuOperaciyu КАК Док
	|				ПО ПоказателиДляРасчета.ВидДокумента = Док.ВидДокумента
	|					И (ПоказателиДляРасчета.Документ.Дата ЕСТЬ NULL
	|						ИЛИ ПоказателиДляРасчета.Документ.Дата <= Док.Дата)
	|					И (НЕ ПоказателиДляРасчета.Документ = Док.Ссылка)
	|					И (Док.Проведен)
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			Док.Ссылка,
	|			ПоказателиДляРасчета.ВидДокумента,
	|			ПоказателиДляРасчета.Показатель,
	|			ПоказателиДляРасчета.ПравилоОбработки,
	|			ПоказателиДляРасчета.Параметр1,
	|			ПоказателиДляРасчета.Параметр2,
	|			ПоказателиДляРасчета.Параметр3,
	|			ПоказателиДляРасчета.Параметр4,
	|			ПоказателиДляРасчета.Параметр5,
	|			Док.Дата
	|		ИЗ
	|			ПоказателиДляРасчета КАК ПоказателиДляРасчета
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ra_PlanProvedeniyaOcenkiSootvetstviya КАК Док
	|				ПО ПоказателиДляРасчета.ВидДокумента = Док.ВидДокумента
	|					И (ПоказателиДляРасчета.Документ.Дата ЕСТЬ NULL
	|						ИЛИ ПоказателиДляРасчета.Документ.Дата <= Док.Дата)
	|					И (НЕ ПоказателиДляРасчета.Документ = Док.Ссылка)
	|					И (Док.Проведен)
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			Док.Ссылка,
	|			ПоказателиДляРасчета.ВидДокумента,
	|			ПоказателиДляРасчета.Показатель,
	|			ПоказателиДляРасчета.ПравилоОбработки,
	|			ПоказателиДляРасчета.Параметр1,
	|			ПоказателиДляРасчета.Параметр2,
	|			ПоказателиДляРасчета.Параметр3,
	|			ПоказателиДляРасчета.Параметр4,
	|			ПоказателиДляРасчета.Параметр5,
	|			Док.Дата
	|		ИЗ
	|			ПоказателиДляРасчета КАК ПоказателиДляРасчета
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ra_OperaciyaOcenkiSootvetstviya КАК Док
	|				ПО ПоказателиДляРасчета.ВидДокумента = Док.ВидДокумента
	|					И (ПоказателиДляРасчета.Документ.Дата ЕСТЬ NULL
	|						ИЛИ ПоказателиДляРасчета.Документ.Дата <= Док.Дата)
	|					И (НЕ ПоказателиДляРасчета.Документ = Док.Ссылка)
	|					И (Док.Проведен)
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			Док.Ссылка,
	|			ПоказателиДляРасчета.ВидДокумента,
	|			ПоказателиДляРасчета.Показатель,
	|			ПоказателиДляРасчета.ПравилоОбработки,
	|			ПоказателиДляРасчета.Параметр1,
	|			ПоказателиДляРасчета.Параметр2,
	|			ПоказателиДляРасчета.Параметр3,
	|			ПоказателиДляРасчета.Параметр4,
	|			ПоказателиДляРасчета.Параметр5,
	|			Док.Дата
	|		ИЗ
	|			ПоказателиДляРасчета КАК ПоказателиДляРасчета
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ra_ZayavkaNaOcenkuSootvetstviya КАК Док
	|				ПО ПоказателиДляРасчета.ВидДокумента = Док.ВидДокумента
	|					И (ПоказателиДляРасчета.Документ.Дата ЕСТЬ NULL
	|						ИЛИ ПоказателиДляРасчета.Документ.Дата <= Док.Дата)
	|					И (НЕ ПоказателиДляРасчета.Документ = Док.Ссылка)
	|					И (Док.Проведен)
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			Док.Ссылка,
	|			ПоказателиДляРасчета.ВидДокумента,
	|			ПоказателиДляРасчета.Показатель,
	|			ПоказателиДляРасчета.ПравилоОбработки,
	|			ПоказателиДляРасчета.Параметр1,
	|			ПоказателиДляРасчета.Параметр2,
	|			ПоказателиДляРасчета.Параметр3,
	|			ПоказателиДляРасчета.Параметр4,
	|			ПоказателиДляРасчета.Параметр5,
	|			Док.Дата
	|		ИЗ
	|			ПоказателиДляРасчета КАК ПоказателиДляРасчета
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ra_OtchetONesootvetstviiCHast1 КАК Док
	|				ПО ПоказателиДляРасчета.ВидДокумента = Док.ВидДокумента
	|					И (ПоказателиДляРасчета.Документ.Дата ЕСТЬ NULL
	|						ИЛИ ПоказателиДляРасчета.Документ.Дата <= Док.Дата)
	|					И (НЕ ПоказателиДляРасчета.Документ = Док.Ссылка)
	|					И (Док.Проведен)) КАК Т
	|		ПО ПоказателиДляРасчета.ВидДокумента = Т.ВидДокумента
	|			И ПоказателиДляРасчета.Показатель = Т.Показатель
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		ВыполнитьРасчетПоказателяИЗаписатьДвижение(ВыборкаДетальныеЗаписи.Документ, ВыборкаДетальныеЗаписи);	
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ВыполнитьРасчетПоказателяИЗаписатьДвижение(ДокументСсылка, ПараметрыПоказателя) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	СтруктураРезультата = Новый Структура("Количество,АгрегатныйСчетчик");
	
	Попытка
		// ТСК Омаров Т.Р.; 06.09.2018; #423 {	
		Если ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ra_ZayavkaNaOcenkuSootvetstviya") Тогда
			Объект = Справочники.ra_Obekty.ПустаяСсылка();
		Иначе	
			Объект = ДокументСсылка.Obekt;
		КонецЕсли;
		// ТСК Омаров Т.Р.; 06.09.2018; #423 }	
		
		Если ЗначениеЗаполнено(ДокументСсылка) тогда
			
			Параметр1 = ПараметрыПоказателя.Параметр1;
			Параметр2 = ПараметрыПоказателя.Параметр2;
			Параметр3 = ПараметрыПоказателя.Параметр3;
			Параметр4 = ПараметрыПоказателя.Параметр4;
			Параметр5 = ПараметрыПоказателя.Параметр5;
			Источник = ДокументСсылка;
			Выполнить(ПараметрыПоказателя.ПравилоОбработки);
			
			НаборЗаписей = РегистрыНакопления.del_ра_ОборотыПоказателейОтчета.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Регистратор.Установить(ДокументСсылка); 
			НаборЗаписей.Прочитать(); 
			
			СоздатьНовуюЗапись = Истина;
			сч = 0;
			Пока сч < НаборЗаписей.Количество() цикл
				Запись = НаборЗаписей[сч];
				Если Запись.Проект = ДокументСсылка.Proekt
					и Запись.Объект = Объект 
					и Запись.Показатель = ПараметрыПоказателя.Показатель тогда
					Если не ЗначениеЗаполнено(СтруктураРезультата.Количество) и не ЗначениеЗаполнено(СтруктураРезультата.АгрегатныйСчетчик) тогда
						НаборЗаписей.Удалить(сч);
						прервать;
					Иначе
						СоздатьНовуюЗапись = ложь;
						ЗаполнитьЗначенияСвойств(Запись, СтруктураРезультата);
					КонецЕсли;
				КонецЕсли;
				сч = сч + 1;
			КонецЦикла;
			Если СоздатьНовуюЗапись и (ЗначениеЗаполнено(СтруктураРезультата.Количество) или ЗначениеЗаполнено(СтруктураРезультата.АгрегатныйСчетчик)) тогда 
				Движение = НаборЗаписей.Добавить();
				Движение.Период = ДокументСсылка.Дата;
				Движение.Показатель = ПараметрыПоказателя.Показатель;
				Движение.Проект = ДокументСсылка.Proekt;
				Движение.Объект = Объект;
				ЗаполнитьЗначенияСвойств(Движение, СтруктураРезультата);
			КонецЕсли;
			
			НаборЗаписей.Записать();
			
			// ТСК Ткаченко И.Л.; 23.08.2018; task#1141{
			НаборЗаписей = РегистрыСведений.ра_ОборотыПоказателейОтчета.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Регистратор.Установить(ДокументСсылка); 
			НаборЗаписей.Прочитать(); 
			
			СоздатьНовуюЗапись = Истина;
			сч = 0;
			Пока сч < НаборЗаписей.Количество() цикл
				Запись = НаборЗаписей[сч];
				Если Запись.Проект = ДокументСсылка.Proekt
					и Запись.Объект = Объект 
					и Запись.Показатель = ПараметрыПоказателя.Показатель тогда
					Если не ЗначениеЗаполнено(СтруктураРезультата.Количество) и не ЗначениеЗаполнено(СтруктураРезультата.АгрегатныйСчетчик) тогда
						НаборЗаписей.Удалить(сч);
						прервать;
					Иначе
						СоздатьНовуюЗапись = ложь;
						ЗаполнитьЗначенияСвойств(Запись, СтруктураРезультата);
					КонецЕсли;
				КонецЕсли;
				сч = сч + 1;
			КонецЦикла;
			Если СоздатьНовуюЗапись и (ЗначениеЗаполнено(СтруктураРезультата.Количество) или ЗначениеЗаполнено(СтруктураРезультата.АгрегатныйСчетчик)) тогда 
				Движение = НаборЗаписей.Добавить();
				Движение.Период = ДокументСсылка.Дата;
				Движение.Показатель = ПараметрыПоказателя.Показатель;
				Движение.Проект = ДокументСсылка.Proekt;
				Движение.Объект = Объект;
				Если ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ra_Nesootvetstvie") Тогда
					Движение.Несоответствие = ДокументСсылка;
				ИначеЕсли ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ra_AktObUstraneniiNesootvetstviya") Или
					ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ra_ItogovyjOtchetONesootvetstvii") Или
					ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ra_KorrektiruyushcheeDejstvie") Или
					ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ra_OcenkaZnachimosti") Или
					ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ra_OtchetONesootvetstviiCHast1") Или
					ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ra_OtchetONesootvetstviiCHast2") Или
					ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ra_OtchetONesootvetstviiCHast3") Или
					ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ra_PreduprezhdayushcheeDejstvie") Или
					ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ra_Uvedomlenie") Или
					ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ra_VremennyeSderzhivayushchieDejstviyaIKorrekciya") Тогда
					Движение.Несоответствие = ДокументСсылка.Nesootvetstvie;
				КонецЕсли;
				ЗаполнитьЗначенияСвойств(Движение, СтруктураРезультата);
			КонецЕсли;
			
			НаборЗаписей.Записать();
			// ТСК Ткаченко И.Л.; 23.08.2018; task#1141}
		КонецЕсли;
		
		НаборЗаписейРегистра = РегистрыСведений.ра_НазначениеПоказателейОтчетов.СоздатьНаборЗаписей();
		НаборЗаписейРегистра.Отбор.ВидДокумента.Установить(ПараметрыПоказателя.ВидДокумента);
		НаборЗаписейРегистра.Отбор.Показатель.Установить(ПараметрыПоказателя.Показатель);
		НаборЗаписейРегистра.Прочитать();
		Если НаборЗаписейРегистра.Количество() = 1 тогда
			НаборЗаписейРегистра[0].Документ = ДокументСсылка;
			НаборЗаписейРегистра[0].ПоказательРассчитан = не ЗначениеЗаполнено(ДокументСсылка);
		КонецЕсли;
		НаборЗаписейРегистра.Записать(Истина);
		
	Исключение
		ОШ = ОписаниеОшибки();
		Сообщить(ОШ);
	КонецПопытки;
	
КонецПроцедуры

// ТСК Корнюшенков А.Ю. Искать текст "МаршрутыСогласованияЕОСК" 02.07.2018 {
Функция ПолучитьИмяПредметаПоТипуОбъекта(ВыбранныйТипОбъекта) Экспорт 
	
	СтрокаИмениПредмета = "";
	МетаданныеДокумент = Метаданные.НайтиПоТипу(ТипЗнч(ВыбранныйТипОбъекта));
	Если МетаданныеДокумент <> Неопределено Тогда 
		Попытка 
			СтрокаИмениПредмета = Документы[МетаданныеДокумент.Имя].ПолучитьИмяПредметаПоУмолчанию(Неопределено);
		Исключение		
			// это не тип документа				
		КонецПопытки;	
	КонецЕсли;
	
	Возврат СтрокаИмениПредмета;
	
КонецФункции	
// ТСК Корнюшенков А.Ю. Искать текст "МаршрутыСогласованияЕОСК" 02.07.2018 }

Функция ПолучитьРасширениеФайла(ФайлШаблона) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Возврат ФайлШаблона.ТекущаяВерсияРасширение;
	
КонецФункции

Процедура ЗаполнениеGUIDЗадачиВКнопках(Задача,Кнопка) Экспорт
	
	Если Кнопка.Availability Тогда	
		Кнопка.Вставить("ObjectTypeLink", "Task_TaskUser");
		Кнопка.Вставить("ObjectGUID", Строка(Задача.Ссылка.УникальныйИдентификатор()));
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
