////////////////////////////////////////////////////////////////////////////////
// Подсистема "Отправка SMS"
//
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Отправляет SMS через настроенного поставщика услуги.
//
// Параметры:
//  ПараметрыОтправки - Структура -
//    Провайдер - ПеречислениеСсылка.ПровайдерыSMS - поставщик услуги по отправке SMS.
//    НомераПолучателей  - Массив - массив строк номеров получателей в формате +7ХХХХХХХХХХ;
//    Текст              - Строка - текст сообщения, максимальная длина у операторов может быть разной;
//    ИмяОтправителя     - Строка - имя отправителя, которое будет отображаться вместо номера у получателей.
//    Логин              - Строка - логин для доступа к услуге отправки SMS.
//    Пароль             - Строка - пароль для доступа к услуге отправки SMS.
//  Результат - Структура - (возвращаемое значение):
//    ОтправленныеСообщения - Массив структур:
//      НомерПолучателя - Строка - номер получателя из массива НомераПолучателей;
//      ИдентификаторСообщения - Строка - идентификатор SMS, по которому можно запросить статус отправки.
//    ОписаниеОшибки - Строка - пользовательское представление ошибки, если пустая строка, то ошибки нет.
//
Процедура ОтправитьSMS(ПараметрыОтправки, Результат) Экспорт
	
	Результат = ОтправитьУведомлениеПоСпособуEmail2Sms(ПараметрыОтправки);
	
КонецПроцедуры

// Запрашивает статус доставки SMS у поставщика услуг.
//
// Параметры:
//  ИдентификаторСообщения - Строка - идентификатор, присвоенный SMS при отправке;
//  Логин              - Строка - логин для доступа к услуге отправки SMS.
//  Пароль             - Строка - пароль для доступа к услуге отправки SMS.
//  Результат          - Строка - (возвращаемое значение) статус доставки, 
//                                см. описание функции ОтправкаSMS.СтатусДоставки.
Процедура СтатусДоставки(ИдентификаторСообщения, Провайдер, Логин, Пароль, Результат) Экспорт 
	
	// Корнюшенков А.Ю. Искать в тексте "ДоработкиSMS" 18.09.2018 {
	// для данного способа сообщения по умолчанию доставлены
	Если Провайдер = Перечисления.ПровайдерыSMS.ра_Email2sms Тогда 
		Результат = "Доставлено";
	КонецЕсли;	
	// Корнюшенков А.Ю. Искать в тексте "ДоработкиSMS" 18.09.2018 } 
		
КонецПроцедуры

// Проверяет правильность сохраненных настроек отправки SMS.
//
// Параметры:
//  НастройкиОтправкиSMS - Структура:
//   * Провайдер - ПеречислениеСсылка.ПровайдерыSMS;
//   * Логин - Строка;
//   * Пароль - Строка;
//   * ИмяОтправителя - Строка.
//  Отказ - Булево - установить этот параметр в Истина, если настройки не заполнены или заполнены неверно.
//
Процедура ПриПроверкеНастроекОтправкиSMS(НастройкиОтправкиSMS, Отказ) Экспорт

КонецПроцедуры

// Дополняет список разрешений для отправки SMS.
//
// Параметры:
//  Разрешения - Массив - массив объектов, возвращаемых одной из функций РаботаВБезопасномРежиме.Разрешение*().
//
Процедура ПриПолученииРазрешений(Разрешения) Экспорт
	
КонецПроцедуры

// Корнюшенков А.Ю. Искать в тексте "ДоработкиSMS" 19.09.2018 {
Функция ОтправитьУведомлениеПоСпособуEmail2Sms(ПараметрыОтправки, Соединение = Неопределено)
	
	АдресаЭлектроннойПочты = Новый Массив;
	Если ЗначениеЗаполнено(ПараметрыОтправки.ра_ИдентификаторОтправителяEmail2Sms) Тогда 
		АдресаЭлектроннойПочты.Добавить(ПараметрыОтправки.ра_ИдентификаторОтправителяEmail2Sms);
	КонецЕсли;	
		
	Если АдресаЭлектроннойПочты.Количество() = 0 Тогда
		ТекстОшибки = НСтр("ru = 'Уведомление не отправлено, так как не указан служебный почтовый адрес для способа Email2Sms.'; en = 'Notification was not sent because no service email for Email2Sms.'",
				ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
		ЗаписьЖурналаРегистрации(
			РаботаСУведомлениями.СобытиеЖурналаРегистрации(),
			УровеньЖурналаРегистрации.Предупреждение,,,
			ТекстОшибки);
		Возврат Новый Структура("ОписаниеОшибки", ТекстОшибки);
	КонецЕсли;
		
	МобильныеНомераСтрокой = "";
	Для Каждого МобильныйНомер из ПараметрыОтправки.НомераПолучателей Цикл 
		Если Лев(МобильныйНомер, 1) = "8"
			или Лев(МобильныйНомер, 1) = "+" Тогда 
			МобильныйНомер = Сред(МобильныйНомер,2, СтрДлина(МобильныйНомер)-1);
		КонецЕсли;	
		
		МобильныеНомераСтрокой = МобильныеНомераСтрокой + МобильныйНомер + ",";
		
	КонецЦикла;	
	
	МобильныеНомераСтрокой = Лев(МобильныеНомераСтрокой, СтрДлина(МобильныеНомераСтрокой)-1);
	
	Для Каждого ПочтовыйАдресПолучателя Из АдресаЭлектроннойПочты Цикл
		
		Попытка
			
			ПараметрыПисьма = Новый Структура;
			ПараметрыПисьма.Вставить("Тема", МобильныеНомераСтрокой + ?(ЗначениеЗаполнено(ПараметрыОтправки.ИмяОтправителя), "from:" + ПараметрыОтправки.ИмяОтправителя, ""));
			ПараметрыПисьма.Вставить("Текст", РаботаСУведомлениями.ТекстУведомленияВHTML(ПараметрыОтправки.Текст));
			ПараметрыПисьма.Вставить("Кому", ПочтовыйАдресПолучателя);
			ПараметрыПисьма.Вставить("ТипТекста", Перечисления.ТипыТекстовПочтовыхСообщений.HTML);
			
			СообщениеОбОшибке = "";
			УведомлениеОтправлено = ЛегкаяПочтаСервер.ОтправитьИнтернетПочта(
				ПараметрыПисьма,
				Справочники.УчетныеЗаписиЭлектроннойПочты.СистемнаяУчетнаяЗаписьЭлектроннойПочты,,
				СообщениеОбОшибке,
				Соединение);
			//УведомлениеОтправлено = Истина;
			
			Если Не УведомлениеОтправлено Тогда
				ВызватьИсключение СообщениеОбОшибке;
			КонецЕсли;
			
		Исключение
			ТекстОшибки = СтрШаблон(
					НСтр("ru = 'Ошибка при отправке уведомления по почте: %1'; en = 'Error sending mail notifications: %1'",
						ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),
					ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(
				РаботаСУведомлениями.СобытиеЖурналаРегистрации(),
				УровеньЖурналаРегистрации.Ошибка,,,
				ТекстОшибки);
			РаботаСУведомлениями.ЗакрытьСоединениеСПочтовымСервером(Соединение);
			Возврат Новый Структура("ОписаниеОшибки", ТекстОшибки);
		КонецПопытки;
		
		ЗаписьЖурналаРегистрации(
			РаботаСУведомлениями.СобытиеЖурналаРегистрации(),
			УровеньЖурналаРегистрации.Информация,,,
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Уведомление успешно отправлено на адрес %1 (вид маршрутизации - %2).'; en = 'Notification successfully sent to address %1 (routing type is %2).'",
					ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),
				ПочтовыйАдресПолучателя,
				));
		
	КонецЦикла;
	
	ОтправленныеСообщения = Новый Массив;
	ОтправленныеСообщения.Добавить(Новый Структура("НомерПолучателя,ИдентификаторСообщения", МобильныеНомераСтрокой, Строка(Новый УникальныйИдентификатор)));
	
	Возврат Новый Структура("ОписаниеОшибки, ОтправленныеСообщения", "", ОтправленныеСообщения);
	
КонецФункции
// Корнюшенков А.Ю. Искать в тексте "ДоработкиSMS" 19.09.2018 }

#КонецОбласти
