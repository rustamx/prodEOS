////////////////////////////////////////////////////////////////////////////////
// НагрузочноеТестированиеСценарииСтандартные:
//  Содержит код типовых сценариев.
//
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Сценарий создания внутреннего документа.
//
// Шаги сценария:
//  1. Открытие списка внутренних документов, если он еще не открыт (пауза 5с).
//  2. Переключение режима просмотра на случайное (пауза 5с).
//  3. Если режим просмотра "По папкам", тогда переход к папке (пауза 5с).
//  4. Выполнение команды "Создать документ" в списке (пауза 5с).
//  5. Выбор шаблона создаваемого документа в форме выбора шаблона (пауза от 20с до 30с).
//  6. Выполнение команды "Создать по шаблону" в форме выбора шаблона (пауза 5с).
//  7. Заполнение реквизитов документа в форме документа (пауза от 60с до 180с).
//  8. Выполнение команды "Записать" в форме документа (пауза 5с).
//  9. Закрытие формы документа (пауза 5с).
//
Функция СозданиеВнутреннегоДокумента(РеквизитыДокумента) Экспорт
	
	Сценарий = Новый Массив;
	
	// Не выполняем сценарий при остсутствии соответствующих прав.
	Если Не ПравоДоступа("Добавление", Метаданные.Справочники.ВнутренниеДокументы) Тогда
		Возврат Сценарий;
	КонецЕсли;
	
	// Открытие формы списка внутренних документов.
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ОткрытьФорму";
	НовыйШаг.Параметры.Вставить("ИмяФормы", "Справочник.ВнутренниеДокументы.Форма.ФормаСпискаСПапками");
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	// Переключение режима просмотра в форме списка внутренних документов.
	ВидПросмотра = НагрузочноеТестированиеСервер.ПолучитьСлучайныйВидПросмотраСпискаВнутреннихДокументов();
	
	Реквизиты = Новый Соответствие;
	Реквизиты.Вставить("ВидПросмотра", ВидПросмотра);
	
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ВыполнитьКомандуФормы";
	НовыйШаг.Параметры.Вставить("ИмяФормы", "Справочник.ВнутренниеДокументы.Форма.ФормаСпискаСПапками");
	НовыйШаг.Параметры.Вставить("ИмяКоманды", "ПереключитьРежимПросмотра");
	НовыйШаг.Параметры.Вставить("Реквизиты", Реквизиты);
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	Если ВидПросмотра = Перечисления.ВидыПросмотраСпискаОбъектов.ПоПапкам Тогда
		
		// Выбор папки в форме списка внутренних документов.
		НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
		НовыйШаг.Действие = "ВыбратьПапкуВнутреннегоДокумента";
		НовыйШаг.Параметры.Вставить("Папка", РеквизитыДокумента.Папка);
		НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
		
	КонецЕсли;
	
	// Выполнение команды СоздатьДокумент в форме списка внутренних документов.
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ВыполнитьКомандуФормы";
	НовыйШаг.Параметры.Вставить("ИмяФормы", "Справочник.ВнутренниеДокументы.Форма.ФормаСпискаСПапками");
	НовыйШаг.Параметры.Вставить("ИмяКоманды", "СоздатьДокумент");
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	Если НагрузочноеТестированиеСервер.ЕстьДоступныеЭлементыСправочника("ШаблоныВнутреннихДокументов") Тогда
		
		// Выбор шаблона создаваемого внутреннего документа.
		ШаблонДокумента = НагрузочноеТестированиеСервер.ПолучитьСлучайныйШаблонВнутреннегоДокумента(РеквизитыДокумента);
		
		НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
		НовыйШаг.Действие = "ВыбратьШаблонДокумента";
		НовыйШаг.Параметры.Вставить("Шаблон", ШаблонДокумента);
		НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(20, 30);
		
		// Выполнение команды СоздатьПоШаблону в форме выбора шаблона документа.
		НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
		НовыйШаг.Действие = "ВыполнитьКомандуФормы";
		НовыйШаг.Параметры.Вставить("ИмяФормы", "ОбщаяФорма.СозданиеДокументаПоШаблону");
		НовыйШаг.Параметры.Вставить("ИмяКоманды", "СоздатьПоШаблону");
		НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
		
	КонецЕсли;
	
	// Заполнение реквизитов внутреннего документа.
	ИдентификаторДокумента = Новый УникальныйИдентификатор();
	
	Реквизиты = Новый Соответствие;
	Реквизиты.Вставить("Объект.Заголовок*", СтрШаблон(НСтр("ru = 'Внутренний документ %1'; en = 'Internal document %1'"), Строка(ИдентификаторДокумента)));
	Реквизиты.Вставить("Объект.ВидДокумента*", РеквизитыДокумента.ВидДокумента);
	Реквизиты.Вставить("Объект.Организация*", РеквизитыДокумента.Организация);
	Реквизиты.Вставить("Объект.Адресат", НагрузочноеТестированиеСервер.ПолучитьСлучайныйЭлементСправочника("Пользователи"));
	Реквизиты.Вставить("Объект.Контрагент", НагрузочноеТестированиеСервер.ПолучитьСлучайныйЭлементСправочника("Контрагенты"));
	Реквизиты.Вставить("Объект.Папка*", РеквизитыДокумента.Папка);
	Реквизиты.Вставить("Объект.ДатаНачалаДействия", ТекущаяДатаСеанса());
	Реквизиты.Вставить("Объект.ДатаОкончанияДействия", ДобавитьМесяц(ТекущаяДатаСеанса(), 12));
	Реквизиты.Вставить("Объект.ПорядокПродления", Перечисления.ПорядокПродления.АвтоматическиНаГод);
	Реквизиты.Вставить("Объект.ГрифДоступа*", РеквизитыДокумента.ГрифДоступа);
	Реквизиты.Вставить("Объект.ВопросДеятельности*", РеквизитыДокумента.ВопросДеятельности);
	Реквизиты.Вставить("Объект.Ответственный", НагрузочноеТестированиеСервер.ПолучитьСлучайныйЭлементСправочника("Пользователи"));
	
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ЗаполнитьРеквизитыФормы";
	НовыйШаг.Параметры.Вставить("ИмяФормы", "Справочник.ВнутренниеДокументы.Форма.ФормаЭлемента");
	НовыйШаг.Параметры.Вставить("Реквизиты", Реквизиты);
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(60, 180);
	
	// Выполнение команды Записать формы внутреннего документа.
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ВыполнитьКомандуФормы";
	Новыйшаг.Параметры.Вставить("ИмяФормы", "Справочник.ВнутренниеДокументы.Форма.ФормаЭлемента");
	Новыйшаг.Параметры.Вставить("ИмяКоманды", "Записать");
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	// Закрытие формы внутреннего документа.
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ЗакрытьФорму";
	Новыйшаг.Параметры.Вставить("ИмяФормы", "Справочник.ВнутренниеДокументы.Форма.ФормаЭлемента");
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	Возврат Сценарий;
	
КонецФункции

// Сценарий создания входящего документа.
//
// Шаги сценария:
//  1. Открытие списка входящих документов, если он еще не открыт (пауза 5с).
//  2. Выполнение команды "Создать документ" в списке (пауза 5с).
//  3. Выбор шаблона создаваемого документа в форме выбора шаблона (пауза от 20с до 30с).
//  4. Выполнение команды "Создать по шаблону" в форме выбора шаблона (пауза 5с).
//  5. Заполнение реквизитов документа в форме документа (пауза от 60с до 180с).
//  6. Выполнение команды "Записать" в форме документа (пауза 5с).
//  7. Закрытие формы документа (пауза 5с).
//
Функция СозданиеВходящегоДокумента(РеквизитыДокумента) Экспорт
	
	Сценарий = Новый Массив;
	
	// Не выполняем сценарий при остсутствии соответствующих прав.
	Если Не ПравоДоступа("Добавление", Метаданные.Справочники.ВходящиеДокументы) Тогда
		Возврат Сценарий;
	КонецЕсли;
	
	// Открытие формы списка входящих документов.
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ОткрытьФорму";
	Новыйшаг.Параметры.Вставить("ИмяФормы", "Справочник.ВходящиеДокументы.Форма.ФормаСписка");
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	// Выполнение команды СоздатьДокумент в форме списка входящих документов.
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ВыполнитьКомандуФормы";
	Новыйшаг.Параметры.Вставить("ИмяФормы", "Справочник.ВходящиеДокументы.Форма.ФормаСписка");
	Новыйшаг.Параметры.Вставить("ИмяКоманды", "СоздатьДокумент");
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	Если НагрузочноеТестированиеСервер.ЕстьДоступныеЭлементыСправочника("ШаблоныВходящихДокументов") Тогда
		
		// Выбор шаблона создаваемого входящего документа.
		ШаблонДокумента = НагрузочноеТестированиеСервер.ПолучитьСлучайныйШаблонВходящегоДокумента(РеквизитыДокумента);
		
		НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
		НовыйШаг.Действие = "ВыбратьШаблонДокумента";
		НовыйШаг.Параметры.Вставить("Шаблон", ШаблонДокумента);
		НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(20, 30);
		
		// Выполнение команды СоздатьПоШаблону в форме выбора шаблона документа.
		НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
		НовыйШаг.Действие = "ВыполнитьКомандуФормы";
		Новыйшаг.Параметры.Вставить("ИмяФормы", "ОбщаяФорма.СозданиеДокументаПоШаблону");
		Новыйшаг.Параметры.Вставить("ИмяКоманды", "СоздатьПоШаблону");
		НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
		
	КонецЕсли;
	
	// Заполнение реквизитов входящего документа.
	ИдентификаторДокумента = Новый УникальныйИдентификатор();
	
	Реквизиты = Новый Соответствие;
	Реквизиты.Вставить("Объект.Заголовок*", СтрШаблон(НСтр("ru = 'Входящий документ %1'; en = 'Incoming document %1'"), Строка(ИдентификаторДокумента)));
	Реквизиты.Вставить("Объект.ВидДокумента*", РеквизитыДокумента.ВидДокумента);
	Реквизиты.Вставить("Объект.Отправитель", НагрузочноеТестированиеСервер.ПолучитьСлучайныйЭлементСправочника("Контрагенты"));
	Реквизиты.Вставить("Объект.Организация*", РеквизитыДокумента.Организация);
	Реквизиты.Вставить("Объект.ГрифДоступа*", РеквизитыДокумента.ГрифДоступа);
	Реквизиты.Вставить("Объект.ВопросДеятельности*", РеквизитыДокумента.ВопросДеятельности);
	
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ЗаполнитьРеквизитыФормы";
	Новыйшаг.Параметры.Вставить("ИмяФормы", "Справочник.ВходящиеДокументы.Форма.ФормаЭлемента");
	НовыйШаг.Параметры.Вставить("Реквизиты", Реквизиты);
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(60, 180);
	
	// Выполнение команды Записать формы входящего документа.
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ВыполнитьКомандуФормы";
	Новыйшаг.Параметры.Вставить("ИмяФормы", "Справочник.ВходящиеДокументы.Форма.ФормаЭлемента");
	Новыйшаг.Параметры.Вставить("ИмяКоманды", "Записать");
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	// Закрытие формы входящего документа.
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ЗакрытьФорму";
	Новыйшаг.Параметры.Вставить("ИмяФормы", "Справочник.ВходящиеДокументы.Форма.ФормаЭлемента");
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	Возврат Сценарий;
	
КонецФункции

// Сценарий создания исходящего документа.
//
// Шаги сценария:
//  1. Открытие списка исходящих документов, если он еще не открыт (пауза 5с).
//  2. Выполнение команды "Создать документ" в списке (пауза 5с).
//  3. Выбор шаблона создаваемого документа в форме выбора шаблона (пауза от 20с до 30с).
//  4. Выполнение команды "Создать по шаблону" в форме выбора шаблона (пауза 5с).
//  5. Заполнение реквизитов документа в форме документа (пауза от 60с до 180с).
//  6. Выполнение команды "Записать" в форме документа (пауза 5с).
//  7. Закрытие формы документа (пауза 5с).
//
Функция СозданиеИсходящегоДокумента(РеквизитыДокумента) Экспорт
	
	Сценарий = Новый Массив;
	
	// Не выполняем сценарий при остсутствии соответствующих прав.
	Если Не ПравоДоступа("Добавление", Метаданные.Справочники.ИсходящиеДокументы) Тогда
		Возврат Сценарий;
	КонецЕсли;
	
	// Открытие формы списка исходящих документов.
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ОткрытьФорму";
	Новыйшаг.Параметры.Вставить("ИмяФормы", "Справочник.ИсходящиеДокументы.Форма.ФормаСписка");
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	// Выполнение команды СоздатьДокумент в форме списка исходящих документов.
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ВыполнитьКомандуФормы";
	Новыйшаг.Параметры.Вставить("ИмяФормы", "Справочник.ИсходящиеДокументы.Форма.ФормаСписка");
	Новыйшаг.Параметры.Вставить("ИмяКоманды", "СоздатьДокумент");
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	Если НагрузочноеТестированиеСервер.ЕстьДоступныеЭлементыСправочника("ШаблоныИсходящихДокументов") Тогда
		
		ШаблонДокумента = НагрузочноеТестированиеСервер.ПолучитьСлучайныйШаблонИсходящегоДокумента(РеквизитыДокумента);
		
		// Выбор шаблона создаваемого исходящего документа.
		НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
		НовыйШаг.Действие = "ВыбратьШаблонДокумента";
		НовыйШаг.Параметры.Вставить("Шаблон", ШаблонДокумента);
		НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(20, 30);
		
		// Выполнение команды СоздатьПоШаблону в форме выбора шаблона документа.
		НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
		НовыйШаг.Действие = "ВыполнитьКомандуФормы";
		Новыйшаг.Параметры.Вставить("ИмяФормы", "ОбщаяФорма.СозданиеДокументаПоШаблону");
		Новыйшаг.Параметры.Вставить("ИмяКоманды", "СоздатьПоШаблону");
		НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
		
	КонецЕсли;
	
	// Заполнение реквизитов исходящего документа.
	ИдентификаторДокумента = Новый УникальныйИдентификатор();
	
	Реквизиты = Новый Соответствие;
	Реквизиты.Вставить("Объект.Заголовок*", СтрШаблон(НСтр("ru = 'Исходящий документ %1'; en = 'Incoming document %1'"), Строка(ИдентификаторДокумента)));
	Реквизиты.Вставить("Объект.ВидДокумента*", РеквизитыДокумента.ВидДокумента);
	Реквизиты.Вставить("Объект.Организация*", РеквизитыДокумента.Организация);
	Реквизиты.Вставить("Объект.Подготовил", НагрузочноеТестированиеСервер.ПолучитьСлучайныйЭлементСправочника("Пользователи"));
	Реквизиты.Вставить("Получатель", НагрузочноеТестированиеСервер.ПолучитьСлучайныйЭлементСправочника("Контрагенты"));
	Реквизиты.Вставить("Объект.ГрифДоступа*", РеквизитыДокумента.ГрифДоступа);
	Реквизиты.Вставить("Объект.ВопросДеятельности*", РеквизитыДокумента.ВопросДеятельности);
	
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ЗаполнитьРеквизитыФормы";
	Новыйшаг.Параметры.Вставить("ИмяФормы", "Справочник.ИсходящиеДокументы.Форма.ФормаЭлемента");
	НовыйШаг.Параметры.Вставить("Реквизиты", Реквизиты);
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(60, 180);
	
	// Выполнение команды Записать формы исходящего документа.
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ВыполнитьКомандуФормы";
	Новыйшаг.Параметры.Вставить("ИмяФормы", "Справочник.ИсходящиеДокументы.Форма.ФормаЭлемента");
	Новыйшаг.Параметры.Вставить("ИмяКоманды", "Записать");
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	// Закрытие формы исходящего документа.
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ЗакрытьФорму";
	Новыйшаг.Параметры.Вставить("ИмяФормы", "Справочник.ИсходящиеДокументы.Форма.ФормаЭлемента");
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	Возврат Сценарий;
	
КонецФункции

// Сценарий создания процесса.
// Случайным образом выполняется один из сценариев:
//  - СозданиеПроцессаИсполнение
//  - СозданиеПроцессаОзнакомление
//  - СозданиеПроцессаПоручение
//  - СозданиеПроцессаПриглашение
//  - СозданиеПроцессаРассмотрение
//  - СозданиеПроцессаРегистрация
//  - СозданиеПроцессаСогласование
//  - СозданиеПроцессаУтверждение
//
Функция СозданиеПроцесса() Экспорт
	
	ГСЧ = Новый ГенераторСлучайныхЧисел;
	
	СлучайноеЧисло = ГСЧ.СлучайноеЧисло(1, 8);
	Если СлучайноеЧисло = 1 Тогда
		Сценарий = СозданиеПроцессаИсполнение();
	ИначеЕсли СлучайноеЧисло = 2 Тогда
		Сценарий = СозданиеПроцессаОзнакомление();
	ИначеЕсли СлучайноеЧисло = 3 Тогда
		Сценарий = СозданиеПроцессаПоручение();
	ИначеЕсли СлучайноеЧисло = 4 Тогда
		Сценарий = СозданиеПроцессаПриглашение();
	ИначеЕсли СлучайноеЧисло = 5 Тогда
		Сценарий = СозданиеПроцессаРассмотрение();
	ИначеЕсли СлучайноеЧисло = 6 Тогда
		Сценарий = СозданиеПроцессаРегистрация();
	ИначеЕсли СлучайноеЧисло = 7 Тогда
		Сценарий = СозданиеПроцессаСогласование();
	Иначе
		Сценарий = СозданиеПроцессаУтверждение();
	КонецЕсли;
	
	Возврат Сценарий;
	
КонецФункции

// Сценарий создания процесса Исполнение.
//
// Шаги сценария:
//  1. Открытие формы создания процесса (пауза 5с).
//  2. Заполнение реквизитов процесса в форме процесса (пауза от 30с до 45с).
//  3. Старт процесса.
//
Функция СозданиеПроцессаИсполнение() Экспорт
	
	Сценарий = Новый Массив;
	
	// Открытие формы создания процесса.
	Исполнители = Новый Массив;
	Исполнители.Добавить(НагрузочноеТестированиеСервер.ПолучитьСлучайныйЭлементСправочника("Пользователи"));
	
	Основание = Новый Структура;
	Основание.Вставить("Исполнители", Исполнители);
	Основание.Вставить("Предметы", НагрузочноеТестированиеСервер.ПолучитьСлучайныйЭлементСправочника("ВнутренниеДокументы"));
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Основание", Основание);
	
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ОткрытьФорму";
	Новыйшаг.Параметры.Вставить("ИмяФормы", "БизнесПроцесс.Исполнение.Форма.ФормаБизнесПроцесса");
	Новыйшаг.Параметры.Вставить("Параметры", ПараметрыФормы);
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	// Заполнение реквизитов процесса.
	ИдентификаторПроцесса = Новый УникальныйИдентификатор();
	
	Реквизиты = Новый Соответствие;
	Реквизиты.Вставить("Объект.Наименование*", СтрШаблон(НСтр("ru = 'Исполнение %1'; en = 'Performance %1'"), Строка(ИдентификаторПроцесса)));
	Реквизиты.Вставить("Объект.ВариантИсполнения", Перечисления.ВариантыМаршрутизацииЗадач.Последовательно);
	
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ЗаполнитьРеквизитыФормы";
	Новыйшаг.Параметры.Вставить("ИмяФормы", "БизнесПроцесс.Исполнение.Форма.ФормаБизнесПроцесса");
	НовыйШаг.Параметры.Вставить("Реквизиты", Реквизиты);
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(30, 45);
	
	// Старт процесса.
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "СтартоватьПроцесс";
	Новыйшаг.Параметры.Вставить("ИмяПроцесса", "Исполнение");
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	Возврат Сценарий;
	
КонецФункции

// Сценарий создания процесса Ознакомление.
//
// Шаги сценария:
//  1. Открытие формы создания процесса (пауза 5с).
//  2. Заполнение реквизитов процесса в форме процесса (пауза от 30с до 45с).
//  3. Старт процесса.
//
Функция СозданиеПроцессаОзнакомление() Экспорт
	
	Сценарий = Новый Массив;
	
	// Открытие формы создания процесса.
	Исполнители = Новый Массив;
	Исполнители.Добавить(НагрузочноеТестированиеСервер.ПолучитьСлучайныйЭлементСправочника("Пользователи"));
	
	Основание = Новый Структура;
	Основание.Вставить("Исполнители", Исполнители);
	Основание.Вставить("Предметы", НагрузочноеТестированиеСервер.ПолучитьСлучайныйЭлементСправочника("ВнутренниеДокументы"));
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Основание", Основание);
	
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ОткрытьФорму";
	Новыйшаг.Параметры.Вставить("ИмяФормы", "БизнесПроцесс.Ознакомление.Форма.ФормаБизнесПроцесса");
	Новыйшаг.Параметры.Вставить("Параметры", ПараметрыФормы);
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	// Заполнение реквизитов процесса.
	ИдентификаторПроцесса = Новый УникальныйИдентификатор();
	
	Реквизиты = Новый Соответствие;
	Реквизиты.Вставить("Объект.Наименование*", СтрШаблон(НСтр("ru = 'Ознакомление %1'; en = 'Examination %1'"), Строка(ИдентификаторПроцесса)));
	
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ЗаполнитьРеквизитыФормы";
	Новыйшаг.Параметры.Вставить("ИмяФормы", "БизнесПроцесс.Ознакомление.Форма.ФормаБизнесПроцесса");
	НовыйШаг.Параметры.Вставить("Реквизиты", Реквизиты);
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(30, 45);
	
	// Старт процесса.
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "СтартоватьПроцесс";
	Новыйшаг.Параметры.Вставить("ИмяПроцесса", "Ознакомление");
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	Возврат Сценарий;
	
КонецФункции

// Сценарий создания процесса Поручение.
//
// Шаги сценария:
//  1. Открытие формы создания процесса (пауза 5с).
//  2. Заполнение реквизитов процесса в форме процесса (пауза от 30с до 45с).
//  3. Старт процесса.
//
Функция СозданиеПроцессаПоручение() Экспорт
	
	Сценарий = Новый Массив;
	
	// Открытие формы создания процесса.
	Основание = Новый Структура;
	Основание.Вставить("Предметы", НагрузочноеТестированиеСервер.ПолучитьСлучайныйЭлементСправочника("ВнутренниеДокументы"));
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Основание", Основание);
	
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ОткрытьФорму";
	Новыйшаг.Параметры.Вставить("ИмяФормы", "БизнесПроцесс.Поручение.Форма.ФормаБизнесПроцесса");
	Новыйшаг.Параметры.Вставить("Параметры", ПараметрыФормы);
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	// Заполнение реквизитов процесса.
	ИдентификаторПроцесса = Новый УникальныйИдентификатор();
	Исполнитель = НагрузочноеТестированиеСервер.ПолучитьСлучайныйЭлементСправочника("Пользователи");
	
	Реквизиты = Новый Соответствие;
	Реквизиты.Вставить("Объект.Наименование*", СтрШаблон(НСтр("ru = 'Поручение %1'; en = 'Order %1'"), Строка(ИдентификаторПроцесса)));
	Реквизиты.Вставить("Объект.Исполнитель", Исполнитель);
	
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ЗаполнитьРеквизитыФормы";
	Новыйшаг.Параметры.Вставить("ИмяФормы", "БизнесПроцесс.Поручение.Форма.ФормаБизнесПроцесса");
	НовыйШаг.Параметры.Вставить("Реквизиты", Реквизиты);
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(30, 45);
	
	// Старт процесса.
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "СтартоватьПроцесс";
	Новыйшаг.Параметры.Вставить("ИмяПроцесса", "Поручение");
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	Возврат Сценарий;
	
КонецФункции

// Сценарий создания процесса Приглашение.
//
// Шаги сценария:
//  1. Открытие формы создания процесса (пауза 5с).
//  2. Заполнение реквизитов процесса в форме процесса (пауза от 30с до 45с).
//  3. Старт процесса.
//
Функция СозданиеПроцессаПриглашение() Экспорт
	
	Сценарий = Новый Массив;
	
	// Открытие формы создания процесса.
	Исполнители = Новый Массив;
	Исполнители.Добавить(НагрузочноеТестированиеСервер.ПолучитьСлучайныйЭлементСправочника("Пользователи"));
	
	Основание = Новый Структура;
	Основание.Вставить("Исполнители", Исполнители);
	Основание.Вставить("Предметы", НагрузочноеТестированиеСервер.ПолучитьСлучайныйЭлементСправочника("ВнутренниеДокументы"));
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Основание", Основание);
	
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ОткрытьФорму";
	Новыйшаг.Параметры.Вставить("ИмяФормы", "БизнесПроцесс.Приглашение.Форма.ФормаБизнесПроцесса");
	Новыйшаг.Параметры.Вставить("Параметры", ПараметрыФормы);
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	// Заполнение реквизитов процесса.
	ИдентификаторПроцесса = Новый УникальныйИдентификатор();
	
	Реквизиты = Новый Соответствие;
	Реквизиты.Вставить("Объект.Наименование*", СтрШаблон(НСтр("ru = 'Приглашение %1'; en = 'Invitation %1'"), Строка(ИдентификаторПроцесса)));
	
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ЗаполнитьРеквизитыФормы";
	Новыйшаг.Параметры.Вставить("ИмяФормы", "БизнесПроцесс.Приглашение.Форма.ФормаБизнесПроцесса");
	НовыйШаг.Параметры.Вставить("Реквизиты", Реквизиты);
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(30, 45);
	
	// Старт процесса.
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "СтартоватьПроцесс";
	Новыйшаг.Параметры.Вставить("ИмяПроцесса", "Приглашение");
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	Возврат Сценарий;
	
КонецФункции

// Сценарий создания процесса Рассмотрение.
//
// Шаги сценария:
//  1. Открытие формы создания процесса (пауза 5с).
//  2. Заполнение реквизитов процесса в форме процесса (пауза от 30с до 45с).
//  3. Старт процесса.
//
Функция СозданиеПроцессаРассмотрение() Экспорт
	
	Сценарий = Новый Массив;
	
	// Отправляем на рассмотрение только зарегистрированный документ.
	Документ = НагрузочноеТестированиеСервер.ПолучитьСлучайныйЭлементСправочника("ВнутренниеДокументы");
	Если Не ЗначениеЗаполнено(Документ.ДатаРегистрации) Тогда
		Возврат Сценарий;
	КонецЕсли;
	
	// Открытие формы создания процесса.
	Основание = Новый Структура;
	Основание.Вставить("Предметы", Документ);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Основание", Основание);
	
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ОткрытьФорму";
	Новыйшаг.Параметры.Вставить("ИмяФормы", "БизнесПроцесс.Рассмотрение.Форма.ФормаБизнесПроцесса");
	Новыйшаг.Параметры.Вставить("Параметры", ПараметрыФормы);
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	// Заполнение реквизитов процесса.
	ИдентификаторПроцесса = Новый УникальныйИдентификатор();
	Исполнитель = НагрузочноеТестированиеСервер.ПолучитьСлучайныйЭлементСправочника("Пользователи");
	
	Реквизиты = Новый Соответствие;
	Реквизиты.Вставить("Объект.Наименование*", СтрШаблон(НСтр("ru = 'Рассмотрение %1'; en = 'Reviewal %1'"), Строка(ИдентификаторПроцесса)));
	Реквизиты.Вставить("Объект.Исполнитель", Исполнитель);
	
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ЗаполнитьРеквизитыФормы";
	Новыйшаг.Параметры.Вставить("ИмяФормы", "БизнесПроцесс.Рассмотрение.Форма.ФормаБизнесПроцесса");
	НовыйШаг.Параметры.Вставить("Реквизиты", Реквизиты);
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(30, 45);
	
	// Старт процесса.
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "СтартоватьПроцесс";
	Новыйшаг.Параметры.Вставить("ИмяПроцесса", "Рассмотрение");
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	Возврат Сценарий;
	
КонецФункции

// Сценарий создания процесса Регистрация.
//
// Шаги сценария:
//  1. Открытие формы создания процесса (пауза 5с).
//  2. Заполнение реквизитов процесса в форме процесса (пауза от 30с до 45с).
//  3. Старт процесса.
//
Функция СозданиеПроцессаРегистрация() Экспорт
	
	Сценарий = Новый Массив;
	
	// Отправляем на регистрацию только не зарегистрированный документ.
	Документ = НагрузочноеТестированиеСервер.ПолучитьСлучайныйЭлементСправочника("ВнутренниеДокументы");
	Если ЗначениеЗаполнено(Документ.ДатаРегистрации) Тогда
		Возврат Сценарий;
	КонецЕсли;
	
	// Открытие формы создания процесса.
	Основание = Новый Структура;
	Основание.Вставить("Предметы", Документ);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Основание", Основание);
	
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ОткрытьФорму";
	Новыйшаг.Параметры.Вставить("ИмяФормы", "БизнесПроцесс.Регистрация.Форма.ФормаБизнесПроцесса");
	Новыйшаг.Параметры.Вставить("Параметры", ПараметрыФормы);
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	// Заполнение реквизитов процесса.
	ИдентификаторПроцесса = Новый УникальныйИдентификатор();
	Исполнитель = НагрузочноеТестированиеСервер.ПолучитьСлучайныйЭлементСправочника("Пользователи");
	
	Реквизиты = Новый Соответствие;
	Реквизиты.Вставить("Объект.Наименование*", СтрШаблон(НСтр("ru = 'Регистрация %1'; en = 'Registration %1'"), Строка(ИдентификаторПроцесса)));
	Реквизиты.Вставить("Объект.Исполнитель", Исполнитель);
	
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ЗаполнитьРеквизитыФормы";
	Новыйшаг.Параметры.Вставить("ИмяФормы", "БизнесПроцесс.Регистрация.Форма.ФормаБизнесПроцесса");
	НовыйШаг.Параметры.Вставить("Реквизиты", Реквизиты);
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(30, 45);
	
	// Старт процесса.
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "СтартоватьПроцесс";
	Новыйшаг.Параметры.Вставить("ИмяПроцесса", "Регистрация");
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	Возврат Сценарий;
	
КонецФункции

// Сценарий создания процесса Согласование.
//
// Шаги сценария:
//  1. Открытие формы создания процесса (пауза 5с).
//  2. Заполнение реквизитов процесса в форме процесса (пауза от 30с до 45с).
//  3. Старт процесса.
//
Функция СозданиеПроцессаСогласование() Экспорт
	
	Сценарий = Новый Массив;
	
	// Открытие формы создания процесса.
	Исполнители = Новый Массив;
	Исполнители.Добавить(НагрузочноеТестированиеСервер.ПолучитьСлучайныйЭлементСправочника("Пользователи"));
	
	Основание = Новый Структура;
	Основание.Вставить("Исполнители", Исполнители);
	Основание.Вставить("Предметы", НагрузочноеТестированиеСервер.ПолучитьСлучайныйЭлементСправочника("ВнутренниеДокументы"));
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Основание", Основание);
	
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ОткрытьФорму";
	Новыйшаг.Параметры.Вставить("ИмяФормы", "БизнесПроцесс.Согласование.Форма.ФормаБизнесПроцесса");
	Новыйшаг.Параметры.Вставить("Параметры", ПараметрыФормы);
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	// Заполнение реквизитов процесса.
	ИдентификаторПроцесса = Новый УникальныйИдентификатор();
	
	Реквизиты = Новый Соответствие;
	Реквизиты.Вставить("Объект.Наименование*", СтрШаблон(НСтр("ru = 'Согласование %1'; en = 'Approval %1'"), Строка(ИдентификаторПроцесса)));
	Реквизиты.Вставить("Объект.ВариантСогласования", Перечисления.ВариантыМаршрутизацииЗадач.Последовательно);
	
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ЗаполнитьРеквизитыФормы";
	Новыйшаг.Параметры.Вставить("ИмяФормы", "БизнесПроцесс.Согласование.Форма.ФормаБизнесПроцесса");
	НовыйШаг.Параметры.Вставить("Реквизиты", Реквизиты);
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(30, 45);
	
	// Старт процесса.
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "СтартоватьПроцесс";
	Новыйшаг.Параметры.Вставить("ИмяПроцесса", "Согласование");
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	Возврат Сценарий;
	
КонецФункции

// Сценарий создания процесса Утверждение.
//
// Шаги сценария:
//  1. Открытие формы создания процесса (пауза 5с).
//  2. Заполнение реквизитов процесса в форме процесса (пауза от 30с до 45с).
//  3. Старт процесса.
//
Функция СозданиеПроцессаУтверждение() Экспорт
	
	Сценарий = Новый Массив;
	
	// Открытие формы создания процесса.
	Основание = Новый Структура;
	Основание.Вставить("Предметы", НагрузочноеТестированиеСервер.ПолучитьСлучайныйЭлементСправочника("ВнутренниеДокументы"));
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Основание", Основание);
	
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ОткрытьФорму";
	Новыйшаг.Параметры.Вставить("ИмяФормы", "БизнесПроцесс.Утверждение.Форма.ФормаБизнесПроцесса");
	Новыйшаг.Параметры.Вставить("Параметры", ПараметрыФормы);
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	// Заполнение реквизитов процесса.
	ИдентификаторПроцесса = Новый УникальныйИдентификатор();
	Исполнитель = НагрузочноеТестированиеСервер.ПолучитьСлучайныйЭлементСправочника("Пользователи");
	
	Реквизиты = Новый Соответствие;
	Реквизиты.Вставить("Объект.Наименование*", СтрШаблон(НСтр("ru = 'Утверждение %1'; en = 'Confirmation %1'"), Строка(ИдентификаторПроцесса)));
	Реквизиты.Вставить("Объект.Исполнитель", Исполнитель);
	
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ЗаполнитьРеквизитыФормы";
	Новыйшаг.Параметры.Вставить("ИмяФормы", "БизнесПроцесс.Утверждение.Форма.ФормаБизнесПроцесса");
	НовыйШаг.Параметры.Вставить("Реквизиты", Реквизиты);
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(30, 45);
	
	// Старт процесса.
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "СтартоватьПроцесс";
	Новыйшаг.Параметры.Вставить("ИмяПроцесса", "Утверждение");
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	Возврат Сценарий;
	
КонецФункции

// Сценарий выполнения задачи.
// Случайным образом выполняется один из сценариев:
//  - ВыполнениеЗадачиИсполнение
//  - ВыполнениеЗадачиОзнакомление
//  - ВыполнениеЗадачиПоручение
//  - ВыполнениеЗадачиПриглашение
//  - ВыполнениеЗадачиРассмотрение
//  - ВыполнениеЗадачиРегистрация
//  - ВыполнениеЗадачиСогласование
//  - ВыполнениеЗадачиУтверждение
//
Функция ВыполнениеЗадачи() Экспорт
	
	ГСЧ = Новый ГенераторСлучайныхЧисел;
	
	СлучайноеЧисло = ГСЧ.СлучайноеЧисло(1, 8);
	Если СлучайноеЧисло = 1 Тогда
		Сценарий = ВыполнениеЗадачиПроцессаИсполнение();
	ИначеЕсли СлучайноеЧисло = 2 Тогда
		Сценарий = ВыполнениеЗадачиПроцессаОзнакомление();
	ИначеЕсли СлучайноеЧисло = 3 Тогда
		Сценарий = ВыполнениеЗадачиПроцессаПоручение();
	ИначеЕсли СлучайноеЧисло = 4 Тогда
		Сценарий = ВыполнениеЗадачиПроцессаПриглашение();
	ИначеЕсли СлучайноеЧисло = 5 Тогда
		Сценарий = ВыполнениеЗадачиПроцессаРассмотрение();
	ИначеЕсли СлучайноеЧисло = 6 Тогда
		Сценарий = ВыполнениеЗадачиПроцессаРегистрация();
	ИначеЕсли СлучайноеЧисло = 7 Тогда
		Сценарий = ВыполнениеЗадачиПроцессаСогласование();
	Иначе
		Сценарий = ВыполнениеЗадачиПроцессаУтверждение();
	КонецЕсли;
	
	Возврат Сценарий;
	
КонецФункции

// Сценарий выполнения задачи Исполнение.
// Случайным образом выполняется один из сценариев:
//  - ВыполнениеЗадачиИсполнитьПроцессаИсполнение
//  - ВыполнениеЗадачиКонтролироватьПроцессаИсполнение
//  - ВыполнениеЗадачиОтветственноеИсполнениеПроцессаИсполнение
//  - ВыполнениеЗадачиПроверитьПроцессаИсполнение
//
Функция ВыполнениеЗадачиПроцессаИсполнение() Экспорт
	
	ГСЧ = Новый ГенераторСлучайныхЧисел;
	
	СлучайноеЧисло = ГСЧ.СлучайноеЧисло(1, 4);
	Если СлучайноеЧисло = 1 Тогда
		Сценарий = ВыполнениеЗадачиИсполнитьПроцессаИсполнение();
	ИначеЕсли СлучайноеЧисло = 2 Тогда
		Сценарий = ВыполнениеЗадачиКонтролироватьПроцессаИсполнение();
	ИначеЕсли СлучайноеЧисло = 3 Тогда
		Сценарий = ВыполнениеЗадачиОтветственноеИсполнениеПроцессаИсполнение();
	Иначе
		Сценарий = ВыполнениеЗадачиПроверитьПроцессаИсполнение();
	КонецЕсли;
	
	Возврат Сценарий;
	
КонецФункции

// Сценарий выполнения задачи Исполнить процесса Исполнение.
//
// Шаги сценария:
//  1. Открытие формы "Задачи мне", если она еще не открыта (пауза 5с).
//  2. Группировка задач по точке маршрута (пауза 5с).
//  3. Выбор точки маршрута (пауза 5с).
//  4. Принятие первой задачи в списке к исполнению (пауза 5с).
//  5. Заполнение результата выполнения задачи (пауза от 20с до 120с).
//  6. Выполнение команды (пауза 5с).
//
Функция ВыполнениеЗадачиИсполнитьПроцессаИсполнение() Экспорт
	
	Сценарий = Новый Массив;
	
	// Открытие формы задачи мне.
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ОткрытьФорму";
	Новыйшаг.Параметры.Вставить("ИмяФормы", "Задача.ЗадачаИсполнителя.Форма.ЗадачиМне");
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	// Выполнение команды СгруппироватьПоТочкеМаршрута в форме моих задач.
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ВыполнитьКомандуФормы";
	Новыйшаг.Параметры.Вставить("ИмяФормы", "Задача.ЗадачаИсполнителя.Форма.ЗадачиМне");
	Новыйшаг.Параметры.Вставить("ИмяКоманды", "СгруппироватьПоТочкеМаршрута");
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	// Выбор точки маршрута.
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ВыбратьТочкуМаршрута";
	Новыйшаг.Параметры.Вставить("ТочкаМаршрута", БизнесПроцессы.Исполнение.ТочкиМаршрута.Исполнить);
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	// Принимает задачу к исполнению.
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ПринятьПервуюЗадачуКИсполнению";
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	// Заполнение результата выполнения.
	Реквизиты = Новый Соответствие;
	Реквизиты.Вставить("РезультатВыполнения", "Выполнена");
	
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ЗаполнитьРеквизитыФормы";
	НовыйШаг.Параметры.Вставить("ИмяФормы", "Задача.ЗадачаИсполнителя.Форма.ЗадачиМне");
	НовыйШаг.Параметры.Вставить("Реквизиты", Реквизиты);
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(20, 120);
	
	// Выполнение команды.
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ВыполнитьКомандуФормы";
	Новыйшаг.Параметры.Вставить("ИмяФормы", "Задача.ЗадачаИсполнителя.Форма.ЗадачиМне");
	Новыйшаг.Параметры.Вставить("ИмяКоманды", "ЗадачаИсполнено");
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	Возврат Сценарий;
	
КонецФункции

// Сценарий выполнения задачи Контролировать процесса Исполнение.
//
// Шаги сценария:
//  1. Открытие формы "Задачи мне", если она еще не открыта (пауза 5с).
//  2. Группировка задач по точке маршрута (пауза 5с).
//  3. Выбор точки маршрута (пауза 5с).
//  4. Принятие первой задачи в списке к исполнению (пауза 5с).
//  5. Заполнение результата выполнения задачи (пауза от 20с до 120с).
//  6. Выполнение команды (пауза 5с).
//
Функция ВыполнениеЗадачиКонтролироватьПроцессаИсполнение() Экспорт
	
	Сценарий = Новый Массив;
	
	// Открытие формы задачи мне.
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ОткрытьФорму";
	Новыйшаг.Параметры.Вставить("ИмяФормы", "Задача.ЗадачаИсполнителя.Форма.ЗадачиМне");
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	// Выполнение команды СгруппироватьПоТочкеМаршрута в форме моих задач.
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ВыполнитьКомандуФормы";
	Новыйшаг.Параметры.Вставить("ИмяФормы", "Задача.ЗадачаИсполнителя.Форма.ЗадачиМне");
	Новыйшаг.Параметры.Вставить("ИмяКоманды", "СгруппироватьПоТочкеМаршрута");
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	// Выбор точки маршрута.
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ВыбратьТочкуМаршрута";
	Новыйшаг.Параметры.Вставить("ТочкаМаршрута", БизнесПроцессы.Исполнение.ТочкиМаршрута.Контролировать);
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	// Принимает задачу к исполнению.
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ПринятьПервуюЗадачуКИсполнению";
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	// Заполнение результата выполнения.
	Реквизиты = Новый Соответствие;
	Реквизиты.Вставить("РезультатВыполнения", "Выполнена");
	
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ЗаполнитьРеквизитыФормы";
	НовыйШаг.Параметры.Вставить("ИмяФормы", "Задача.ЗадачаИсполнителя.Форма.ЗадачиМне");
	НовыйШаг.Параметры.Вставить("Реквизиты", Реквизиты);
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(20, 120);
	
	// Выполнение команды.
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ВыполнитьКомандуФормы";
	Новыйшаг.Параметры.Вставить("ИмяФормы", "Задача.ЗадачаИсполнителя.Форма.ЗадачиМне");
	Новыйшаг.Параметры.Вставить("ИмяКоманды", "ЗадачаПроконтролировано");
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	Возврат Сценарий;
	
КонецФункции

// Сценарий выполнения задачи ОтветственноеИсполнение процесса Исполнение.
//
// Шаги сценария:
//  1. Открытие формы "Задачи мне", если она еще не открыта (пауза 5с).
//  2. Группировка задач по точке маршрута (пауза 5с).
//  3. Выбор точки маршрута (пауза 5с).
//  4. Принятие первой задачи в списке к исполнению (пауза 5с).
//  5. Заполнение результата выполнения задачи (пауза от 20с до 120с).
//  6. Выполнение команды (пауза 5с).
//
Функция ВыполнениеЗадачиОтветственноеИсполнениеПроцессаИсполнение() Экспорт
	
	Сценарий = Новый Массив;
	
	// Открытие формы задачи мне.
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ОткрытьФорму";
	Новыйшаг.Параметры.Вставить("ИмяФормы", "Задача.ЗадачаИсполнителя.Форма.ЗадачиМне");
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	// Выполнение команды СгруппироватьПоТочкеМаршрута в форме моих задач.
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ВыполнитьКомандуФормы";
	Новыйшаг.Параметры.Вставить("ИмяФормы", "Задача.ЗадачаИсполнителя.Форма.ЗадачиМне");
	Новыйшаг.Параметры.Вставить("ИмяКоманды", "СгруппироватьПоТочкеМаршрута");
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	// Выбор точки маршрута.
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ВыбратьТочкуМаршрута";
	Новыйшаг.Параметры.Вставить("ТочкаМаршрута", БизнесПроцессы.Исполнение.ТочкиМаршрута.ОтветственноеИсполнение);
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	// Принимает задачу к исполнению.
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ПринятьПервуюЗадачуКИсполнению";
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	// Заполнение результата выполнения.
	Реквизиты = Новый Соответствие;
	Реквизиты.Вставить("РезультатВыполнения", "Выполнена");
	
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ЗаполнитьРеквизитыФормы";
	НовыйШаг.Параметры.Вставить("ИмяФормы", "Задача.ЗадачаИсполнителя.Форма.ЗадачиМне");
	НовыйШаг.Параметры.Вставить("Реквизиты", Реквизиты);
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(20, 120);
	
	// Выполнение команды.
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ВыполнитьКомандуФормы";
	Новыйшаг.Параметры.Вставить("ИмяФормы", "Задача.ЗадачаИсполнителя.Форма.ЗадачиМне");
	Новыйшаг.Параметры.Вставить("ИмяКоманды", "ЗадачаИсполненоОтвИсполнитель");
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	Возврат Сценарий;
	
КонецФункции

// Сценарий выполнения задачи Проверить процесса Исполнение.
//
// Шаги сценария:
//  1. Открытие формы "Задачи мне", если она еще не открыта (пауза 5с).
//  2. Группировка задач по точке маршрута (пауза 5с).
//  3. Выбор точки маршрута (пауза 5с).
//  4. Принятие первой задачи в списке к исполнению (пауза 5с).
//  5. Заполнение результата выполнения задачи (пауза от 20с до 120с).
//  6. Выполнение команды (пауза 5с).
//
Функция ВыполнениеЗадачиПроверитьПроцессаИсполнение() Экспорт
	
	Сценарий = Новый Массив;
	
	// Открытие формы задачи мне.
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ОткрытьФорму";
	Новыйшаг.Параметры.Вставить("ИмяФормы", "Задача.ЗадачаИсполнителя.Форма.ЗадачиМне");
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	// Выполнение команды СгруппироватьПоТочкеМаршрута в форме моих задач.
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ВыполнитьКомандуФормы";
	Новыйшаг.Параметры.Вставить("ИмяФормы", "Задача.ЗадачаИсполнителя.Форма.ЗадачиМне");
	Новыйшаг.Параметры.Вставить("ИмяКоманды", "СгруппироватьПоТочкеМаршрута");
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	// Выбор точки маршрута.
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ВыбратьТочкуМаршрута";
	Новыйшаг.Параметры.Вставить("ТочкаМаршрута", БизнесПроцессы.Исполнение.ТочкиМаршрута.Проверить);
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	// Принимает задачу к исполнению.
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ПринятьПервуюЗадачуКИсполнению";
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	// Заполнение результата выполнения.
	Реквизиты = Новый Соответствие;
	Реквизиты.Вставить("РезультатВыполнения", "Выполнена");
	
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ЗаполнитьРеквизитыФормы";
	НовыйШаг.Параметры.Вставить("ИмяФормы", "Задача.ЗадачаИсполнителя.Форма.ЗадачиМне");
	НовыйШаг.Параметры.Вставить("Реквизиты", Реквизиты);
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(20, 120);
	
	// Выполнение команды.
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ВыполнитьКомандуФормы";
	Новыйшаг.Параметры.Вставить("ИмяФормы", "Задача.ЗадачаИсполнителя.Форма.ЗадачиМне");
	Новыйшаг.Параметры.Вставить("ИмяКоманды", "ЗадачаЗавершитьИсполнение");
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	Возврат Сценарий;
	
КонецФункции

// Сценарий выполнения задачи Ознакомление.
// Выполняется единственно возможный сценарий ВыполнениеЗадачиОзнакомитьсяПроцессаОзнакомление.
//
Функция ВыполнениеЗадачиПроцессаОзнакомление() Экспорт
	
	Сценарий = ВыполнениеЗадачиОзнакомитьсяПроцессаОзнакомление();
	Возврат Сценарий;
	
КонецФункции

// Сценарий выполнения задачи Ознакомиться процесса Ознакомление.
//
// Шаги сценария:
//  1. Открытие формы "Задачи мне", если она еще не открыта (пауза 5с).
//  2. Группировка задач по точке маршрута (пауза 5с).
//  3. Выбор точки маршрута (пауза 5с).
//  4. Принятие первой задачи в списке к исполнению (пауза 5с).
//  5. Заполнение результата выполнения задачи (пауза от 20с до 120с).
//  6. Выполнение команды (пауза 5с).
//
Функция ВыполнениеЗадачиОзнакомитьсяПроцессаОзнакомление() Экспорт
	
	Сценарий = Новый Массив;
	
	// Открытие формы задачи мне.
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ОткрытьФорму";
	Новыйшаг.Параметры.Вставить("ИмяФормы", "Задача.ЗадачаИсполнителя.Форма.ЗадачиМне");
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	// Выполнение команды СгруппироватьПоТочкеМаршрута в форме моих задач.
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ВыполнитьКомандуФормы";
	Новыйшаг.Параметры.Вставить("ИмяФормы", "Задача.ЗадачаИсполнителя.Форма.ЗадачиМне");
	Новыйшаг.Параметры.Вставить("ИмяКоманды", "СгруппироватьПоТочкеМаршрута");
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	// Выбор точки маршрута.
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ВыбратьТочкуМаршрута";
	Новыйшаг.Параметры.Вставить("ТочкаМаршрута", БизнесПроцессы.Ознакомление.ТочкиМаршрута.Ознакомиться);
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	// Принимает задачу к исполнению.
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ПринятьПервуюЗадачуКИсполнению";
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	// Заполнение результата выполнения.
	Реквизиты = Новый Соответствие;
	Реквизиты.Вставить("РезультатВыполнения", "Выполнена");
	
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ЗаполнитьРеквизитыФормы";
	НовыйШаг.Параметры.Вставить("ИмяФормы", "Задача.ЗадачаИсполнителя.Форма.ЗадачиМне");
	НовыйШаг.Параметры.Вставить("Реквизиты", Реквизиты);
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(20, 120);
	
	// Выполнение команды.
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ВыполнитьКомандуФормы";
	Новыйшаг.Параметры.Вставить("ИмяФормы", "Задача.ЗадачаИсполнителя.Форма.ЗадачиМне");
	Новыйшаг.Параметры.Вставить("ИмяКоманды", "ЗадачаОзнакомился");
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	Возврат Сценарий;
	
КонецФункции

// Сценарий выполнения задачи Поручение.
// Случайным образом выполняется один из сценариев:
//  - ВыполнениеЗадачиВыполнитьПроцессаПоручение
//  - ВыполнениеЗадачиКонтролироватьПроцессаПоручение
//  - ВыполнениеЗадачиПроверитьПроцессаПоручение
//
Функция ВыполнениеЗадачиПроцессаПоручение() Экспорт
	
	ГСЧ = Новый ГенераторСлучайныхЧисел;
	
	СлучайноеЧисло = ГСЧ.СлучайноеЧисло(1, 3);
	Если СлучайноеЧисло = 1 Тогда
		Сценарий = ВыполнениеЗадачиВыполнитьПроцессаПоручение();
	ИначеЕсли СлучайноеЧисло = 2 Тогда
		Сценарий = ВыполнениеЗадачиКонтролироватьПроцессаПоручение();
	Иначе
		Сценарий = ВыполнениеЗадачиПроверитьПроцессаПоручение();
	КонецЕсли;
	
	Возврат Сценарий;
	
КонецФункции

// Сценарий выполнения задачи Выполнить процесса Поручение.
//
// Шаги сценария:
//  1. Открытие формы "Задачи мне", если она еще не открыта (пауза 5с).
//  2. Группировка задач по точке маршрута (пауза 5с).
//  3. Выбор точки маршрута (пауза 5с).
//  4. Принятие первой задачи в списке к исполнению (пауза 5с).
//  5. Заполнение результата выполнения задачи (пауза от 20с до 120с).
//  6. Выполнение команды (пауза 5с).
//
Функция ВыполнениеЗадачиВыполнитьПроцессаПоручение() Экспорт
	
	Сценарий = Новый Массив;
	
	// Открытие формы задачи мне.
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ОткрытьФорму";
	Новыйшаг.Параметры.Вставить("ИмяФормы", "Задача.ЗадачаИсполнителя.Форма.ЗадачиМне");
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	// Выполнение команды СгруппироватьПоТочкеМаршрута в форме моих задач.
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ВыполнитьКомандуФормы";
	Новыйшаг.Параметры.Вставить("ИмяФормы", "Задача.ЗадачаИсполнителя.Форма.ЗадачиМне");
	Новыйшаг.Параметры.Вставить("ИмяКоманды", "СгруппироватьПоТочкеМаршрута");
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	// Выбор точки маршрута.
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ВыбратьТочкуМаршрута";
	Новыйшаг.Параметры.Вставить("ТочкаМаршрута", БизнесПроцессы.Поручение.ТочкиМаршрута.Выполнить);
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	// Принимает задачу к исполнению.
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ПринятьПервуюЗадачуКИсполнению";
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	// Заполнение результата выполнения.
	Реквизиты = Новый Соответствие;
	Реквизиты.Вставить("РезультатВыполнения", "Выполнена");
	
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ЗаполнитьРеквизитыФормы";
	НовыйШаг.Параметры.Вставить("ИмяФормы", "Задача.ЗадачаИсполнителя.Форма.ЗадачиМне");
	НовыйШаг.Параметры.Вставить("Реквизиты", Реквизиты);
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(20, 120);
	
	// Выполнение команды.
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ВыполнитьКомандуФормы";
	Новыйшаг.Параметры.Вставить("ИмяФормы", "Задача.ЗадачаИсполнителя.Форма.ЗадачиМне");
	Новыйшаг.Параметры.Вставить("ИмяКоманды", "ЗадачаПоручениеВыполнено");
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	Возврат Сценарий;
	
КонецФункции

// Сценарий выполнения задачи Контролировать процесса Поручение.
//
// Шаги сценария:
//  1. Открытие формы "Задачи мне", если она еще не открыта (пауза 5с).
//  2. Группировка задач по точке маршрута (пауза 5с).
//  3. Выбор точки маршрута (пауза 5с).
//  4. Принятие первой задачи в списке к исполнению (пауза 5с).
//  5. Заполнение результата выполнения задачи (пауза от 20с до 120с).
//  6. Выполнение команды (пауза 5с).
//
Функция ВыполнениеЗадачиКонтролироватьПроцессаПоручение() Экспорт
	
	Сценарий = Новый Массив;
	
	// Открытие формы задачи мне.
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ОткрытьФорму";
	Новыйшаг.Параметры.Вставить("ИмяФормы", "Задача.ЗадачаИсполнителя.Форма.ЗадачиМне");
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	// Выполнение команды СгруппироватьПоТочкеМаршрута в форме моих задач.
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ВыполнитьКомандуФормы";
	Новыйшаг.Параметры.Вставить("ИмяФормы", "Задача.ЗадачаИсполнителя.Форма.ЗадачиМне");
	Новыйшаг.Параметры.Вставить("ИмяКоманды", "СгруппироватьПоТочкеМаршрута");
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	// Выбор точки маршрута.
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ВыбратьТочкуМаршрута";
	Новыйшаг.Параметры.Вставить("ТочкаМаршрута", БизнесПроцессы.Поручение.ТочкиМаршрута.Контролировать);
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	// Принимает задачу к исполнению.
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ПринятьПервуюЗадачуКИсполнению";
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	// Заполнение результата выполнения.
	Реквизиты = Новый Соответствие;
	Реквизиты.Вставить("РезультатВыполнения", "Выполнена");
	
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ЗаполнитьРеквизитыФормы";
	НовыйШаг.Параметры.Вставить("ИмяФормы", "Задача.ЗадачаИсполнителя.Форма.ЗадачиМне");
	НовыйШаг.Параметры.Вставить("Реквизиты", Реквизиты);
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(20, 120);
	
	// Выполнение команды.
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ВыполнитьКомандуФормы";
	Новыйшаг.Параметры.Вставить("ИмяФормы", "Задача.ЗадачаИсполнителя.Форма.ЗадачиМне");
	Новыйшаг.Параметры.Вставить("ИмяКоманды", "ЗадачаПоручениеПроконтролировано");
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	Возврат Сценарий;
	
КонецФункции

// Сценарий выполнения задачи Проверить процесса Поручение.
//
// Шаги сценария:
//  1. Открытие формы "Задачи мне", если она еще не открыта (пауза 5с).
//  2. Группировка задач по точке маршрута (пауза 5с).
//  3. Выбор точки маршрута (пауза 5с).
//  4. Принятие первой задачи в списке к исполнению (пауза 5с).
//  5. Заполнение результата выполнения задачи (пауза от 20с до 120с).
//  6. Выполнение команды (пауза 5с).
//
Функция ВыполнениеЗадачиПроверитьПроцессаПоручение() Экспорт
	
	Сценарий = Новый Массив;
	
	// Открытие формы задачи мне.
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ОткрытьФорму";
	Новыйшаг.Параметры.Вставить("ИмяФормы", "Задача.ЗадачаИсполнителя.Форма.ЗадачиМне");
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	// Выполнение команды СгруппироватьПоТочкеМаршрута в форме моих задач.
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ВыполнитьКомандуФормы";
	Новыйшаг.Параметры.Вставить("ИмяФормы", "Задача.ЗадачаИсполнителя.Форма.ЗадачиМне");
	Новыйшаг.Параметры.Вставить("ИмяКоманды", "СгруппироватьПоТочкеМаршрута");
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	// Выбор точки маршрута.
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ВыбратьТочкуМаршрута";
	Новыйшаг.Параметры.Вставить("ТочкаМаршрута", БизнесПроцессы.Поручение.ТочкиМаршрута.Проверить);
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	// Принимает задачу к исполнению.
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ПринятьПервуюЗадачуКИсполнению";
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	// Заполнение результата выполнения.
	Реквизиты = Новый Соответствие;
	Реквизиты.Вставить("РезультатВыполнения", "Выполнена");
	
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ЗаполнитьРеквизитыФормы";
	НовыйШаг.Параметры.Вставить("ИмяФормы", "Задача.ЗадачаИсполнителя.Форма.ЗадачиМне");
	НовыйШаг.Параметры.Вставить("Реквизиты", Реквизиты);
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(20, 120);
	
	// Выполнение команды.
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ВыполнитьКомандуФормы";
	Новыйшаг.Параметры.Вставить("ИмяФормы", "Задача.ЗадачаИсполнителя.Форма.ЗадачиМне");
	Новыйшаг.Параметры.Вставить("ИмяКоманды", "ЗадачаЗавершитьПоручение");
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	Возврат Сценарий;
	
КонецФункции

// Сценарий выполнения задачи Приглашение.
// Случайным образом выполняется один из сценариев:
//  - ВыполнениеЗадачиПригласитьПроцессаПриглашение
//  - ВыполнениеЗадачиОзнакомитьсяПроцессаПриглашение
//  - ВыполнениеЗадачиОповеститьПроцессаПриглашение
//
Функция ВыполнениеЗадачиПроцессаПриглашение() Экспорт
	
	ГСЧ = Новый ГенераторСлучайныхЧисел;
	
	СлучайноеЧисло = ГСЧ.СлучайноеЧисло(1, 3);
	Если СлучайноеЧисло = 1 Тогда
		Сценарий = ВыполнениеЗадачиПригласитьПроцессаПриглашение();
	ИначеЕсли СлучайноеЧисло = 2 Тогда
		Сценарий = ВыполнениеЗадачиОзнакомитьсяПроцессаПриглашение();
	Иначе
		Сценарий = ВыполнениеЗадачиОповеститьПроцессаПриглашение();
	КонецЕсли;
	
	Возврат Сценарий;
	
КонецФункции

// Сценарий выполнения задачи Пригласить процесса Приглашение.
//
// Шаги сценария:
//  1. Открытие формы "Задачи мне", если она еще не открыта (пауза 5с).
//  2. Группировка задач по точке маршрута (пауза 5с).
//  3. Выбор точки маршрута (пауза 5с).
//  4. Принятие первой задачи в списке к исполнению (пауза 5с).
//  5. Заполнение результата выполнения задачи (пауза от 20с до 120с).
//  6. Выполнение команды (пауза 5с).
//
Функция ВыполнениеЗадачиПригласитьПроцессаПриглашение() Экспорт
	
	Сценарий = Новый Массив;
	
	// Открытие формы задачи мне.
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ОткрытьФорму";
	Новыйшаг.Параметры.Вставить("ИмяФормы", "Задача.ЗадачаИсполнителя.Форма.ЗадачиМне");
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	// Выполнение команды СгруппироватьПоТочкеМаршрута в форме моих задач.
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ВыполнитьКомандуФормы";
	Новыйшаг.Параметры.Вставить("ИмяФормы", "Задача.ЗадачаИсполнителя.Форма.ЗадачиМне");
	Новыйшаг.Параметры.Вставить("ИмяКоманды", "СгруппироватьПоТочкеМаршрута");
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	// Выбор точки маршрута.
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ВыбратьТочкуМаршрута";
	Новыйшаг.Параметры.Вставить("ТочкаМаршрута", БизнесПроцессы.Приглашение.ТочкиМаршрута.Пригласить);
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	// Принимает задачу к исполнению.
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ПринятьПервуюЗадачуКИсполнению";
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	// Заполнение результата выполнения.
	Реквизиты = Новый Соответствие;
	Реквизиты.Вставить("РезультатВыполнения", "Выполнена");
	
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ЗаполнитьРеквизитыФормы";
	НовыйШаг.Параметры.Вставить("ИмяФормы", "Задача.ЗадачаИсполнителя.Форма.ЗадачиМне");
	НовыйШаг.Параметры.Вставить("Реквизиты", Реквизиты);
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(20, 120);
	
	// Выполнение команды.
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ВыполнитьКомандуФормы";
	Новыйшаг.Параметры.Вставить("ИмяФормы", "Задача.ЗадачаИсполнителя.Форма.ЗадачиМне");
	Новыйшаг.Параметры.Вставить("ИмяКоманды", "ЗадачаПринято");
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	Возврат Сценарий;
	
КонецФункции

// Сценарий выполнения задачи Ознакомиться процесса Приглашение.
//
// Шаги сценария:
//  1. Открытие формы "Задачи мне", если она еще не открыта (пауза 5с).
//  2. Группировка задач по точке маршрута (пауза 5с).
//  3. Выбор точки маршрута (пауза 5с).
//  4. Принятие первой задачи в списке к исполнению (пауза 5с).
//  5. Заполнение результата выполнения задачи (пауза от 20с до 120с).
//  6. Выполнение команды (пауза 5с).
//
Функция ВыполнениеЗадачиОзнакомитьсяПроцессаПриглашение() Экспорт
	
	Сценарий = Новый Массив;
	
	// Открытие формы задачи мне.
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ОткрытьФорму";
	Новыйшаг.Параметры.Вставить("ИмяФормы", "Задача.ЗадачаИсполнителя.Форма.ЗадачиМне");
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	// Выполнение команды СгруппироватьПоТочкеМаршрута в форме моих задач.
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ВыполнитьКомандуФормы";
	Новыйшаг.Параметры.Вставить("ИмяФормы", "Задача.ЗадачаИсполнителя.Форма.ЗадачиМне");
	Новыйшаг.Параметры.Вставить("ИмяКоманды", "СгруппироватьПоТочкеМаршрута");
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	// Выбор точки маршрута.
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ВыбратьТочкуМаршрута";
	Новыйшаг.Параметры.Вставить("ТочкаМаршрута", БизнесПроцессы.Приглашение.ТочкиМаршрута.Ознакомиться);
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	// Принимает задачу к исполнению.
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ПринятьПервуюЗадачуКИсполнению";
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	// Заполнение результата выполнения.
	Реквизиты = Новый Соответствие;
	Реквизиты.Вставить("РезультатВыполнения", "Выполнена");
	
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ЗаполнитьРеквизитыФормы";
	НовыйШаг.Параметры.Вставить("ИмяФормы", "Задача.ЗадачаИсполнителя.Форма.ЗадачиМне");
	НовыйШаг.Параметры.Вставить("Реквизиты", Реквизиты);
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(20, 120);
	
	// Выполнение команды.
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ВыполнитьКомандуФормы";
	Новыйшаг.Параметры.Вставить("ИмяФормы", "Задача.ЗадачаИсполнителя.Форма.ЗадачиМне");
	Новыйшаг.Параметры.Вставить("ИмяКоманды", "ЗадачаПриглашениеПодтвердить");
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	Возврат Сценарий;
	
КонецФункции

// Сценарий выполнения задачи Оповестить процесса Приглашение.
//
// Шаги сценария:
//  1. Открытие формы "Задачи мне", если она еще не открыта (пауза 5с).
//  2. Группировка задач по точке маршрута (пауза 5с).
//  3. Выбор точки маршрута (пауза 5с).
//  4. Принятие первой задачи в списке к исполнению (пауза 5с).
//  5. Заполнение результата выполнения задачи (пауза от 20с до 120с).
//  6. Выполнение команды (пауза 5с).
//
Функция ВыполнениеЗадачиОповеститьПроцессаПриглашение() Экспорт
	
	Сценарий = Новый Массив;
	
	// Открытие формы задачи мне.
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ОткрытьФорму";
	Новыйшаг.Параметры.Вставить("ИмяФормы", "Задача.ЗадачаИсполнителя.Форма.ЗадачиМне");
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	// Выполнение команды СгруппироватьПоТочкеМаршрута в форме моих задач.
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ВыполнитьКомандуФормы";
	Новыйшаг.Параметры.Вставить("ИмяФормы", "Задача.ЗадачаИсполнителя.Форма.ЗадачиМне");
	Новыйшаг.Параметры.Вставить("ИмяКоманды", "СгруппироватьПоТочкеМаршрута");
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	// Выбор точки маршрута.
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ВыбратьТочкуМаршрута";
	Новыйшаг.Параметры.Вставить("ТочкаМаршрута", БизнесПроцессы.Приглашение.ТочкиМаршрута.Оповестить);
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	// Принимает задачу к исполнению.
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ПринятьПервуюЗадачуКИсполнению";
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	// Заполнение результата выполнения.
	Реквизиты = Новый Соответствие;
	Реквизиты.Вставить("РезультатВыполнения", "Выполнена");
	
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ЗаполнитьРеквизитыФормы";
	НовыйШаг.Параметры.Вставить("ИмяФормы", "Задача.ЗадачаИсполнителя.Форма.ЗадачиМне");
	НовыйШаг.Параметры.Вставить("Реквизиты", Реквизиты);
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(20, 120);
	
	// Выполнение команды.
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ВыполнитьКомандуФормы";
	Новыйшаг.Параметры.Вставить("ИмяФормы", "Задача.ЗадачаИсполнителя.Форма.ЗадачиМне");
	Новыйшаг.Параметры.Вставить("ИмяКоманды", "ЗадачаПриглашениеОзнакомился");
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	Возврат Сценарий;
	
КонецФункции

// Сценарий выполнения задачи Рассмотрение.
// Случайным образом выполняется один из сценариев:
//  - ВыполнениеЗадачиРассмотретьПроцессаРассмотрение
//  - ВыполнениеЗадачиОзнакомитьсяПроцессаРассмотрение
//
Функция ВыполнениеЗадачиПроцессаРассмотрение() Экспорт
	
	ГСЧ = Новый ГенераторСлучайныхЧисел;
	
	СлучайноеЧисло = ГСЧ.СлучайноеЧисло(1, 2);
	Если СлучайноеЧисло = 1 Тогда
		Сценарий = ВыполнениеЗадачиРассмотретьПроцессаРассмотрение();
	Иначе
		Сценарий = ВыполнениеЗадачиОзнакомитьсяПроцессаРассмотрение();
	КонецЕсли;
	
	Возврат Сценарий;
	
КонецФункции

// Сценарий выполнения задачи Рассмотреть процесса Рассмотрение.
//
// Шаги сценария:
//  1. Открытие формы "Задачи мне", если она еще не открыта (пауза 5с).
//  2. Группировка задач по точке маршрута (пауза 5с).
//  3. Выбор точки маршрута (пауза 5с).
//  4. Принятие первой задачи в списке к исполнению (пауза 5с).
//  5. Заполнение результата выполнения задачи (пауза от 20с до 120с).
//  6. Выполнение команды (пауза 5с).
//
Функция ВыполнениеЗадачиРассмотретьПроцессаРассмотрение() Экспорт
	
	Сценарий = Новый Массив;
	
	// Открытие формы задачи мне.
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ОткрытьФорму";
	Новыйшаг.Параметры.Вставить("ИмяФормы", "Задача.ЗадачаИсполнителя.Форма.ЗадачиМне");
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	// Выполнение команды СгруппироватьПоТочкеМаршрута в форме моих задач.
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ВыполнитьКомандуФормы";
	Новыйшаг.Параметры.Вставить("ИмяФормы", "Задача.ЗадачаИсполнителя.Форма.ЗадачиМне");
	Новыйшаг.Параметры.Вставить("ИмяКоманды", "СгруппироватьПоТочкеМаршрута");
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	// Выбор точки маршрута.
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ВыбратьТочкуМаршрута";
	Новыйшаг.Параметры.Вставить("ТочкаМаршрута", БизнесПроцессы.Рассмотрение.ТочкиМаршрута.Рассмотреть);
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	// Принимает задачу к исполнению.
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ПринятьПервуюЗадачуКИсполнению";
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	// Заполнение результата выполнения.
	Реквизиты = Новый Соответствие;
	Реквизиты.Вставить("РезультатВыполнения", "Выполнена");
	
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ЗаполнитьРеквизитыФормы";
	НовыйШаг.Параметры.Вставить("ИмяФормы", "Задача.ЗадачаИсполнителя.Форма.ЗадачиМне");
	НовыйШаг.Параметры.Вставить("Реквизиты", Реквизиты);
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(20, 120);
	
	// Выполнение команды.
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ВыполнитьКомандуФормы";
	Новыйшаг.Параметры.Вставить("ИмяФормы", "Задача.ЗадачаИсполнителя.Форма.ЗадачиМне");
	Новыйшаг.Параметры.Вставить("ИмяКоманды", "ЗадачаРассмотрено");
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	Возврат Сценарий;
	
КонецФункции

// Сценарий выполнения задачи Ознакомиться процесса Рассмотрение.
//
// Шаги сценария:
//  1. Открытие формы "Задачи мне", если она еще не открыта (пауза 5с).
//  2. Группировка задач по точке маршрута (пауза 5с).
//  3. Выбор точки маршрута (пауза 5с).
//  4. Принятие первой задачи в списке к исполнению (пауза 5с).
//  5. Заполнение результата выполнения задачи (пауза от 20с до 120с).
//  6. Выполнение команды (пауза 5с).
//
Функция ВыполнениеЗадачиОзнакомитьсяПроцессаРассмотрение() Экспорт
	
	Сценарий = Новый Массив;
	
	// Открытие формы задачи мне.
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ОткрытьФорму";
	Новыйшаг.Параметры.Вставить("ИмяФормы", "Задача.ЗадачаИсполнителя.Форма.ЗадачиМне");
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	// Выполнение команды СгруппироватьПоТочкеМаршрута в форме моих задач.
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ВыполнитьКомандуФормы";
	Новыйшаг.Параметры.Вставить("ИмяФормы", "Задача.ЗадачаИсполнителя.Форма.ЗадачиМне");
	Новыйшаг.Параметры.Вставить("ИмяКоманды", "СгруппироватьПоТочкеМаршрута");
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	// Выбор точки маршрута.
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ВыбратьТочкуМаршрута";
	Новыйшаг.Параметры.Вставить("ТочкаМаршрута", БизнесПроцессы.Рассмотрение.ТочкиМаршрута.Ознакомиться);
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	// Принимает задачу к исполнению.
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ПринятьПервуюЗадачуКИсполнению";
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	// Заполнение результата выполнения.
	Реквизиты = Новый Соответствие;
	Реквизиты.Вставить("РезультатВыполнения", "Выполнена");
	
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ЗаполнитьРеквизитыФормы";
	НовыйШаг.Параметры.Вставить("ИмяФормы", "Задача.ЗадачаИсполнителя.Форма.ЗадачиМне");
	НовыйШаг.Параметры.Вставить("Реквизиты", Реквизиты);
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(20, 120);
	
	// Выполнение команды.
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ВыполнитьКомандуФормы";
	Новыйшаг.Параметры.Вставить("ИмяФормы", "Задача.ЗадачаИсполнителя.Форма.ЗадачиМне");
	Новыйшаг.Параметры.Вставить("ИмяКоманды", "ЗадачаОбработано");
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	Возврат Сценарий;
	
КонецФункции

// Сценарий выполнения задачи Регистрация.
// Случайным образом выполняется один из сценариев:
//  - ВыполнениеЗадачиЗарегистрироватьПроцессаРегистрация
//  - ВыполнениеЗадачиОзнакомитьсяПроцессаРегистрация
//
Функция ВыполнениеЗадачиПроцессаРегистрация() Экспорт
	
	ГСЧ = Новый ГенераторСлучайныхЧисел;
	
	СлучайноеЧисло = ГСЧ.СлучайноеЧисло(1, 2);
	Если СлучайноеЧисло = 1 Тогда
		Сценарий = ВыполнениеЗадачиЗарегистрироватьПроцессаРегистрация();
	Иначе
		Сценарий = ВыполнениеЗадачиОзнакомитьсяПроцессаРегистрация();
	КонецЕсли;
	
	Возврат Сценарий;
	
КонецФункции

// Сценарий выполнения задачи Зарегистрировать процесса Регистрация.
//
// Шаги сценария:
//  1. Открытие формы "Задачи мне", если она еще не открыта (пауза 5с).
//  2. Группировка задач по точке маршрута (пауза 5с).
//  3. Выбор точки маршрута (пауза 5с).
//  4. Принятие первой задачи в списке к исполнению (пауза 5с).
//  5. Заполнение результата выполнения задачи (пауза от 20с до 120с).
//  6. Выполнение команды (пауза 5с).
//
Функция ВыполнениеЗадачиЗарегистрироватьПроцессаРегистрация() Экспорт
	
	Сценарий = Новый Массив;
	
	// Открытие формы задачи мне.
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ОткрытьФорму";
	Новыйшаг.Параметры.Вставить("ИмяФормы", "Задача.ЗадачаИсполнителя.Форма.ЗадачиМне");
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	// Выполнение команды СгруппироватьПоТочкеМаршрута в форме моих задач.
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ВыполнитьКомандуФормы";
	Новыйшаг.Параметры.Вставить("ИмяФормы", "Задача.ЗадачаИсполнителя.Форма.ЗадачиМне");
	Новыйшаг.Параметры.Вставить("ИмяКоманды", "СгруппироватьПоТочкеМаршрута");
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	// Выбор точки маршрута.
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ВыбратьТочкуМаршрута";
	Новыйшаг.Параметры.Вставить("ТочкаМаршрута", БизнесПроцессы.Регистрация.ТочкиМаршрута.Зарегистрировать);
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	// Принимает задачу к исполнению.
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ПринятьПервуюЗадачуКИсполнению";
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	// Заполнение результата выполнения.
	Реквизиты = Новый Соответствие;
	Реквизиты.Вставить("РезультатВыполнения", "Выполнена");
	
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ЗаполнитьРеквизитыФормы";
	НовыйШаг.Параметры.Вставить("ИмяФормы", "Задача.ЗадачаИсполнителя.Форма.ЗадачиМне");
	НовыйШаг.Параметры.Вставить("Реквизиты", Реквизиты);
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(20, 120);
	
	// Выполнение команды.
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ВыполнитьКомандуФормы";
	Новыйшаг.Параметры.Вставить("ИмяФормы", "Задача.ЗадачаИсполнителя.Форма.ЗадачиМне");
	Новыйшаг.Параметры.Вставить("ИмяКоманды", "ЗадачаЗарегистрировано");
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	Возврат Сценарий;
	
КонецФункции

// Сценарий выполнения задачи Ознакомиться процесса Регистрация.
//
// Шаги сценария:
//  1. Открытие формы "Задачи мне", если она еще не открыта (пауза 5с).
//  2. Группировка задач по точке маршрута (пауза 5с).
//  3. Выбор точки маршрута (пауза 5с).
//  4. Принятие первой задачи в списке к исполнению (пауза 5с).
//  5. Заполнение результата выполнения задачи (пауза от 20с до 120с).
//  6. Выполнение команды (пауза 5с).
//
Функция ВыполнениеЗадачиОзнакомитьсяПроцессаРегистрация() Экспорт
	
	Сценарий = Новый Массив;
	
	// Открытие формы задачи мне.
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ОткрытьФорму";
	Новыйшаг.Параметры.Вставить("ИмяФормы", "Задача.ЗадачаИсполнителя.Форма.ЗадачиМне");
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	// Выполнение команды СгруппироватьПоТочкеМаршрута в форме моих задач.
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ВыполнитьКомандуФормы";
	Новыйшаг.Параметры.Вставить("ИмяФормы", "Задача.ЗадачаИсполнителя.Форма.ЗадачиМне");
	Новыйшаг.Параметры.Вставить("ИмяКоманды", "СгруппироватьПоТочкеМаршрута");
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	// Выбор точки маршрута.
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ВыбратьТочкуМаршрута";
	Новыйшаг.Параметры.Вставить("ТочкаМаршрута", БизнесПроцессы.Регистрация.ТочкиМаршрута.Ознакомиться);
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	// Принимает задачу к исполнению.
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ПринятьПервуюЗадачуКИсполнению";
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	// Заполнение результата выполнения.
	Реквизиты = Новый Соответствие;
	Реквизиты.Вставить("РезультатВыполнения", "Выполнена");
	
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ЗаполнитьРеквизитыФормы";
	НовыйШаг.Параметры.Вставить("ИмяФормы", "Задача.ЗадачаИсполнителя.Форма.ЗадачиМне");
	НовыйШаг.Параметры.Вставить("Реквизиты", Реквизиты);
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(20, 120);
	
	// Выполнение команды.
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ВыполнитьКомандуФормы";
	Новыйшаг.Параметры.Вставить("ИмяФормы", "Задача.ЗадачаИсполнителя.Форма.ЗадачиМне");
	Новыйшаг.Параметры.Вставить("ИмяКоманды", "ЗадачаРегистрацияОзнакомился");
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	Возврат Сценарий;
	
КонецФункции

// Сценарий выполнения задачи Согласование.
// Случайным образом выполняется один из сценариев:
//  - ВыполнениеЗадачиСогласоватьПроцессаСогласование
//  - ВыполнениеЗадачиОзнакомитьсяПроцессаСогласование
//
Функция ВыполнениеЗадачиПроцессаСогласование() Экспорт
	
	ГСЧ = Новый ГенераторСлучайныхЧисел;
	
	СлучайноеЧисло = ГСЧ.СлучайноеЧисло(1, 2);
	Если СлучайноеЧисло = 1 Тогда
		Сценарий = ВыполнениеЗадачиСогласоватьПроцессаСогласование();
	Иначе
		Сценарий = ВыполнениеЗадачиОзнакомитьсяПроцессаСогласование();
	КонецЕсли;
	
	Возврат Сценарий;
	
КонецФункции

// Сценарий выполнения задачи Согласовать процесса Согласование.
//
// Шаги сценария:
//  1. Открытие формы "Задачи мне", если она еще не открыта (пауза 5с).
//  2. Группировка задач по точке маршрута (пауза 5с).
//  3. Выбор точки маршрута (пауза 5с).
//  4. Принятие первой задачи в списке к исполнению (пауза 5с).
//  5. Заполнение результата выполнения задачи (пауза от 20с до 120с).
//  6. Выполнение команды (пауза 5с).
//
Функция ВыполнениеЗадачиСогласоватьПроцессаСогласование() Экспорт
	
	Сценарий = Новый Массив;
	
	// Открытие формы задачи мне.
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ОткрытьФорму";
	Новыйшаг.Параметры.Вставить("ИмяФормы", "Задача.ЗадачаИсполнителя.Форма.ЗадачиМне");
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	// Выполнение команды СгруппироватьПоТочкеМаршрута в форме моих задач.
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ВыполнитьКомандуФормы";
	Новыйшаг.Параметры.Вставить("ИмяФормы", "Задача.ЗадачаИсполнителя.Форма.ЗадачиМне");
	Новыйшаг.Параметры.Вставить("ИмяКоманды", "СгруппироватьПоТочкеМаршрута");
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	// Выбор точки маршрута.
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ВыбратьТочкуМаршрута";
	Новыйшаг.Параметры.Вставить("ТочкаМаршрута", БизнесПроцессы.Согласование.ТочкиМаршрута.Согласовать);
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	// Принимает задачу к исполнению.
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ПринятьПервуюЗадачуКИсполнению";
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	// Заполнение результата выполнения.
	Реквизиты = Новый Соответствие;
	Реквизиты.Вставить("РезультатВыполнения", "Выполнена");
	
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ЗаполнитьРеквизитыФормы";
	НовыйШаг.Параметры.Вставить("ИмяФормы", "Задача.ЗадачаИсполнителя.Форма.ЗадачиМне");
	НовыйШаг.Параметры.Вставить("Реквизиты", Реквизиты);
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(20, 120);
	
	// Выполнение команды.
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ВыполнитьКомандуФормы";
	Новыйшаг.Параметры.Вставить("ИмяФормы", "Задача.ЗадачаИсполнителя.Форма.ЗадачиМне");
	Новыйшаг.Параметры.Вставить("ИмяКоманды", "ЗадачаСогласовано");
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	Возврат Сценарий;
	
КонецФункции

// Сценарий выполнения задачи Ознакомиться процесса Согласование.
//
// Шаги сценария:
//  1. Открытие формы "Задачи мне", если она еще не открыта (пауза 5с).
//  2. Группировка задач по точке маршрута (пауза 5с).
//  3. Выбор точки маршрута (пауза 5с).
//  4. Принятие первой задачи в списке к исполнению (пауза 5с).
//  5. Заполнение результата выполнения задачи (пауза от 20с до 120с).
//  6. Выполнение команды (пауза 5с).
//
Функция ВыполнениеЗадачиОзнакомитьсяПроцессаСогласование() Экспорт
	
	Сценарий = Новый Массив;
	
	// Открытие формы задачи мне.
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ОткрытьФорму";
	Новыйшаг.Параметры.Вставить("ИмяФормы", "Задача.ЗадачаИсполнителя.Форма.ЗадачиМне");
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	// Выполнение команды СгруппироватьПоТочкеМаршрута в форме моих задач.
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ВыполнитьКомандуФормы";
	Новыйшаг.Параметры.Вставить("ИмяФормы", "Задача.ЗадачаИсполнителя.Форма.ЗадачиМне");
	Новыйшаг.Параметры.Вставить("ИмяКоманды", "СгруппироватьПоТочкеМаршрута");
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	// Выбор точки маршрута.
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ВыбратьТочкуМаршрута";
	Новыйшаг.Параметры.Вставить("ТочкаМаршрута", БизнесПроцессы.Согласование.ТочкиМаршрута.Ознакомиться);
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	// Принимает задачу к исполнению.
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ПринятьПервуюЗадачуКИсполнению";
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	// Заполнение результата выполнения.
	Реквизиты = Новый Соответствие;
	Реквизиты.Вставить("РезультатВыполнения", "Выполнена");
	
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ЗаполнитьРеквизитыФормы";
	НовыйШаг.Параметры.Вставить("ИмяФормы", "Задача.ЗадачаИсполнителя.Форма.ЗадачиМне");
	НовыйШаг.Параметры.Вставить("Реквизиты", Реквизиты);
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(20, 120);
	
	// Выполнение команды.
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ВыполнитьКомандуФормы";
	Новыйшаг.Параметры.Вставить("ИмяФормы", "Задача.ЗадачаИсполнителя.Форма.ЗадачиМне");
	Новыйшаг.Параметры.Вставить("ИмяКоманды", "ЗадачаСогласованиеОзнакомился");
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	Возврат Сценарий;
	
КонецФункции

// Сценарий выполнения задачи Утверждение.
// Случайным образом выполняется один из сценариев:
//  - ВыполнениеЗадачиУтвердитьПроцессаУтверждение
//  - ВыполнениеЗадачиОзнакомитьсяПроцессаУтверждение
//
Функция ВыполнениеЗадачиПроцессаУтверждение() Экспорт
	
	ГСЧ = Новый ГенераторСлучайныхЧисел;
	
	СлучайноеЧисло = ГСЧ.СлучайноеЧисло(1, 2);
	Если СлучайноеЧисло = 1 Тогда
		Сценарий = ВыполнениеЗадачиУтвердитьПроцессаУтверждение();
	Иначе
		Сценарий = ВыполнениеЗадачиОзнакомитьсяПроцессаУтверждение();
	КонецЕсли;
	
	Возврат Сценарий;
	
КонецФункции

// Сценарий выполнения задачи Утвердить процесса Утверждение.
//
// Шаги сценария:
//  1. Открытие формы "Задачи мне", если она еще не открыта (пауза 5с).
//  2. Группировка задач по точке маршрута (пауза 5с).
//  3. Выбор точки маршрута (пауза 5с).
//  4. Принятие первой задачи в списке к исполнению (пауза 5с).
//  5. Заполнение результата выполнения задачи (пауза от 20с до 120с).
//  6. Выполнение команды (пауза 5с).
//
Функция ВыполнениеЗадачиУтвердитьПроцессаУтверждение() Экспорт
	
	Сценарий = Новый Массив;
	
	// Открытие формы задачи мне.
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ОткрытьФорму";
	Новыйшаг.Параметры.Вставить("ИмяФормы", "Задача.ЗадачаИсполнителя.Форма.ЗадачиМне");
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	// Выполнение команды СгруппироватьПоТочкеМаршрута в форме моих задач.
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ВыполнитьКомандуФормы";
	Новыйшаг.Параметры.Вставить("ИмяФормы", "Задача.ЗадачаИсполнителя.Форма.ЗадачиМне");
	Новыйшаг.Параметры.Вставить("ИмяКоманды", "СгруппироватьПоТочкеМаршрута");
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	// Выбор точки маршрута.
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ВыбратьТочкуМаршрута";
	Новыйшаг.Параметры.Вставить("ТочкаМаршрута", БизнесПроцессы.Утверждение.ТочкиМаршрута.Утвердить);
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	// Принимает задачу к исполнению.
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ПринятьПервуюЗадачуКИсполнению";
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	// Заполнение результата выполнения.
	Реквизиты = Новый Соответствие;
	Реквизиты.Вставить("РезультатВыполнения", "Выполнена");
	
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ЗаполнитьРеквизитыФормы";
	НовыйШаг.Параметры.Вставить("ИмяФормы", "Задача.ЗадачаИсполнителя.Форма.ЗадачиМне");
	НовыйШаг.Параметры.Вставить("Реквизиты", Реквизиты);
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(20, 120);
	
	// Выполнение команды.
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ВыполнитьКомандуФормы";
	Новыйшаг.Параметры.Вставить("ИмяФормы", "Задача.ЗадачаИсполнителя.Форма.ЗадачиМне");
	Новыйшаг.Параметры.Вставить("ИмяКоманды", "ЗадачаУтверждено");
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	Возврат Сценарий;
	
КонецФункции

// Сценарий выполнения задачи Ознакомиться процесса Утверждение.
//
// Шаги сценария:
//  1. Открытие формы "Задачи мне", если она еще не открыта (пауза 5с).
//  2. Группировка задач по точке маршрута (пауза 5с).
//  3. Выбор точки маршрута (пауза 5с).
//  4. Принятие первой задачи в списке к исполнению (пауза 5с).
//  5. Заполнение результата выполнения задачи (пауза от 20с до 120с).
//  6. Выполнение команды (пауза 5с).
//
Функция ВыполнениеЗадачиОзнакомитьсяПроцессаУтверждение() Экспорт
	
	Сценарий = Новый Массив;
	
	// Открытие формы задачи мне.
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ОткрытьФорму";
	Новыйшаг.Параметры.Вставить("ИмяФормы", "Задача.ЗадачаИсполнителя.Форма.ЗадачиМне");
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	// Выполнение команды СгруппироватьПоТочкеМаршрута в форме моих задач.
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ВыполнитьКомандуФормы";
	Новыйшаг.Параметры.Вставить("ИмяФормы", "Задача.ЗадачаИсполнителя.Форма.ЗадачиМне");
	Новыйшаг.Параметры.Вставить("ИмяКоманды", "СгруппироватьПоТочкеМаршрута");
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	// Выбор точки маршрута.
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ВыбратьТочкуМаршрута";
	Новыйшаг.Параметры.Вставить("ТочкаМаршрута", БизнесПроцессы.Утверждение.ТочкиМаршрута.Ознакомиться);
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	// Принимает задачу к исполнению.
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ПринятьПервуюЗадачуКИсполнению";
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	// Заполнение результата выполнения.
	Реквизиты = Новый Соответствие;
	Реквизиты.Вставить("РезультатВыполнения", "Выполнена");
	
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ЗаполнитьРеквизитыФормы";
	НовыйШаг.Параметры.Вставить("ИмяФормы", "Задача.ЗадачаИсполнителя.Форма.ЗадачиМне");
	НовыйШаг.Параметры.Вставить("Реквизиты", Реквизиты);
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(20, 120);
	
	// Выполнение команды.
	НовыйШаг = НагрузочноеТестированиеСервер.ДобавитьШагСценария(Сценарий);
	НовыйШаг.Действие = "ВыполнитьКомандуФормы";
	Новыйшаг.Параметры.Вставить("ИмяФормы", "Задача.ЗадачаИсполнителя.Форма.ЗадачиМне");
	Новыйшаг.Параметры.Вставить("ИмяКоманды", "ЗадачаУтверждениеОзнакомился");
	НовыйШаг.Пауза = НагрузочноеТестированиеСервер.ПолучитьДлительностьПаузы(5);
	
	Возврат Сценарий;
	
КонецФункции

#КонецОбласти
