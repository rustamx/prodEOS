////////////////////////////////////////////////////////////////////////////////
// Подсистема "Напоминания пользователя".
//
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныеПроцедурыИФункции

// Возвращает массив текстовых представлений стандартных интервалов времени.
Функция ПолучитьСтандартныеИнтервалыОповещения() Экспорт
	
	Результат = Новый Массив;
	
	ИнтервалыВремени = Новый Структура;
	ИнтервалыВремени.Вставить(НСтр("ru = '_5м'; en = '_5m'"));
	ИнтервалыВремени.Вставить(НСтр("ru = '_10м'; en = '_10m'"));
	ИнтервалыВремени.Вставить(НСтр("ru = '_15м'; en = '_15m'"));
	ИнтервалыВремени.Вставить(НСтр("ru = '_30м'; en = '_30m'"));
	ИнтервалыВремени.Вставить(НСтр("ru = '_1ч'; en = '_1h'"));
	ИнтервалыВремени.Вставить(НСтр("ru = '_2ч'; en = '_2h'"));
	ИнтервалыВремени.Вставить(НСтр("ru = '_4ч'; en = '_4h'"));
	ИнтервалыВремени.Вставить(НСтр("ru = '_8ч'; en = '_8h'"));
	ИнтервалыВремени.Вставить(НСтр("ru = '_1д'; en = '_1d'"));
	ИнтервалыВремени.Вставить(НСтр("ru = '_2д'; en = '_2d'"));
	ИнтервалыВремени.Вставить(НСтр("ru = '_3д'; en = '_3d'"));
	ИнтервалыВремени.Вставить(НСтр("ru = '_1н'; en = '_1w'"));
	ИнтервалыВремени.Вставить(НСтр("ru = '_2н'; en = '_2w'"));
	
	Для Каждого Интервал Из ИнтервалыВремени Цикл
    	Результат.Добавить(ОформитьВремя(Интервал.Ключ));
	КонецЦикла;
	
	НапоминанияПользователяКлиентСерверПереопределяемый.ПриПолученииСтандартныхИнтерваловОповещения(Результат);
	
	Возврат Результат;
	
КонецФункции

// Возвращает текстовое представление интервала времени, заданного в секундах.
//
// Параметры:
//
//  Время - Число - интервал времени в секундах.
//
//  ПолноеПредставление	- Булево - кратное или полное представление времени.
//		Например, интервал 1 000 000 секунд:
//		- полное представление:  11 дней 13 часов 46 минут 40 секунд;
//		- краткое представление: 11 дней 13 часов.
//
// Возвращаемое значение:
//   Строка - представление интервала времени.
//
Функция ПредставлениеВремени(Знач Время, ПолноеПредставление = Истина, ВыводитьСекунды = Истина) Экспорт
	Результат = "";
	
	// Представление единиц измерения времени в винительном падеже для количеств: 1, 2-4, 5-20.
	ПредставлениеНедель	= НСтр("ru = 'неделю'; en = 'week'")  + "," + НСтр("ru = 'недели'; en = 'weeks'")  + "," + НСтр("ru = 'недель'; en = 'weeks'");
	ПредставлениеДней	= НСтр("ru = 'день'; en = 'day'")    + "," + НСтр("ru = 'дня'; en = 'days'")     + "," + НСтр("ru = 'дней'; en = 'days'");
	ПредставлениеЧасов	= НСтр("ru = 'час'; en = 'hour'")     + "," + НСтр("ru = 'часа'; en = 'hours'")    + "," + НСтр("ru = 'часов'; en = 'hours'");
	ПредставлениеМинут	= НСтр("ru = 'минуту'; en = 'minute'")  + "," + НСтр("ru = 'минуты'; en = 'minutes'")  + "," + НСтр("ru = 'минут'; en = 'minutes'");
	ПредставлениеСекунд	= НСтр("ru = 'секунду'; en = 'second'") + "," + НСтр("ru = 'секунды'; en = 'seconds'") + "," + НСтр("ru = 'секунд'; en = 'seconds'");
	
	Время = Число(Время);
	
	Если Время < 0 Тогда
		Время = -Время;
	КонецЕсли;
	
	КоличествоНедель = Цел(Время / 60/60/24/7);
	КоличествоДней   = Цел(Время / 60/60/24);
	КоличествоЧасов  = Цел(Время / 60/60);
	КоличествоМинут  = Цел(Время / 60);
	КоличествоСекунд = Цел(Время);
	
	КоличествоСекунд = КоличествоСекунд - КоличествоМинут * 60;
	КоличествоМинут  = КоличествоМинут - КоличествоЧасов * 60;
	КоличествоЧасов  = КоличествоЧасов - КоличествоДней * 24;
	КоличествоДней   = КоличествоДней - КоличествоНедель * 7;
	
	Если Не ВыводитьСекунды Тогда
		КоличествоСекунд = 0;
	КонецЕсли;
	
	Если КоличествоНедель > 0 И КоличествоДней+КоличествоЧасов+КоличествоМинут+КоличествоСекунд=0 Тогда
		Результат = СтроковыеФункцииКлиентСервер.ЧислоЦифрамиПредметИсчисленияПрописью(КоличествоНедель, ПредставлениеНедель);
	Иначе
		КоличествоДней = КоличествоДней + КоличествоНедель * 7;
		
		Счетчик = 0;
		Если КоличествоДней > 0 Тогда
			Результат = Результат + СтроковыеФункцииКлиентСервер.ЧислоЦифрамиПредметИсчисленияПрописью(КоличествоДней, ПредставлениеДней) + " ";
			Счетчик = Счетчик + 1;
		КонецЕсли;
		
		Если КоличествоЧасов > 0 Тогда
			Результат = Результат + СтроковыеФункцииКлиентСервер.ЧислоЦифрамиПредметИсчисленияПрописью(КоличествоЧасов, ПредставлениеЧасов) + " ";
			Счетчик = Счетчик + 1;
		КонецЕсли;
		
		Если (ПолноеПредставление Или Счетчик < 2) И КоличествоМинут > 0 Тогда
			Результат = Результат + СтроковыеФункцииКлиентСервер.ЧислоЦифрамиПредметИсчисленияПрописью(КоличествоМинут, ПредставлениеМинут) + " ";
			Счетчик = Счетчик + 1;
		КонецЕсли;
		
		Если (ПолноеПредставление Или Счетчик < 2) И (КоличествоСекунд > 0 Или КоличествоНедель+КоличествоДней+КоличествоЧасов+КоличествоМинут = 0) Тогда
			Результат = Результат + СтроковыеФункцииКлиентСервер.ЧислоЦифрамиПредметИсчисленияПрописью(КоличествоСекунд, ПредставлениеСекунд);
		КонецЕсли;
		
	КонецЕсли;
			  
	Возврат СокрП(Результат);
	
КонецФункции

// Получает из текстового описания интервал времени в секундах.
//
// Параметры:
//  СтрокаСоВременем - Строка - текстовое описание времени, где числа записаны цифрами,
//								а единицы измерения - строкой. 
//
// Возвращаемое значение
//  Число - интервал времени в секундах.
Функция ПолучитьИнтервалВремениИзСтроки(Знач СтрокаСоВременем) Экспорт
	
	Результат = 0;
	Если Не ПустаяСтрока(СтрокаСоВременем) Тогда
		СтрокаСоВременем = НРег(СтрокаСоВременем);
		
		СтрокаСоВременем = СтрЗаменить(СтрокаСоВременем, Символы.НПП," ");
		СтрокаСоВременем = СтрЗаменить(СтрокаСоВременем, ".",",");
		СтрокаСоВременем = СтрЗаменить(СтрокаСоВременем, "+","");
		
		ПодстрокаСЦифрами = "";
		ПодстрокаСБуквами = "";
		СтрокаДляВычисления = "0";
		
		ПредыдущийСимволЭтоЦифра = Ложь;
		ЕстьДробнаяЧасть = Ложь;
		ЕстьЕдиницаИзмерения = Ложь;
		
		Для Позиция = 1 По СтрДлина(СтрокаСоВременем) Цикл
			ТекущийКодСимвола = КодСимвола(СтрокаСоВременем,Позиция);
			Символ = Сред(СтрокаСоВременем,Позиция,1);
			Если (ТекущийКодСимвола >= КодСимвола("0") И ТекущийКодСимвола <= КодСимвола("9"))
				ИЛИ (Символ="," И ПредыдущийСимволЭтоЦифра И Не ЕстьДробнаяЧасть) Тогда
				Если Не ПустаяСтрока(ПодстрокаСБуквами) Тогда
					СтрокаДляВычисления = СтрокаДляВычисления 
										+ "+"
										+ ?(ПустаяСтрока(ПодстрокаСЦифрами),"1",ПодстрокаСЦифрами)
										+ "*"
										+ ЗаменитьЕдиницуИзмеренияНаМножитель(ПодстрокаСБуквами);
					ПодстрокаСЦифрами = "";
					ПодстрокаСБуквами = "";
					
					ПредыдущийСимволЭтоЦифра = Ложь;
					ЕстьДробнаяЧасть = Ложь;
					ЕстьЕдиницаИзмерения = Ложь;
				КонецЕсли;
				
				ПодстрокаСЦифрами = ПодстрокаСЦифрами + Сред(СтрокаСоВременем,Позиция,1);
				
				ПредыдущийСимволЭтоЦифра = Истина;
				Если Символ = "," Тогда
					ЕстьДробнаяЧасть = Истина;
				КонецЕсли;
			Иначе
				Если Символ = " " И ЗаменитьЕдиницуИзмеренияНаМножитель(ПодстрокаСБуквами)="0" Тогда
					ПодстрокаСБуквами = "";
				КонецЕсли;
				
				ПодстрокаСБуквами = ПодстрокаСБуквами + Сред(СтрокаСоВременем,Позиция,1);
				ПредыдущийСимволЭтоЦифра = Ложь;
			КонецЕсли;
		КонецЦикла;
		
		Если Не ПустаяСтрока(ПодстрокаСБуквами) Тогда
				СтрокаДляВычисления = СтрокаДляВычисления 
									+ "+"
									+ ?(ПустаяСтрока(ПодстрокаСЦифрами),"1",ПодстрокаСЦифрами)
									+ "*"
									+ ЗаменитьЕдиницуИзмеренияНаМножитель(ПодстрокаСБуквами);
		КонецЕсли;

		СтрокаДляВычисления = СтрЗаменить(СтрокаДляВычисления,",",".");
		Результат = Вычислить(СтрокаДляВычисления);
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

// Анализирует слово на предмет соответствия единице времени и, если соответствие установлено,
// возвращает количество секунд, содержащееся в единице времени.
//
// Параметры:
//  Единица - Строка - анализируемое слово.
//
// Возвращаемое значение
//  Число - количество секунд в Единице. Если единица не определена или пустая, то возвращается 0.
Функция ЗаменитьЕдиницуИзмеренияНаМножитель(Знач Единица)
	
	Результат = 0;
	
	Единица = СтрЗаменить(Единица, " ","");
	Единица = СтрЗаменить(Единица, ",","");
	Единица = СтрЗаменить(Единица, ".","");
	
	// Единицу измерения времени будем определять по первым трем символам.
	ПервыеТриСимвола = Лев(Единица,3);
	Если ПервыеТриСимвола = НСтр("ru = 'нед'; en = 'wee'") Или ПервыеТриСимвола = НСтр("ru = 'н'; en = 'w'") Тогда
		Результат = 60*60*24*7;
	ИначеЕсли ПервыеТриСимвола = НСтр("ru = 'ден'; en = 'day'") 
		  Или ПервыеТриСимвола = НСтр("ru = 'дне'; en = 'day'")
		  Или ПервыеТриСимвола = НСтр("ru = 'дня'; en = 'day'")
		  Или ПервыеТриСимвола = НСтр("ru = 'дн'; en = 'day'")
		  Или ПервыеТриСимвола = НСтр("ru = 'д'; en = 'd'") Тогда
		Результат = 60*60*24;
	ИначеЕсли ПервыеТриСимвола = НСтр("ru = 'час'; en = 'hou'") Или ПервыеТриСимвола = НСтр("ru = 'ч'; en = 'h'") Тогда
		Результат = 60*60;
	ИначеЕсли ПервыеТриСимвола = НСтр("ru = 'мин'; en = 'min'") Или ПервыеТриСимвола = НСтр("ru = 'м'; en = 'm'") Тогда
		Результат = 60;
	ИначеЕсли ПервыеТриСимвола = НСтр("ru = 'сек'; en = 'sec'") Или ПервыеТриСимвола = НСтр("ru = 'с'; en = 's'") Тогда
		Результат = 1;
	КонецЕсли;
	
	Возврат Формат(Результат,"ЧН=0; ЧГ=0");
	
КонецФункции

// Получает из строки интервал времени и возвращает его текстовое представление.
//
// Параметры:
//  ВремяСтрокой - Строка - текстовое описание времени, где числа записаны цифрами,
//							а единицы измерения - строкой.
//
// Возвращаемое значение
//  Строка - оформленное представление времени.
Функция ОформитьВремя(ВремяСтрокой) Экспорт
	Возврат ПредставлениеВремени(ПолучитьИнтервалВремениИзСтроки(ВремяСтрокой));
КонецФункции

// Возвращает структуру напоминания с заполненными значениями.
//
// Параметры:
//  ДанныеДляЗаполнения - Структура - значения для заполнения параметров напоминания.
//  ВсеРеквизиты - Булево - если истина, то возвращает также реквизиты, связанные с настройкой
//                          времени напоминания.
Функция ПолучитьСтруктуруНапоминания(ДанныеДляЗаполнения = Неопределено, ВсеРеквизиты = Ложь) Экспорт
	Результат = Новый Структура("Пользователь,ВремяСобытия,Источник,СрокНапоминания,Описание");
	Если ВсеРеквизиты Тогда 
		Результат.Вставить("СпособУстановкиВремениНапоминания");
		Результат.Вставить("ИнтервалВремениНапоминания");
		Результат.Вставить("ИмяРеквизитаИсточника");
		Результат.Вставить("Расписание");
		Результат.Вставить("ИндексКартинки", 2);
	КонецЕсли;
	Если ДанныеДляЗаполнения <> Неопределено Тогда
		ЗаполнитьЗначенияСвойств(Результат, ДанныеДляЗаполнения);
	КонецЕсли;
	Возврат Результат;
КонецФункции

// Возвращает текстовое представление интервала времени, заданного в секундах
//
// Параметры
//
//  Время - Число - интервал времени в минутах.
//
// Возвращаемое значение:
//   Строка - представление интервала времени.
//
Функция ПредставлениеВремениДокументооборот(Время) Экспорт
	
	Если Время = 0 Тогда
		Возврат НСтр("ru = 'при наступлении события'; en = 'at the time of the event'");
	Иначе
		ПредставлениеВремени = НапоминанияПользователяКлиентСервер.ПредставлениеВремени(Время);
		ПредставлениеПредлога = НСтр("ru = 'за'; en = 'before'");
		Возврат СтрШаблон(НСтр("ru = '%1 %2'; en = '%2 %1'"), ПредставлениеПредлога, ПредставлениеВремени);
	КонецЕсли;
	
КонецФункции

#КонецОбласти
