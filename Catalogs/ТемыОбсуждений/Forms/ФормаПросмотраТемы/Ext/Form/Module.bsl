#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Список.Параметры.УстановитьЗначениеПараметра("Пользователь", Пользователи.ТекущийПользователь());
	
	// Задание отображаемой темы
	Если Параметры.Свойство("Тема") Тогда
		ЗадатьТему(Параметры.Тема);
	ИначеЕсли Параметры.Свойство("Ключ") И ЗначениеЗаполнено(Параметры.Ключ) Тогда
		ЗадатьТему(Параметры.Ключ);
	Иначе
		Список.Параметры.УстановитьЗначениеПараметра("Тема", "");
	КонецЕсли;
	
	// Вариант открытия формы - из формы предмета
	ОткрытиеПоДокументу = Ложь;
	Если Параметры.Свойство("Документ") Тогда
		ОткрытиеПоДокументу = Истина;
		Предмет = Параметры.Документ;
		ЗадатьТему(РаботаСОбсуждениями.НайтиТемуПоПредмету(Параметры.Документ));
	КонецЕсли;
	
	// Вариант открытия формы - по теме
	Если Не ЗначениеЗаполнено(Предмет) И ЗначениеЗаполнено(Тема) Тогда
		Предмет = Тема.Документ;
	КонецЕсли;
	
	// Видимость предмета
	Элементы.Предмет.Видимость = ЗначениеЗаполнено(Предмет) И Не ОткрытиеПоДокументу;
	ПредметСтрокой = РаботаСОбсуждениями.ПолучитьПредставлениеПредмета(Предмет);
	
	// Настройка автоматического прочтения
	ТекущееСообщениеПрочтено = Истина;
	ИспользоватьАвтоматическоеПрочтение =
		ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
			"НастройкиПрочтения",
			"ПомечатьСообщенияФорумаКакПрочтенныеПриПрочтенныеПриПросмотреВОбластиЧтения",
			Ложь);
	
	// Шрифт области чтения
	ШрифтОбластиЧтения = РаботаСОбсуждениями.ПолучитьПерсональнуюНастройку("ШрифтОбластиЧтения");
	УстановитьШрифтОбластиЧтения(Ложь);
	
	// Текущее сообщение
	Если Параметры.Свойство("ТекущееСообщение") Тогда
		ТекущееСообщение = Параметры.ТекущееСообщение;
	Иначе
		ТекущееСообщение = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
			Тема.УникальныйИдентификатор(), 
			"ТекущееСообщение", 
			"");
	КонецЕсли;
	
	// Вид просмотра
	ПереключитьВидПросмотра(Ложь);
	
	// Отображение удаленных
	ПереключитьОтображатьУдаленные(Ложь);
	
	// Отображение области чтения
	ОбновитьОтображениеОбластиЧтенияСервер(Ложь);
	
	// Автообновление
	Если ОбщегоНазначенияДокументооборот.ПриложениеЯвляетсяВебКлиентом() Тогда
		Элементы.СписокКонтекстноеМенюНастроитьАвтообновлениеСпискаСообщений.Видимость = Ложь;
	Иначе
		Автообновление.ЗагрузитьНастройкиАвтообновленияСписка(ЭтаФорма, "Список");
		Элементы.СписокКонтекстноеМенюНастроитьАвтообновлениеСпискаСообщений.Видимость = Истина;
	КонецЕсли;
	
	// Обновление данных отображения
	ОбновитьСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// Текущее сообщение
	УстановитьТекущуюСтроку(ТекущееСообщение);
	
	// Доступность команд
	УстановитьДоступностьКоманд();
	
	// Вид просмотра
	УстановитьСтраницуПредпросмотра();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	Если ОбщегоНазначенияДокументооборотКлиент.ПриЗакрытии(ЗавершениеРаботы) Тогда
		Возврат;
	КонецЕсли;
	
	ПрочтениеУстановлено = ПриЗакрытииНаСервере();
	РаботаСПрочтениямиКлиент.ОповеститьОПрочтении(ТекущееСообщение, ПрочтениеУстановлено);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если РаботаСПрочтениямиКлиент.ПроверитьНеобходимостьОбновления(
			ИмяСобытия, Параметр, "Обсуждения") Тогда
		Если Не РаботаСОбсуждениямиКлиент.ОбновитьПрочтенностьЭлементовДерева(
				Элементы.ДеревоСообщений,
				ДеревоСообщений,
				РежимОтображенияСообщенийДеревом,
				Параметр) Тогда
			Элементы.Список.Обновить();
		КонецЕсли;
	КонецЕсли;
	
	Если ИмяСобытия = "Изменение_ТемыОбсуждений" Тогда
		ОбновитьКлиент();
	КонецЕсли;
	
	Если ИмяСобытия = "Изменение_СообщенияОбсуждений" Тогда
		ТекущееСообщение = Параметр;
		ОбновитьКлиент();
	КонецЕсли;
	
	Если ИмяСобытия = "СозданаТемаПоПредмету" Тогда
		Если Параметр.Свойство("Тема") И Параметр.Свойство("Предмет") И Параметр.Предмет = Предмет Тогда
			ЗадатьТему(Параметр.Тема);
		КонецЕсли;
	КонецЕсли;
	
	Если ИмяСобытия = "ВыбраноСообщениеДляПросмотра" Тогда
		Если Параметр.Свойство("Тема") И Параметр.Тема = Тема Тогда
			УстановитьТекущуюСтроку(Параметр.Сообщение);
		КонецЕсли;
	КонецЕсли;
	
	Если ИмяСобытия = "Запись_Файл" И Параметр.Событие = "СозданФайл" Тогда
		Если Параметр.Свойство("Владелец") Тогда
			Если Элементы.Список.ТекущаяСтрока = Параметр.Владелец Тогда
				ОбновитьКлиент();
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если ИмяСобытия = "ВыполненоГолосование" И Параметр = ТекущееСообщение Тогда
		ОбновитьГолосованиеСервер();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаЗаписиНового(НовыйОбъект, Источник, СтандартнаяОбработка)
	
	Если ТипЗнч(НовыйОбъект) = Тип("СправочникСсылка.СообщенияОбсуждений") Тогда
		УстановитьТекущуюСтроку(НовыйОбъект);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	ТребуетсяОбновитьОтображение = Ложь;
	
	// Вид просмотра
	Если ВидПросмотра <> ПредопределенноеЗначение("Перечисление.ВидыПросмотраСпискаОбъектов.Списком") Тогда
		ТребуетсяОбновитьОтображение = Истина;
		ПереключитьВидПросмотра(Ложь);
	КонецЕсли;
	
	// Отображение удаленных
	Если ОтображатьУдаленные Тогда
		ТребуетсяОбновитьОтображение = Истина;
		ПереключитьОтображатьУдаленные(Ложь);
	КонецЕсли;
	
	// Отображать только непрочтенные
	Если ТолькоНепрочтенные Тогда
		ТребуетсяОбновитьОтображение = Истина;
		ПереключитьТолькоНепрочтенные();
	КонецЕсли;
	
	// Отображение области чтения
	Если ОтображениеОбластиЧтения <> ПредопределенноеЗначение("Перечисление.ВариантыОтображенияОбластиЧтения.НеОтображать") Тогда
		ТребуетсяОбновитьОтображение = Истина;
		ОбновитьОтображениеОбластиЧтенияСервер(Ложь);
	КонецЕсли;
	
	// Обновление данных отображения
	Если ТребуетсяОбновитьОтображение Тогда
		ОбновитьСервер();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ГолосованиеПриИзменении(Элемент)
	
	Элементы.Проголосовать.Доступность = ЗначениеЗаполнено(Голосование) И Не ЗакрытаяТема;
	Элементы.ПроголосоватьСФайлами.Доступность = ЗначениеЗаполнено(Голосование) И Не ЗакрытаяТема;
	
КонецПроцедуры

&НаКлиенте
Процедура ТекущееСообщениеТекстОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ТекущееСообщениеТекстСФайламиОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ТекущееСообщениеТекстСГолосованиемОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ТекущееСообщениеТекстСФайламиИГолосованиемОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ПредметНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПоказатьЗначение(, Предмет);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыВложения

&НаКлиенте
Процедура ВложенияСообщенияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если Элемент.ТекущиеДанные <> Неопределено Тогда
		ВстроеннаяПочтаКлиент.ОткрытьВложение(Элемент.ТекущиеДанные.Ссылка, УникальныйИдентификатор);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВложенияСообщенияПриАктивизацииСтроки(Элемент)
	
	УстановитьДоступностьКомандРаботыСВложением();
	
КонецПроцедуры

&НаКлиенте
Процедура ВложенияСообщенияНачалоПеретаскивания(Элемент, ПараметрыПеретаскивания, Выполнение)
	
	Если Элементы.ВложенияСообщения.ВыделенныеСтроки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	МассивФайлов = Новый Массив;
	Для каждого ВыделеннаяСтрока Из Элементы.ВложенияСообщения.ВыделенныеСтроки Цикл
		ДанныеСтроки = ВложенияСообщения.НайтиПоИдентификатору(ВыделеннаяСтрока);
		МассивФайлов.Добавить(ДанныеСтроки.Ссылка);
	КонецЦикла;
	Если МассивФайлов.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыПеретаскивания.Значение = МассивФайлов;

КонецПроцедуры

&НаКлиенте
Процедура ВложенияСообщенияПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ВложенияСообщенияПередНачаломИзменения(Элемент, Отказ)

	Отказ = Истина;
	
	Если Элемент.ТекущиеДанные <> Неопределено Тогда
		ПоказатьЗначение(, Элементы.ВложенияСообщения.ТекущиеДанные.Ссылка);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВложенияСообщенияПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ТекущиеДанные.ПометкаУдаления Тогда
		ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Пометить ""%1"" на удаление?'; en = 'Mark ""%1"" for deletion?'"),
			ТекущиеДанные.Представление);
	Иначе
		ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Снять с ""%1"" пометку на удаление?'; en = 'Remove deletion mark from ""%1"" ?'"),
			ТекущиеДанные.Представление);
		КонецЕсли;
	
	ПараметрыОбработчика = Новый Структура;
	ПараметрыОбработчика.Вставить("Вложение", ТекущиеДанные.Ссылка);
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"ВложенияСообщенияПередУдалениемЗавершение", ЭтотОбъект, ПараметрыОбработчика);
	
	ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры

&НаКлиенте
Процедура ВложенияСообщенияПередУдалениемЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	ВложениеСообщенияПометитьНаУдалениеСервер(ДополнительныеПараметры.Вложение);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя = "Родитель" Тогда
		
		СтандартнаяОбработка = Ложь;
		Элементы.Список.ТекущаяСтрока = Элементы.Список.ТекущиеДанные.Родитель;
		
	ИначеЕсли Поле.Имя = "КартинкаОтветить" Или Поле.Имя = "ГиперссылкаОтветить" Тогда
		
		СтандартнаяОбработка = Ложь;
		
		ОтветитьНаСообщение();
		
	ИначеЕсли Поле.Имя = "КартинкаФайлы" Или Поле.Имя = "ГиперссылкаФайлы" Тогда
		
		СтандартнаяОбработка = Ложь;
		
		ПараметрыФормы = Новый Структура("Ключ, ДействиеПриОткрытии", ВыбраннаяСтрока, "ОткрытьФайлы");
		ОткрытьФорму("Справочник.СообщенияОбсуждений.Форма.ФормаЭлемента", 
			ПараметрыФормы,
			ЭтаФорма);
		
	ИначеЕсли Поле.Имя = "КартинкаГолосование" Или Поле.Имя = "ГиперссылкаГолосование" Тогда
		
		СтандартнаяОбработка = Ложь;
		
		ПараметрыФормы =
			Новый Структура("Ключ, ДействиеПриОткрытии", ВыбраннаяСтрока, "ОткрытьГолосование");
		ОткрытьФорму("Справочник.СообщенияОбсуждений.Форма.ФормаЭлемента", 
			ПараметрыФормы,
			ЭтаФорма);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	Если Элементы.Список.ТекущаяСтрока <> Неопределено Тогда
		ПодключитьОбработчикОжидания("ОбработкаОжиданияПрочтения", 0.2, Истина);
	Иначе
		ОчиститьТекущееСообщение();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	
	ОтветитьНаСообщение();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыДеревоСообщений

&НаКлиенте
Процедура ДеревоСообщенийВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя = "ДеревоГиперссылкаОтветить" Тогда
		
		СтандартнаяОбработка = Ложь;
		
		ОтветитьНаСообщение();
		
	ИначеЕсли Поле.Имя = "ДеревоКартинкаФайлы" Или Поле.Имя = "ДеревоГиперссылкаФайлы" Тогда
		
		СтандартнаяОбработка = Ложь;
		
		Сообщение = ПолучитьТекущееСообщение(Истина);
		Если Сообщение = Неопределено Тогда
			Возврат;
		КонецЕсли;
		ПараметрыФормы = Новый Структура("Ключ, ДействиеПриОткрытии", Сообщение, "ОткрытьФайлы");
		ОткрытьФорму("Справочник.СообщенияОбсуждений.Форма.ФормаЭлемента", 
			ПараметрыФормы,
			ЭтаФорма);
		
	ИначеЕсли Поле.Имя = "ДеревоКартинкаГолосование" Или Поле.Имя = "ДеревоГиперссылкаГолосование" Тогда
		
		СтандартнаяОбработка = Ложь;
		
		Сообщение = ПолучитьТекущееСообщение(Истина);
		Если Сообщение = Неопределено Тогда
			Возврат;
		КонецЕсли;
		ПараметрыФормы = Новый Структура("Ключ, ДействиеПриОткрытии", Сообщение, "ОткрытьГолосование");
		ОткрытьФорму("Справочник.СообщенияОбсуждений.Форма.ФормаЭлемента", 
			ПараметрыФормы,
			ЭтаФорма);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоСообщенийПриАктивизацииСтроки(Элемент)
	
	Если Элементы.ДеревоСообщений.ТекущаяСтрока <> Неопределено Тогда
		ПодключитьОбработчикОжидания("ОбработкаОжиданияПрочтения", 0.2, Истина);
	Иначе
		ОчиститьТекущееСообщение();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоСообщенийПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Отказ = Истина;
	
	ОтветитьНаСообщение();
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоСообщенийПередНачаломИзменения(Элемент, Отказ)
	
	Отказ = Истина;
	Если Элемент.ТекущаяСтрока <> Неопределено Тогда
		ПоказатьЗначение(, Элемент.ТекущиеДанные.Ссылка);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоСообщенийПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	
	Сообщения = ПолучитьВыбранныеСообщения(Истина);
	Если Сообщения.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если Сообщения.Количество() = 1 Тогда
		
		ПометкаУдаления = Не Элементы.ДеревоСообщений.ТекущиеДанные.ПометкаУдаления;
		Если ПометкаУдаления Тогда 
			ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Пометить ""%1"" на удаление?'; en = 'Mark ""%1"" for deletion?'"),
				Строка(Элементы.ДеревоСообщений.ТекущиеДанные.Ссылка));
		Иначе
			ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Снять с ""%1"" пометку удаления?'; en = 'Remove deletion mark from ""%1"" ?'"),
				Строка(Элементы.ДеревоСообщений.ТекущиеДанные.Ссылка));
		КонецЕсли;
		
	Иначе
		
		ПометкаУдаления = Истина;
		Для Каждого СтрокаТаблицы Из Элемент.ВыделенныеСтроки Цикл
			СтрокаТаблицыСообщения = ДеревоСообщений.НайтиПоИдентификатору(СтрокаТаблицы);
			Если СтрокаТаблицыСообщения.ПометкаУдаления = Истина Тогда
				ПометкаУдаления = Ложь;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		Если ПометкаУдаления Тогда
			ТекстВопроса = НСтр("ru = 'Пометить выделенные элементы на удаление?'; en = 'Mark selected items for deletion?'");
		Иначе
			ТекстВопроса = НСтр("ru = 'Снять с выделенных элементов пометку на удаление?'; en = 'Remove deletion mark from selected items?'");
		КонецЕсли;
		
	КонецЕсли;
	
	ПараметрыОбработчика = Новый Структура;
	ПараметрыОбработчика.Вставить("Сообщения", Сообщения);
	ПараметрыОбработчика.Вставить("ПометкаУдаления", ПометкаУдаления);
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"ДеревоСообщенийПередУдалениемЗавершение", ЭтотОбъект, ПараметрыОбработчика);
	
	ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоСообщенийПередУдалениемЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	СписокРаскрытыхСообщений.Очистить();
	РаботаСОбсуждениямиКлиент.ПолучитьМассивРаскрытыхСообщений(
		Элементы.ДеревоСообщений, ДеревоСообщений.ПолучитьЭлементы(), СписокРаскрытыхСообщений);
	ВременноеТекущееСообщение = ТекущееСообщение;
	ПометитьНаУдалениеСообщения(
		ДополнительныеПараметры.Сообщения, ДополнительныеПараметры.ПометкаУдаления);
	РаботаСОбсуждениямиКлиент.УстановитьРазвернутостьЭлементовДерева(
		Элементы.ДеревоСообщений, ДеревоСообщений, СписокРаскрытыхСообщений);
	РаботаСОбсуждениямиКлиент.УстановитьТекущееСообщениеВДеревеПоСсылке(
		Элементы.ДеревоСообщений, ДеревоСообщений, ВременноеТекущееСообщение);
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоСообщенийПеретаскивание(
		Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	СтандартнаяОбработка = Ложь;
	
	СписокРаскрытыхСообщений.Очистить();
	РаботаСОбсуждениямиКлиент.ПолучитьМассивРаскрытыхСообщений(
		Элементы.ДеревоСообщений, ДеревоСообщений.ПолучитьЭлементы(), СписокРаскрытыхСообщений);
	Если ТипЗнч(ПараметрыПеретаскивания.Значение) = Тип("Массив") 
		И ПараметрыПеретаскивания.Значение.Количество() <> 0 
		И ТипЗнч(ПараметрыПеретаскивания.Значение[0]) = Тип("СправочникСсылка.СообщенияОбсуждений") Тогда
		
		Если Строка <> Неопределено Тогда
			СтрокаПриемник = Строка;
			СтрокаДерева = ДеревоСообщений.НайтиПоИдентификатору(СтрокаПриемник);
			СсылкаНовыйРодитель = СтрокаДерева.Ссылка;
		Иначе
			СсылкаНовыйРодитель = "";
		КонецЕсли;
		
		КодПереноса = ДеревоСообщенийПеретаскиваниеСервер(
			ПараметрыПеретаскивания.Значение, СсылкаНовыйРодитель, Тема);
		Если КодПереноса = 1 Тогда
			Возврат;
		ИначеЕсли КодПереноса = 2 Тогда
			ТекстПредупреждения = НСтр("ru = 'Невозможно перетаскивать сообщения между темами.'; en = 'You cannot drag messages between threads.'");
			ПоказатьПредупреждение(, ТекстПредупреждения);
			Возврат;
		ИначеЕсли КодПереноса = 3 Тогда
			ТекстПредупреждения = НСтр("ru = 'Невозможно перетаскивать первое сообщение темы.'; en = 'You cannot drag the first message of thread.'");
			ПоказатьПредупреждение(, ТекстПредупреждения);
			Возврат;
		КонецЕсли;
		
	Иначе
		Возврат;
	КонецЕсли;
	
	РаботаСОбсуждениямиКлиент.УстановитьРазвернутостьЭлементовДерева(
		Элементы.ДеревоСообщений, ДеревоСообщений, СписокРаскрытыхСообщений);
	РаботаСОбсуждениямиКлиент.УстановитьТекущееСообщениеВДеревеПоСсылке(
		Элементы.ДеревоСообщений, ДеревоСообщений, ТекущееСообщение);
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоСообщенийНачалоПеретаскивания(Элемент, ПараметрыПеретаскивания, Выполнение)
	
	Если Элемент.ТекущаяСтрока = Неопределено Тогда
		Выполнение = Ложь;
		Возврат;
	КонецЕсли;
	
	МассивПеретаскиваемыхЗначений = Новый Массив;

	Если ТипЗнч(ПараметрыПеретаскивания.Значение) = Тип("Массив") Тогда
		Для Каждого ЭлементМассива Из ПараметрыПеретаскивания.Значение Цикл
			Если ТипЗнч(ЭлементМассива) = Тип("Число") Тогда
				ПеретаскиваемоеЗначение = Элемент.ДанныеСтроки(ЭлементМассива);
				МассивПеретаскиваемыхЗначений.Добавить(ПеретаскиваемоеЗначение.Ссылка);
				ЗаполненМассивПеретаскиваемыхЗначений = Истина;
			КонецЕсли;
		КонецЦикла;
	ИначеЕсли ТипЗнч(ПараметрыПеретаскивания.Значение) = Тип("СправочникСсылка.СообщенияОбсуждений") Тогда
		ПеретаскиваемоеЗначение = Элемент.ДанныеСтроки(ЭлементМассива.Значение);
		МассивПеретаскиваемыхЗначений.Добавить(ПеретаскиваемоеЗначение.Ссылка);
		ЗаполненМассивПеретаскиваемыхЗначений = Истина;
		Возврат;
	Иначе
		ЗаполненМассивПеретаскиваемыхЗначений = Ложь;
	КонецЕсли;
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	ПеретаскиваемоеЗначение = ТекущиеДанные.Ссылка;
	
	Если ЗаполненМассивПеретаскиваемыхЗначений Тогда
		ПараметрыПеретаскивания.Значение = МассивПеретаскиваемыхЗначений;
		Возврат;
	КонецЕсли;
	
	Выполнение = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоСообщенийПроверкаПеретаскивания(
		Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	СтандартнаяОбработка = Ложь;
	
	Если (Строка = Неопределено) Или (ПараметрыПеретаскивания.Значение = Неопределено) Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

#Область Файлы

&НаКлиенте
Процедура СохранитьВложениеСообщенияКак(Команда)
	
	Если Элементы.СтраницыПросмотр.ТекущаяСтраница = Элементы.СтраницаПросмотрСФайлами Тогда
		Элемент = Элементы.ВложенияСообщения;
	ИначеЕсли Элементы.СтраницыПросмотр.ТекущаяСтраница =
			Элементы.СтраницаПросмотрСФайламиИГолосованием Тогда
		Элемент = Элементы.ВложенияСообщенияСГолосованием;
	Иначе
		Возврат;
	КонецЕсли;
	
	Если Элемент.ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Элемент.ВыделенныеСтроки.Количество() > 1 Тогда
		СписокФайловДляВыгрузки = Новый СписокЗначений;
		Для каждого ВыбраннаяСтрока Из Элемент.ВыделенныеСтроки Цикл
			ДанныеСтроки = Элемент.ДанныеСтроки(ВыбраннаяСтрока);
			Если ЗначениеЗаполнено(ДанныеСтроки.Ссылка) Тогда
				СписокФайловДляВыгрузки.Добавить(ДанныеСтроки.Ссылка);
			КонецЕсли;
		КонецЦикла;
		Если СписокФайловДляВыгрузки.Количество() > 0 Тогда
			ВстроеннаяПочтаКлиент.СохранитьВложенияКак(СписокФайловДляВыгрузки, УникальныйИдентификатор);
		КонецЕсли;
	Иначе
		ДанныеФайла = РаботаСФайламиВызовСервера.ДанныеФайлаДляСохранения(
			Элемент.ТекущиеДанные.Ссылка,
			Неопределено,
			ЭтаФорма.УникальныйИдентификатор);
		КомандыРаботыСФайламиКлиент.СохранитьКак(ДанныеФайла, УникальныйИдентификатор);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТолькоНепрочтенные(Команда)
	
	ТолькоНепрочтенные = Не ТолькоНепрочтенные;
	ПереключитьТолькоНепрочтенные();
	
КонецПроцедуры

&НаКлиенте
Процедура ПросмотретьВложениеСообщения(Команда)
	
	Если Элементы.СтраницыПросмотр.ТекущаяСтраница = Элементы.СтраницаПросмотрСФайлами Тогда
		Элемент = Элементы.ВложенияСообщения;
	ИначеЕсли Элементы.СтраницыПросмотр.ТекущаяСтраница =
			Элементы.СтраницаПросмотрСФайламиИГолосованием Тогда
		Элемент = Элементы.ВложенияСообщенияСГолосованием;
	Иначе
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ВстроеннаяПочтаКлиент.ОткрытьВложение(ТекущиеДанные.Ссылка, УникальныйИдентификатор);
	
КонецПроцедуры

&НаКлиенте
Процедура РедактироватьВложениеСообщения(Команда)
	
	Если Элементы.СтраницыПросмотр.ТекущаяСтраница = Элементы.СтраницаПросмотрСФайлами Тогда
		Элемент = Элементы.ВложенияСообщения;
	ИначеЕсли Элементы.СтраницыПросмотр.ТекущаяСтраница =
			Элементы.СтраницаПросмотрСФайламиИГолосованием Тогда
		Элемент = Элементы.ВложенияСообщенияСГолосованием;
	Иначе
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Обработчик = Новый ОписаниеОповещения("УстановитьДоступностьКомандИОбновить", ЭтотОбъект);
	РаботаСФайламиКлиент.РедактироватьСОповещением(Обработчик, ТекущиеДанные.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьДоступностьКомандИОбновить(
		Результат = Неопределено, ПараметрыВыполнения = Неопределено) Экспорт
	
	ОбновитьФайлыСообщенияКлиент();
	УстановитьДоступностьКомандРаботыСВложением();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакончитьРедактированиеВложенияСообщения(Команда)
	
	Если Элементы.СтраницыПросмотр.ТекущаяСтраница = Элементы.СтраницаПросмотрСФайлами Тогда
		Элемент = Элементы.ВложенияСообщения;
	ИначеЕсли Элементы.СтраницыПросмотр.ТекущаяСтраница =
			Элементы.СтраницаПросмотрСФайламиИГолосованием Тогда
		Элемент = Элементы.ВложенияСообщенияСГолосованием;
	Иначе
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Обработчик = Новый ОписаниеОповещения("УстановитьДоступностьКомандИОбновить", ЭтотОбъект);
	
	ПараметрыОбновленияФайла = РаботаСФайламиКлиент.ПараметрыОбновленияФайла(Неопределено, 
		ТекущиеДанные.Ссылка, ЭтаФорма.УникальныйИдентификатор);
	РаботаСФайламиКлиент.ЗакончитьРедактированиеСОповещением(ПараметрыОбновленияФайла);
		
КонецПроцедуры

#КонецОбласти

#Область ОбластьЧтения

&НаКлиенте
Процедура ОбластьЧтенияВыбратьШрифт(Команда)
	
	ДиалогВыбораШрифтаОбластиЧтения = Новый ДиалогВыбораШрифта;
	ДиалогВыбораШрифтаОбластиЧтения.Шрифт = ШрифтОбластиЧтения;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбластьЧтенияВыбратьШрифтЗавершение", ЭтотОбъект);
	
	ДиалогВыбораШрифтаОбластиЧтения.Показать(ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбластьЧтенияВыбратьШрифтЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ШрифтОбластиЧтения = Результат;
	УстановитьШрифтОбластиЧтения(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура Проголосовать(Команда)
	
	Если Не ЗначениеЗаполнено(ТекущееСообщение) Тогда
		Возврат;
	КонецЕсли;
	
	РаботаСОбсуждениямиКлиент.Проголосовать(ТекущееСообщение, Голосование);
	
КонецПроцедуры

&НаКлиенте
Процедура Прокомментировать(Команда)
	
	ОткрытьФорму("Справочник.СообщенияОбсуждений.Форма.ФормаЭлемента", 
		Новый Структура("Сообщение, ТекстНовогоСообщения",
			ТекущееСообщение,
			ГолосПользователя));
	
КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура НовоеСообщение(Команда)
	
	Если Не ЗначениеЗаполнено(Тема) Тогда
		ПарметрыФормы = Новый Структура("Предмет", Предмет);
		ОткрытьФорму("Справочник.СообщенияОбсуждений.Форма.ФормаЭлемента", ПарметрыФормы);
		Возврат;
	КонецЕсли;
	
	ПарметрыФормы = Новый Структура("Тема", Тема);
	ОткрытьФорму("Справочник.СообщенияОбсуждений.Форма.ФормаЭлемента", 
		ПарметрыФормы,
		ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ВключитьПросмотрПапками(Команда)
	
	Если ВидПросмотра <>
			ПредопределенноеЗначение("Перечисление.ВидыПросмотраСпискаОбъектов.ПоПапкам") Тогда
		ВидПросмотра = ПредопределенноеЗначение("Перечисление.ВидыПросмотраСпискаОбъектов.ПоПапкам");
		ПередОбновлениемНаКлиенте();
		ПереключитьВидПросмотра(Истина);
		ПослеОбновленияНаКлиенте();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВключитьПросмотрСписком(Команда)
	
	Если ВидПросмотра <>
			ПредопределенноеЗначение("Перечисление.ВидыПросмотраСпискаОбъектов.Списком") Тогда
		ВидПросмотра = ПредопределенноеЗначение("Перечисление.ВидыПросмотраСпискаОбъектов.Списком");
		ПередОбновлениемНаКлиенте();
		ПереключитьВидПросмотра(Истина);
		ПослеОбновленияНаКлиенте();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбластьЧтенияОтключена(Команда)
	
	ОтображениеОбластиЧтения =
		ПредопределенноеЗначение("Перечисление.ВариантыОтображенияОбластиЧтения.НеОтображать");
	ОбновитьОтображениеОбластиЧтенияСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбластьЧтенияСнизу(Команда)
	
	ОтображениеОбластиЧтения =
		ПредопределенноеЗначение("Перечисление.ВариантыОтображенияОбластиЧтения.Внизу");
	ОбновитьОтображениеОбластиЧтенияСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбластьЧтенияСправа(Команда)
	
	ОтображениеОбластиЧтения =
		ПредопределенноеЗначение("Перечисление.ВариантыОтображенияОбластиЧтения.Справа");
	ОбновитьОтображениеОбластиЧтенияСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
	
	ПередОбновлениемНаКлиенте();
	ОбновитьСервер();
	ПослеОбновленияНаКлиенте();
	
КонецПроцедуры

&НаКлиенте
Процедура ПометитьКакПрочтенные(Команда)
	
	Сообщения = ПолучитьВыбранныеСообщения(Истина);
	КоличествоСообщений = Сообщения.Количество();
	Если Сообщения.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ЧислоПрочтенных = 0;
	Если РежимОтображенияСообщенийДеревом Тогда
		
		ВыделенныеСтроки = Элементы.ДеревоСообщений.ВыделенныеСтроки;
		Для каждого Строка Из ВыделенныеСтроки Цикл
			
			Ссылка = Элементы.ДеревоСообщений.ДанныеСтроки(Строка).Ссылка;
			
			Если ТипЗнч(Ссылка) = Тип("СправочникСсылка.СообщенияОбсуждений") Тогда
				
				Прочтен = Элементы.ДеревоСообщений.ДанныеСтроки(Строка).Прочтен;
				
				Если Прочтен Тогда
					
					ЧислоПрочтенных = ЧислоПрочтенных + 1;
					
				КонецЕсли;	
				
			КонецЕсли;
			
		КонецЦикла;
		
	Иначе
		
		ВыделенныеСтроки = Элементы.Список.ВыделенныеСтроки;
		Для каждого Ссылка Из ВыделенныеСтроки Цикл
			
			Если ТипЗнч(Ссылка) = Тип("СправочникСсылка.СообщенияОбсуждений") Тогда
				
				Прочтен = Элементы.Список.ДанныеСтроки(Ссылка).Прочтен;
				
				Если Прочтен Тогда
					
					ЧислоПрочтенных = ЧислоПрочтенных + 1;
					
				КонецЕсли;	
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	ПоставитьПометкуПрочтения = Истина;
	
	Если КоличествоСообщений = ЧислоПрочтенных Тогда
		ПоставитьПометкуПрочтения = Ложь;
	Иначе
		ПоставитьПометкуПрочтения = Истина;
	КонецЕсли;	
	
	Если КоличествоСообщений > 1 Тогда
		Если ПоставитьПометкуПрочтения Тогда
			Состояние(НСтр("ru = 'Сообщения помечаются как прочтенные. Пожалуйста подождите...'; en = 'Messages are being marked as read. Please wait...'"));
		Иначе
			Состояние(НСтр("ru = 'Снимается пометка прочтенности. Пожалуйста подождите...'; en = 'Unmarking as read. Please wait...'"));
		КонецЕсли;	
	КонецЕсли;
	
	УстановитьПрочтение(Сообщения, ПоставитьПометкуПрочтения);
	
	Если КоличествоСообщений > 1 Тогда
		
		Если ПоставитьПометкуПрочтения Тогда
			ТекстСостояния = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Сообщения помечены как прочтенные (%1)'; en = 'Messages (%1) have been marked as read'"),
				КоличествоСообщений);
		Иначе
			ТекстСостояния = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Сняты пометки прочтенности сообщений (%1)'; en = 'Messages (%1) has been unmarked as read'"),
				КоличествоСообщений);
		КонецЕсли;
			
		Состояние(ТекстСостояния);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьОтветыНаСообщение(Команда)
	
	Если Не ПоказаныОтветыНаСообщение Тогда
		
		Если (Элементы.Список.ТекущаяСтрока = Неопределено
			Или ТипЗнч(Элементы.Список.ТекущаяСтрока) <> Тип("СправочникСсылка.СообщенияОбсуждений"))Тогда
			Возврат;
		КонецЕсли;
		
		ПоказаныОтветыНаСообщение = Истина;
		ВОтветНа = Элементы.Список.ТекущиеДанные.Ссылка;
		
	Иначе
		
		ПоказаныОтветыНаСообщение = Ложь;
		ВОтветНа = "";
		
	КонецЕсли;
	
	ПереключитьОтветыНаСообщение();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтображатьУдаленные(Команда)
	
	ОтображатьУдаленные = Не ОтображатьУдаленные;
	ПередОбновлениемНаКлиенте();
	ПереключитьОтображатьУдаленные(Истина);
	ПослеОбновленияНаКлиенте();
	
КонецПроцедуры

&НаКлиенте
Процедура Подписаться(Команда)
	
	Если ЗначениеЗаполнено(Тема) Тогда
		ПараметрыФормы = Новый Структура("ОбъектПодписки", Тема);
		ОткрытьФорму("ОбщаяФорма.ПодпискаНаУведомленияПоОбъекту", ПараметрыФормы);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СвернутьРазвернутьДеревоСообщений(Команда)
	
	СвернутьДерево = Ложь;
	
	Для Каждого ЭлементДерева Из ДеревоСообщений.ПолучитьЭлементы() Цикл
		
		Если Элементы.ДеревоСообщений.Развернут(ЭлементДерева.ПолучитьИдентификатор()) Тогда
			
			СвернутьДерево = Истина;
			Прервать;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Для Каждого ЭлементДерева Из ДеревоСообщений.ПолучитьЭлементы() Цикл
		
		Если СвернутьДерево Тогда
			Элементы.ДеревоСообщений.Свернуть(ЭлементДерева.ПолучитьИдентификатор());
		Иначе
			Элементы.ДеревоСообщений.Развернуть(ЭлементДерева.ПолучитьИдентификатор(), Истина);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СвернутьРазвернутьВеткуСообщений(Команда)
	
	РазворачиваемаяСтрока = Число(Элементы.ДеревоСообщений.ТекущаяСтрока);
	
	Если Элементы.ДеревоСообщений.Развернут(РазворачиваемаяСтрока) Тогда
		
		Элементы.ДеревоСообщений.Свернуть(РазворачиваемаяСтрока);
		
	Иначе
		
		Элементы.ДеревоСообщений.Развернуть(РазворачиваемаяСтрока, Истина);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РазвернутьНовыеСообщения(Команда)
	
	НепрочтенныеСообщения = Новый СписокЗначений;
	СписокНеразвернутыхСообщений = ПолучитьСписокНеразвернутыхСообщений(НепрочтенныеСообщения);
	
	Если ЗначениеЗаполнено(СписокНеразвернутыхСообщений) Тогда
		
		РаботаСОбсуждениямиКлиент.УстановитьРазвернутостьЭлементовДерева(
			Элементы.ДеревоСообщений,
			ДеревоСообщений,
			СписокНеразвернутыхСообщений);
		
		НепросмотренноеСообщение = Неопределено;
		Для Каждого Сообщение Из НепрочтенныеСообщения Цикл
			Если ПросмотренныеСообщения.НайтиПоЗначению(Сообщение.Значение) = Неопределено Тогда
				НепросмотренноеСообщение = Сообщение.Значение;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		Если НепросмотренноеСообщение = Неопределено Тогда
			НепросмотренноеСообщение = НепрочтенныеСообщения[0].Значение;
			ПросмотренныеСообщения.Очистить();
		КонецЕсли;
		ПросмотренныеСообщения.Добавить(НепросмотренноеСообщение);
		
		Индекс = -1;
		РаботаСОбсуждениямиКлиентСервер.НайтиСообщениеВДеревеПоСсылке(
			ДеревоСообщений.ПолучитьЭлементы(),
			НепросмотренноеСообщение,
			Индекс);
		Если Индекс > -1 Тогда
			Элементы.ДеревоСообщений.ТекущаяСтрока = Индекс;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьАвтообновлениеСпискаСообщений(Команда)
	
	АвтообновлениеКлиент.УстановитьПараметрыАвтообновленияСписка(ЭтаФорма, "Список");
	
КонецПроцедуры

&НаКлиенте
Процедура ПраваДоступа(Команда)
	
	Если Не ЗначениеЗаполнено(Тема) Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Не указана тема.'; en = 'Thread is not specified.'"));
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ОбъектДоступа", Тема);
	
	ОткрытьФорму("ОбщаяФорма.ДокументооборотПраваДоступаПоОбъекту", ПараметрыФормы, ЭтаФорма, Тема);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы_Отправить

&НаКлиенте
Процедура ПроцессИсполнение(Команда)
	
	ОткрытьПомощникСозданияОсновныхПроцессов("Исполнение");
	
КонецПроцедуры

&НаКлиенте
Процедура ПроцессОзнакомление(Команда)
	
	ОткрытьПомощникСозданияОсновныхПроцессов("Ознакомление");
	
КонецПроцедуры

&НаКлиенте
Процедура ПроцессОбработка(Команда)
	
	ОткрытьПомощникСозданияОсновныхПроцессов("КомплексныйПроцесс");
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьПомощникСозданияОсновныхПроцессов(ТипыОпераций)
	
	ВыделенныеСтроки = Новый Массив;
	
	Для Каждого СтрСписка Из Элементы.Список.ВыделенныеСтроки Цикл
		ВыделенныеСтроки.Добавить(Элементы.Список.ДанныеСтроки(СтрСписка).Ссылка);
	КонецЦикла;
	
	РаботаСБизнесПроцессамиКлиент.ОткрытьПомощникСозданияОсновныхПроцессов(
		ТипыОпераций, ВыделенныеСтроки, ЭтаФорма, "ФормаСписка");
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Файлы

&НаСервере
Процедура ВложениеСообщенияПометитьНаУдалениеСервер(ФайлСсылка)
	
	ФайлОбъект = ФайлСсылка.ПолучитьОбъект();
	ЗаблокироватьДанныеДляРедактирования(ФайлСсылка);
	ФайлОбъект.УстановитьПометкуУдаления(Не ФайлОбъект.ПометкаУдаления);
	ОбновитьФайлыСообщения();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьФайлыСообщенияКлиент()
	
	Если РежимОтображенияСообщенийДеревом Тогда
		
		ТекущиеДанные = Элементы.ДеревоСообщений.ТекущиеДанные;
		
	Иначе
		
		ТекущиеДанные = Элементы.Список.ТекущиеДанные;
		
	КонецЕсли;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТекущиеДанные.Файлы И ОбластьЧтенияВключена Тогда
		ОбновитьФайлыСообщения();
	Иначе
		ВложенияСообщения.Очистить();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьФайлыСообщения()
	
	Если Элементы.СтраницыПросмотр.ТекущаяСтраница =
			Элементы.СтраницаПросмотрСФайламиИГолосованием Тогда
		Элемент = Элементы.ВложенияСообщенияСГолосованием;
	Иначе
		Элемент = Элементы.ВложенияСообщения;
	КонецЕсли;
	
	// Сохранение текущей строки
	ТекПозиция = Неопределено;
	Если Элемент.ТекущаяСтрока <> Неопределено Тогда
		ТекДанные = ВложенияСообщения.НайтиПоИдентификатору(Элемент.ТекущаяСтрока);
		Если ТекДанные <> Неопределено Тогда
			Если ТекДанные.Свойство("Ссылка")
				И ЗначениеЗаполнено(ТекДанные.Ссылка) Тогда
				ТекПозиция = Новый Структура("Ссылка", ТекДанные.Ссылка);
			ИначеЕсли ТекДанные.Свойство("Представление")
				И ТекДанные.Свойство("Размер") Тогда
				ТекПозиция =
					Новый Структура("Представление, Размер", ТекДанные.Представление, ТекДанные.Размер);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	// Заполнение списка файлов
	Если ЗначениеЗаполнено(ТекущееСообщение) Тогда
		ЗаполнитьВложения(ВложенияСообщения, ТекущееСообщение);
	КонецЕсли;
	
	// Восстановление текущей строки
	Если ЗначениеЗаполнено(ТекПозиция) Тогда
		Если ТипЗнч(ТекПозиция) = Тип("Структура") Тогда
			Строки = ВложенияСообщения.НайтиСтроки(ТекПозиция);
			Если Строки.Количество() > 0 Тогда
				Элемент.ТекущаяСтрока = Строки[0].ПолучитьИдентификатор();
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьДоступностьКомандРаботыСВложением()
	
	Если Элементы.СтраницыПросмотр.ТекущаяСтраница = Элементы.СтраницаПросмотрСФайлами Тогда
		Элемент = Элементы.ВложенияСообщения;
	ИначеЕсли Элементы.СтраницыПросмотр.ТекущаяСтраница =
			Элементы.СтраницаПросмотрСФайламиИГолосованием Тогда
		Элемент = Элементы.ВложенияСообщенияСГолосованием;
	Иначе
		Возврат;
	КонецЕсли;
	
	Если Элемент.ТекущиеДанные = Неопределено Тогда
		
		Элементы.ПросмотретьВложениеСообщения.Доступность = Ложь;
		Элементы.РедактироватьВложениеСообщения.Доступность = Ложь;
		Элементы.ЗакончитьРедактированиеВложенияСообщения.Доступность = Ложь;
		Элементы.СохранитьВложениеСообщенияКак.Доступность = Ложь;
		
		Элементы.ПросмотретьВложениеСообщенияСГолосованием.Доступность = Ложь;
		Элементы.РедактироватьВложениеСообщенияСГолосованием.Доступность = Ложь;
		Элементы.ЗакончитьРедактированиеВложенияСообщенияСГолосованием.Доступность = Ложь;
		Элементы.СохранитьВложениеСообщенияКакСГолосованием.Доступность = Ложь;
		
	Иначе
		ТекущиеДанные = Элемент.ТекущиеДанные;
		
		Элементы.ПросмотретьВложениеСообщения.Доступность = Истина;
		Элементы.РедактироватьВложениеСообщения.Доступность = Истина;
		Элементы.ЗакончитьРедактированиеВложенияСообщения.Доступность =
			ТекущиеДанные.РедактируетТекущийПользователь;
		Элементы.СохранитьВложениеСообщенияКак.Доступность = Истина;
		
		Элементы.ПросмотретьВложениеСообщенияСГолосованием.Доступность = Истина;
		Элементы.РедактироватьВложениеСообщенияСГолосованием.Доступность = Истина;
		Элементы.ЗакончитьРедактированиеВложенияСообщенияСГолосованием.Доступность =
			ТекущиеДанные.РедактируетТекущийПользователь;
		Элементы.СохранитьВложениеСообщенияКак.Доступность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьВложения(Вложения, Сообщение)
	
	ФайлыСообщения = РаботаСОбсуждениями.ПолучитьФайлыСообщения(
		Сообщение, // Сообщение
		Истина, // ФормироватьРазмерПредставление
		Ложь); // ВключатьПомеченныеНаУдаление
	
	Вложения.Очистить();
	Для каждого ФайлыСообщенияСтрока Из ФайлыСообщения Цикл
		ВложенияСтрока = Вложения.Добавить();
		ЗаполнитьЗначенияСвойств(ВложенияСтрока, ФайлыСообщенияСтрока);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура УстановитьСтраницуПредпросмотра()
	
	Если РежимОтображенияСообщенийДеревом Тогда
		
		ТекущиеДанные = Элементы.ДеревоСообщений.ТекущиеДанные;
		
	Иначе
		
		ТекущиеДанные = Элементы.Список.ТекущиеДанные;
		
	КонецЕсли;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТекущиеДанные.Файлы И ТекущиеДанные.ДобавленоГолосование Тогда
		Элементы.СтраницыПросмотр.ТекущаяСтраница = Элементы.СтраницаПросмотрСФайламиИГолосованием;
	ИначеЕсли ТекущиеДанные.Файлы Тогда
		Элементы.СтраницыПросмотр.ТекущаяСтраница = Элементы.СтраницаПросмотрСФайлами;
	ИначеЕсли ТекущиеДанные.ДобавленоГолосование Тогда
		Элементы.СтраницыПросмотр.ТекущаяСтраница = Элементы.СтраницаПросмотрСГолосованием;
	Иначе
		Элементы.СтраницыПросмотр.ТекущаяСтраница = Элементы.СтраницаПросмотр;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПереключитьОтветыНаСообщение()
	
	Параметр =
		Список.Параметры.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ОтветыНаСообщение"));
	Параметр.Использование = Ложь;
	
	Элементы.СписокПоказатьОтветыНаСообщение.Пометка = ПоказаныОтветыНаСообщение;
	
	Если ПоказаныОтветыНаСообщение Тогда
		Список.Параметры.УстановитьЗначениеПараметра("ОтветыНаСообщение", ВОтветНа);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОжиданияПрочтения()
	
	Сообщение = ПолучитьТекущееСообщение(Ложь);
	Если Сообщение = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Сообщение = ТекущееСообщение Тогда
		Возврат;
	КонецЕсли;
	
	ПредыдущееСообщение = ТекущееСообщение;
	ПредыдущееСообщениеПрочтено = ТекущееСообщениеПрочтено;
	ТекущееСообщение = Сообщение;
	
	Если Не ПредыдущееСообщениеПрочтено 
		И ИспользоватьАвтоматическоеПрочтение 
		И ОбластьЧтенияВключена Тогда
		
		УстановитьПрочтение(ПредыдущееСообщение);
		
	КонецЕсли;
	
	ТекущиеДанныеСообщения = ПолучитьТекущиеДанные();
	Если ТекущиеДанныеСообщения <> Неопределено Тогда
		
		Если ТекущиеДанныеСообщения.Свойство("ТекстСообщения")
			И ТекущиеДанныеСообщения.Свойство("Автор")
			И ТекущиеДанныеСообщения.Свойство("ДатаСообщения") Тогда
			
			ТекущееСообщениеТекст = 
				РаботаСОбсуждениямиКлиентСервер.СформироватьТекстовоеПредставлениеСообщения(
					ТекущиеДанныеСообщения.ТекстСообщения,
					ТекущиеДанныеСообщения.Автор,
					ТекущиеДанныеСообщения.ДатаСообщения);
			ОбработатьФормированиеПредпросмотраСообщения();
			
		Иначе
			ОчиститьТекущееСообщение();
		КонецЕсли;
		
		Если ТекущиеДанныеСообщения.Свойство("Прочтен") Тогда
			ТекущееСообщениеПрочтено = ТекущиеДанныеСообщения.Прочтен;
		Иначе
			ТекущееСообщениеПрочтено = Ложь;
		КонецЕсли;
		
	Иначе
		ОчиститьТекущееСообщение();
		ТекущееСообщениеПрочтено = Ложь;
	КонецЕсли;
	
	УстановитьСтраницуПредпросмотра();
	УстановитьДоступностьКоманд();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьФормированиеПредпросмотраСообщения()
	
	Если ОбластьЧтенияВключена Тогда
		
		Если РежимОтображенияСообщенийДеревом Тогда
			
			ТекущиеДанные = Элементы.ДеревоСообщений.ТекущиеДанные;
			
		Иначе
			
			ТекущиеДанные = Элементы.Список.ТекущиеДанные;
			
		КонецЕсли;
		
		Если ТекущиеДанные<> Неопределено Тогда
			
			Если ТекущиеДанные.Файлы ИЛИ ТекущиеДанные.ДобавленоГолосование Тогда
				
				ОбработатьФормированиеПредпросмотраСообщенияСервер(
					ТекущиеДанные.ДобавленоГолосование, ТекущиеДанные.Файлы);
				
			КонецЕсли;
			
		Иначе
			
			ВложенияСообщения.Очистить();
			ВопросГолосования = "";
			Голосование = 0;
			ВсегоГолосов = "";
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьФормированиеПредпросмотраСообщенияСервер(ДобавленоГолосование, Файлы)
	
	Если ДобавленоГолосование И ОбластьЧтенияВключена Тогда
		ОбновитьГолосованиеСервер();
	Иначе
		ВопросГолосования = "";
		Голосование = 0;
		ВсегоГолосов = "";
	КонецЕсли;
	
	Если Файлы И ОбластьЧтенияВключена Тогда
		ОбновитьФайлыСообщения();
	Иначе
		ВложенияСообщения.Очистить();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПриЗакрытииНаСервере()
	
	ПрочтениеУстановлено = Ложь;
	
	Если ЗначениеЗаполнено(Тема) Тогда
		ОбщегоНазначения.ХранилищеОбщихНастроекСохранить(
			Тема.УникальныйИдентификатор(), "ТекущееСообщение", ТекущееСообщение);
	КонецЕсли;
	
	Если Не ТекущееСообщениеПрочтено 
		И ИспользоватьАвтоматическоеПрочтение 
		И ОбластьЧтенияВключена Тогда 
		ПрочтениеУстановлено = УстановитьПрочтениеСервер(ТекущееСообщение);
	КонецЕсли;
	
	Возврат ПрочтениеУстановлено;
	
КонецФункции

&НаКлиенте
Функция ПолучитьВыбранныеСообщения(ВыводитьПредупреждение = Ложь)
	
	Результат = Новый Массив;
	
	Если РежимОтображенияСообщенийДеревом Тогда
		ВыделенныеСтроки = Элементы.ДеревоСообщений.ВыделенныеСтроки;
	Иначе
		ВыделенныеСтроки = Элементы.Список.ВыделенныеСтроки;
	КонецЕсли;

	Для каждого Строка Из ВыделенныеСтроки Цикл
		
		Если РежимОтображенияСообщенийДеревом Тогда
			ДанныеСтроки = Элементы.ДеревоСообщений.ДанныеСтроки(Строка);
			Ссылка = ДанныеСтроки.Ссылка;
		Иначе
			Ссылка = Строка;
		КонецЕсли;
		
		Если ТипЗнч(Ссылка) = Тип("СправочникСсылка.СообщенияОбсуждений") Тогда
			Результат.Добавить(Ссылка);
		КонецЕсли;
	КонецЦикла;
		
	Сообщение = ПолучитьТекущееСообщение(Ложь);
	
	Если ЗначениеЗаполнено(Сообщение)
		И Результат.Найти(Сообщение) = Неопределено Тогда
		Результат.Добавить(Сообщение);
	КонецЕсли;
	
	Если Результат.Количество() = 0 И ВыводитьПредупреждение Тогда
		ТекстПредупреждения = НСтр("ru = 'Не выбрано сообщение.'; en = 'Message is not selected.'");
		ПоказатьПредупреждение(, ТекстПредупреждения);
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Функция ПолучитьТекущееСообщение(ВыводитьПредупреждение = Ложь)
	
	ТекущаяСтрока = ПолучитьТекущуюСтроку();
	Если ТекущаяСтрока = Неопределено Тогда
		Если ВыводитьПредупреждение Тогда
			ТекстПредупреждения = НСтр("ru = 'Не выбрано сообщение.'; en = 'Message is not selected.'");
			ПоказатьПредупреждение(, ТекстПредупреждения);
		КонецЕсли;
		Возврат Неопределено;
	КонецЕсли;
	
	ТекущиеДанныеСообщения = ПолучитьТекущиеДанные();
	Если ТекущиеДанныеСообщения = Неопределено Тогда
		Если ВыводитьПредупреждение Тогда
			ТекстПредупреждения = НСтр("ru = 'Не выбрано сообщение.'; en = 'Message is not selected.'");
			ПоказатьПредупреждение(, ТекстПредупреждения);
		КонецЕсли;
		Возврат Неопределено;
	КонецЕсли;
	
	Если ТекущиеДанныеСообщения <> Неопределено И Не ТекущиеДанныеСообщения.Свойство("Ссылка") Тогда
		Если ВыводитьПредупреждение Тогда
			ТекстПредупреждения = НСтр("ru = 'Не выбрано сообщение.'; en = 'Message is not selected.'");
			ПоказатьПредупреждение(, ТекстПредупреждения);
		КонецЕсли;
		Возврат Неопределено;
	КонецЕсли;
	
	Сообщение = ТекущиеДанныеСообщения.Ссылка;
	Если Не ТипЗнч(Сообщение) = Тип("СправочникСсылка.СообщенияОбсуждений") Тогда
		Если ВыводитьПредупреждение Тогда
			ТекстПредупреждения = НСтр("ru = 'Не выбрано сообщение.'; en = 'Message is not selected.'");
			ПоказатьПредупреждение(, ТекстПредупреждения);
		КонецЕсли;
		Возврат Неопределено;
	КонецЕсли;
	
	Возврат Сообщение;
	
КонецФункции

&НаКлиенте
Процедура УстановитьПрочтение(Сообщение, Прочтен = Истина)
	
	ПрочтениеУстановлено = УстановитьПрочтениеСервер(Сообщение, Прочтен);
	РаботаСПрочтениямиКлиент.ОповеститьОПрочтении(Сообщение, ПрочтениеУстановлено);
	
КонецПроцедуры

&НаСервере 
Функция УстановитьПрочтениеСервер(Сообщение, Прочтен = Истина)
	
	ПрочтениеУстановлено = РаботаСПрочтениями.УстановитьСвойствоПрочтен(Сообщение, Прочтен);
	
	// Не устанавливать прочтенность сообщения автоматически в случае ручной установки прочтения.
	ТекущееСообщениеПрочтено = Истина;
	
	Возврат ПрочтениеУстановлено; 

КонецФункции

&НаСервере
Процедура ОбновитьОтображениеОбластиЧтенияСервер(ОбновитьДанные = Истина)
	
	Если ОтображениеОбластиЧтения =
			ПредопределенноеЗначение("Перечисление.ВариантыОтображенияОбластиЧтения.Внизу") Тогда
		
		Элементы.СтраницаПросмотрСФайлами.Группировка =
			ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
		Элементы.СтраницаПросмотрСГолосованием.Группировка =
			ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
		Элементы.СтраницаПросмотрСФайламиИГолосованием.Группировка =
			ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
		Элементы.ГруппаСписок.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
		Элементы.СтраницыПросмотр.Видимость = Истина;
		Элементы.ОбластьЧтенияСнизу.Пометка = Истина;
		Элементы.ОбластьЧтенияСправа.Пометка = Ложь;
		Элементы.ОбластьЧтенияОтключена.Пометка = Ложь;
		ОбластьЧтенияВключена = Истина;
		
		Если ОбновитьДанные Тогда
			ОбновитьФайлыСообщения();
			ОбновитьГолосованиеСервер();
		КонецЕсли;
		
	ИначеЕсли ОтображениеОбластиЧтения =
			ПредопределенноеЗначение("Перечисление.ВариантыОтображенияОбластиЧтения.Справа") Тогда
		
		Элементы.СтраницаПросмотрСФайлами.Группировка =
			ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
		Элементы.СтраницаПросмотрСГолосованием.Группировка =
			ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
		Элементы.СтраницаПросмотрСФайламиИГолосованием.Группировка =
			ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
		Элементы.ГруппаСписок.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
		Элементы.СтраницыПросмотр.Видимость = Истина;
		Элементы.ОбластьЧтенияСнизу.Пометка = Ложь;
		Элементы.ОбластьЧтенияСправа.Пометка = Истина;
		Элементы.ОбластьЧтенияОтключена.Пометка = Ложь;
		ОбластьЧтенияВключена = Истина;
		
		Если ОбновитьДанные Тогда
			ОбновитьФайлыСообщения();
			ОбновитьГолосованиеСервер();
		КонецЕсли;
		
	ИначеЕсли ОтображениеОбластиЧтения =
			ПредопределенноеЗначение("Перечисление.ВариантыОтображенияОбластиЧтения.НеОтображать") Тогда
		
		Элементы.СтраницыПросмотр.Видимость = Ложь;
		Элементы.ОбластьЧтенияСнизу.Пометка = Ложь;
		Элементы.ОбластьЧтенияСправа.Пометка = Ложь;
		Элементы.ОбластьЧтенияОтключена.Пометка = Истина;
		ОбластьЧтенияВключена = Ложь;
		
	Иначе
		
		ОтображениеОбластиЧтения =
			ПредопределенноеЗначение("Перечисление.ВариантыОтображенияОбластиЧтения.НеОтображать");
		ОбновитьОтображениеОбластиЧтенияСервер();
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьТемуПоПредмету()
	
	ЗадатьТему(РаботаСОбсуждениями.НайтиТемуПоПредмету(Предмет));

КонецПроцедуры

&НаСервере
Процедура ЗадатьТему(НоваяТема)
	
	Тема = НоваяТема;
	Если ЗначениеЗаполнено(Тема) Тогда
		Список.Параметры.УстановитьЗначениеПараметра("Тема", Тема);
		Если РежимОтображенияСообщенийДеревом Тогда
			ЗаполнитьДеревоСообщений();
		КонецЕсли;
		НавигационнаяСсылка = ПолучитьНавигационнуюСсылку(Тема);
		Элементы.СписокСоздать.Заголовок = НСтр("ru = 'Ответить'; en = 'Reply'");
		Элементы.ДеревоСообщенийСоздать.Заголовок = НСтр("ru = 'Ответить'; en = 'Reply'");
	Иначе
		Элементы.СписокСоздать.Заголовок = НСтр("ru = 'Создать новую тему'; en = 'Create new thread'");
		Элементы.ДеревоСообщенийСоздать.Заголовок = НСтр("ru = 'Создать новую тему'; en = 'Create new thread'");
	КонецЕсли;
	
	ОбновитьЗаголовок();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьЗаголовок()
	
	ПредставлениеСообщенийТемы = НСтр("ru = 'Тема форума:'; en = 'Forum thread:'");
	
	Если ЗначениеЗаполнено(Тема) Тогда
		ПредставлениеЗаголовка = Строка(Тема);
	Иначе
		ПредставлениеЗаголовка = НСтр("ru = 'Новая тема'; en = 'New forum thread'");
	КонецЕсли;
	
	ЭтаФорма.Заголовок = ПредставлениеСообщенийТемы + " " + ПредставлениеЗаголовка;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьКлиент()
	
	ПередОбновлениемНаКлиенте();
	ОбновитьСервер();
	ПослеОбновленияНаКлиенте();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередОбновлениемНаКлиенте()
	
	Если РежимОтображенияСообщенийДеревом Тогда
		
		СообщениеПриОбновлении = ПолучитьТекущееСообщение(Ложь);
		
		СписокРаскрытыхСообщений.Очистить();
		РаботаСОбсуждениямиКлиент.ПолучитьМассивРаскрытыхСообщений(
			Элементы.ДеревоСообщений,
			ДеревоСообщений.ПолучитьЭлементы(),
			СписокРаскрытыхСообщений);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСервер()
	
	Если Не ЗначениеЗаполнено(Тема) И ЗначениеЗаполнено(Предмет) Тогда
		ОбновитьТемуПоПредмету();
		Возврат;	
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Тема) Тогда
		ЗакрытаяТема = Тема.Закрытая;
	КонецЕсли;
	
	ОбновитьЗаголовок();
	
	Если РежимОтображенияСообщенийДеревом Тогда
		ЗаполнитьДеревоСообщений();
	Иначе
		Элементы.Список.Обновить();
		Элементы.Список.ТекущаяСтрока = ТекущееСообщение;
	КонецЕсли;
	
	ОбновитьТекущееСообщениеНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеОбновленияНаКлиенте()
	
	Если РежимОтображенияСообщенийДеревом Тогда
		
		РаботаСОбсуждениямиКлиент.УстановитьРазвернутостьЭлементовДерева(
			Элементы.ДеревоСообщений,
			ДеревоСообщений,
			СписокРаскрытыхСообщений);
		РаботаСОбсуждениямиКлиент.УстановитьТекущееСообщениеВДеревеПоСсылке(
			Элементы.ДеревоСообщений,
			ДеревоСообщений,
			СообщениеПриОбновлении);
		
	КонецЕсли;
	
	УстановитьДоступностьКоманд();
	УстановитьСтраницуПредпросмотра();
	
КонецПроцедуры

&НаСервере
Функция ПометитьНаУдалениеСообщения(Сообщения, ПометкаУдаления)
	
	Для Каждого СообщениеСсылка Из Сообщения Цикл
		
		Если СообщениеСсылка.Пустая() Тогда
			Продолжить;
		КонецЕсли;	
		
		СообщениеОбъект = СообщениеСсылка.ПолучитьОбъект();
		СообщениеОбъект.УстановитьПометкуУдаления(ПометкаУдаления);
	КонецЦикла;
	
	ЗаполнитьДеревоСообщений();
	
КонецФункции

&НаСервере
Функция ДеревоСообщенийПеретаскиваниеСервер(ПараметрыПеретаскиванияЗначение, Строка, Тема)
	
	КодПереноса = РаботаСОбсуждениями.ПереносСообщения(ПараметрыПеретаскиванияЗначение, Строка, Тема);
		
	ЗаполнитьДеревоСообщений();
	
	Возврат КодПереноса;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьДеревоСообщений()
	
	Дерево = РеквизитФормыВЗначение("ДеревоСообщений");
	Дерево.Строки.Очистить();
	
	Если ЗначениеЗаполнено(Тема) Тогда 
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	СправочникСообщенияОбсуждений.ПометкаУдаления,
			|	СправочникСообщенияОбсуждений.Родитель,
			|	СправочникСообщенияОбсуждений.Ссылка КАК Ссылка,
			|	СправочникСообщенияОбсуждений.Автор,
			|	ВЫБОР
			|		КОГДА СправочникСообщенияОбсуждений.ДатаСоздания > СправочникСообщенияОбсуждений.ДатаИзменения
			|			ТОГДА СправочникСообщенияОбсуждений.ДатаСоздания
			|		ИНАЧЕ СправочникСообщенияОбсуждений.ДатаИзменения
			|	КОНЕЦ КАК ДатаСообщения,
			|	СправочникСообщенияОбсуждений.ДобавленоГолосование,
			|	ВЫБОР
			|		КОГДА КешИнформацииОбОбъектах.ЕстьЗадачи ЕСТЬ NULL 
			|			ТОГДА ЛОЖЬ
			|		КОГДА КешИнформацииОбОбъектах.ЕстьЗадачи
			|			ТОГДА ИСТИНА
			|		ИНАЧЕ ЛОЖЬ
			|	КОНЕЦ КАК Задачи,
			|	СправочникСообщенияОбсуждений.НомерСообщения КАК НомерСообщения,
			|	ЕСТЬNULL(СведенияОПрочтении.Прочтен, ЛОЖЬ) КАК Прочтен,
			|	СправочникСообщенияОбсуждений.ТекстСообщения,
			|	СправочникСообщенияОбсуждений.ТекстСообщенияСписок,
			|	СправочникСообщенияОбсуждений.ВладелецСообщения КАК Тема,
			|	ВЫБОР
			|		КОГДА КешИнформацииОбОбъектах.ЕстьФайлы ЕСТЬ NULL 
			|			ТОГДА ЛОЖЬ
			|		КОГДА КешИнформацииОбОбъектах.ЕстьФайлы
			|			ТОГДА ИСТИНА
			|		ИНАЧЕ ЛОЖЬ
			|	КОНЕЦ КАК Файлы,
			|	СправочникСообщенияОбсуждений.СокращенТекстСписка,
			|	ТемыОбсуждений.Закрытая
			|ИЗ
			|	Справочник.СообщенияОбсуждений КАК СправочникСообщенияОбсуждений
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КешИнформацииОбОбъектах КАК КешИнформацииОбОбъектах
			|		ПО СправочникСообщенияОбсуждений.Ссылка = КешИнформацииОбОбъектах.Объект
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОПрочтении КАК СведенияОПрочтении
			|		ПО СправочникСообщенияОбсуждений.Ссылка = СведенияОПрочтении.Объект
			|			И (СведенияОПрочтении.Пользователь = &Пользователь)
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ТемыОбсуждений КАК ТемыОбсуждений
			|		ПО СправочникСообщенияОбсуждений.ВладелецСообщения = ТемыОбсуждений.Ссылка
			|ГДЕ
			|	СправочникСообщенияОбсуждений.ВладелецСообщения = &Тема";
		
		Если Не ОтображатьУдаленные Тогда
			Запрос.Текст = Запрос.Текст + "
				|	И СправочникСообщенияОбсуждений.ПометкаУдаления = ЛОЖЬ";
		КонецЕсли;
		
		Запрос.Текст = Запрос.Текст + "
			|УПОРЯДОЧИТЬ ПО
			|	НомерСообщения ИЕРАРХИЯ";
		
		Запрос.УстановитьПараметр("Тема", Тема);
		Запрос.УстановитьПараметр("Пользователь", ПользователиКлиентСервер.ТекущийПользователь());
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			
			Родитель = Выборка.Родитель;
			Если Не ЗначениеЗаполнено(Родитель) Тогда 
				НоваяСтрока = Дерево.Строки.Добавить();
			Иначе	
				НайденнаяСтрока = Дерево.Строки.Найти(Родитель, "Ссылка", Истина);	
				Если НайденнаяСтрока <> Неопределено Тогда
					НоваяСтрока = НайденнаяСтрока.Строки.Добавить();	
				Иначе
					НоваяСтрока = Дерево.Строки.Добавить();	
				КонецЕсли;
			КонецЕсли;
			
			ЗаполнитьСтрокуДереваИзСообщения(НоваяСтрока, Выборка);
			
		КонецЦикла;
		
	КонецЕсли;
	
	ЗначениеВРеквизитФормы(Дерево, "ДеревоСообщений");
	
	Индекс = -1;
	РаботаСОбсуждениямиКлиентСервер.НайтиСообщениеВДеревеПоСсылке(
		ДеревоСообщений.ПолучитьЭлементы(), ТекущееСообщение, Индекс);
	Если Индекс > -1 Тогда
		Элементы.ДеревоСообщений.ТекущаяСтрока = Индекс;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСтрокуДереваИзСообщения(ЭлементДерева, Сообщение)
	
	Если ТипЗнч(ЭлементДерева) = Тип("Число") Тогда 
		ЭлементДерева = ДеревоСообщений.НайтиПоИдентификатору(ЭлементДерева);
	КонецЕсли;	
	
	СписокРеквизитов = 
		"ПометкаУдаления,
		|Ссылка,
		|Автор,
		|ДатаСообщения,
		|ДобавленоГолосование,
		|Задачи,
		|НомерСообщения,
		|Прочтен,
		|ТекстСообщения,
		|ТекстСообщенияСписок,
		|Тема,
		|Файлы,
		|СокращенТекстСписка";
	ЗаполнитьЗначенияСвойств(ЭлементДерева, Сообщение, СписокРеквизитов);
	
	ЭлементДерева.Ответить = Не Сообщение.Закрытая;
	ЭлементДерева.РодительскоеСообщение = Сообщение.Родитель;
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьТекущуюСтроку()
	
	Если РежимОтображенияСообщенийДеревом Тогда
		Возврат Элементы.ДеревоСообщений.ТекущаяСтрока;
	Иначе
		Возврат Элементы.Список.ТекущаяСтрока;
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Функция УстановитьТекущуюСтроку(ЗначениеТекущейСтроки)
	
	Если РежимОтображенияСообщенийДеревом Тогда
		РаботаСОбсуждениямиКлиент.УстановитьТекущееСообщениеВДеревеПоСсылке(
			Элементы.ДеревоСообщений, ДеревоСообщений, ЗначениеТекущейСтроки);
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Функция ПолучитьТекущиеДанные()
	
	Если РежимОтображенияСообщенийДеревом Тогда
		Возврат Элементы.ДеревоСообщений.ТекущиеДанные;
	Иначе
		Возврат Элементы.Список.ТекущиеДанные;
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура УстановитьДоступностьКоманд()
	
	Элементы.СписокСоздать.Доступность = Не ЗакрытаяТема;
	Элементы.СписокУстановитьПометкуУдаления.Доступность = Не ЗакрытаяТема;
	Элементы.СписокКонтекстноеМенюСоздать.Доступность = Не ЗакрытаяТема;
	Элементы.СписокКонтекстноеМенюУстановитьПометкуУдаления.Доступность = Не ЗакрытаяТема;
	
	Элементы.ДеревоСообщенийСоздать.Доступность = Не ЗакрытаяТема;
	Элементы.ДеревоСообщенийУдалить.Доступность = Не ЗакрытаяТема;
	Элементы.ДеревоСообщенийКонтекстноеМенюДобавить.Доступность = Не ЗакрытаяТема;
	Элементы.ДеревоСообщенийКонтекстноеМенюУдалить.Доступность = Не ЗакрытаяТема;
	
	Элементы.ОбщаяКомандаСоздатьПисьмоНаОснованииСписок.Доступность = ЗначениеЗаполнено(ТекущееСообщение);
	Элементы.ОбщаяКомандаСоздатьПисьмоНаОснованииДерево.Доступность = ЗначениеЗаполнено(ТекущееСообщение);
	Элементы.ОбщаяКомандаСоздатьБизнесПроцессСписок.Доступность = ЗначениеЗаполнено(ТекущееСообщение);
	Элементы.ОбщаяКомандаСоздатьБизнесПроцессДерево.Доступность = ЗначениеЗаполнено(ТекущееСообщение);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьШрифтОбластиЧтения(УстановитьПерсональнуюНастройку)
	
	Элементы.ТекущееСообщениеТекст.Шрифт = ШрифтОбластиЧтения;
	Элементы.ТекущееСообщениеТекстСФайлами.Шрифт = ШрифтОбластиЧтения;
	Элементы.ТекущееСообщениеТекстСГолосованием.Шрифт = ШрифтОбластиЧтения;
	Элементы.ТекущееСообщениеТекстСФайламиИГолосованием.Шрифт = ШрифтОбластиЧтения;
	
	Если УстановитьПерсональнуюНастройку Тогда
		РаботаСОбсуждениями.УстановитьПерсональнуюНастройку("ШрифтОбластиЧтения", ШрифтОбластиЧтения);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьСписокНеразвернутыхСообщений(НепрочтенныеСообщения)
	
	СписокНеразвернутыхСообщений = Новый СписокЗначений();
	
	ДеревоСообщенийЗначение = РеквизитФормыВЗначение("ДеревоСообщений");
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Прочтен", Ложь);
	НепрочтенныеСтроки = ДеревоСообщенийЗначение.Строки.НайтиСтроки(ПараметрыОтбора, Истина);
	
	Для Каждого НепрочтеннаяСтрока Из НепрочтенныеСтроки Цикл
		
		НепрочтенныеСообщения.Добавить(НепрочтеннаяСтрока.Ссылка);
		СписокНеразвернутыхСообщений.Добавить(НепрочтеннаяСтрока.Ссылка);
		
		Родитель = НепрочтеннаяСтрока.Ссылка.Родитель;
		Пока ЗначениеЗаполнено(Родитель) Цикл
			
			СписокНеразвернутыхСообщений.Добавить(Родитель);
			Родитель = Родитель.Родитель;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат СписокНеразвернутыхСообщений;
	
КонецФункции

&НаСервере
Процедура ОбновитьГолосованиеСервер()
	
	Элементы.Голосование.СписокВыбора.Очистить();
	Элементы.ГолосованиеСФайлами.СписокВыбора.Очистить();
	
	Если Не ЗначениеЗаполнено(ТекущееСообщение) Тогда
		
		ВопросГолосования = "";
		Голосование = 0;
		ВсегоГолосов = "";
		Элементы.Проголосовать.Доступность = Ложь;
		ПользовательПроголосовал = Ложь;
		
		Возврат;
		
	КонецЕсли;
	
	Для каждого РезультатГолосования Из РаботаСОбсуждениями.ПолучитьРезультатГолосования(ТекущееСообщение) Цикл
		
		Если РезультатГолосования.Значение = 0 Тогда
			ВсегоГолосов = РезультатГолосования.Представление;
			Продолжить;
		КонецЕсли;
		
		Элементы.Голосование.СписокВыбора.Добавить(
			РезультатГолосования.Значение,
			РезультатГолосования.Представление);
		
		Элементы.ГолосованиеСФайлами.СписокВыбора.Добавить(
			РезультатГолосования.Значение,
			РезультатГолосования.Представление);
		
	КонецЦикла;
	
	ВопросГолосования = ТекущееСообщение.ВопросГолосования;
	Голосование =
		РаботаСОбсуждениями.ПолучитьРезультатГолосованияТекущегоПользователя(ТекущееСообщение);
	ГолосПользователя = РаботаСОбсуждениями.ПолучитьПредставлениеГолосаПользователя(ТекущееСообщение);
	Если Голосование <> 0 Тогда
		ПользовательПроголосовал = Истина;
	Иначе
		ПользовательПроголосовал = Ложь;
	КонецЕсли;
	
	Элементы.Проголосовать.Доступность = ЗначениеЗаполнено(Голосование) И Не ЗакрытаяТема;
	Элементы.ПроголосоватьСФайлами.Доступность = ЗначениеЗаполнено(Голосование) И Не ЗакрытаяТема;
	Элементы.Прокомментировать.Доступность = ПользовательПроголосовал И Не ЗакрытаяТема;
	Элементы.ПрокомментироватьСФайлами.Доступность = ПользовательПроголосовал И Не ЗакрытаяТема;
	Элементы.Голосование.Доступность = Не ЗакрытаяТема;
	Элементы.ГолосованиеСФайлами.Доступность = Не ЗакрытаяТема;
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьТекущееСообщение()
	
	ТекущееСообщение = Неопределено;
	ТекущееСообщениеТекст = "";
	ВложенияСообщения.Очистить();
	Элементы.СтраницыПросмотр.ТекущаяСтраница = Элементы.СтраницаПросмотр;
	
	УстановитьДоступностьКоманд();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтветитьНаСообщение()
	
	Если Не ЗначениеЗаполнено(Тема) Тогда
		ПараметрыФормы = Новый Структура("Предмет", Предмет);
		ОткрытьФорму("Справочник.СообщенияОбсуждений.Форма.ФормаЭлемента", ПараметрыФормы);
		Возврат;
	КонецЕсли;
	
	Сообщение = ПолучитьТекущееСообщение(Истина);
	Если Сообщение = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура("Сообщение", Сообщение);
	ОткрытьФорму("Справочник.СообщенияОбсуждений.Форма.ФормаЭлемента", 
		ПараметрыФормы,
		ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура ПереключитьТолькоНепрочтенные()
	
	Параметр =
		Список.Параметры.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ТолькоНепрочтенные"));
	Параметр.Использование = Ложь;
	
	Элементы.ТолькоНепрочтенные.Пометка = ТолькоНепрочтенные;
	
	Если ТолькоНепрочтенные Тогда
		Список.Параметры.УстановитьЗначениеПараметра("ТолькоНепрочтенные", ТолькоНепрочтенные);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПереключитьОтображатьУдаленные(ОбновитьДанныеОтображения)
	
	Элементы.ОтображатьУдаленные.Пометка = ОтображатьУдаленные;
	Список.Параметры.УстановитьЗначениеПараметра("ОтображатьУдаленные", ОтображатьУдаленные);
	Если ОбновитьДанныеОтображения Тогда
		ОбновитьСервер();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПереключитьВидПросмотра(ОбновитьДанныеОтображения)
	
	Если ВидПросмотра =
			ПредопределенноеЗначение("Перечисление.ВидыПросмотраСпискаОбъектов.Списком") Тогда
		
		Элементы.СтраницаДерево.Видимость = Ложь;
		Элементы.СтраницаСписок.Видимость = Истина;
		
		Элементы.ВключитьПросмотрСписком.Пометка = Истина;
		Элементы.ВключитьПросмотрДеревом.Пометка = Ложь;
		
		Элементы.ФормаГруппаОсновныеДерево.Видимость = Ложь;
		Элементы.ФормаГруппаДополнительныеДерево.Видимость = Ложь;
		Элементы.ДеревоВывестиСписок.Видимость = Ложь;
		
		Элементы.ФормаГруппаОсновныеСписок.Видимость = Истина;
		Элементы.ФормаГруппаДополнительныеСписок.Видимость = Истина;
		Элементы.ФормаГруппаНастройкиСписка.Видимость = Истина;
		Элементы.СписокНастройкаСписка.Видимость = Истина;
		Элементы.СписокВывестиСписок.Видимость = Истина;
		
		РежимОтображенияСообщенийДеревом = Ложь;
		
	ИначеЕсли ВидПросмотра =
			ПредопределенноеЗначение("Перечисление.ВидыПросмотраСпискаОбъектов.ПоПапкам") Тогда
		
		Элементы.СтраницаДерево.Видимость = Истина;
		Элементы.СтраницаСписок.Видимость = Ложь;
		
		Элементы.ВключитьПросмотрСписком.Пометка = Ложь;
		Элементы.ВключитьПросмотрДеревом.Пометка = Истина;
		
		Элементы.ФормаГруппаОсновныеДерево.Видимость = Истина;
		Элементы.ФормаГруппаДополнительныеДерево.Видимость = Истина;
		Элементы.ДеревоВывестиСписок.Видимость = Истина;
		
		Элементы.ФормаГруппаОсновныеСписок.Видимость = Ложь;
		Элементы.ФормаГруппаДополнительныеСписок.Видимость = Ложь;
		Элементы.ФормаГруппаНастройкиСписка.Видимость = Ложь;
		Элементы.СписокНастройкаСписка.Видимость = Ложь;
		Элементы.СписокВывестиСписок.Видимость = Ложь;
		
		РежимОтображенияСообщенийДеревом = Истина;
		
	Иначе
		
		ВидПросмотра = ПредопределенноеЗначение("Перечисление.ВидыПросмотраСпискаОбъектов.Списком");
		ПереключитьВидПросмотра(Ложь);
		
	КонецЕсли;
	
	Если ОбновитьДанныеОтображения Тогда
		ОбновитьСервер();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьТекущееСообщениеНаСервере()
	
	Если ЗначениеЗаполнено(ТекущееСообщение) Тогда
		
		Если ЗначениеЗаполнено(ТекущееСообщение.ДатаИзменения) Тогда
			ДатаСообщения = ТекущееСообщение.ДатаИзменения;
		Иначе
			ДатаСообщения = ТекущееСообщение.ДатаСоздания;
		КонецЕсли;
		
		ТекущееСообщениеТекст = 
			РаботаСОбсуждениямиКлиентСервер.СформироватьТекстовоеПредставлениеСообщения(
				ТекущееСообщение.ТекстСообщения,
				ТекущееСообщение.Автор,
				ДатаСообщения);
		ТекущееСообщениеПрочтено = РаботаСПрочтениями.ПолучитьСвойствоПрочтен(ТекущееСообщение);
		
		ОбновитьФайлыСообщения();
		ОбновитьГолосованиеСервер();
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
