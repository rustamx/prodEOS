&НаКлиенте
Перем РаскрытыеРазделы;

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ВидПросмотра = ПредопределенноеЗначение("Перечисление.ВидыПросмотраСпискаОбъектов.Списком");
	Список.Параметры.УстановитьЗначениеПараметра("Пользователь", Пользователи.ТекущийПользователь());
	
	// Отображение удаленных
	ПереключитьОтображатьУдаленные(Ложь);
	
	// Автообновление
	Если ОбщегоНазначенияДокументооборот.ПриложениеЯвляетсяВебКлиентом() Тогда
		Элементы.СписокКонтекстноеМенюНастроитьАвтообновление.Видимость = Ложь;
	Иначе
		Автообновление.ЗагрузитьНастройкиАвтообновленияСписка(ЭтаФорма, "Список");
		Элементы.СписокКонтекстноеМенюНастроитьАвтообновление.Видимость = Истина;
	КонецЕсли;
	
	// Обновление данных отображения
	ОбновитьСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ВидПросмотра = ПредопределенноеЗначение("Перечисление.ВидыПросмотраСпискаОбъектов.Списком")
		И ВыбранныеРазделы.Количество() = 0
		И Не ОтображатьВсеРазделы Тогда
		ПодключитьОбработчикОжидания("ВыполнитьВыбратьРаздел", 0.1, Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если РаботаСПрочтениямиКлиент.ПроверитьНеобходимостьОбновления(
			ИмяСобытия, Параметр, "Обсуждения") Тогда
		Элементы.Список.Обновить();
	КонецЕсли;
	
	Если ИмяСобытия = "Создание_ТемыОбсуждений" Тогда
		Если Параметр.Свойство("Тема") Тогда
			Элементы.Список.ТекущаяСтрока = Параметр.Тема;
		КонецЕсли;
	КонецЕсли;
	
	Если ИмяСобытия = "Изменение_ТемыОбсуждений"
		Или ИмяСобытия = "Изменение_ПапкиФорума" Тогда
		ОбновитьКлиент();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	ТребуетсяОбновитьОтображение = Ложь;
	
	// Отображение удаленных
	Если ОтображатьУдаленные Тогда
		ТребуетсяОбновитьОтображение = Истина;
		ПереключитьОтображатьУдаленные(Ложь);
	КонецЕсли;
	
	// Отображать только непрочтенные
	Если ТолькоНепрочтенные Тогда
		ПереключитьТолькоНепрочтенные();
	КонецЕсли;
	
	// Обновление данных отображения, выбранных разделов
	Если ЗначениеЗаполнено(ВидПросмотра) Или ТребуетсяОбновитьОтображение Тогда
		ОбновитьСервер();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыДеревоРазделов

&НаКлиенте
Процедура ДеревоРазделовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПоказатьЗначение(, ТекущийРаздел);
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоРазделовПриАктивизацииСтроки(Элемент)
	
	Если ВидПросмотра <>
			ПредопределенноеЗначение("Перечисление.ВидыПросмотраСпискаОбъектов.ПоПапкам") Тогда
		Возврат;
	КонецЕсли;
	
	АктивированныйРаздел = ПолучитьТекущийРаздел();
	Если ТекущийРаздел = АктивированныйРаздел Тогда
		Возврат;
	КонецЕсли;
	
	ТекущийРаздел = АктивированныйРаздел;
	ПодключитьОбработчикОжидания("ОбработкаОжидания", 0.2, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоРазделовПередНачаломДобавления(
		Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	
	Если Копирование Тогда
		ПараметрыФормы = Новый Структура("ЗначениеКопирования", ТекущийРаздел);
	Иначе
		ЗначениеЗаполнения = Новый Структура("Родитель", ТекущийРаздел);
		ПараметрыФормы = Новый Структура("ЗначенияЗаполнения", ЗначениеЗаполнения);
	КонецЕсли;
	
	ОткрытьФорму("Справочник.ПапкиФорума.ФормаОбъекта", ПараметрыФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоРазделовПередНачаломИзменения(Элемент, Отказ)
	
	Отказ = Истина;
	ПоказатьЗначение(, ТекущийРаздел);
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоРазделовПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	РаботаСОбсуждениямиКлиент.УстановитьПометкуУдаленияПапкиФорума(ТекущийРаздел, ПолучитьТекущийРазделПометкаУдаления());
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоРазделовПроверкаПеретаскивания(
		Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	СтандартнаяОбработка = Ложь;
	
	// Запрет перетаскивания в пустую папку
	Если Не ЗначениеЗаполнено(Строка) Тогда
		ПараметрыПеретаскивания.Действие = ДействиеПеретаскивания.Отмена;
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоРазделовПеретаскивание(
		Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	СтандартнаяОбработка = Ложь;
	
	Если ТипЗнч(ПараметрыПеретаскивания.Значение) = Тип("Массив") 
		И ПараметрыПеретаскивания.Значение.Количество() > 0 
		И ТипЗнч(ПараметрыПеретаскивания.Значение[0]) = Тип("СправочникСсылка.ТемыОбсуждений") Тогда
		
		ДанныеСтроки = Элемент.ДанныеСтроки(Строка);
		Если ДанныеСтроки = Неопределено Тогда
			Возврат;
		КонецЕсли;
		
		РазделПеретаскивания = ДанныеСтроки.Ссылка;
		РаботаСОбсуждениямиКлиент.ИзменитьРазделТем(
			ПараметрыПеретаскивания.Значение, РазделПеретаскивания);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ТекущаяТема = ПолучитьТекущуюТему(Истина);
	ПоказатьЗначение(, ТекущаяТема);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Отказ = Истина;
	
	Если Копирование Тогда
		ТекущаяТема = ПолучитьТекущуюТему(Истина);
		РаботаСОбсуждениямиКлиент.СкопироватьТему(ТекущаяТема);
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура("ТемаРаздел");
	Если ВидПросмотра <>
			ПредопределенноеЗначение("Перечисление.ВидыПросмотраСпискаОбъектов.Списком") Тогда
		ПараметрыФормы.ТемаРаздел = ТекущийРаздел;
	КонецЕсли;
	ОткрытьФорму("Справочник.СообщенияОбсуждений.ФормаОбъекта", ПараметрыФормы, Элементы.Список);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВключитьПросмотрПапками(Команда)
	
	Если ВидПросмотра <>
			ПредопределенноеЗначение("Перечисление.ВидыПросмотраСпискаОбъектов.ПоПапкам") Тогда
		ВидПросмотра = ПредопределенноеЗначение("Перечисление.ВидыПросмотраСпискаОбъектов.ПоПапкам");
		ОбновитьСервер();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВключитьПросмотрСписком(Команда)
	
	Если ВидПросмотра <>
			ПредопределенноеЗначение("Перечисление.ВидыПросмотраСпискаОбъектов.Списком") Тогда
		ВидПросмотра = ПредопределенноеЗначение("Перечисление.ВидыПросмотраСпискаОбъектов.Списком");
		ОбновитьСервер();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВсеСообщения(Команда)
	
	ОткрытьФорму("Справочник.СообщенияОбсуждений.ФормаСписка");
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьРаздел(Команда)
	
	ВыполнитьВыбратьРаздел();
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьАвтообновление(Команда)
	
	АвтообновлениеКлиент.УстановитьПараметрыАвтообновленияСписка(ЭтаФорма, "Список");
	
КонецПроцедуры

&НаКлиенте
Процедура ОтображатьУдаленные(Команда)
	
	ОтображатьУдаленные = Не ОтображатьУдаленные;
	
	ПередОбновлениемНаКлиенте();
	ПереключитьОтображатьУдаленные();
	ПослеОбновленияНаКлиенте();
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьПрава(Команда)
	
	Папка = Элементы.ДеревоРазделов.ТекущиеДанные.Ссылка;
	Если Не ЗначениеЗаполнено(Папка) Тогда
		Возврат;
	КонецЕсли;
	
	// Открытие формы настройки прав
	ПараметрыФормы = Новый Структура("СсылкаНаОбъект", Папка);
	ОткрытьФорму("ОбщаяФорма.НастройкиПравПапок", ПараметрыФормы, , Папка);
	
КонецПроцедуры

&НаКлиенте
Процедура ПометитьВсеВГруппеКакПрочтенные(Команда)
	
	Темы = ПолучитьВыбранныеТемы(Истина);
	КоличествоТем = Темы.Количество();
	Если Темы.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ЧислоПрочтенных = 0;
	ВыделенныеСтроки = Элементы.Список.ВыделенныеСтроки;
	Для каждого Ссылка Из ВыделенныеСтроки Цикл
		
		Если ТипЗнч(Ссылка) = Тип("СправочникСсылка.ТемыОбсуждений") Тогда
			
			Прочтен = Элементы.Список.ДанныеСтроки(Ссылка).Прочтен;
			
			Если Прочтен Тогда
				
				ЧислоПрочтенных = ЧислоПрочтенных + 1;
				
			КонецЕсли;	
			
		КонецЕсли;
		
	КонецЦикла;
	
	ПоставитьПометкуПрочтения = Истина;
	
	Если КоличествоТем = ЧислоПрочтенных Тогда
		ПоставитьПометкуПрочтения = Ложь;
	Иначе
		ПоставитьПометкуПрочтения = Истина;
	КонецЕсли;	
	
	Если КоличествоТем > 1 Тогда
		Если ПоставитьПометкуПрочтения Тогда
			Состояние(НСтр("ru = 'Темы помечаются как прочтенные. Пожалуйста подождите...'; en = 'Threadsa are being marked as read. Please wait...'"));
		Иначе
			Состояние(НСтр("ru = 'Снимается пометка прочтенности. Пожалуйста подождите...'; en = 'Unmarking as read. Please wait...'"));
		КонецЕсли;	
	КонецЕсли;
	
	УстановитьПрочтение(Темы, ПоставитьПометкуПрочтения);
	
	Если КоличествоТем > 1 Тогда
		
		Если ПоставитьПометкуПрочтения Тогда
			ТекстСостояния = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Темы помечены как прочтенные (%1)'; en = 'Threads (%1) have been marked as read'"),
				КоличествоТем);
		Иначе
			ТекстСостояния = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Сняты пометки прочтенности тем (%1)'; en = 'Threads (%1) has been unmarked as read'"),
				КоличествоТем);
		КонецЕсли;
			
		Состояние(ТекстСостояния);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТолькоНепрочтенные(Команда)
	
	ТолькоНепрочтенные = Не ТолькоНепрочтенные;
	ПереключитьТолькоНепрочтенные();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы_Отправить

&НаКлиенте
Процедура ПроцессИсполнение(Команда)
	
	ОткрытьПомощникСозданияОсновныхПроцессов("Исполнение");
	
КонецПроцедуры

&НаКлиенте
Процедура ПроцессОзнакомление(Команда)
	
	ОткрытьПомощникСозданияОсновныхПроцессов("Ознакомление");
	
КонецПроцедуры

&НаКлиенте
Процедура ПроцессОбработка(Команда)
	
	ОткрытьПомощникСозданияОсновныхПроцессов("КомплексныйПроцесс");
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьПомощникСозданияОсновныхПроцессов(ТипыОпераций)
	
	ВыделенныеСтроки = Новый Массив;
	
	Для Каждого СтрСписка Из Элементы.Список.ВыделенныеСтроки Цикл
		ВыделенныеСтроки.Добавить(Элементы.Список.ДанныеСтроки(СтрСписка).Ссылка);
	КонецЦикла;
	
	РаботаСБизнесПроцессамиКлиент.ОткрытьПомощникСозданияОсновныхПроцессов(
		ТипыОпераций, ВыделенныеСтроки, ЭтаФорма, "ФормаСписка");
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПереключитьВидПросмотра()
	
	Параметр = Список.Параметры.НайтиЗначениеПараметра(
		Новый ПараметрКомпоновкиДанных("ВыбранныеРазделы"));
	Параметр.Использование = Ложь;
	
	Если ВидПросмотра =
			ПредопределенноеЗначение("Перечисление.ВидыПросмотраСпискаОбъектов.Списком") Тогда
		
		Элементы.ДеревоРазделов.Видимость = Ложь;
		Элементы.Раздел.Видимость = Истина;
		Элементы.ВключитьПросмотрСписком.Пометка = Истина;
		Элементы.ВключитьПросмотрПапками.Пометка = Ложь;
		
		Элементы.ФормаВыбратьРаздел.Видимость = Истина;
		
		Если Не ОтображатьВсеРазделы Тогда
			МассивРазделов = ВыбранныеРазделы.ВыгрузитьЗначения();
			Список.Параметры.УстановитьЗначениеПараметра("ВыбранныеРазделы", МассивРазделов);
		КонецЕсли;
		
	ИначеЕсли ВидПросмотра =
			ПредопределенноеЗначение("Перечисление.ВидыПросмотраСпискаОбъектов.ПоПапкам") Тогда
		
		Элементы.ДеревоРазделов.Видимость = Истина;
		Элементы.Раздел.Видимость = Ложь;
		Элементы.ВключитьПросмотрСписком.Пометка = Ложь;
		Элементы.ВключитьПросмотрПапками.Пометка = Истина;
		
		Элементы.ФормаВыбратьРаздел.Видимость = Ложь;
		
		Список.Параметры.УстановитьЗначениеПараметра("ВыбранныеРазделы", ТекущийРаздел);
		Элементы.Список.ТекущаяСтрока = Неопределено; // Для исключения лишнего КСВ при смене раздела
		
	Иначе
		ВидПросмотра = ПредопределенноеЗначение("Перечисление.ВидыПросмотраСпискаОбъектов.Списком");
		ПереключитьВидПросмотра();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОжидания()
	
	Если ТекущийРаздел <> ПолучитьТекущийРаздел()  Тогда
		Возврат;
	КонецЕсли;
	
	ОбновитьКлиент();
	
КонецПроцедуры

&НаКлиенте 
Процедура УстановитьПрочтение(Сообщение, Прочтен = Истина)
	
	ПрочтениеУстановлено = РаботаСПрочтениями.УстановитьСвойствоПрочтен(Сообщение, Прочтен);
	РаботаСПрочтениямиКлиент.ОповеститьОПрочтении(
		Тип("СправочникСсылка.СообщенияОбсуждений"), ПрочтениеУстановлено);
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьТекущуюТему(ВыводитьПредупреждение = Ложь)
	
	ТекущаяСтрока = Элементы.Список.ТекущаяСтрока;
	Если ТекущаяСтрока = Неопределено Тогда
		Если ВыводитьПредупреждение Тогда
			ТекстПредупреждения = НСтр("ru = 'Не выбрана тема.'; en = 'Thread is not selected.'");
			ПоказатьПредупреждение(, ТекстПредупреждения);
		КонецЕсли;
		Возврат Неопределено;
	КонецЕсли;
	
	Если Элементы.Список.ТекущиеДанные <> Неопределено 
		И Не Элементы.Список.ТекущиеДанные.Свойство("Ссылка") Тогда
		Если ВыводитьПредупреждение Тогда
			ТекстПредупреждения = НСтр("ru = 'Не выбрана тема.'; en = 'Thread is not selected.'");
			ПоказатьПредупреждение(, ТекстПредупреждения);
		КонецЕсли;
		Возврат Неопределено;
	КонецЕсли;
	
	Тема = Элементы.Список.ТекущиеДанные.Ссылка;
	Если Не ТипЗнч(Тема) = Тип("СправочникСсылка.ТемыОбсуждений") Тогда
		Если ВыводитьПредупреждение Тогда
			ТекстПредупреждения = НСтр("ru = 'Не выбрана тема.'; en = 'Thread is not selected.'");
			ПоказатьПредупреждение(, ТекстПредупреждения);
		КонецЕсли;
		Возврат Неопределено;
	КонецЕсли;
	
	Возврат Тема;
	
КонецФункции

&НаКлиенте
Функция ПолучитьВыбранныеТемы(ВыводитьПредупреждение = Ложь)
	
	Результат = Новый Массив;
	
	ВыделенныеСтроки = Элементы.Список.ВыделенныеСтроки;
	
	Для каждого Ссылка Из ВыделенныеСтроки Цикл
		
		Если ТипЗнч(Ссылка) = Тип("СправочникСсылка.ТемыОбсуждений") Тогда
			Результат.Добавить(Ссылка);
		КонецЕсли;
		
	КонецЦикла;
	
	Тема = ПолучитьТекущуюТему(Ложь);
	
	Если ЗначениеЗаполнено(Тема)
		И Результат.Найти(Тема) = Неопределено Тогда
		Результат.Добавить(Тема);
	КонецЕсли;
	
	Если Результат.Количество() = 0 И ВыводитьПредупреждение Тогда
		ТекстПредупреждения = НСтр("ru = 'Не выбрана тема.'; en = 'Thread is not selected.'");
		ПоказатьПредупреждение(, ТекстПредупреждения);
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Процедура ПереключитьОтображатьУдаленные(ОбновитьДанные = Истина)
	
	Элементы.ФормаОтображатьУдаленные.Пометка = ОтображатьУдаленные;
	Список.Параметры.УстановитьЗначениеПараметра("ОтображатьУдаленные", ОтображатьУдаленные);
	Если ОбновитьДанные Тогда
		ЗаполнитьДеревоРазделов();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПереключитьТолькоНепрочтенные()
	
	Параметр = Список.Параметры.НайтиЗначениеПараметра(
		Новый ПараметрКомпоновкиДанных("ТолькоНепрочтенные"));
	Параметр.Использование = Ложь;
	
	Элементы.ФормаТолькоНепрочтенные.Пометка = ТолькоНепрочтенные;
	
	Если ТолькоНепрочтенные Тогда
		Список.Параметры.УстановитьЗначениеПараметра("ТолькоНепрочтенные", ТолькоНепрочтенные);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДеревоРазделов()
	
	Если ВидПросмотра <>
			ПредопределенноеЗначение("Перечисление.ВидыПросмотраСпискаОбъектов.ПоПапкам") Тогда
		Возврат;
	КонецЕсли;
	
	Дерево = РеквизитФормыВЗначение("ДеревоРазделов");
	Дерево.Строки.Очистить();
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	СправочникПапкиФорума.Ссылка КАК Ссылка,
		|	СправочникПапкиФорума.Родитель,
		|	СправочникПапкиФорума.ПометкаУдаления,
		|	СправочникПапкиФорума.Наименование КАК Наименование,
		|	ВЫБОР
		|		КОГДА СправочникПапкиФорума.ПометкаУдаления
		|			ТОГДА 1
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ИндексКартинки
		|ИЗ
		|	Справочник.ПапкиФорума КАК СправочникПапкиФорума";
	
	Если Не ОтображатьУдаленные Тогда
		Запрос.Текст = Запрос.Текст + "
			|ГДЕ
			|	СправочникПапкиФорума.ПометкаУдаления = ЛОЖЬ";
	КонецЕсли;
	
	Запрос.Текст = Запрос.Текст + "
		|УПОРЯДОЧИТЬ ПО
		|	Наименование ИЕРАРХИЯ";
	
	Запрос.УстановитьПараметр("ОтображатьУдаленные", ОтображатьУдаленные);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Родитель = Выборка.Родитель;
		Если Не ЗначениеЗаполнено(Родитель) Тогда 
			НоваяСтрока = Дерево.Строки.Добавить();
		Иначе	
			НайденнаяСтрока = Дерево.Строки.Найти(Родитель, "Ссылка", Истина);
			Если НайденнаяСтрока <> Неопределено Тогда
				НоваяСтрока = НайденнаяСтрока.Строки.Добавить();
			Иначе
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		
	КонецЦикла;
	
	ЗначениеВРеквизитФормы(Дерево, "ДеревоРазделов");
	
	Индекс = -1;
	РаботаСОбсуждениямиКлиентСервер.НайтиСообщениеВДеревеПоСсылке(
		ДеревоРазделов.ПолучитьЭлементы(), ТекущийРаздел, Индекс);
	Если Индекс > -1 Тогда
		Элементы.ДеревоРазделов.ТекущаяСтрока = Индекс;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьТекущийРаздел()
	
	Если ВидПросмотра <>
			ПредопределенноеЗначение("Перечисление.ВидыПросмотраСпискаОбъектов.ПоПапкам") Тогда
		Возврат ПредопределенноеЗначение("Справочник.ПапкиФорума.ПустаяСсылка");
	КонецЕсли;
	
	ТекущиеДанные = Элементы.ДеревоРазделов.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат ПредопределенноеЗначение("Справочник.ПапкиФорума.ПустаяСсылка");
	КонецЕсли;
	
	Возврат ТекущиеДанные.Ссылка;
	
КонецФункции

&НаКлиенте
Функция ПолучитьТекущийРазделПометкаУдаления()
	
	Если ВидПросмотра <>
			ПредопределенноеЗначение("Перечисление.ВидыПросмотраСпискаОбъектов.ПоПапкам") Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ТекущиеДанные = Элементы.ДеревоРазделов.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Возврат ТекущиеДанные.ПометкаУдаления;
	
КонецФункции

&НаКлиенте
Процедура ПередОбновлениемНаКлиенте()
	
	Если ВидПросмотра <>
			ПредопределенноеЗначение("Перечисление.ВидыПросмотраСпискаОбъектов.Списком") Тогда
		
		Если РаскрытыеРазделы = Неопределено Тогда
			РаскрытыеРазделы = Новый СписокЗначений;
		Иначе
			РаскрытыеРазделы.Очистить();
		КонецЕсли;
		
		РаботаСОбсуждениямиКлиент.ПолучитьМассивРаскрытыхСообщений(
			Элементы.ДеревоРазделов,
			ДеревоРазделов.ПолучитьЭлементы(),
			РаскрытыеРазделы);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеОбновленияНаКлиенте()
	
	Если ВидПросмотра <>
			ПредопределенноеЗначение("Перечисление.ВидыПросмотраСпискаОбъектов.Списком") Тогда
		
		РаботаСОбсуждениямиКлиент.УстановитьРазвернутостьЭлементовДерева(
			Элементы.ДеревоРазделов,
			ДеревоРазделов,
			РаскрытыеРазделы);
		РаскрытыеРазделы = Неопределено;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьКлиент()
	
	ПередОбновлениемНаКлиенте();
	ОбновитьСервер();
	ПослеОбновленияНаКлиенте();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьРазделЗавершение(Результат, Параметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПередОбновлениемНаКлиенте();
	ВыбратьРазделЗавершениеСервер(Результат);
	ПослеОбновленияНаКлиенте();
	
КонецПроцедуры

&НаСервере
Процедура ВыбратьРазделЗавершениеСервер(СтруктураРазделыОтображения)
	
	ВыбранныеРазделы = СтруктураРазделыОтображения.ВыбранныеРазделы;
	ОтображатьВсеРазделы = СтруктураРазделыОтображения.ОтображатьВсеРазделы;
	
	РаботаСОбсуждениями.УстановитьПерсональнуюНастройку("ВыбранныеРазделы", ВыбранныеРазделы);
	РаботаСОбсуждениями.УстановитьПерсональнуюНастройку(
		"ДоступныеРазделы", СтруктураРазделыОтображения.ДоступныеРазделы);
	РаботаСОбсуждениями.УстановитьПерсональнуюНастройку("ОтображатьВсеРазделы", ОтображатьВсеРазделы);
	
	ОбновитьСервер();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСервер()
	
	ОбновитьВыбранныеРазделы();
	ЗаполнитьДеревоРазделов();
	ПереключитьВидПросмотра();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьВыбратьРаздел()
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ВыбратьРазделЗавершение", ЭтотОбъект);
	ОткрытьФорму("Справочник.ПапкиФорума.Форма.ВыборРазделов", , , , , , ОписаниеОповещения);
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьВыбранныеРазделы()
	
	Если ВидПросмотра <> ПредопределенноеЗначение("Перечисление.ВидыПросмотраСпискаОбъектов.Списком") Тогда
		Возврат;
	КонецЕсли;
	
	РазделыОтображения = РаботаСОбсуждениями.ПолучитьРазделыОтображения();
	ВыбранныеРазделы = РазделыОтображения.ВыбранныеРазделы;
	ОтображатьВсеРазделы = РазделыОтображения.ОтображатьВсеРазделы;
	
КонецПроцедуры

#КонецОбласти
