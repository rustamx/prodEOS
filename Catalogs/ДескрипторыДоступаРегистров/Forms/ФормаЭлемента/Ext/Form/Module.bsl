
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	ЗаполнитьТаблицуПрав();
	ЗаполнитьЗаголовкиСтраниц();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьЗаголовкиСтраниц()
	
	КоличествоПользователейВПравах = ПраваДоступа.Количество();
	Если КоличествоПользователейВПравах > 0 Тогда
		ЗаголовокПраваДоступа = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Права доступа (%1)'; en = 'Permissions (%1)'"), КоличествоПользователейВПравах);
	Иначе
		ЗаголовокПраваДоступа = НСтр("ru = 'Права доступа'; en = 'Permissions'");
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ОбновитьПрава(Команда)
	
	ОбновитьПраваНаСервере();
	ЗаполнитьЗаголовкиСтраниц()
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьПраваНаСервере()
	
	УстановитьПривилегированныйРежим(Истина);
	
	Протокол = Новый Массив;
	Справочники.ДескрипторыДоступаРегистров.ОбновитьПрава(Объект.Ссылка, Протокол, Истина);
	РегистрыСведений.ОчередьОбновленияПравДоступа.Удалить(Объект.Ссылка);
	
	ЗаполнитьТаблицуПрав();
	ЗаполнитьЗаголовкиСтраниц();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЦ ФОРМЫ

&НаКлиенте
Процедура ПраваДоступаВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере	
Процедура ЗаполнитьТаблицуПрав()
	
	ТаблицаПрав = ДокументооборотПраваДоступа.ПолучитьТаблицуПравДляОтображенияВИнтерфейсе(Объект.Ссылка);
	ПраваДоступа.Загрузить(ТаблицаПрав);
	
КонецПроцедуры


