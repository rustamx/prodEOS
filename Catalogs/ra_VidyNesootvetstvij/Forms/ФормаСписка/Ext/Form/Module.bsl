
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьДеревоИспользования();	
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВариантДереваПриИзменении(Элемент)
	
	ЗаполнитьДеревоИспользования();
	Элементы.ДеревоПрименения.Развернуть(ДеревоПрименения.ПолучитьЭлементы()[0].ПолучитьИдентификатор(), Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоПримененияПриАктивизацииСтроки(Элемент)
	
	VidPredmetaNesootvetstviya      = Список.КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("VidPredmetaNesootvetstviyaFilter"));
	EhtapVyyavleniyaNesootvetstvija = Список.КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("EhtapVyyavleniyaNesootvetstvijaFilter"));
	
	VidPredmetaNesootvetstviya.Использование = Истина;	
	EhtapVyyavleniyaNesootvetstvija.Использование = Истина;
	
	ТекущиеДанные = Элементы.ДеревоПрименения.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено или ТекущиеДанные.Уровень = 0 Тогда
		
		VidPredmetaNesootvetstviya.Значение = ПредопределенноеЗначение("Перечисление.ra_VidyPredmetovNesootvetstviya.ПустаяСсылка");
		EhtapVyyavleniyaNesootvetstvija.Значение = ПредопределенноеЗначение("Справочник.ra_EhtapyVyyavleniyaNesootvetstvij.ПустаяСсылка");
		
	Иначе
		
		
		Если ТекущиеДанные.Уровень = 1 Тогда
			
			Если ВариантДерева Тогда
				VidPredmetaNesootvetstviya.Значение = ПредопределенноеЗначение("Перечисление.ra_VidyPredmetovNesootvetstviya.ПустаяСсылка");
				EhtapVyyavleniyaNesootvetstvija.Значение = ТекущиеДанные.ПредметЭтап;
			Иначе
				VidPredmetaNesootvetstviya.Значение = ТекущиеДанные.ПредметЭтап;
				EhtapVyyavleniyaNesootvetstvija.Значение = ПредопределенноеЗначение("Справочник.ra_EhtapyVyyavleniyaNesootvetstvij.ПустаяСсылка");
			КонецЕсли;
			
		Иначе
			
			Если ВариантДерева Тогда
				VidPredmetaNesootvetstviya.Значение = ТекущиеДанные.ПредметЭтап;
				EhtapVyyavleniyaNesootvetstvija.Значение = ТекущиеДанные.ПолучитьРодителя().ПредметЭтап;
			Иначе
				VidPredmetaNesootvetstviya.Значение = ТекущиеДанные.ПолучитьРодителя().ПредметЭтап;
				EhtapVyyavleniyaNesootvetstvija.Значение = ТекущиеДанные.ПредметЭтап;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
		
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьДеревоИспользования()
	
	Если ВариантДерева Тогда
		Поле1 = "EhtapVyyavleniyaNesootvetstvija";
		Поле2 = "VidPredmetaNesootvetstviya";
	Иначе
		Поле1 = "VidPredmetaNesootvetstviya";
		Поле2 = "EhtapVyyavleniyaNesootvetstvija";
	КонецЕсли;
	
	Запрос = Новый Запрос(
	СтрШаблон("ВЫБРАТЬ
	|	ra_ZavisimostPredmetovOtEtapov.EhtapVyyavleniyaNesootvetstvija КАК EhtapVyyavleniyaNesootvetstvija,
	|	ra_ZavisimostPredmetovOtEtapov.VidPredmetaNesootvetstviya КАК VidPredmetaNesootvetstviya
	|ИЗ
	|	РегистрСведений.ra_ZavisimostPredmetovOtEtapov КАК ra_ZavisimostPredmetovOtEtapov
	|
	|УПОРЯДОЧИТЬ ПО
	|	%1,
	|	%2
	|ИТОГИ ПО
	|	%1
	|АВТОУПОРЯДОЧИВАНИЕ",
	Поле1, Поле2));
	
	ДеревоЗапроса = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ЭлементыПрименения0 = ДеревоПрименения.ПолучитьЭлементы();
	ЭлементыПрименения0.Очистить();
	
	СтрокаПрименения0   = ЭлементыПрименения0.Добавить();
	ЭлементыПрименения1 = СтрокаПрименения0.ПолучитьЭлементы();
	
	Для каждого Строка1 из ДеревоЗапроса.Строки Цикл
		
		СтрокаПрименения1 = ЭлементыПрименения1.Добавить();
		СтрокаПрименения1.ПредметЭтап = Строка1[Поле1];
		СтрокаПрименения1.Уровень     = 1;
		
		ЭлементыПрименения2 = СтрокаПрименения1.ПолучитьЭлементы();
		
		Для каждого Строка2 из Строка1.Строки Цикл
			
			СтрокаПрименения2 = ЭлементыПрименения2.Добавить();
			СтрокаПрименения2.ПредметЭтап = Строка2[Поле2];
			СтрокаПрименения2.Уровень     = 2;
			
		КонецЦикла;
		
	КонецЦикла;
			
КонецПроцедуры

#КонецОбласти