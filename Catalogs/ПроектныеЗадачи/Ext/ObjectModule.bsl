#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	// Проверка дублей исполнителей
	КоличествоИсполнителей = Исполнители.Количество();
	Для Инд1 = 0 По КоличествоИсполнителей-2 Цикл
		Строка1 = Исполнители[Инд1];
		Если Не ЗначениеЗаполнено(Строка1.Исполнитель) Тогда 
			Продолжить;
		КонецЕсли;
		
		Для Инд2 = Инд1+1 По КоличествоИсполнителей-1 Цикл
			Строка2 = Исполнители[Инд2];
			
			Если Строка1.Исполнитель = Строка2.Исполнитель Тогда 
				
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Исполнитель ""%1"" указан дважды в списке исполнителей!'; en = 'Performer ""%1"" is specified twice in the list of performers!'"), 
					Строка(Строка2.Исполнитель));
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					ТекстСообщения, ЭтотОбъект,
					"Исполнители[" + Формат(Строка2.НомерСтроки-1, "ЧГ=0") + "].Исполнитель",, 
					Отказ);
				
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	// Проверка дублей предшественников
	КоличествоПредшественников = Предшественники.Количество();
	Для Инд1 = 0 По КоличествоПредшественников-2 Цикл
		Строка1 = Предшественники[Инд1];
		Если Не ЗначениеЗаполнено(Строка1.Предшественник) Тогда 
			Продолжить;
		КонецЕсли;
		
		Для Инд2 = Инд1+1 По КоличествоПредшественников-1 Цикл
			Строка2 = Предшественники[Инд2];
			
			Если Строка1.Предшественник = Строка2.Предшественник Тогда 
				
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Предшественник ""%1"" указан дважды в списке предшественников!'; en = 'Predecessor ""%1"" is specified twice in the list of predecessors!'"), 
					Строка(Строка2.Предшественник));
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					ТекстСообщения, ЭтотОбъект,
					"Предшественники[" + Формат(Строка2.НомерСтроки-1, "ЧГ=0") + "].Предшественник",, 
					Отказ);
				
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Если ТипОграничения = Перечисления.ТипыОграниченийПроектныхЗадач.НачалоНеПозднее 
	 Или ТипОграничения = Перечисления.ТипыОграниченийПроектныхЗадач.НачалоНеРанее
	 Или ТипОграничения = Перечисления.ТипыОграниченийПроектныхЗадач.ОкончаниеНеПозднее
	 Или ТипОграничения = Перечисления.ТипыОграниченийПроектныхЗадач.ОкончаниеНеРанее 
	 Или ТипОграничения = Перечисления.ТипыОграниченийПроектныхЗадач.ФиксированноеНачало
	 Или ТипОграничения = Перечисления.ТипыОграниченийПроектныхЗадач.ФиксированноеОкончание Тогда 
		ПроверяемыеРеквизиты.Добавить("ДатаОграничения");
	КонецЕсли;	
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Ссылка) Тогда
		ДополнительныеСвойства.Вставить("ЭтоНовый", Истина);
	КонецЕсли;
	
	РеквизитыСсылки = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Ссылка,
		"ПометкаУдаления,
		|Родитель");
	
	ПредыдущаяПометкаУдаления = Ложь;
	Если Не Ссылка.Пустая() Тогда
		ПредыдущаяПометкаУдаления = РеквизитыСсылки.ПометкаУдаления;
		
		Если ПометкаУдаления <> ПредыдущаяПометкаУдаления Тогда 
			Если ПометкаУдаления Тогда
				ДополнительныеСвойства.Вставить("НужноПометитьНаУдалениеБизнесСобытия", Истина);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	ТекущийРодитель = РеквизитыСсылки.Родитель;
	ДополнительныеСвойства.Вставить("ТекущийРодитель", ТекущийРодитель);
	ДополнительныеСвойства.Вставить(
		"ПометкаУдаления", 
		?(Ссылка.Пустая(), Ложь, Ссылка.ПометкаУдаления));
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	Если ДополнительныеСвойства.Свойство("ПроверитьПредшественников") И ДополнительныеСвойства.ПроверитьПредшественников Тогда
		РаботаСПроектами.ПроверитьПредшественников(Ссылка);
	КонецЕсли;	
		
	// Возможно, выполнена явная регистрация событий при загрузке объекта.
	Если Не ДополнительныеСвойства.Свойство("НеРегистрироватьБизнесСобытия") Тогда
		Если ДополнительныеСвойства.Свойство("ЭтоНовый") И ДополнительныеСвойства.ЭтоНовый Тогда
			БизнесСобытияВызовСервера.ЗарегистрироватьСобытие(Ссылка, Справочники.ВидыБизнесСобытий.СозданиеПроектнойЗадачи);	
		Иначе
			БизнесСобытияВызовСервера.ЗарегистрироватьСобытие(Ссылка, Справочники.ВидыБизнесСобытий.ИзменениеПроектнойЗадачи);
		КонецЕсли;	
	КонецЕсли;	
	
	Если ДополнительныеСвойства.Свойство("НужноПометитьНаУдалениеБизнесСобытия") Тогда
		БизнесСобытияВызовСервера.ПометитьНаУдалениеСобытияПоИсточнику(Ссылка);
	КонецЕсли;	

	// установка признака суммарной задачи у родителя
	ТекущийРодитель = ДополнительныеСвойства.ТекущийРодитель;
	Если Родитель <> ТекущийРодитель Тогда 
		
		Если ЗначениеЗаполнено(ТекущийРодитель) Тогда 
			ЭтоСуммарнаяЗадача = РаботаСПроектами.ЭтоСуммарнаяЗадача(ТекущийРодитель);
			Если ЭтоСуммарнаяЗадача <> ТекущийРодитель.СуммарнаяЗадача Тогда 
				ЗаблокироватьДанныеДляРедактирования(ТекущийРодитель.Ссылка);
				РодительОбъект = ТекущийРодитель.ПолучитьОбъект();
				РодительОбъект.СуммарнаяЗадача = ЭтоСуммарнаяЗадача;
				РодительОбъект.Записать();
			КонецЕсли;
		КонецЕсли;	
		
		Если ЗначениеЗаполнено(Родитель) Тогда 
			ЭтоСуммарнаяЗадача = РаботаСПроектами.ЭтоСуммарнаяЗадача(Родитель);
			Если ЭтоСуммарнаяЗадача <> Родитель.СуммарнаяЗадача Тогда 
				ЗаблокироватьДанныеДляРедактирования(Родитель.Ссылка);
				РодительОбъект = Родитель.ПолучитьОбъект();
				РодительОбъект.СуммарнаяЗадача = ЭтоСуммарнаяЗадача;
				РодительОбъект.Записать();
			КонецЕсли;
		КонецЕсли;	
		
	КонецЕсли;	
	
	Если ПометкаУдаления <> ДополнительныеСвойства.ПометкаУдаления Тогда
		РаботаСПроектами.ЗаполнитьКодыСДРПроектныхЗадач(Владелец.Ссылка);
	КонецЕсли;
		
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ВстроеннаяПочтаКлиентСервер.ЭтоПисьмо(ДанныеЗаполнения) Тогда
		Предмет = ДанныеЗаполнения;
		Наименование = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДанныеЗаполнения, "Тема");
	КонецЕсли;	
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	СуммарнаяЗадача = Ложь;
	КодСДР = "";
	НомерЗадачиВУровне = 0;
	НачалоФакт = '00010101';
	ОкончаниеФакт = '00010101';
	ДлительностьФакт = 0;

КонецПроцедуры

#КонецЕсли
