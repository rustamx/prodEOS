#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

Перем СтарыйРодитель; // Значение родителя группы до изменения для использования
                      // в обработчике события ПриЗаписи.

Перем СтарыйСоставРабочейГруппы; // Состав до изменения для использования в обработчике
                                 // события ПриЗаписи.

Перем ЭтоНовый; // Показывает, что был записан новый объект.
                // Используются в обработчике события ПриЗаписи.

				// Обновление адресной книги
Перем ОбновитьДанныеГруппыВАдреснойКниге;
Перем ОбновитьСоставГруппыВАдреснойКниге;
Перем ОбновитьДанныеОтображенияГруппыВАдреснойКниге;
Перем ОбновитьСловаПоискаПоГруппеВАдреснойКниге;
Перем ОбновитьДоступностьВПоискеПоРабочейГруппе;

#Область ОбработчикиСобытий

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	ПроверенныеРеквизитыОбъекта = Новый Массив;
	Ошибки = Неопределено;
	
	// Проверка использования родителя.
	Если Родитель = Справочники.РабочиеГруппы.ВсеПользователи Тогда
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки,
			"Объект.Родитель",
			НСтр("ru = 'Предопределенная группа ""Все пользователи"" не может быть родителем.'; en = 'Predefined group ""All users"" can not be a parent.'"),
			"");
	КонецЕсли;
	
	// Проверка незаполненных и повторяющихся пользователей.
	ПроверенныеРеквизитыОбъекта.Добавить("Состав.Пользователь");
	
	Для каждого ТекущаяСтрока Из Состав Цикл;
		НомерСтроки = Состав.Индекс(ТекущаяСтрока);
		
		// Проверка заполнения значения.
		Если НЕ ЗначениеЗаполнено(ТекущаяСтрока.Пользователь) Тогда
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки,
				"Объект.Состав[%1].Пользователь",
				НСтр("ru = 'Пользователь не выбран.'; en = 'User is not selected.'"),
				"Объект.Состав",
				НомерСтроки,
				НСтр("ru = 'Пользователь в строке %1 не выбран.'; en = 'User in line %1 is not specified.'"));
			Продолжить;
		КонецЕсли;
		
		// Проверка наличия повторяющихся значений.
		НайденныеЗначения = Состав.НайтиСтроки(Новый Структура("Пользователь", ТекущаяСтрока.Пользователь));
		Если НайденныеЗначения.Количество() > 1 Тогда
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки,
				"Объект.Состав[%1].Пользователь",
				НСтр("ru = 'Пользователь повторяется.'; en = 'User is repeated.'"),
				"Объект.Состав",
				НомерСтроки,
				НСтр("ru = 'Пользователь в строке %1 повторяется.'; en = 'User in line %1 is repeated.'"));
		КонецЕсли;
	КонецЦикла;
	
	ОбщегоНазначенияКлиентСервер.СообщитьОшибкиПользователю(Ошибки, Отказ);
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, ПроверенныеРеквизитыОбъекта);
	
КонецПроцедуры

// Блокирует недопустимые действия с предопределенной группой "Все пользователи".
Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ЭтоНовый = ЭтоНовый();
	
	Если Ссылка = Справочники.РабочиеГруппы.ВсеПользователи Тогда
		Если НЕ Родитель.Пустая() Тогда
			ВызватьИсключение
				НСтр("ru = 'Предопределенная группа ""Все пользователи""
				           |может быть только в корне.'; en = 'Predefined group ""All users"" can only be at the root.'");
		КонецЕсли;
		Если Состав.Количество() > 0 Тогда
			ВызватьИсключение
				НСтр("ru = 'Добавление пользователей в группу
				           |""Все пользователи"" не поддерживается.'; en = 'Adding users to group ""All users"" is not supported.'");
		КонецЕсли;
	Иначе
		Если Родитель = Справочники.РабочиеГруппы.ВсеПользователи Тогда
			ВызватьИсключение
				НСтр("ru = 'Предопределенная группа ""Все пользователи""
				           |не может быть родителем.'; en = 'Predefined group ""All users"" can not be a parent.'");
		КонецЕсли;
		
		РеквизитыГруппыПоСсылке = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
			Ссылка, "Наименование, Родитель, Состав, ПометкаУдаления, Недействительна");
		
		СтарыйРодитель = ?(
			Ссылка.Пустая(),
			Неопределено,
			РеквизитыГруппыПоСсылке.Родитель);
			
		Если ЗначениеЗаполнено(Ссылка)
		   И Ссылка <> Справочники.РабочиеГруппы.ВсеПользователи Тогда
			
			СтарыйСоставРабочейГруппы =
				РеквизитыГруппыПоСсылке.Состав.Выгрузить();
		КонецЕсли;
		
		// Обновление адресной книги
		ОбновитьДанныеГруппыВАдреснойКниге = Ложь;
		ОбновитьСоставГруппыВАдреснойКниге = Ложь;
		ОбновитьДанныеОтображенияГруппыВАдреснойКниге = Ложь;
		ОбновитьСловаПоискаПоГруппеВАдреснойКниге = Ложь;
		ОбновитьДоступностьВПоискеПоРабочейГруппе = Ложь;
		Если ЭтоНовый Тогда
			ОбновитьДанныеГруппыВАдреснойКниге = Истина;
			ОбновитьСоставГруппыВАдреснойКниге = Истина;
			ОбновитьСловаПоискаПоГруппеВАдреснойКниге = Истина;
		Иначе
			Если РеквизитыГруппыПоСсылке.Родитель <> Родитель Тогда
				ОбновитьДанныеГруппыВАдреснойКниге = Истина;
			КонецЕсли;
			Если РеквизитыГруппыПоСсылке.ПометкаУдаления <> ПометкаУдаления
				Или РеквизитыГруппыПоСсылке.Недействительна <> Недействительна Тогда
				ОбновитьДанныеГруппыВАдреснойКниге = Истина;
				ОбновитьДанныеОтображенияГруппыВАдреснойКниге = Истина;
				ОбновитьДоступностьВПоискеПоРабочейГруппе = Истина;
			КонецЕсли;
			ТекущийСостав = Состав.ВыгрузитьКолонку("Пользователь");
			СтарыйСостав = РеквизитыГруппыПоСсылке.Состав.Выгрузить().ВыгрузитьКолонку("Пользователь");
			Для Каждого Пользователь ИЗ ТекущийСостав Цикл
				Если СтарыйСостав.Найти(Пользователь) = Неопределено Тогда
					ОбновитьСоставГруппыВАдреснойКниге = Истина;
					ОбновитьСловаПоискаПоГруппеВАдреснойКниге = Истина;
					Прервать;
				КонецЕсли;
			КонецЦикла;
			Для Каждого Пользователь ИЗ СтарыйСостав Цикл
				Если ТекущийСостав.Найти(Пользователь) = Неопределено Тогда
					ОбновитьСоставГруппыВАдреснойКниге = Истина;
					ОбновитьСловаПоискаПоГруппеВАдреснойКниге = Истина;
					Прервать;
				КонецЕсли;
			КонецЦикла;
			Если РеквизитыГруппыПоСсылке.Наименование <> Наименование Тогда
				ОбновитьСловаПоискаПоГруппеВАдреснойКниге = Истина;
				ОбновитьДанныеОтображенияГруппыВАдреснойКниге = Истина;
				ОбновитьДанныеГруппыВАдреснойКниге = Истина;
			КонецЕсли;
			
		КонецЕсли;
		
		Если Не ЭтоНовый
			И РеквизитыГруппыПоСсылке.Недействительна <> Недействительна Тогда
			ОбновитьНедействительностьПодчиненныхГрупп();
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	УчастникиИзменений = Новый Соответствие;
	ИзмененныеГруппы   = Новый Соответствие;
	
	Если Ссылка <> Справочники.РабочиеГруппы.ВсеПользователи Тогда
		
		ИзмененияСостава = ПользователиСлужебный.РазличияЗначенийКолонки(
			"Пользователь",
			Состав.Выгрузить(),
			СтарыйСоставРабочейГруппы);
		
		ПользователиСлужебный.ОбновитьСоставыГруппПользователей(
			Ссылка, ИзмененияСостава, УчастникиИзменений, ИзмененныеГруппы);
			
		// Обновление пользователей в контейнерах.
		ОбработанныеКонтейнеры = Новый Массив;
		
		Если СтарыйРодитель <> Родитель Тогда
			
			Если ЗначениеЗаполнено(Родитель) Тогда
				ПользователиСлужебный.ОбновитьСоставыГруппПользователей(
					Родитель, , УчастникиИзменений, ИзмененныеГруппы);
			КонецЕсли;
			
			Если ЗначениеЗаполнено(СтарыйРодитель) Тогда
				ПользователиСлужебный.ОбновитьСоставыГруппПользователей(
					СтарыйРодитель, , УчастникиИзменений, ИзмененныеГруппы);
				// Обновление пользователей в контейнере (старой родительской группе).
				РегистрыСведений.ПользователиВКонтейнерах.ОбновитьДанныеКонтейнера(
					СтарыйРодитель,
					ОбработанныеКонтейнеры);
			КонецЕсли;
		КонецЕсли;
		
		ПользователиСлужебный.ОбновитьИспользуемостьСоставовГруппПользователей(
			Ссылка, УчастникиИзменений, ИзмененныеГруппы);
		
		РегистрыСведений.ПользователиВКонтейнерах.ОбновитьДанныеКонтейнера(Ссылка, ОбработанныеКонтейнеры);
		
	КонецЕсли;
	
	ПользователиСлужебный.ПослеОбновленияСоставовГруппПользователей(
		УчастникиИзменений, ИзмененныеГруппы);
	
	ИнтеграцияСтандартныхПодсистем.ПослеДобавленияИзмененияПользователяИлиГруппы(Ссылка, ЭтоНовый);
	
	ОбновитьПовторноИспользуемыеЗначения();
	
	// Обновление адресной книги
	Если ОбновитьДанныеГруппыВАдреснойКниге Тогда
		Справочники.АдреснаяКнига.ОбновитьДанныеОбъекта(
			Ссылка,
			Родитель,
			Справочники.АдреснаяКнига.ПоРабочимГруппам);
	КонецЕсли;
	Если ОбновитьСоставГруппыВАдреснойКниге Тогда
		ТекущийСостав = Состав.Выгрузить().ВыгрузитьКолонку("Пользователь");
		Справочники.АдреснаяКнига.РасширитьСписокПользователейРолями(ТекущийСостав);
		Справочники.АдреснаяКнига.ОбновитьСписокПодчиненныхОбъектов(
			Ссылка,
			Родитель,
			ТекущийСостав,
			Справочники.АдреснаяКнига.ПоРабочимГруппам);
	КонецЕсли;
	Если ОбновитьДанныеОтображенияГруппыВАдреснойКниге Тогда
		Справочники.АдреснаяКнига.ОбновитьДанныеОтображенияПодчиненногоОбъекта(Ссылка);
	КонецЕсли;
	Если ОбновитьСловаПоискаПоГруппеВАдреснойКниге Тогда
		РегистрыСведений.ПоискВАдреснойКниге.ОбновитьСловаПоискаПоРабочейГруппе(ЭтотОбъект);
	КонецЕсли;
	Если ОбновитьДоступностьВПоискеПоРабочейГруппе Тогда
		РегистрыСведений.ПоискВАдреснойКниге.ОбновитьДоступностьВПоиске(ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ОбновитьНедействительностьПодчиненныхГрупп()
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	РабочиеГруппы.Ссылка
		|ИЗ
		|	Справочник.РабочиеГруппы КАК РабочиеГруппы
		|ГДЕ
		|	РабочиеГруппы.Недействительна <> &Недействительна
		|	И РабочиеГруппы.Родитель = &Ссылка");
	Запрос.УстановитьПараметр("Недействительна", Недействительна);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
		
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ИзменяемыйОбъект = Выборка.Ссылка.ПолучитьОбъект();
		ИзменяемыйОбъект.Заблокировать();
		ИзменяемыйОбъект.Недействительна = Недействительна;
		ИзменяемыйОбъект.Записать();
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
