
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ТекущийПользователь = ПользователиКлиентСервер.ТекущийПользователь();
	ТекущийПользовательПолноправный = ПользователиСерверПовтИсп.ЭтоПолноправныйПользовательИБ();
	
	ЭтоНовый = Объект.Ссылка.Пустая();
	Если ЭтоНовый Тогда 
		Объект.Автор = ТекущийПользователь;
		
		Если ЗначениеЗаполнено(Параметры.ЗначениеКопирования) Тогда 
			Объект.РезультатСогласования = Неопределено;
			Объект.УстановилРезультат = Неопределено;
			Объект.ДатаИсполнения = '00010101';
			Объект.Комментарий = "";
			Объект.Источник = Неопределено;
		КонецЕсли;
		
		Если Параметры.Свойство("Документ") Тогда
			Объект.Документ = Параметры.Документ;
		КонецЕсли;
	КонецЕсли;
	
	Если Параметры.Свойство("Документ") Тогда
		Элементы.Документ.Видимость = Ложь;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.Исполнитель) Тогда 
		Исполнитель = Объект.Исполнитель;
	ИначеЕсли ЗначениеЗаполнено(Объект.РольИсполнителя) Тогда 
		Исполнитель = Объект.РольИсполнителя;
	Иначе
		Исполнитель = Справочники.Пользователи.ПустаяСсылка();
	КонецЕсли;
		
	Если Не ЗначениеЗаполнено(Объект.Источник) Тогда 
		Элементы.Источник.Видимость = Ложь;
	КонецЕсли;
	
	Если РольДоступна("ПолныеПрава") Тогда 
		Элементы.ОтметитьРезультатЗаИсполнителя.Видимость = Ложь;
	КонецЕсли;
	
	УстановитьДоступность();
	
	Если Параметры.Свойство("ТолькоПросмотр") И Параметры.ТолькоПросмотр = Истина Тогда 
		ЭтаФорма.ТолькоПросмотр = Истина;
	КонецЕсли;
	
	СтарыйРезультат = Объект.РезультатСогласования;
	СтарыйКомментарий = Объект.Комментарий;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	Если ЗначениеЗаполнено(ТекущийОбъект.Исполнитель) Тогда 
		Исполнитель = ТекущийОбъект.Исполнитель;
	ИначеЕсли ЗначениеЗаполнено(ТекущийОбъект.РольИсполнителя) Тогда 
		Исполнитель = ТекущийОбъект.РольИсполнителя;
	Иначе
		Исполнитель = Справочники.Пользователи.ПустаяСсылка();
	КонецЕсли;
	
	СтарыйРезультат = ТекущийОбъект.РезультатСогласования;
	СтарыйКомментарий = ТекущийОбъект.Комментарий;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ЗадачаСогласованияВыполнена" 
		И Параметр.Ссылка = Объект.Источник Тогда 
		Прочитать();
	КонецЕсли;
	
	Если ИмяСобытия = "ВизаПодписана"
		И Параметр = Объект.Ссылка Тогда
		Прочитать();
		УстановитьДоступность();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если ТипЗнч(Исполнитель) = Тип("СправочникСсылка.Пользователи") Тогда 
		Объект.Исполнитель = Исполнитель;
		Объект.РольИсполнителя = Неопределено;
	ИначеЕсли ТипЗнч(Исполнитель) = Тип("СправочникСсылка.ПолныеРоли") Тогда
		Объект.Исполнитель = Неопределено;
		Объект.РольИсполнителя = Исполнитель;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если Объект.Ссылка.Пустая() И ЗначениеЗаполнено(Объект.Документ) Тогда 
		
		ТекущийОбъект.Наименование = РаботаСВизамиСогласования.ПолучитьНаименованиеВизы(ТекущийОбъект.Документ);
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	НастройкаШаблоновБизнесПроцессов.ЗапрещеноИзменение,
		|	НастройкаШаблоновБизнесПроцессов.ШаблонБизнесПроцесса
		|ИЗ
		|	РегистрСведений.НастройкаШаблоновБизнесПроцессов КАК НастройкаШаблоновБизнесПроцессов
		|ГДЕ
		|	НастройкаШаблоновБизнесПроцессов.ВидДокумента В(&ВидДокумента)
		|	И ТИПЗНАЧЕНИЯ(НастройкаШаблоновБизнесПроцессов.ШаблонБизнесПроцесса) = ТИП(Справочник.ШаблоныСогласования)";
		
		ВидДокумента = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТекущийОбъект.Документ, "ВидДокумента");
		МассивВидовДокумента = Делопроизводство.ПолучитьВидДокументаИРодителей(ВидДокумента);
		Запрос.УстановитьПараметр("ВидДокумента", МассивВидовДокумента);
		
		Если ПолучитьФункциональнуюОпцию("ИспользоватьУчетПоОрганизациям") Тогда 
			
			Организация = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТекущийОбъект.Документ, "Организация");
			
			Запрос.Текст = Запрос.Текст + " И Организация = &Организация ";
			Запрос.УстановитьПараметр("Организация", Организация);
			
			Результат = Запрос.Выполнить();
			Если Результат.Пустой() Тогда
				Запрос.УстановитьПараметр("Организация", Справочники.Организации.ПустаяСсылка());
			КонецЕсли;
		КонецЕсли;	
		Результат = Запрос.Выполнить();
		
		Если Результат.Пустой() Тогда 
			ЗапрещеноИзменение = Ложь;
		Иначе	
			ЗапрещеноИзменение = Истина;
		КонецЕсли;	
		
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл
			Если Не Выборка.ЗапрещеноИзменение Тогда 
				ЗапрещеноИзменение = Ложь;
				Прервать;
			КонецЕсли;
		КонецЦикла;	
		
		Если ЗапрещеноИзменение Тогда 
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				НСтр("ru = 'Для данного документа запрещено согласование без использования процесса, заполненного по шаблону согласования'; en = 'It is not allowed to approve this document without a process created according to an approval template.'"),, 
				"",, Отказ);
		КонецЕсли;	
		
		// порядок визы
		ТекущийОбъект.Порядок = РаботаСВизамиСогласования.МаксимальныйПорядокВизы(ТекущийОбъект.Документ) + 1;
		
	КонецЕсли;	
	
	Если Не ЗначениеЗаполнено(СтарыйРезультат) И ЗначениеЗаполнено(Объект.РезультатСогласования) Тогда 
		Если ЗначениеЗаполнено(Объект.Источник) Тогда 
			Если ТипЗнч(Объект.Источник) = Тип("ЗадачаСсылка.ЗадачаИсполнителя") И Не Объект.Источник.Выполнена Тогда 
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					НСтр("ru = 'Результат согласования будет установлен автоматически при выполнении задачи процесса ""Согласование""'; en = 'Approval result will be set automatically upon execution of task of process ""Approval""'"),, 
					"Объект.РезультатСогласования",, Отказ);
				Возврат;
			КонецЕсли;	
			Если ТипЗнч(Объект.Источник) = Тип("БизнесПроцессСсылка.Согласование") И Не Объект.Источник.Завершен Тогда 
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					НСтр("ru = 'Результат согласования будет установлен автоматически при выполнении задачи процесса ""Согласование""'; en = 'Approval result will be set automatically upon execution of task of process ""Approval""'"),, 
					"Объект.РезультатСогласования",, Отказ);
				Возврат;
			КонецЕсли;
		КонецЕсли;	
	КонецЕсли;	
	
	Если Не РольДоступна("ПолныеПрава") И ЗначениеЗаполнено(Объект.Документ) И Объект.РезультатСогласования <> СтарыйРезультат Тогда 
		СостояниеДокумента = Делопроизводство.ПолучитьСостояниеДокумента(Объект.Документ, "СостояниеСогласование");
		Если СостояниеДокумента <> Перечисления.СостоянияДокументов.НаСогласовании Тогда 
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				НСтр("ru = 'Установить результат согласования возможно только при состоянии документа ""На согласовании""'; en = 'It is only possible to set the result of approval when the document is in the state ""Awaiting approval""'"),, 
				"Объект.РезультатСогласования",, Отказ);
			Возврат;	
		КонецЕсли;		
	КонецЕсли;	
	
	Если Объект.РезультатСогласования <> СтарыйРезультат 
	 Или Объект.Комментарий <> СтарыйКомментарий Тогда 
		ТекущийОбъект.УстановилРезультат = ТекущийПользователь;
	КонецЕсли;	
	
	СтарыйРезультат = Объект.РезультатСогласования;
	СтарыйКомментарий = Объект.Комментарий;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	УстановитьДоступность();
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("Запись_ВизыСогласования", Объект.Документ);
	ЭтоНовый = Не ЭтоНовый;
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Если Не ЗначениеЗаполнено(Исполнитель) Тогда 
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				НСтр("ru = 'Поле ""Согласующее лицо"" не заполнено'; en = 'Field ""Approving person"" is not filled in'"),, "Исполнитель",, Отказ);
		Возврат;
	КонецЕсли;
	
	Если ЕстьДубльВизы() Тогда 
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru = 'Виза указанного согласующего лица уже имеется в документе'; en = 'Endoresement of the specified person already exists in the document'"),, "Исполнитель",, Отказ);
		Возврат;	
	КонецЕсли;	
	
	Если ЗначениеЗаполнено(Объект.РезультатСогласования) Тогда 
		Если Не ЗначениеЗаполнено(Объект.ДатаИсполнения) Тогда 
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				НСтр("ru = 'Поле ""Дата согласования"" не заполнено'; en = 'Field ""Approval date"" is empty'"),, "Объект.ДатаИсполнения",, Отказ);
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(Объект.УстановилРезультат) Тогда 
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				НСтр("ru = 'Поле ""Установил результат"" не заполнено'; en = 'Field ""Result set by"" is not filled in'"),, "Объект.УстановилРезультат",, Отказ);
		КонецЕсли;
	КонецЕсли;	
	
	Если ЗначениеЗаполнено(Объект.Комментарий) Или ЗначениеЗаполнено(Объект.ДатаИсполнения) Тогда 
		Если Не ЗначениеЗаполнено(Объект.РезультатСогласования) Тогда 
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				НСтр("ru = 'Поле ""Результат согласования"" не заполнено'; en = 'Field ""Approval result"" is not filled in'"),, "Объект.РезультатСогласования",, Отказ);
		КонецЕсли;	
	КонецЕсли;	
	
	Если Не ЗначениеЗаполнено(Объект.Комментарий) Тогда 
		Если Объект.РезультатСогласования = Перечисления.РезультатыСогласования.НеСогласовано 
		 Или Объект.РезультатСогласования = Перечисления.РезультатыСогласования.СогласованоСЗамечаниями 
		Тогда 
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				НСтр("ru = 'Поле ""Комментарий"" не заполнено'; en = '""Comment"" field is not filled in'"),, "Объект.Комментарий",, Отказ);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура РезультатСогласованияПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Объект.РезультатСогласования) Тогда 
		Объект.УстановилРезультат = ТекущийПользователь;
		Объект.ДатаИсполнения = ТекущаяДата();
	Иначе
		Объект.УстановилРезультат = Неопределено;
		Объект.ДатаИсполнения = '00010101';
		Объект.Комментарий = "";
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметитьРезультатЗаИсполнителя(Команда)
	
	Элементы.РезультатСогласования.ТолькоПросмотр = Ложь;
	Элементы.ДатаИсполнения.ТолькоПросмотр = Ложь;
	Элементы.Комментарий.ТолькоПросмотр = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ИсполнительНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("РежимРаботыФормы", 1);
	ПараметрыФормы.Вставить("УпрощенныйИнтерфейс", Истина);
	ПараметрыФормы.Вставить("ОтображатьСотрудников", Истина);
	ПараметрыФормы.Вставить("ОтображатьРоли", Истина);
	ПараметрыФормы.Вставить("ВыбранныеАдресаты", Исполнитель);
	ПараметрыФормы.Вставить("ЗаголовокФормы", НСтр("ru = 'Выбор исполнителя'; en = 'Performer selection'"));
	
	ОткрытьФорму("Справочник.АдреснаяКнига.Форма.ФормаСписка",
		ПараметрыФормы,
		Элементы.Исполнитель,,,,,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ИсполнительОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ИсполнительАвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Текст) Тогда 
		СтандартнаяОбработка = Ложь;
		ДанныеВыбора = РаботаСПользователями.СформироватьДанныеВыбора(Текст,
			Новый ОписаниеТипов("СправочникСсылка.ПолныеРоли"));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИсполнительОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Текст) Тогда 
		СтандартнаяОбработка = Ложь;
		ДанныеВыбора = РаботаСПользователями.СформироватьДанныеВыбора(Текст,
			Новый ОписаниеТипов("СправочникСсылка.ПолныеРоли"));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИсполнительПриИзменении(Элемент)
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ИсточникНажатие(Элемент, СтандартнаяОбработка)
	
	Если ТипЗнч(Объект.Источник) = Тип("ЗадачаСсылка.ЗадачаИсполнителя") Тогда 
		СтандартнаяОбработка = Ложь;
		БизнесПроцессыИЗадачиКлиент.ОткрытьФормуВыполненияЗадачи(Объект.Источник);
	КонецЕсли;	
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПодписатьЭП(Команда)
	
	Если Не ЗначениеЗаполнено(Объект.РезультатСогласования) Тогда 
		
		ТекстПредупреждения = НСтр("ru = 'Можно подписать только визу с заполненным результатом согласования.'; en = 'Only endorsements that contain approval results can be signed.'");
		ПоказатьПредупреждение(, ТекстПредупреждения);
		Возврат;
		
	КонецЕсли;
	
	Если Не ТекущийПользовательПолноправный Тогда 
		
		ТекущийПользовательАвтор = (Объект.Автор = ТекущийПользователь);
		ТекущийПользовательИсполнитель = ТекущийПользовательИсполнитель(Исполнитель);
		
		Если Не ТекущийПользовательАвтор И Не ТекущийПользовательИсполнитель Тогда 
			ТекстПредупреждения = НСтр("ru = 'Только автор визы или согласующее лицо могут подписать визу.'; en = 'Only the author or the approving person can sign the endorsement.'");
			ПоказатьПредупреждение(, ТекстПредупреждения);
			Возврат;
		КонецЕсли;
		
	КонецЕсли; 
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"ПодписатьПродолжение",
		ЭтотОбъект);
	
	Если Объект.Ссылка.Пустая() Тогда
		
		ТекстВопроса = НСтр("ru = 'Данные еще не записаны.
                             |Выполнение действия ""Подписать"" возможно только после записи данных.
                             |Данные будут записаны.';
                             |en = 'The data is not yet saved.
                             |Action ""Sign"" is possible only after the data is saved.
                             |Data will be saved.'");
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		
	Иначе
		
		ВыполнитьОбработкуОповещения(ОписаниеОповещения, КодВозвратаДиалога.ОК);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПодписатьПродолжение(Результат, Параметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Отмена Тогда 
		
		Возврат;
		
	ИначеЕсли Результат = КодВозвратаДиалога.ОК Тогда
		
		Если Не Записать() Тогда 
			Возврат;
		КонецЕсли;
		
		ПоказатьОповещениеПользователя(
			НСтр("ru = 'Создание:'; en = 'Added:'"), 
			ПолучитьНавигационнуюСсылку(Объект.Ссылка),
			Строка(Объект.Ссылка),
			БиблиотекаКартинок.Информация32);
		
	КонецЕсли;
	
	ПараметрыОбработчика = Новый Структура;
	ПараметрыОбработчика.Вставить("Объект", Объект.Ссылка);
	ОбработчикЗавершения = Новый ОписаниеОповещения("ПодписатьЗавершение", ЭтотОбъект, ПараметрыОбработчика);
	
	РаботаСЭПКлиент.Подписать(Объект.Ссылка, УникальныйИдентификатор, ОбработчикЗавершения);
	
КонецПроцедуры

&НаКлиенте
Процедура ПодписатьЗавершение(Результат, Параметры) Экспорт
	
	Если Не Результат.Успех Тогда
		Возврат;
	КонецЕсли;
	
	РаботаСЭПКлиент.ПослеПодписанияОбъекта(Результат, Параметры);
	
	//УстановитьДоступность();
	Оповестить("ВизаПодписана", Объект.Ссылка);
	Оповестить("Запись_ВизыСогласования", Объект.Документ);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьЭП(Команда)
	
	РаботаСЭПКлиент.ОткрытьПодпись(ДанныеЭП, УникальныйИдентификатор);
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьЭП(Команда)
	
	МассивПодписей = Новый Массив;
	МассивПодписей.Добавить(ДанныеЭП);
	
	РаботаСЭПКлиент.ПроверитьПодписиОбъекта(ЭтотОбъект, МассивПодписей,
		Новый ОписаниеОповещения("ПроверитьЭПЗавершение", ЭтотОбъект));
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьЭПЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Не Результат Тогда
		Возврат;
	КонецЕсли;
	
	ТекстПредупреждения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = 'Результат проверки подписи: %1'; en = 'Signature validation result: %1'"),
		ДанныеЭП.Статус);
	ПоказатьПредупреждение(Неопределено, ТекстПредупреждения);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьДоступность()
	
	Если ЗначениеЗаполнено(Объект.УстановилРезультат) 
		И ЗначениеЗаполнено(Исполнитель)
		И Объект.УстановилРезультат <> Исполнитель Тогда 
		Элементы.РезультатСогласования.Подсказка = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = '(внес: %1)'; en = '(entered: %1)'"),
			Строка(Объект.УстановилРезультат));
	КонецЕсли;
	
	ЭтаФорма.ТолькоПросмотр = Ложь;
	Элементы.ОтметитьРезультатЗаИсполнителя.Видимость = Истина;
	Элементы.Исполнитель.ТолькоПросмотр = Ложь;
	Элементы.РезультатСогласования.ТолькоПросмотр = Ложь;
	Элементы.ДатаИсполнения.ТолькоПросмотр = Ложь;
	Элементы.Комментарий.ТолькоПросмотр = Ложь;
	
	Элементы.ПодписатьЭП.Доступность = Не Объект.Подписана;
	Элементы.ОткрытьЭП.Доступность = Объект.Подписана;
	Элементы.ПроверитьЭП.Доступность = Объект.Подписана;
	
	Если Объект.Подписана Тогда
		ДанныеЭП = РаботаСЭП.ЗаполнитьДанныеПодписиОбъекта(Объект.Ссылка, УникальныйИдентификатор);
		ЭтаФорма.ТолькоПросмотр = Истина;
		Элементы.ОтметитьРезультатЗаИсполнителя.Видимость = Ложь;
		Возврат;
	КонецЕсли;
	
	Если РольДоступна("ПолныеПрава") Тогда 
		Элементы.ОтметитьРезультатЗаИсполнителя.Видимость = Ложь;
		Возврат;
	КонецЕсли;
	
	ТекущийПользователь = ПользователиКлиентСервер.ТекущийПользователь();
	ТекущийПользовательАвтор = (Объект.Автор = ТекущийПользователь);
	ТекущийПользовательИсполнитель = ТекущийПользовательИсполнитель(Исполнитель);
	
	Если Не ТекущийПользовательАвтор И Не ТекущийПользовательИсполнитель Тогда 
		ЭтаФорма.ТолькоПросмотр = Истина;
		Элементы.ОтметитьРезультатЗаИсполнителя.Видимость = Ложь;
		Возврат;
	КонецЕсли;
	
	Если Не ТекущийПользовательАвтор Тогда 
		Элементы.Исполнитель.ТолькоПросмотр = Истина;
		Элементы.ОтметитьРезультатЗаИсполнителя.Видимость = Ложь;
	КонецЕсли;
	
	Если Не ТекущийПользовательИсполнитель Тогда
		Элементы.РезультатСогласования.ТолькоПросмотр = Истина;
		Элементы.ДатаИсполнения.ТолькоПросмотр = Истина;
		Элементы.Комментарий.ТолькоПросмотр = Истина;
	КонецЕсли;
		
	Если ТекущийПользовательАвтор И 
		ЗначениеЗаполнено(Объект.РезультатСогласования) 
	Тогда
		Элементы.Исполнитель.ТолькоПросмотр = Истина;
		
		Если Объект.Автор <> Объект.УстановилРезультат Тогда 
			Элементы.ОтметитьРезультатЗаИсполнителя.Видимость = Ложь;
		КонецЕсли;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Исполнитель) Или ТекущийПользовательИсполнитель Тогда 
		Элементы.ОтметитьРезультатЗаИсполнителя.Видимость = Ложь;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если ЗначениеЗаполнено(Объект.Документ) Тогда 
		 
		СостояниеДокумента = Делопроизводство.ПолучитьСостояниеДокумента(Объект.Документ, "СостояниеСогласование");
		Если СостояниеДокумента <> Перечисления.СостоянияДокументов.НаСогласовании Тогда 
			ИнформационнаяНадпись = НСтр("ru = 'Установить или изменить результат согласования возможно только при состоянии документа ""На согласовании""'; en = 'It is only possible to set or change the result of approval when the document is in the state ""Awaiting approval""'");
			Элементы.ИнформационнаяНадпись.Видимость = Истина;
			
			Элементы.РезультатСогласования.ТолькоПросмотр = Истина;
			Элементы.ДатаИсполнения.ТолькоПросмотр = Истина;
			Элементы.Комментарий.ТолькоПросмотр = Истина;
			Элементы.ОтметитьРезультатЗаИсполнителя.Видимость = Ложь;
		КонецЕсли;
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.Источник) 
		И Не ЗначениеЗаполнено(Объект.РезультатСогласования) Тогда 
		
		Если (ТипЗнч(Объект.Источник) = Тип("ЗадачаСсылка.ЗадачаИсполнителя") И Не Объект.Источник.Выполнена)
		 Или (ТипЗнч(Объект.Источник) = Тип("БизнесПроцессСсылка.Согласование") И Не Объект.Источник.Завершен) Тогда 
			ИнформационнаяНадпись = НСтр("ru = 'Результат согласования будет установлен автоматически при выполнении задачи процесса ""Согласование""'; en = 'Approval result will be set automatically upon execution of task of process ""Approval""'");
			Элементы.ИнформационнаяНадпись.Видимость = Истина;
			
			Элементы.Исполнитель.ТолькоПросмотр = Истина;
			Элементы.РезультатСогласования.ТолькоПросмотр = Истина;
			Элементы.ДатаИсполнения.ТолькоПросмотр = Истина;
			Элементы.Комментарий.ТолькоПросмотр = Истина;
			Элементы.ОтметитьРезультатЗаИсполнителя.Видимость = Ложь;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ЕстьДубльВизы()
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИСТИНА
	|ИЗ
	|	Справочник.ВизыСогласования КАК ВизыСогласования
	|ГДЕ
	|	ВизыСогласования.Документ = &Документ
	|	И ВизыСогласования.Исполнитель = &Исполнитель
	|	И ВизыСогласования.РольИсполнителя = &РольИсполнителя
	|	И ВизыСогласования.ПомещенаВИсторию = &ПомещенаВИсторию
	|	И ВизыСогласования.ДатаПомещенияВИсторию = &ДатаПомещенияВИсторию
	|	И НЕ ВизыСогласования.Удалена
	|	И НЕ ВизыСогласования.ПометкаУдаления
	|	И ВизыСогласования.Ссылка <> &Ссылка";
		
	Запрос.УстановитьПараметр("Документ", Объект.Документ);
	Запрос.УстановитьПараметр("Исполнитель", Объект.Исполнитель);
	Запрос.УстановитьПараметр("РольИсполнителя", Объект.РольИсполнителя);
	Запрос.УстановитьПараметр("ПомещенаВИсторию", Объект.ПомещенаВИсторию);
	Запрос.УстановитьПараметр("ДатаПомещенияВИсторию", Объект.ДатаПомещенияВИсторию);
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	
	Возврат Не Запрос.Выполнить().Пустой();
		
КонецФункции	

&НаСервереБезКонтекста
Функция ТекущийПользовательИсполнитель(Исполнитель)
	
	ТекущийПользователь = Пользователи.ТекущийПользователь();
	
	Если ТипЗнч(Исполнитель) = Тип("СправочникСсылка.Пользователи") Тогда 
		Возврат (ТекущийПользователь = Исполнитель);
	Иначе
		УстановитьПривилегированныйРежим(Истина);
		ИсполнителиРоли = РегистрыСведений.ИсполнителиЗадач.ИсполнителиРоли(Исполнитель);
		Возврат (ИсполнителиРоли.Найти(ТекущийПользователь) <> Неопределено); 
	КонецЕсли;
	
КонецФункции

#КонецОбласти
