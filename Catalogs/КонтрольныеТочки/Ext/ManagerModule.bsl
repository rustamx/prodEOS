// Возвращает сведения о коде последней контрольной точке 
// Структура с полями
// - Число
// - Префикс
// - Длина
Функция ПолучитьКодПоследнейКТ(ОбъектКТ, ГруппаКТ) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	КонтрольныеТочки.ЧисловойКод КАК ЧисловойКод,
		|	КонтрольныеТочки.КодКТ КАК КодКТ
		|ИЗ
		|	Справочник.КонтрольныеТочки КАК КонтрольныеТочки
		|ГДЕ
		|	КонтрольныеТочки.ПометкаУдаления = ЛОЖЬ
		|	И КонтрольныеТочки.ОбъектКТ = &ОбъектКТ
		|	И КонтрольныеТочки.ГруппаКТ = &ГруппаКТ
		|
		|УПОРЯДОЧИТЬ ПО
		|	ЧисловойКод УБЫВ";
		
	Запрос.УстановитьПараметр("ОбъектКТ", ОбъектКТ);
	Запрос.УстановитьПараметр("ГруппаКТ", ГруппаКТ);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		
		Префикс = Выборка.КодКТ;
		
		// Определяем и сохраняем числовой код, для использования его при создании 
		// новых контрольных точек
		СтрокаЧисел = "0123456789";
		Для Индекс = 1 По СтрДлина(Префикс) Цикл
			СимволПоиска = Сред(Префикс, Индекс, 1);
			Если СтрНайти(СтрокаЧисел, СимволПоиска) <> 0 Тогда
				Прервать;
			КонецЕсли;
		КонецЦикла;
	
		Префикс = Лев(Префикс, Индекс - 1);
		
		Возврат Новый Структура(
			"Число, Префикс, Длина", Выборка.ЧисловойКод, Префикс, СтрДлина(Выборка.КодКТ));
		
	КонецЕсли;
	
	// +
	//Возврат Неопределено;
	Возврат Новый Структура("Число, Префикс, Длина", 0, "", 0);

КонецФункции

// Возвращает строку, содержащую перечисление полей доступа через запятую.
Функция ПолучитьПоляДоступа() Экспорт
	
	Возврат 
		"Ссылка,
		|ОбъектКТ,
		|Создал,
		|Ответственный,
		|Проверяющий";
	
КонецФункции

// Проверяет наличие метода.
// 
Функция ЕстьМетодЗаполнитьДескрипторыОбъекта() Экспорт
	
	Возврат Истина;
	
КонецФункции

// Заполняет переданную таблицу дескрипторов объекта.
// 
Процедура ЗаполнитьДескрипторыОбъекта(ОбъектДоступа, ТаблицаДескрипторов, ПротоколРасчетаПрав = Неопределено) Экспорт
	
	ДокументооборотПраваДоступа.ЗаполнитьДескрипторыОбъектаОтВладельца(
		ОбъектДоступа, ТаблицаДескрипторов, ОбъектДоступа.ОбъектКТ);
	
	Если ЗначениеЗаполнено(ОбъектДоступа.Создал) Тогда
		
		ДокументооборотПраваДоступа.ДобавитьИндивидуальныйДескриптор(
			ОбъектДоступа, ТаблицаДескрипторов, ОбъектДоступа.Создал, Истина);
		
		Если ПротоколРасчетаПрав <> Неопределено Тогда
			ЗаписьПротокола = Новый Структура("Элемент, Описание",
				ОбъектДоступа.Создал, НСтр("ru = 'Автор КТ'; en = 'Milestone author'"));
			ПротоколРасчетаПрав.Добавить(ЗаписьПротокола);
		КонецЕсли;
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ОбъектДоступа.Ответственный) Тогда
		
		ДокументооборотПраваДоступа.ДобавитьИндивидуальныйДескриптор(
			ОбъектДоступа, ТаблицаДескрипторов, ОбъектДоступа.Ответственный, Истина);
		
		Если ПротоколРасчетаПрав <> Неопределено Тогда
			ЗаписьПротокола = Новый Структура("Элемент, Описание",
				ОбъектДоступа.Ответственный, НСтр("ru = 'Ответственный'; en = 'Responsible'"));
			ПротоколРасчетаПрав.Добавить(ЗаписьПротокола);
		КонецЕсли;
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ОбъектДоступа.Проверяющий) Тогда
		
		ДокументооборотПраваДоступа.ДобавитьИндивидуальныйДескриптор(
			ОбъектДоступа, ТаблицаДескрипторов, ОбъектДоступа.Проверяющий, Истина);
		
		Если ПротоколРасчетаПрав <> Неопределено Тогда
			ЗаписьПротокола = Новый Структура("Элемент, Описание",
				ОбъектДоступа.Проверяющий, НСтр("ru = 'Проверяющий'; en = 'Verifier'"));
			ПротоколРасчетаПрав.Добавить(ЗаписьПротокола);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

