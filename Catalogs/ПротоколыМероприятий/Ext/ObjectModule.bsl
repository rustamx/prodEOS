#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	СостояниеИсполнения = Перечисления.СостоянияПротоколовМероприятий.ТребуетсяИсполнение;
	СостояниеИсполненияУстановил = ПользователиКлиентСервер.ТекущийПользователь();
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	ИсключаемыеРеквизиты = Новый Массив;
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьРаздельноеИсполнениеПунктовПротоколаМероприятия") Тогда
		ИсключаемыеРеквизиты.Добавить("СостояниеИсполнения");
	КонецЕсли;
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, ИсключаемыеРеквизиты);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка
		И ЗначениеЗаполнено(ОбменДанными.Отправитель)
		И ОбменДаннымиПовтИсп.ЭтоУзелРаспределеннойИнформационнойБазы(ОбменДанными.Отправитель) Тогда
		СтарыеРеквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Ссылка, "СостояниеИсполнения, НомерПунктаПрограммы");
		ДополнительныеСвойства.Вставить("СтарыеРеквизиты", СтарыеРеквизиты);
		Возврат;
	КонецЕсли;
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Наименование = Решили;
	СтарыеРеквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Ссылка, "СостояниеИсполнения, НомерПунктаПрограммы");
	ДополнительныеСвойства.Вставить("СтарыеРеквизиты", СтарыеРеквизиты);
	
	Если Не ДополнительныеСвойства.Свойство("ИзменениеИзМероприятия", ) Тогда
		ДополнительныеСвойства.Вставить("ИзменениеИзМероприятия", Ложь);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка
		И ЗначениеЗаполнено(ОбменДанными.Отправитель)
		И ОбменДаннымиПовтИсп.ЭтоУзелРаспределеннойИнформационнойБазы(ОбменДанными.Отправитель) Тогда
		ПроверитьИзменениеСостоянияМероприятия();
		Возврат;
	КонецЕсли;
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если ДополнительныеСвойства.СтарыеРеквизиты.НомерПунктаПрограммы <> НомерПунктаПрограммы Тогда
		ПриИзмененииНомераПунктаПрограммы();
	КонецЕсли;
	
	Если ДополнительныеСвойства.СтарыеРеквизиты.СостояниеИсполнения <> СостояниеИсполнения Тогда
		ПриИзмененииСостоянияИсполнения();
	КонецЕсли;
	
	ПроверитьИзменениеСостоянияМероприятия();
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	СостояниеИсполнения = Перечисления.СостоянияПротоколовМероприятий.ТребуетсяИсполнение;
	СостояниеИсполненияУстановил = ПользователиКлиентСервер.ТекущийПользователь();
	Исполнение = Неопределено;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Корректирует протокол мероприятия при изменении номер пункта программы.
//
Процедура ПриИзмененииНомераПунктаПрограммы()
	
	// Помеченные на удаление пункты протокола не отражаем в протоколе мероприятия.
	Если ПометкаУдаления Тогда
		Возврат;
	КонецЕсли;
	
	// При изменении из мероприятия не выполняет пересчет.
	Если ДополнительныеСвойства.ИзменениеИзМероприятия Тогда
		Возврат;
	КонецЕсли;
	
	Мероприятие = Владелец.ПолучитьОбъект();
	Мероприятие.Заблокировать();
	
	// Находим строку в протоколе мероприятия. Если ее нет - добавляем.
	СтрокаЭтогоПунктаПротокола = Мероприятие.Протокол.Найти(Ссылка, "ПунктПротокола");
	Если СтрокаЭтогоПунктаПротокола = Неопределено Тогда
		СтрокаЭтогоПунктаПротокола = Мероприятие.Протокол.Добавить();
	КонецЕсли;
	СтрокаЭтогоПунктаПротокола.НомерПунктаПрограммы = НомерПунктаПрограммы;
	СтрокаЭтогоПунктаПротокола.ПунктПротокола = Ссылка;
	
	// Сдвигаем строку протокола в конец протокола.
	КоличествоПунктовПротокола = Мероприятие.Протокол.Количество();
	Если СтрокаЭтогоПунктаПротокола.НомерСтроки <> КоличествоПунктовПротокола Тогда
		Смещение = КоличествоПунктовПротокола - СтрокаЭтогоПунктаПротокола.НомерСтроки;
		Мероприятие.Протокол.Сдвинуть(СтрокаЭтогоПунктаПротокола.НомерСтроки - 1, Смещение);
	КонецЕсли;
	
	// Находим первую строку, у которой номер программы выше и ставим перед ней пункт протокола.
	// Если такой строки нет, то ничего двигать не нужно.
	Для Каждого СтрокаПротокола Из Мероприятие.Протокол Цикл
		
		Если СтрокаПротокола.НомерПунктаПрограммы <= НомерПунктаПрограммы Тогда
			Продолжить;
		КонецЕсли;
		
		Смещение = СтрокаПротокола.НомерСтроки - СтрокаЭтогоПунктаПротокола.НомерСтроки;
		Мероприятие.Протокол.Сдвинуть(СтрокаЭтогоПунктаПротокола.НомерСтроки - 1, Смещение);
		
		Прервать;
		
	КонецЦикла;
	
	Мероприятие.Записать();
	
КонецПроцедуры

// Отмечает изменение состояния пункта протокола в истории.
//
Процедура ПриИзмененииСостоянияИсполнения()
	
	РегистрыСведений.ИсторияСостоянийПротоколовМероприятий.ДобавитьЗапись(
		ТекущаяДата(),
		Ссылка,
		СостояниеИсполнения,
		СостояниеИсполненияУстановил,
		Владелец);
	
КонецПроцедуры

// Проверяет изменение состояние мероприятия.
//
Процедура ПроверитьИзменениеСостоянияМероприятия()
	
	Если ДополнительныеСвойства.СтарыеРеквизиты.СостояниеИсполнения = СостояниеИсполнения Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(СостояниеИсполненияУстановил) <> Тип("БизнесПроцессСсылка.Исполнение") Тогда
		Возврат;
	КонецЕсли;
	
	СостояниеМероприятия = РассчитатьСостояниеИсполненияПротоколаМероприятия(Владелец);
	Если СостояниеМероприятия = Неопределено Тогда
		Возврат;
	КонецЕсли;
	СтароеСостояниеМероприятия = УправлениеМероприятиями.ПолучитьСостояниеМероприятия(Владелец, "СостояниеПротокола");
	Если СтароеСостояниеМероприятия <> СостояниеМероприятия Тогда
		УправлениеМероприятиями.ЗаписатьСостояниеМероприятия(Владелец, ТекущаяДата(), СостояниеМероприятия, СостояниеИсполненияУстановил);
	КонецЕсли;
	
КонецПроцедуры

// Рассчитывает состояние исполнения протокола мероприятия по состоянию пунктов протокола.
//
// Параметры:
//  Мероприятие - СправочникСсылка.Мероприятия - Мероприятие.
//
// Возвращаемое значение:
//  ПеречислениеСсылка.СостоянияМероприятий - Рассчитанное состояние исполнения протокола.
//
Функция РассчитатьСостояниеИсполненияПротоколаМероприятия(Мероприятие)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ПротоколыМероприятий.СостояниеИсполнения
		|ИЗ
		|	Справочник.Мероприятия.Протокол КАК МероприятияПротокол
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПротоколыМероприятий КАК ПротоколыМероприятий
		|		ПО МероприятияПротокол.ПунктПротокола = ПротоколыМероприятий.Ссылка
		|ГДЕ
		|	ПротоколыМероприятий.ПометкаУдаления = ЛОЖЬ
		|	И МероприятияПротокол.Ссылка = &Мероприятие";
	
	Запрос.УстановитьПараметр("Мероприятие", Мероприятие);
	
	Выборка = Запрос.Выполнить().Выбрать();
	ЕстьИсполнен = Ложь;
	ЕстьНаИсполнении = Ложь;
	ЕстьТребуетсяИсполнение = Ложь;
	Пока Выборка.Следующий() Цикл
		Если Выборка.СостояниеИсполнения = Перечисления.СостоянияПротоколовМероприятий.Исполнен Тогда
			ЕстьИсполнен = Истина;
		ИначеЕсли Выборка.СостояниеИсполнения = Перечисления.СостоянияПротоколовМероприятий.НаИсполнении Тогда
			ЕстьНаИсполнении = Истина;
		ИначеЕсли Выборка.СостояниеИсполнения = Перечисления.СостоянияПротоколовМероприятий.ТребуетсяИсполнение Тогда
			ЕстьТребуетсяИсполнение = Истина;
		КонецЕсли;
	КонецЦикла;
	
	СостояниеИсполненияПротоколаМероприятия = Неопределено;
	Если ЕстьИсполнен И Не ЕстьНаИсполнении И Не ЕстьТребуетсяИсполнение Тогда
		СостояниеИсполненияПротоколаМероприятия = Перечисления.СостоянияМероприятий.ПротоколИсполнен;
	ИначеЕсли ЕстьНаИсполнении Тогда
		СостояниеИсполненияПротоколаМероприятия = Перечисления.СостоянияМероприятий.ПротоколНаИсполнении;
	ИначеЕсли ЕстьИсполнен И ЕстьТребуетсяИсполнение Тогда
		СостояниеИсполненияПротоколаМероприятия = Перечисления.СостоянияМероприятий.ПротоколНаИсполнении;
	КонецЕсли;
	
	Возврат СостояниеИсполненияПротоколаМероприятия;
	
КонецФункции

#КонецОбласти

#КонецЕсли
