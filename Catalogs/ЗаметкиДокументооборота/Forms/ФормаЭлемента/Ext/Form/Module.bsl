
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		СодержаниеФорматированное = Объект.Ссылка.Содержание.Получить();
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Параметры.Основание)
		И ВстроеннаяПочтаКлиентСервер.ЭтоПисьмо(Параметры.Основание) Тогда
		
		ТекстПисьма = "";
		
		Если ВстроеннаяПочтаКлиентСервер.ЭтоИсходящееПисьмо(Параметры.Основание) Тогда
			ТекстХранилище = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Параметры.Основание, 
				"ТекстХранилище");
		ИначеЕсли ВстроеннаяПочтаКлиентСервер.ЭтоВходящееПисьмо(Параметры.Основание) Тогда
			ТекстХранилище = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Параметры.Основание, 
				"ТекстПисьмаПростойТекстХранилище");
		КонецЕсли;	
		
		ТекстПисьма = ТекстХранилище.Получить();	
		
		ТекстПисьма = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru= 'Письмо: %1'; en = 'Email: %1'"), ПолучитьНавигационнуюСсылку(Параметры.Основание))
			+ Символы.ВК + Символы.ВК + ТекстПисьма;
		
		ТекстHTML = РаботаС_HTML.ПолучитьHTMLИзТекста(ТекстПисьма);
		
		Вложения = Новый Структура;
		СодержаниеФорматированное.УстановитьHTML(ТекстHTML, Вложения);
		
	ИначеЕсли ЗначениеЗаполнено(Параметры.Основание)
		И ТипЗнч(Параметры.Основание) = Тип("СправочникСсылка.ЗаписиРабочегоКалендаря") Тогда
		
		Описание = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Параметры.Основание, "Описание");
		
		Описание = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru= 'Запись календаря: %1'; en = 'Calendar entry: %1'"), ПолучитьНавигационнуюСсылку(Параметры.Основание))
			+ Символы.ВК + Символы.ВК + Описание;
		
		ТекстHTML = РаботаС_HTML.ПолучитьHTMLИзТекста(Описание);
		
		Вложения = Новый Структура;
		СодержаниеФорматированное.УстановитьHTML(ТекстHTML, Вложения);
		
	КонецЕсли;
	
	Если Параметры.Свойство("Тема") И ЗначениеЗаполнено(Параметры.Тема) Тогда
		ВыбранныеТемы.Добавить(Параметры.Тема);
	КонецЕсли;	
	
	// Обработка копирования заметки
	Если Параметры.Свойство("ЗначениеКопирования") И ЗначениеЗаполнено(Параметры.ЗначениеКопирования) Тогда

		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ТемыЗаметокДокументооборота.Тема
			|ИЗ
			|	РегистрСведений.ТемыЗаметокДокументооборота КАК ТемыЗаметокДокументооборота
			|ГДЕ
			|	ТемыЗаметокДокументооборота.Заметка = &Заметка";

		Запрос.УстановитьПараметр("Заметка", Параметры.ЗначениеКопирования);

		РезультатЗапроса = Запрос.Выполнить();

		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();

		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			ВыбранныеТемы.Добавить(ВыборкаДетальныеЗаписи.Тема);
		КонецЦикла;

		СодержаниеФорматированное = Параметры.ЗначениеКопирования.Содержание.Получить();
		
	КонецЕсли;
	
	// Установка автора
	Если Не ЗначениеЗаполнено(Объект.Автор) Тогда
		Объект.Автор = Пользователи.ТекущийПользователь();	
	КонецЕсли;	
	
	// Обновление списка тем
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ТемыЗаметокДокументооборота.Тема
		|ИЗ
		|	РегистрСведений.ТемыЗаметокДокументооборота КАК ТемыЗаметокДокументооборота
		|ГДЕ
		|	ТемыЗаметокДокументооборота.Заметка = &Заметка";

	Запрос.УстановитьПараметр("Заметка", Объект.Ссылка);

	РезультатЗапроса = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ВыбранныеТемы.Добавить(ВыборкаДетальныеЗаписи.Тема);
	КонецЦикла;

	Если Объект.Создана = Дата("00010101000000") Тогда 
		Объект.Создана = ТекущаяДата();	
	КонецЕсли;	
	
	ЗаполнитьДеревоТем();
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоТемНачалоПеретаскивания(Элемент, ПараметрыПеретаскивания, Выполнение)
	
	Выполнение = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоТемВыбранаПриИзменении(Элемент)
	
	Модифицированность = Истина;
	ОбновитьВыбранныеТемы();
	ОбновитьЗаголовокДереваТем();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьВыбранныеТемы()

	ВыбранныеТемы.Очистить();
	
	Дерево = РеквизитФормыВЗначение("ДеревоТем");
	ЭлементыДерева = Новый Массив();
	
	Для каждого Эл Из Дерево.Строки Цикл
		ЭлементыДерева.Добавить(Эл);
	КонецЦикла;
	
	Для каждого Эл Из ЭлементыДерева Цикл
		Если Эл.Выбрана = Истина Тогда
			ВыбранныеТемы.Добавить(Эл.Ссылка);
		КонецЕсли;
		
		Для каждого ДочернийЭл Из Эл.Строки Цикл
			ЭлементыДерева.Добавить(ДочернийЭл);
		КонецЦикла;
		
	КонецЦикла;		
	
КонецПроцедуры	
	
&НаСервере
Процедура ОбновитьЗаголовокДереваТем()
	
	Элементы.ДеревоТем.Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
	 	НСтр("ru = 'Темы (%1)'; en = 'Topics (%1)'"),
		ВыбранныеТемы.Количество());

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДеревоТем()
	
	Дерево = РеквизитФормыВЗначение("ДеревоТем");
	
	Дерево.Строки.Очистить();

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ТемыЗаметок.Ссылка,
		|	ТемыЗаметок.Наименование,
		|	ТемыЗаметок.Родитель
		|ИЗ
		|	Справочник.ТемыЗаметок КАК ТемыЗаметок
		|ГДЕ
		|	ТемыЗаметок.ПометкаУдаления = ЛОЖЬ
		|УПОРЯДОЧИТЬ ПО
		|	ТемыЗаметок.Ссылка ИЕРАРХИЯ";
		
		
    Результат = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		Если ВыборкаДетальныеЗаписи.Родитель.Пустая() Тогда
			Строка = Дерево.Строки.Добавить();
		Иначе
			Ветвь = Дерево.Строки.Найти(ВыборкаДетальныеЗаписи.Родитель, "Ссылка", Истина);
			Если Ветвь = Неопределено Тогда
				Строка = Дерево.Строки.Добавить();
			Иначе
				Строка = Ветвь.Строки.Добавить();
			КонецЕсли;
			
		КонецЕсли;	
		
		Строка.Наименование = ВыборкаДетальныеЗаписи.Наименование;
		Строка.Ссылка = ВыборкаДетальныеЗаписи.Ссылка;
		ТемаВыбрана = Ложь;
		Для каждого Эл Из ВыбранныеТемы Цикл
			Если Эл.Значение = Строка.Ссылка Тогда
				ТемаВыбрана = Истина;
				Прервать;
			КонецЕсли;	
		КонецЦикла;	
		
		Строка.Выбрана = ТемаВыбрана;
		
	КонецЦикла;
	
	Дерево.Строки.Сортировать("Наименование", Истина);
	
	ЗначениеВРеквизитФормы(Дерево, "ДеревоТем");
	
	УстановитьЗаголовокДереваТем();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьЗаголовокДереваТем()
	
	Элементы.ДеревоТем.Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
	 	НСтр("ru = 'Темы (%1)'; en = 'Topics (%1)'"),
		ВыбранныеТемы.Количество());

КонецПроцедуры
	
&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ОбновитьВыбранныеТемы();		
	
	ТекущийОбъект.Содержание = Новый ХранилищеЗначения(СодержаниеФорматированное, Новый СжатиеДанных());
	ТекущийОбъект.СодержаниеТекст = Объект.Наименование + Символы.ВК + СодержаниеФорматированное.ПолучитьТекст();

КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Темы = Новый Массив();
	Для каждого Эл Из ВыбранныеТемы Цикл
		Темы.Добавить(Эл.Значение);
	КонецЦикла;	
	
	РегистрыСведений.ТемыЗаметокДокументооборота.ЗаписатьТемы(ТекущийОбъект.Ссылка, Темы);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Если ВыбранныеТемы.Количество() = 0 Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru = 'Укажите хотя бы одну тему заметки.'; en = 'Specify at least one topic.'"),
			,
			"ДеревоТем",
			,
			Отказ);
		
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("ЗаметкаИзменена", , Объект.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоТемПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ДеревоТемПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура СоздатьНовуюТему(Команда)
	
	ПараметрыФормы = Новый Структура();
	
	Если Элементы.ДеревоТем.ТекущиеДанные <> Неопределено Тогда
		РодительскаяТема = Элементы.ДеревоТем.ТекущиеДанные.Ссылка;
		ПараметрыФормы.Вставить("РодительскаяТема", РодительскаяТема);
	КонецЕсли;	
	
	ОткрытьФорму("Справочник.ТемыЗаметок.ФормаОбъекта",
		ПараметрыФормы,
		ЭтаФорма,
		,
		,
		);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_НоваяТемаЗаметок" Тогда
		ЗаполнитьДеревоТем();
	КонецЕсли;	
	
КонецПроцедуры


