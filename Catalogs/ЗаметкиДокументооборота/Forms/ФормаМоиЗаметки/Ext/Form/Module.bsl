&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПоказыватьУдаленные = Ложь;
	
	ОбновитьПоказУдаленных();
		
	Список.Параметры.УстановитьЗначениеПараметра("Тема", Неопределено);
	
	ОбновитьЧислоЗаметокСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьЗаметку(Команда)
	
	СоздатьНовуюЗаметку();
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказыватьУдаленные(Команда)
	
	ПоказыватьУдаленные = НЕ ПоказыватьУдаленные;
	ОбновитьПоказУдаленных();
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоТемПриАктивизацииСтроки(Элемент)
	
	Если ЗначениеЗаполнено(Элементы.ДеревоТем.ТекущаяСтрока) Тогда
		ПодключитьОбработчикОжидания("ВыборТемы", 0.2, Истина);
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ВыборТемы()
	
	Список.Параметры.УстановитьЗначениеПараметра("Тема", Элементы.ДеревоТем.ТекущаяСтрока);
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьПоказУдаленных()
	
	// Отображение пометки у команды
	Элементы.ФормаПоказыватьУдаленные.Пометка = ПоказыватьУдаленные;
	
	// Установки видимости колонок с числом заметок
	Элементы.ДеревоТемЧислоЗаметок.Видимость = Не ПоказыватьУдаленные;
	Элементы.ДеревоТемЧислоЗаметокВсего.Видимость = ПоказыватьУдаленные;
	
	Если Не ПоказыватьУдаленные Тогда
		
		// Установка отбора
		
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор,
			"ПометкаУдаления",
			Ложь,
			ВидСравненияКомпоновкиДанных.Равно);	
			
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ДеревоТем.Отбор,
			"ПометкаУдаления",
			Ложь,
			ВидСравненияКомпоновкиДанных.Равно);	
			
	Иначе		
		
		// Удаление отбора
		
		ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбора(Список.Отбор, "ПометкаУдаления");
		ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбора(ДеревоТем.Отбор, "ПометкаУдаления");
			
	КонецЕсли;			
КонецПроцедуры

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	Если ЗначениеЗаполнено(Элементы.Список.ТекущаяСтрока) Тогда
		ПодключитьОбработчикОжидания("ОтложенныйВыборЗаметки", 0.2, Истина);	
	КонецЕсли;	
	
КонецПроцедуры	
	
&НаКлиенте
Процедура ОтложенныйВыборЗаметки()
	
	ОбновитьСодержаниеВыбраннойЗаметки();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСодержаниеВыбраннойЗаметки()
	
	Если Элементы.Список.ТекущаяСтрока <> Неопределено Тогда
		СодержаниеЗаметки = ПолучитьСодержаниеВыбраннойЗаметки(Элементы.Список.ТекущаяСтрока);
	КонецЕсли;	
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьСодержаниеВыбраннойЗаметки(Заметка)
	
	Возврат Заметка.Содержание.Получить();
	
КонецФункции

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Если Не Копирование Тогда
		Отказ = Истина;
		СоздатьНовуюЗаметку();
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьНовуюЗаметку()
	
	ПараметрыФормы = Новый Структура("Тема", Элементы.ДеревоТем.ТекущаяСтрока);
	Открытьформу("Справочник.ЗаметкиДокументооборота.Форма.ФормаЭлемента", ПараметрыФормы, ЭтаФорма);

КонецПроцедуры	

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ЗаметкаИзменена" Тогда
		Если Элементы.Список.ТекущаяСтрока = Источник Тогда
			ОбновитьСодержаниеВыбраннойЗаметки();
		КонецЕсли;
		
		ОбновитьЧислоЗаметок();
		Элементы.ДеревоТем.Обновить();
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура Поиск(Команда)
	
	Открытьформу("Справочник.ЗаметкиДокументооборота.Форма.ФормаПоиска", , ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьЧислоЗаметок()
	
	ОбновитьЧислоЗаметокСервер();
	
КонецПроцедуры	

&НаСервере
Процедура ОбновитьЧислоЗаметокСервер()

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ КОЛИЧЕСТВО(*) КАК ЧислоЗаметок
		|ИЗ
		|	Справочник.ЗаметкиДокументооборота КАК ЗаметкиДокументооборота
		|ГДЕ
		|	ЗаметкиДокументооборота.ПометкаУдаления = Ложь";

	РезультатЗапроса = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();

	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		Заголовок = НСтр("ru = 'Заметки'; en = 'Notes'") + " (" + Строка(ВыборкаДетальныеЗаписи.ЧислоЗаметок) + ")";
	КонецЕсли;

КонецПроцедуры	
	

