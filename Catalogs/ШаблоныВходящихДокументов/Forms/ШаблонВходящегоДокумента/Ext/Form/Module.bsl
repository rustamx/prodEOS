
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("ВидДокумента") И ЗначениеЗаполнено(Параметры.ВидДокумента) Тогда 
		Объект.ВидДокумента = Параметры.ВидДокумента;
	КонецЕсли;
	
	УстановитьДоступностьЭлементовПоПравуДоступа();
	
	ТекущийПользователь = ПользователиКлиентСервер.ТекущийПользователь();
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьУчетПоОрганизациям") Тогда
		НазваниеОрганизации = РаботаСОрганизациями.ПолучитьНаименованиеОрганизации(РаботаСОрганизациями.ПолучитьОрганизациюПоУмолчанию());
		Элементы.ДекорацияОрганизация.Видимость = Истина;
		Элементы.ДекорацияОрганизация.Заголовок = НазваниеОрганизации;
	Иначе	
		Элементы.ДекорацияОрганизация.Видимость = Ложь;
	КонецЕсли;
	
	// Обращения граждан
	УчитыватьКакОбращениеГраждан = ПолучитьФункциональнуюОпцию(
		"УчитыватьКакОбращениеГраждан", 
		Новый Структура("ВидВходящегоДокумента", 
		Объект.ВидДокумента));

	// Рабочие группы
	РаботаСРабочимиГруппами.ДокументПриСозданииНаСервере(ЭтаФорма);
	РаботаСРабочимиГруппами.ШаблонПриСозданииНаСервере(ЭтаФорма);
	
	// Протоколирование работы пользователей
	ПротоколированиеРаботыПользователей.ЗаписатьОткрытие(Объект.Ссылка);
	
	// Категории данных
	Если ПолучитьФункциональнуюОпцию("ИспользоватьКатегорииДанных") Тогда
		Для Каждого Категория Из Объект.Категории Цикл
			Категория.ПолноеНаименование = РаботаСКатегориямиДанных.ПолучитьПолныйПутьКатегорииДанных(Категория.Значение);
		КонецЦикла;
	Иначе
		Элементы.СтраницаКатегории.Видимость = Ложь;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.Адресат) И ЗначениеЗаполнено(Объект.Подразделение) Тогда
		АдресатТекст = СокрЛП(Объект.Адресат) + ", " + СокрЛП(Объект.Подразделение);
	ИначеЕсли ЗначениеЗаполнено(Объект.Адресат) Тогда
		АдресатТекст = СокрЛП(Объект.Адресат);	
	КонецЕсли;	
	
	ОбновитьВидимостьРеквизитов();
	
	ОбновитьИконкиУчастниковРабочейГруппыДокумента();
	
	// СтандартныеПодсистемы.Печать
	УправлениеПечатью.ПриСозданииНаСервере(ЭтаФорма, Элементы.СтандартныеКоманды);
	// Конец СтандартныеПодсистемы.Печать
	
	// СтандартныеПодсистемы.БазоваяФункциональность
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.БазоваяФункциональность
	
	Если КоличествоУчастниковРабочейГруппы > 0 Тогда 
		ЗаголовокРабочейГруппы = СтрШаблон(НСтр("ru = 'Доступен (%1)'; en = 'Available (%1)'"), 
			КоличествоУчастниковРабочейГруппы);
		Элементы.ГруппаРабочаяГруппа.Поведение = ПоведениеОбычнойГруппы.Обычное;
	Иначе 
		ЗаголовокРабочейГруппы = НСтр("ru = 'Доступен всем'; en = 'Available to everyone'");
		Элементы.ГруппаРабочаяГруппа.Поведение = ПоведениеОбычнойГруппы.Свертываемая;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// Рабочие группы
	РаботаСРабочимиГруппами.ДокументПриЧтенииНаСервере(ЭтаФорма);
	РаботаСРабочимиГруппами.ШаблонПриСозданииНаСервере(ЭтаФорма);
	
	// Формирование исходной рабочей группы
	Участники = РегистрыСведений.РабочиеГруппы.ПолучитьУчастниковПоОбъекту(Объект.Ссылка);
	ИсходнаяРабочаяГруппа.Очистить();
	Для каждого Эл Из Участники Цикл
		
		Строка = ИсходнаяРабочаяГруппа.Добавить();
		Строка.Участник = Эл.Участник; 
		Строка.Изменение = Эл.Изменение;
		
	КонецЦикла;
	
	Если КоличествоУчастниковРабочейГруппы > 0 Тогда 
		ЗаголовокРабочейГруппы = СтрШаблон(НСтр("ru = 'Доступен (%1)'; en = 'Available (%1)'"), 
			КоличествоУчастниковРабочейГруппы);
		Элементы.ГруппаРабочаяГруппа.Поведение = ПоведениеОбычнойГруппы.Обычное;
	Иначе 
		ЗаголовокРабочейГруппы = НСтр("ru = 'Доступен всем'; en = 'Available to everyone'");
		Элементы.ГруппаРабочаяГруппа.Поведение = ПоведениеОбычнойГруппы.Свертываемая;
	КонецЕсли;
	
	// Категории данных
	Если ПолучитьФункциональнуюОпцию("ИспользоватьКатегорииДанных") Тогда
		Для Каждого Категория Из Объект.Категории Цикл
			Категория.ПолноеНаименование = РаботаСКатегориямиДанных.ПолучитьПолныйПутьКатегорииДанных(Категория.Значение);
		КонецЦикла;
	Иначе
		Элементы.СтраницаКатегории.Видимость = Ложь;
	КонецЕсли;
	
	ОбновитьВидимостьРеквизитов();
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ТекущийОбъект.ЗаполнениеНаименованияПоШаблону = Ложь;
	Если ЗначениеЗаполнено(ТекущийОбъект.Заголовок) Тогда 
		ОписаниеОшибки = "";
		МассивРеквизитов = Новый Массив;
		
		ДелопроизводствоКлиентСервер.ПолучитьПоляШаблонаНаименования(
			ТекущийОбъект.Заголовок, МассивРеквизитов, ОписаниеОшибки);
		
		Если ЗначениеЗаполнено(ОписаниеОшибки) Тогда 
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				ОписаниеОшибки,
				ТекущийОбъект,
				"Заголовок",,
				Отказ);
			Возврат;
		КонецЕсли;
		
		Если МассивРеквизитов.Количество() > 0 Тогда 
			Делопроизводство.ПоляШаблонаНаименованияНайдены(
				МассивРеквизитов, ТекущийОбъект.ВидДокумента, ОписаниеОшибки);
			
			Если ЗначениеЗаполнено(ОписаниеОшибки) Тогда 
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					ОписаниеОшибки,
					ТекущийОбъект,
					"Заголовок",,
					Отказ);
				Возврат;
			КонецЕсли;
			
			ТекущийОбъект.ЗаполнениеНаименованияПоШаблону = Истина;
		КонецЕсли;
	КонецЕсли;
	
	ПараметрыЗаписи.Вставить("ЭтоНовыйОбъект", НЕ ЗначениеЗаполнено(ТекущийОбъект.Ссылка));
	
	Если Не ПараметрыЗаписи.ЭтоНовыйОбъект И Модифицированность И 
		ТекущийОбъект.Наименование <> ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТекущийОбъект.Ссылка, "Наименование") Тогда 
		ПараметрыЗаписи.Вставить("ИзменилосьНаименование", Истина);
	КонецЕсли;
	
	// Рабочая группа
	РабочаяГруппаТаблицаКоличество = РабочаяГруппаТаблица.Количество();
	Для Инд = 1 По РабочаяГруппаТаблицаКоличество Цикл
		Строка = РабочаяГруппаТаблица[РабочаяГруппаТаблицаКоличество - Инд];
		Если Не ЗначениеЗаполнено(Строка.Участник) Тогда 
			РабочаяГруппаТаблица.Удалить(Строка);
		КонецЕсли;	
	КонецЦикла;
	
	НоваяРабочаяГруппа = РабочаяГруппаТаблица.Выгрузить();
	РабочаяГруппаДобавить = Новый Массив;
	РабочаяГруппаУдалить = Новый Массив;
	
	// Формирование списка удаленных участников рабочей группы
	Для каждого Эл Из ИсходнаяРабочаяГруппа Цикл
		
		Найден = Ложь;
		
		Для каждого Эл2 Из НоваяРабочаяГруппа Цикл
			Если Эл.Участник = Эл2.Участник 
				И Эл.Изменение = Эл2.Изменение Тогда
				
				Найден = Истина;
				Прервать;
			КонецЕсли;	
		КонецЦикла;	
		
		Если Не Найден Тогда
			РабочаяГруппаУдалить.Добавить(
				Новый Структура("Участник, Изменение",
					Эл.Участник,
					Эл.Изменение));
		КонецЕсли;
		
	КонецЦикла;	
	
	// Формирование списка добавленных участников рабочей группы
	Для каждого Эл Из НоваяРабочаяГруппа Цикл
		
		Найден = Ложь;
		
		Для каждого Эл2 Из ИсходнаяРабочаяГруппа Цикл
			Если Эл.Участник = Эл2.Участник 
				И Эл.Изменение = Эл2.Изменение Тогда
				
				Найден = Истина;
				Прервать;
			КонецЕсли;	
		КонецЦикла;	
		
		Если Не Найден Тогда
			РабочаяГруппаДобавить.Добавить(
				Новый Структура("Участник, Изменение", 
				Эл.Участник,
				Эл.Изменение));
		КонецЕсли;
		
	КонецЦикла;	
	
	ТекущийОбъект.ДополнительныеСвойства.Вставить("РабочаяГруппаУдалить", РабочаяГруппаУдалить);
	ТекущийОбъект.ДополнительныеСвойства.Вставить("РабочаяГруппаДобавить", РабочаяГруппаДобавить);
	
	ИсходнаяРабочаяГруппа.Загрузить(НоваяРабочаяГруппа);
	
	ТекущийОбъект.ДополнительныеРеквизиты.Очистить();
	Для Каждого ДопРеквизит Из ДополнительныеРеквизиты Цикл 
		Если ЗначениеЗаполнено(ДопРеквизит.Значение) Тогда 
			НовСтрока = ТекущийОбъект.ДополнительныеРеквизиты.Добавить();
			НовСтрока.Свойство = ДопРеквизит.Свойство;
			НовСтрока.Значение = ДопРеквизит.Значение;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// Протоколирование работы пользователей
	ПротоколированиеРаботыПользователей.ЗаписатьСоздание(Объект.Ссылка, ПараметрыЗаписи.ЭтоНовыйОбъект);
	ПротоколированиеРаботыПользователей.ЗаписатьИзменение(Объект.Ссылка);
	
	// Категории данных
	Если ПолучитьФункциональнуюОпцию("ИспользоватьКатегорииДанных") Тогда
		Для Каждого Категория Из Объект.Категории Цикл
			Категория.ПолноеНаименование = РаботаСКатегориямиДанных.ПолучитьПолныйПутьКатегорииДанных(Категория.Значение);
		КонецЦикла;
	Иначе
		Элементы.СтраницаКатегории.Видимость = Ложь;
	КонецЕсли;
	
	// Рабочая группа
	РаботаСРабочимиГруппами.ОбъектПослеЗаписиНаСервере(ЭтаФорма, ПараметрыЗаписи);
	ОбновитьВидимостьРеквизитов();
	КоличествоУчастниковРабочейГруппы = РабочаяГруппаТаблица.Количество();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	ОбщегоНазначенияДокументооборотКлиент.УдалитьПустыеСтрокиТаблицы(Объект.РабочаяГруппаДокумента, "Участник");
	ОбщегоНазначенияДокументооборотКлиент.УдалитьПустыеСтрокиТаблицы(РабочаяГруппаТаблица, "Участник");
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Если ПараметрыЗаписи.ЭтоНовыйОбъект Или 
		ПараметрыЗаписи.Свойство("ИзменилосьНаименование") И ПараметрыЗаписи.ИзменилосьНаименование Тогда 
		СтруктураОповещения = Новый Структура("ВидДокумента, Шаблон", Объект.ВидДокумента, Объект.Ссылка);
		Оповестить("ЗаписанШаблонДокумента", СтруктураОповещения); 
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ЗаголовокНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	СтрокаШаблона = Элемент.ТекстРедактирования;
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("ВидДокумента", Объект.ВидДокумента);
	ПараметрыОткрытия.Вставить("ШаблонНаименования", СтрокаШаблона);
	ПараметрыОткрытия.Вставить("Шаблон", Объект.Ссылка);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ЗаголовокНачалоВыбораПродолжить", ЭтотОбъект);
	
	ОткрытьФорму("ОбщаяФорма.ШаблонНаименованияДокумента", ПараметрыОткрытия,,,,,
		ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаголовокНачалоВыбораПродолжить(Результат, Параметры) Экспорт 
	
	Если Результат = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	Объект.Заголовок = Результат;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтветственныйНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	РаботаСПользователямиКлиент.ВыбратьПользователя(Элемент, Объект.Ответственный);
	
КонецПроцедуры

&НаКлиенте
Процедура ВидОбращенияПриИзменении(Элемент)
	
	Если Объект.ВидОбращения = ПредопределенноеЗначение("Перечисление.ВидыОбращенийГраждан.Анонимное") Тогда 
		Объект.Отправитель = Неопределено;
		Объект.Подписал = Неопределено;
		Элементы.Отправитель.Доступность = Ложь;
		Элементы.Адресат.Доступность = Ложь;
	Иначе	
		Элементы.Отправитель.Доступность = Истина;
		Элементы.Адресат.Доступность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВидДокументаПриИзменении(Элемент)
	
	ВидДокументаПриИзмененииСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура ДополнительныеРеквизитыЗначениеРеквизитаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	РаботаСШаблонамиДокументовКлиент.ПоказатьФормуВыбораЗначения(ЭтаФорма, Элемент);
	
КонецПроцедуры

//////////////////////////////////////////////////////////////////////////////// 
// Работа с номенклатурой дел

&НаКлиенте
Процедура НоменклатураДелНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Организация", 			Объект.Организация);
	ПараметрыФормы.Вставить("ВидДокумента", 		Объект.ВидДокумента);
	ПараметрыФормы.Вставить("Контрагент", 		Объект.Отправитель);
	ПараметрыФормы.Вставить("ВопросДеятельности", 	Объект.ВопросДеятельности);
	ПараметрыФормы.Вставить("ТекущаяСтрока", 		Объект.НоменклатураДел);
	ПараметрыФормы.Вставить("Подразделение", 		Объект.Подразделение);
	
	ОткрытьФорму("Справочник.НоменклатураДел.ФормаВыбора", ПараметрыФормы, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура НоменклатураДелАвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка)
		
	Если ЗначениеЗаполнено(Текст) Тогда
		СтандартнаяОбработка = Ложь;
		ДанныеВыбора = Делопроизводство.СформироватьДанныеВыбораНоменклатурыДел(Текст, Объект.Организация);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НоменклатураДелОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Текст) Тогда
		СтандартнаяОбработка = Ложь;
		ДанныеВыбора = Делопроизводство.СформироватьДанныеВыбораНоменклатурыДел(Текст, Объект.Организация);
	КонецЕсли;
	
КонецПроцедуры

//////////////////////////////////////////////////////////////////////////////// 
// Работа с адресатом, контрагентом и контактным лицом

&НаКлиенте
Процедура ОтправительПриИзменении(Элемент)
	
	Если Не ЗначениеЗаполнено(Объект.Отправитель) Тогда 
		Объект.Подписал = Неопределено;
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправительНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;                                                       
	
	ПараметрыФормы = Новый Структура;
	
	Если ЗначениеЗаполнено(Объект.Подписал) Тогда
		ПараметрыФормы.Вставить("Получатель", Объект.Подписал);
	Иначе	
		ПараметрыФормы.Вставить("Получатель", Объект.Отправитель);
	КонецЕсли;
	
	Если УчитыватьКакОбращениеГраждан Тогда 
		ПараметрыФормы.Вставить("ЮрФизЛицо", ПредопределенноеЗначение("Перечисление.ЮрФизЛицо.ФизЛицо"));
		ПараметрыФормы.Вставить("Режим", "ТолькоКонтрагенты");
	Иначе
		ПараметрыФормы.Вставить("Режим", "КонтрагентыКонтактныеЛица");
	КонецЕсли;

	ОткрытьФорму("ОбщаяФорма.ВыборКонтрагентаКонтактноеЛицо", ПараметрыФормы, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправительОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.КонтактныеЛица") Тогда
		
		Объект.Отправитель = ОбщегоНазначенияДокументооборотВызовСервера.ЗначениеРеквизитаОбъекта(
			ВыбранноеЗначение, "Владелец");
		Объект.Подписал = ВыбранноеЗначение;
		
	ИначеЕсли ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.Контрагенты") Тогда
		
		Объект.Отправитель = ВыбранноеЗначение;
		Объект.Подписал = Неопределено;

	ИначеЕсли ТипЗнч(ВыбранноеЗначение) = Тип("Структура") Тогда
			
		Если ЗначениеЗаполнено(ВыбранноеЗначение.Контрагент) И ЗначениеЗаполнено(ВыбранноеЗначение.КонтактноеЛицо) Тогда
			Объект.Отправитель = ВыбранноеЗначение.Контрагент;
			Объект.Подписал = ВыбранноеЗначение.КонтактноеЛицо;
		Иначе
			Объект.Отправитель = ВыбранноеЗначение.Контрагент;
			Объект.Подписал = Неопределено;
		КонецЕсли;
		
	КонецЕсли;
	
	Если УчитыватьКакОбращениеГраждан Тогда 
		ДанныеОтправителя = Делопроизводство.ПолучитьДанныеКонтрагента(Объект.Отправитель);
		Если ДанныеОтправителя.КонтрагентЮрЛицо Тогда 
			ПоказатьПредупреждение(, НСтр("ru = 'Выбранный контрагент не является физическим лицом!'; en = 'Selected counterparty is not an individual!'"));
			Объект.Отправитель = Неопределено;
		КонецЕсли;
	КонецЕсли;
	
	ВыбранноеЗначение = Объект.Отправитель;
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправительАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Текст) Тогда
		СтандартнаяОбработка = Ложь;
		Текст = СокрЛП(Текст);
		
		Если УчитыватьКакОбращениеГраждан Тогда 
			ДанныеВыбора = Делопроизводство.СформироватьДанныеВыбораПолучателя(Текст, УчитыватьКакОбращениеГраждан);
		Иначе	
			ДанныеВыбора = Делопроизводство.СформироватьДанныеВыбораПолучателя(Текст);
		КонецЕсли;		
	КонецЕсли;	

КонецПроцедуры

&НаКлиенте
Процедура ОтправительОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Текст) Тогда
		СтандартнаяОбработка = Ложь;
		Текст = СокрЛП(Текст);
		
		Если УчитыватьКакОбращениеГраждан Тогда 
			ДанныеВыбора = Делопроизводство.СформироватьДанныеВыбораПолучателя(Текст, УчитыватьКакОбращениеГраждан);
		Иначе	
			ДанныеВыбора = Делопроизводство.СформироватьДанныеВыбораПолучателя(Текст);
		КонецЕсли;		
		
		Если ДанныеВыбора.Количество() = 1 Тогда 
			СтандартнаяОбработка = Истина;
			ОтправительОбработкаВыбора(Элемент, ДанныеВыбора[0].Значение, Ложь)
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура АдресатПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Объект.Адресат) Тогда 
		Объект.Подразделение = РаботаСПользователями.ПолучитьПодразделение(Объект.Адресат);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура АдресатНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	РаботаСПользователямиКлиент.ВыбратьПользователя(Элемент, Объект.Адресат);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыРабочаяГруппаДокумента

&НаКлиенте
Процедура РабочаяГруппаДокументаПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	РаботаСРабочимиГруппамиКлиент.РабочаяГруппаПриНачалеРедактирования(
		Элемент, // РабочаяГруппаЭлемент
		НоваяСтрока);
	
КонецПроцедуры

&НаКлиенте
Процедура РабочаяГруппаДокументаПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	РаботаСРабочимиГруппамиКлиент.ШаблонРабочаяГруппаПриОкончанииРедактирования(
		ЭтаФорма,
		Объект.РабочаяГруппаДокумента,
		Элементы.РабочаяГруппаДокумента,
		ОтменаРедактирования);
	
КонецПроцедуры

&НаКлиенте
Процедура РабочаяГруппаДокументаУчастникНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	РаботаСАдреснойКнигойКлиент.ВыбратьУчастникаРабочейГруппыДляШаблоновДокументов(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура РабочаяГруппаДокументаУчастникАвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка)
	
	РаботаСРабочимиГруппамиКлиент.ШаблонРабочаяГруппаУчастникАвтоПодбор(
		Элемент,
		Текст,
		ДанныеВыбора,
		Ожидание,
		СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыРабочаяГруппаТаблица

&НаКлиенте
Процедура РабочаяГруппаТаблицаПередУдалением(Элемент, Отказ)
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"РабочаяГруппаТаблицаПередУдалениемПродолжение",
		ЭтотОбъект);
	РаботаСРабочимиГруппамиКлиент.РабочаяГруппаТаблицаПередУдалением(ЭтаФорма, Отказ, ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура РабочаяГруппаТаблицаПередУдалениемПродолжение(Результат, Параметры) Экспорт
	
	ТаблицаРГ = Элементы.РабочаяГруппаТаблица;
	Для Каждого Индекс Из ТаблицаРГ.ВыделенныеСтроки Цикл
		РабочаяГруппаТаблица.Удалить(ТаблицаРГ.ДанныеСтроки(Индекс));
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура РабочаяГруппаТаблицаПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	РаботаСРабочимиГруппамиКлиент.РабочаяГруппаПриНачалеРедактирования(Элемент, НоваяСтрока);
	
КонецПроцедуры

&НаКлиенте
Процедура РабочаяГруппаТаблицаПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	РаботаСРабочимиГруппамиКлиент.РабочаяГруппаПриОкончанииРедактирования(
		ЭтаФорма,
		Элемент,
		ОтменаРедактирования);
	
КонецПроцедуры

&НаКлиенте
Процедура РабочаяГруппаТаблицаУчастникНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	РаботаСАдреснойКнигойКлиент.ВыбратьУчастникаРабочейГруппы(ЭтаФорма, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура РабочаяГруппаТаблицаУчастникАвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка)
	
	РаботаСРабочимиГруппамиКлиент.ДокументРабочаяГруппаУчастникАвтоПодбор(
		Элемент,
		Текст,
		ДанныеВыбора,
		Ожидание,
		СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПодобратьУчастниковРабочейГруппыДокумента(Команда)
	
	РаботаСАдреснойКнигойКлиент.ПодобратьУчастниковРабочейГруппыДляШаблоновДокументов(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПодобратьУчастниковРабочейГруппы(Команда)
	
	РаботаСАдреснойКнигойКлиент.ПодобратьУчастниковРабочейГруппы(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура КатегорииПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
		
	Отказ = Истина;
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"ОткрытьФормуПодбораКатегорийПродолжение",
		ЭтотОбъект,
		Новый Структура);

	РаботаСКатегориямиДанныхКлиент.ОткрытьФормуПодбораКатегорийДляСпискаКатегорий(
		Объект.Категории, ОписаниеОповещения); 
		
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуПодбораКатегорийПродолжение(СписокКатегорийДанных, Параметры)Экспорт 
	
	Модифицированность = Параметры.Модифицированность Или Модифицированность;
		
КонецПроцедуры

&НаКлиенте
Процедура ПодобратьКатегории(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"ОткрытьФормуПодбораКатегорийПродолжение",
		ЭтотОбъект,
		Новый Структура);

	РаботаСКатегориямиДанныхКлиент.ОткрытьФормуПодбораКатегорийДляСпискаКатегорий(
		Объект.Категории, ОписаниеОповещения); 
	
КонецПроцедуры

&НаКлиенте
Процедура ПраваДоступа(Команда)
	
	ДокументооборотПраваДоступаКлиент.ОткрытьФормуПравДоступа(ЭтаФорма);
	
КонецПроцедуры

// СтандартныеПодсистемы.Печать
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуПечати(Команда)
	
	УправлениеПечатьюКлиент.ВыполнитьПодключаемуюКомандуПечати(Команда, ЭтаФорма, Объект);
	
КонецПроцедуры


// СтандартныеПодсистемы.БазоваяФункциональность
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры


#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУчетОбращенийГраждан()
	
	Если УчитыватьКакОбращениеГраждан Тогда  
		
		Если ЗначениеЗаполнено(Объект.Отправитель) 
			И Объект.Отправитель.ЮрФизЛицо <> Перечисления.ЮрФизЛицо.ФизЛицо Тогда 
			Объект.Отправитель = Неопределено;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Объект.Подписал) Тогда 
			Объект.Подписал = Неопределено;
		КонецЕсли;
		
		Если Объект.ВидОбращения = Перечисления.ВидыОбращенийГраждан.Анонимное Тогда 
			Элементы.Отправитель.Доступность = Ложь;
			Элементы.Адресат.Доступность = Ложь;
		КонецЕсли;	
		
	Иначе
		Элементы.Отправитель.Доступность = Истина;
		Элементы.Адресат.Доступность = Истина;
	КонецЕсли;
	
КонецПроцедуры	

&НаСервере
Процедура ВидДокументаПриИзмененииСервер()
	
	УчитыватьКакОбращениеГраждан = ПолучитьФункциональнуюОпцию(
		"УчитыватьКакОбращениеГраждан", 
		Новый Структура("ВидВходящегоДокумента", 
		Объект.ВидДокумента));
	УстановитьУчетОбращенийГраждан();	

	ОбновитьВидимостьРеквизитов();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьВидимостьРеквизитов()
	
	// ЕдиницыИзмерения
	УстановитьПараметрыФункциональныхОпцийФормы(Новый Структура("ВидВходящегоДокумента", Объект.ВидДокумента));
	
	// Доп. реквизиты
	СписокДопРеквизитов = РаботаСШаблонамиДокументовСервер.ПолучитьНаборДопРеквизитовДокумента("ВходящиеДокументы", Объект.ВидДокумента, Объект);
	РаботаСШаблонамиДокументовСервер.ПоместитьДопРеквизитыНаФорму(ДополнительныеРеквизиты, СписокДопРеквизитов);
	КоличествоСвойств = СписокДопРеквизитов.Количество();
	
	Если КоличествоСвойств > 0 Тогда
		Элементы.ГруппаДополнительныеРеквизиты.Видимость = Истина;
	Иначе 
		Элементы.ГруппаДополнительныеРеквизиты.Видимость = Ложь;
	КонецЕсли;	
	
	ПараметрыФункциональныхОпций = ПолучитьПараметрыФункциональныхОпцийФормы();
	Элементы.ЕдиницыИзмерения.Видимость = ПараметрыФункциональныхОпций.ВидВходящегоДокумента.ИспользоватьСрокИсполнения;
	Элементы.ДекорацияСрока.Видимость = ПараметрыФункциональныхОпций.ВидВходящегоДокумента.ИспользоватьСрокИсполнения;	
	
	Если ПараметрыФункциональныхОпций.ВидВходящегоДокумента.ВестиУчетПоНоменклатуреДел Тогда
		Элементы.ГруппаХранение.ОтображатьЗаголовок = Истина;
	Иначе
		Элементы.ГруппаХранение.ОтображатьЗаголовок = Ложь;
	КонецЕсли;
	
КонецПроцедуры

// Устанавливает доступность элементов формы при ее открытии в зависимости от
// прав доступа к шаблону.
&НаСервере
Процедура УстановитьДоступностьЭлементовПоПравуДоступа()
	
	Если НЕ Объект.Ссылка.Пустая()
		И НЕ ДокументооборотПраваДоступа.ПолучитьПраваПоОбъекту(Объект.Ссылка).Изменение Тогда
		
		ТолькоПросмотр = Истина;
		Элементы.Страницы.ТолькоПросмотр = Истина;
		
		Элементы.ФормаЗакрыть.Видимость = Истина;
		Элементы.ФормаЗакрыть.КнопкаПоУмолчанию = Истина;
		Элементы.ФормаЗаписатьИЗакрыть.Видимость = Ложь;
		Элементы.ФормаЗаписать.Видимость = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры

/////////////////////////////////////////////////////////////////////////////////////////
// Работа с рабочей группой

&НаСервере
Процедура ОбновитьИконкиУчастниковРабочейГруппыДокумента()
	
	Для Каждого Строка Из  Объект.РабочаяГруппаДокумента Цикл
		Если ТипЗнч(Строка.Участник) = Тип("СправочникСсылка.РолиИсполнителей") Тогда
			Строка.Иконка = 1;
			Строка.ЭтоРоль = Истина;
		ИначеЕсли ТипЗнч(Строка.Участник) = Тип("СправочникСсылка.РабочиеГруппы") Тогда
			Строка.Иконка = 2;
		ИначеЕсли ТипЗнч(Строка.Участник) = Тип("СправочникСсылка.СтруктураПредприятия") Тогда
			Строка.Иконка = 2;
		ИначеЕсли ТипЗнч(Строка.Участник) = Тип("СправочникСсылка.Пользователи") Тогда
			Строка.Иконка = 3;
		ИначеЕсли ТипЗнч(Строка.Участник) = Тип("Строка") Тогда
			Строка.Иконка = 4;
		КонецЕсли;	
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти
