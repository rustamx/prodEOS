#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Возвращает список делегирующих пользователей свои полномочия
// переданному в качестве параметра пользователю.
//
// Параметры:
//  Делегат - СправочникСсылка.Пользователи
//
// Возвращаемое значение:
//  Массив
//   * СправочникСсылка.Пользователи
//
Функция СписокДелегирующих(Делегат) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДелегированиеПрав.ОтКого
		|ИЗ
		|	Справочник.ДелегированиеПрав КАК ДелегированиеПрав
		|ГДЕ
		|	ДелегированиеПрав.Кому = &Пользователь
		|	И ДелегированиеПрав.Действует = ИСТИНА";
		
	Запрос.УстановитьПараметр("Пользователь", Делегат);
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ОтКого");
	
КонецФункции

// Возвращает список делегатов для уведомления по подписчику на событие.
//
// Параметры:
//  Подписчик - СправочникСсылка.Пользователь - Исходный подписчик на уведомление.
//  Объект - Произвольный - Объект, делегирование по которому учитывается.
// 
// Возвращаемое значение:
//  Массив - Делегаты подписчика для уведомления.
//
Функция ПолучитьДелегатовДляУведомления(Подписчик, Объект) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДелегированиеПрав.Кому
		|ИЗ
		|	Справочник.ДелегированиеПрав КАК ДелегированиеПрав
		|ГДЕ
		|	ДелегированиеПрав.ОтКого = &Подписчик
		|	И ДелегированиеПрав.Действует
		|	И ДелегированиеПрав.ВариантДелегирования = ЗНАЧЕНИЕ(Перечисление.ВариантыДелегированияПрав.ВсеПрава)
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДелегированиеПрав.Кому
		|ИЗ
		|	Справочник.ДелегированиеПрав.ОбластиДелегирования КАК ДелегированиеПравОбластиДелегирования
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ОбластиДелегированияПрав.Состав КАК ОбластиДелегированияПравСостав
		|		ПО ДелегированиеПравОбластиДелегирования.ОбластьДелегирования = ОбластиДелегированияПравСостав.Ссылка
		|			И (ОбластиДелегированияПравСостав.ОбъектМетаданных = &ИдентификаторОбъектаМетаданных)
		|			И (НЕ ОбластиДелегированияПравСостав.Ссылка.ПометкаУдаления)
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ДелегированиеПрав КАК ДелегированиеПрав
		|		ПО ДелегированиеПравОбластиДелегирования.Ссылка = ДелегированиеПрав.Ссылка
		|ГДЕ
		|	ДелегированиеПрав.ОтКого = &Подписчик
		|	И ДелегированиеПрав.Действует
		|	И ДелегированиеПрав.ВариантДелегирования = ЗНАЧЕНИЕ(Перечисление.ВариантыДелегированияПрав.Выборочно)";
	
	Запрос.УстановитьПараметр("Подписчик", Подписчик);
	
	Если Объект <> Неопределено Тогда
		ИдентификаторОбъектаМетаданных = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Объект.Метаданные());
	Иначе
		ИдентификаторОбъектаМетаданных = Неопределено;
	КонецЕсли;
	Запрос.УстановитьПараметр("ИдентификаторОбъектаМетаданных", ИдентификаторОбъектаМетаданных);
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Кому");
	
КонецФункции

#КонецОбласти

#Область ИнтеграцияBitrix

Процедура СформироватьМассивДанныхGetList(Результат, ПолноеИмя, ПараметрыЗапросаHTTP) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ОтКого", ПараметрыСеанса.ТекущийПользователь);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДелегированиеПрав.Ссылка КАК Ref_Key,
	|	ПРЕДСТАВЛЕНИЕ(ДелегированиеПрав.Ссылка) КАК Ref_Key____Presentation,
	|	ДелегированиеПрав.ДатаНачалаДействия КАК EffectiveDate,
	|	ПРЕДСТАВЛЕНИЕ(ДелегированиеПрав.ДатаНачалаДействия) КАК EffectiveDate____Presentation,
	|	ДелегированиеПрав.ДатаОкончанияДействия КАК RunUntill,
	|	ПРЕДСТАВЛЕНИЕ(ДелегированиеПрав.ДатаОкончанияДействия) КАК RunUntill____Presentation,
	|	ДелегированиеПрав.Кому КАК Delegate,
	|	ПРЕДСТАВЛЕНИЕ(ДелегированиеПрав.Кому) КАК Delegate____Presentation
	|ИЗ
	|	Справочник.ДелегированиеПрав КАК ДелегированиеПрав
	|ГДЕ
	|	ДелегированиеПрав.ОтКого = &ОтКого
	|
	|УПОРЯДОЧИТЬ ПО
	|	EffectiveDate,
	|	RunUntill";
	
	МассивДанных = ра_ОбменДанными.СформироватьМассивДанныхИзЗапроса(Запрос);
	Результат.Вставить("value", МассивДанных);
	
	НастройкаФормы = ПараметрыЗапросаHTTP.Получить("$form_settings");
	Если ЗначениеЗаполнено(НастройкаФормы) И НастройкаФормы Тогда
		МассивКолонок = ПолучитьПолучитьМассивКолонокСписка();
		МассивКнопок = ПолучитьМассивКнопок(Запрос.Параметры);
		МассивФильтров = ПолучитьМассивФильтровСписка();
		Результат.Вставить("form_settings", МассивКолонок);
		Результат.Вставить("button_settings", МассивКнопок);
		Результат.Вставить("filter_settings", МассивФильтров);
		Результат.Вставить("FormCaption", НСтр("ru = 'Список замещений'; en = 'Delegation list'"));
	КонецЕсли;
	
КонецПроцедуры

Процедура АктуализироватьТаблицуРеквизитов(ТаблицаРеквизитов)
	
	СтруктураРеквизита = Новый Структура("Имя,Тип,Выражение", "MainFile", "Справочник.Файлы", "ЕСТЬNULL(СправочникФайлы.Ссылка, ЗНАЧЕНИЕ(Справочник.Файлы.ПустаяСсылка))");
	ра_ОбменДанными.ДобавитьСтрокуВТаблицуРеквизитов(ТаблицаРеквизитов, СтруктураРеквизита);
	
	СтруктураРеквизита = Новый Структура("Имя,Тип,Выражение", "DocStatus", "Перечисление.СостоянияДокументов", "ЕСТЬNULL(РС_ИсторияСостояний.Состояние, ЗНАЧЕНИЕ(Перечисление.СостоянияДокументов.ПустаяСсылка))");
	ра_ОбменДанными.ДобавитьСтрокуВТаблицуРеквизитов(ТаблицаРеквизитов, СтруктураРеквизита);
	
	СтруктураРеквизита = Новый Структура("Имя,Тип,Выражение", "StatusIndex", "Число", "ЕСТЬNULL(РС_ИндексыСтатусовВидовОбъектов.ИндексСтатуса, 0)");
	ра_ОбменДанными.ДобавитьСтрокуВТаблицуРеквизитов(ТаблицаРеквизитов, СтруктураРеквизита);
	
	СтруктураРеквизита = Новый Структура("Имя,Тип,Выражение", "StatusTotal", "Число", "ЕСТЬNULL(РС_ИндексыСтатусовВидовОбъектов.ВсегоСтатусов, 0)");
	ра_ОбменДанными.ДобавитьСтрокуВТаблицуРеквизитов(ТаблицаРеквизитов, СтруктураРеквизита);
	
КонецПроцедуры

Функция ПолучитьТекстЗапросаВложенныеТаблицы() Экспорт
	
	Возврат "";
	
КонецФункции

Функция ПолучитьТекстЗапросаСоединений() Экспорт
	
	Возврат "	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Файлы КАК СправочникФайлы
			|	ПО ОсновнаяТаблица.Ссылка = СправочникФайлы.ВладелецФайла
			|		И СправочникФайлы.ра_ОсновнойФайл
			|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИсторияСостоянийДокументов.СрезПоследних КАК РС_ИсторияСостояний
			|	ПО ОсновнаяТаблица.Ссылка = РС_ИсторияСостояний.Документ
			|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ра_ИндексыСтатусовВидовОбъектов КАК РС_ИндексыСтатусовВидовОбъектов
			|	ПО ОсновнаяТаблица.ВидДокумента = РС_ИндексыСтатусовВидовОбъектов.ВидДокумента
			|	И РС_ИсторияСостояний.Состояние = РС_ИндексыСтатусовВидовОбъектов.СостояниеДокумента";
	
КонецФункции

Функция СформироватьМассивДанныхРолевойМодели(ДокументОбъект, ПараметрыФормирования = Неопределено) Экспорт
	
	Возврат Обработки.ра_ФормыБитрикс.Создать().ОписаниеФормы(ДокументОбъект.Метаданные(), ДокументОбъект);
	
КонецФункции

Функция ПолучитьМассивКнопок(ДокументОбъект) Экспорт
	
	ВидФормы = "ФормаОбъекта";
	Если ТипЗнч(ДокументОбъект) = Тип("Структура") Тогда
		ВидФормы = "ФормаСписка";
	КонецЕсли;
	
	МассивКнопок = Новый Массив;
	
	Если ВидФормы = "ФормаСписка" Тогда
		
		ИмяКнопки = "AddDelegate";
		ОписаниеКнопки = НСтр("ru = 'Добавить заместителя'; en = 'Add delegate'");
		Кнопка = ра_ОбменДанными.ПолучитьСтруктуруНастроекКнопки(ИмяКнопки, ОписаниеКнопки);
		
		МассивКнопок.Добавить(Кнопка);
		
	ИначеЕсли ВидФормы = "ФормаОбъекта" Тогда
		
		ИмяКнопки = "Save";
		ОписаниеКнопки = НСтр("ru = 'Сохранить'; en = 'Save'");
		Кнопка = ра_ОбменДанными.ПолучитьСтруктуруНастроекКнопки(ИмяКнопки, ОписаниеКнопки);
		
		МассивКнопок.Добавить(Кнопка);
		
	КонецЕсли;
	
	Возврат МассивКнопок;
	
КонецФункции

Функция ПолучитьПолучитьМассивКолонокСписка() Экспорт
	
	МетаданныеСправочника = Метаданные.Справочники.ДелегированиеПрав;
	
	ТаблицаНастроек = ра_ОбменДанными.СформироватьПустуюТаблицуНастроек();
	
	РеквизитыОбъекта = МетаданныеСправочника.Реквизиты;
	
	СтрокаНастроек = ра_ОбменДанными.ДобавитьСтрокуВТаблицуНастроек(ТаблицаНастроек, РеквизитыОбъекта.ДатаНачалаДействия);
	СтрокаНастроек.Имя = "EffectiveDate";
	СтрокаНастроек = ра_ОбменДанными.ДобавитьСтрокуВТаблицуНастроек(ТаблицаНастроек, РеквизитыОбъекта.ДатаОкончанияДействия);
	СтрокаНастроек.Имя = "RunUntill";
	СтрокаНастроек = ра_ОбменДанными.ДобавитьСтрокуВТаблицуНастроек(ТаблицаНастроек, РеквизитыОбъекта.Кому);
	СтрокаНастроек.Имя = "Delegate";
	
	МассивДанных = ра_ОбменДанными.СформироватьМассивДанныхИзТаблицыНастроек(ТаблицаНастроек);
	
	Возврат МассивДанных;
	
КонецФункции

Функция ПолучитьМассивФильтровСписка() Экспорт
	
	МассивДанных = Новый Массив;
	
	Возврат МассивДанных;
	
КонецФункции

Функция ПолучитьМассивЗаголовков(МассивДанных = Неопределено) Экспорт
	
	МассивЗаголовков = Новый Массив;
	
	Возврат МассивЗаголовков;
	
КонецФункции

//V2

Функция ЕстьМетодДополнитьОписаниеМетаданных() Экспорт
	
	Возврат Истина;
	
КонецФункции

Процедура ДополнитьОписаниеМетаданных(ОбработкаОбъект, Данные, ПараметрыФормирования) Экспорт
	
	ОбработкаОбъект.ДобавитьИсключения("Ссылка,ПометкаУдаления,ВариантДелегирования,Действует,Комментарий,Ответственный,ОтКого,УдалитьДатаПередачи,ОбластиДелегирования,УдалитьРоли");
	
	ОбработкаОбъект.ДобавитьПоле("", Новый Структура("Имя,Синоним,Тип", "FormCaption", НСтр("ru = 'Назначить заместителя'; en = 'Appoint delegate'"), Новый ОписаниеТипов("Строка",,,, Новый КвалификаторыСтроки(30))));
	
	ОбработкаОбъект.ДополнитьСловарь("ДатаНачалаДействия", "EffectiveDate");
	ОбработкаОбъект.ДополнитьСловарь("ДатаОкончанияДействия", "RunUntill");
	ОбработкаОбъект.ДополнитьСловарь("Кому", "Delegate");
	
	ОбработкаОбъект.УстановитьВидимость(
		"ДатаНачалаДействия,
		|ДатаОкончанияДействия,
		|Кому", Истина);
	
	ОбработкаОбъект.УстановитьДоступность(
		"ДатаНачалаДействия,
		|ДатаОкончанияДействия,
		|Кому", Истина);
	
	ОбработкаОбъект.УстановитьПараметрыВыбора("Кому",
		ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Новый ПараметрВыбора("ра_Организация", ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПараметрыСеанса.ТекущийПользователь, "ра_Организация"))));
	
	ОбязательныеРеквизиты = ОбработкаОбъект.ОбязательныеРеквизиты();
	//АктуализироватьМассивОбязательныхРеквизитов(ОбязательныеРеквизиты, Данные);
	ОбработкаОбъект.УстановитьОбязательность(ОбязательныеРеквизиты, Истина);
	
КонецПроцедуры

Функция ДополнитьПовторныеНесоответствия(Данные)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Результат = Данные.PovtornyeNesootvetstviya.Выгрузить();
	Результат.Колонки.Добавить("Date");
	Результат.Колонки.Добавить("PodrobnoeOpisanie");
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылки", Результат.ВыгрузитьКолонку("Nesootvetstvie"));
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ra_Nesootvetstvie.Ссылка КАК Ссылка,
	|	ra_Nesootvetstvie.Дата КАК Date,
	|	ra_Nesootvetstvie.PodrobnoeOpisanie КАК PodrobnoeOpisanie
	|ИЗ
	|	Документ.ra_Nesootvetstvie КАК ra_Nesootvetstvie
	|ГДЕ
	|	ra_Nesootvetstvie.Ссылка В(&Ссылки)";
	ДанныеНесоответствий = Запрос.Выполнить().Выгрузить();
	
	Для Каждого СтрокаТаблицы Из Результат Цикл
		ДанныеНесоответствия = ДанныеНесоответствий.Найти(СтрокаТаблицы.Nesootvetstvie, "Ссылка");
		Если ДанныеНесоответствия <> Неопределено Тогда
			ЗаполнитьЗначенияСвойств(СтрокаТаблицы, ДанныеНесоответствия);
		КонецЕсли;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#КонецЕсли
