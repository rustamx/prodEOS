
&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	Если ТипЗнч(Элемент.ТекущаяСтрока) = Тип("СтрокаГруппировкиДинамическогоСписка") Тогда
		ОписаниеПравилаОбработки = "";
		ТекущееПравило = Неопределено;
		Возврат;
	КонецЕсли;
	
	Если Элемент.ТекущиеДанные = Неопределено 
		ИЛИ ТипЗнч(Элемент.ТекущаяСтрока) = Тип("СтрокаГруппировкиДинамическогоСписка") 
		ИЛИ ТекущееПравило = Элемент.ТекущаяСтрока Тогда
		Возврат;
	КонецЕсли;
	
	ТекущееПравило = Элемент.ТекущаяСтрока;
	ОписаниеПравилаОбработки = ПолучитьОписаниеПравилаОбработки(ТекущееПравило);
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Список.Параметры.УстановитьЗначениеПараметра("УчетнаяЗапись", Параметры.УчетнаяЗапись);	
	
	Список.Параметры.УстановитьЗначениеПараметра("Ссылка", Параметры.Ссылка);
	Для Каждого Значение Из Параметры.ВыбранныеЗначения Цикл
		ВыбранныеПравила.Добавить(Значение);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПравилоВверх(Команда)
	
	Если Не ЗначениеЗаполнено(ТекущееПравило) Тогда
		Возврат;
	КонецЕсли;
	ПереместитьПравило(Элементы.Список.ТекущаяСтрока, -1);
	
КонецПроцедуры

&НаКлиенте
Процедура ПравилоВниз(Команда)
	
	Если Не ЗначениеЗаполнено(ТекущееПравило) Тогда
		Возврат;
	КонецЕсли;
	ПереместитьПравило(Элементы.Список.ТекущаяСтрока, 1);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьОписаниеПравилаОбработки(ПравилоСсылка)
	
	Если ТипЗнч(ПравилоСсылка) = Тип("СтрокаГруппировкиДинамическогоСписка") Тогда
		Возврат "";
	КонецЕсли;
	Если ЗначениеЗаполнено(ПравилоСсылка) Тогда
		Менеджер = ОбщегоНазначения.МенеджерОбъектаПоСсылке(ПравилоСсылка);
		Возврат Менеджер.ПолучитьОписаниеПравила(ПравилоСсылка);
	Иначе
		Возврат "";
	КонецЕсли;
	
КонецФункции

&НаСервере
Функция ПереместитьПравило(Правило, Направление)
	
	Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
		Правило,
	    "Порядок, ДляВходящихПисем, ДляИсходящихПисем");
	
	Запрос = Новый Запрос;
	Если Направление < 0 Тогда
		Запрос.Текст = 
			"ВЫБРАТЬ ПЕРВЫЕ 1
			|	ПравилаОбработкиПисем.Ссылка
			|ИЗ
			|	Справочник.ПравилаОбработкиПисем КАК ПравилаОбработкиПисем
			|ГДЕ
			|	ПравилаОбработкиПисем.ДляВходящихПисем = &ДляВходящихПисем
			|	И ПравилаОбработкиПисем.ДляИсходящихПисем = &ДляИсходящихПисем
			|	И ПравилаОбработкиПисем.Порядок < &Порядок
			|	И ПравилаОбработкиПисем.УчетнаяЗапись = &УчетнаяЗапись
			|	И ПравилаОбработкиПисем.ПометкаУдаления = ЛОЖЬ
			|
			|УПОРЯДОЧИТЬ ПО
			|	ПравилаОбработкиПисем.Порядок УБЫВ";	
	Иначе
		Запрос.Текст = 
			"ВЫБРАТЬ ПЕРВЫЕ 1
			|	ПравилаОбработкиПисем.Ссылка
			|ИЗ
			|	Справочник.ПравилаОбработкиПисем КАК ПравилаОбработкиПисем
			|ГДЕ
			|	ПравилаОбработкиПисем.ДляВходящихПисем = &ДляВходящихПисем
			|	И ПравилаОбработкиПисем.ДляИсходящихПисем = &ДляИсходящихПисем
			|	И ПравилаОбработкиПисем.Порядок > &Порядок
			|	И ПравилаОбработкиПисем.УчетнаяЗапись = &УчетнаяЗапись
			|	И ПравилаОбработкиПисем.ПометкаУдаления = ЛОЖЬ
			|
			|УПОРЯДОЧИТЬ ПО
			|	ПравилаОбработкиПисем.Порядок Возр";	
	КонецЕсли;	
		
	Запрос.УстановитьПараметр("УчетнаяЗапись", ТекущаяУчетнаяЗапись);
	Запрос.УстановитьПараметр("ДляВходящихПисем", Реквизиты.ДляВходящихПисем);
	Запрос.УстановитьПараметр("ДляИсходящихПисем", Реквизиты.ДляИсходящихПисем);
	Запрос.Установитьпараметр("Порядок", Реквизиты.Порядок);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();
		Если Выборка.Следующий() Тогда
			ДругоеПравило = Выборка.Ссылка.ПолучитьОбъект();
			ДанноеПравило = Правило.ПолучитьОбъект();
			
			ПорядокБуфер = ДругоеПравило.Порядок;
			ДругоеПравило.Порядок = ДанноеПравило.Порядок;
			ДанноеПравило.Порядок = ПорядокБуфер;
			
			ДругоеПравило.Записать();
			ДанноеПравило.Записать();
			
			Элементы.Список.Обновить();
			
			Возврат Истина;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_ПравилоОбработкиПисем" Тогда
		ОписаниеПравилаОбработки = ПолучитьОписаниеПравилаОбработки(Элементы.Список.ТекущаяСтрока);	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьДляВходящих(Команда)
	
	ПараметрыФормы = Новый Структура;
	Параметрыформы.Вставить("УчетнаяЗапись", ТекущаяУчетнаяЗапись);
	Параметрыформы.Вставить("ДляВходящихПисем", Истина);
	Параметрыформы.Вставить("ДляИсходящихПисем", Ложь);
	ОткрытьФорму("Справочник.ПравилаОбработкиПисем.ФормаОбъекта", ПараметрыФормы, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьДляИсходящих(Команда)
	
	ПараметрыФормы = Новый Структура;
	Параметрыформы.Вставить("УчетнаяЗапись", ТекущаяУчетнаяЗапись);
	Параметрыформы.Вставить("ДляВходящихПисем", Ложь);
	Параметрыформы.Вставить("ДляИсходящихПисем", Истина);
	ОткрытьФорму("Справочник.ПравилаОбработкиПисем.ФормаОбъекта", ПараметрыФормы, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ВключитьПравило(Команда)
	
	Если Не ЗначениеЗаполнено(ТекущееПравило) Тогда
		Возврат;
	КонецЕсли;	
	ВключитьВыключить(Элементы.Список.ТекущаяСтрока, Истина);	
	
КонецПроцедуры

&НаКлиенте
Процедура ВыключитьПравило(Команда)
	
	Если Не ЗначениеЗаполнено(ТекущееПравило) Тогда
		Возврат;
	КонецЕсли;
	ВключитьВыключить(Элементы.Список.ТекущаяСтрока, Ложь);
	
КонецПроцедуры

&НаСервере
Процедура ВключитьВыключить(Ссылка, Включен)
	
	ОбъектПравило = Ссылка.ПолучитьОбъект();
	ОбъектПравило.Используется = Включен;
	ОбъектПравило.Записать();
	
	Элементы.Список.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура ПрименитьПравило(Команда)
	
	Если ТипЗнч(Элементы.Список.ТекущаяСтрока) = Тип("СтрокаГруппировкиДинамическогоСписка") 
		Или Элементы.Список.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Правило", Элементы.Список.ТекущаяСтрока);
	ПараметрыФормы.Вставить("ЗаголовокКнопкиГотово", НСтр("ru = 'Готово'; en = 'Done'"));
	ПараметрыФормы.Вставить(
		"ЗаголовокФормы", 
		СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Применение правила ""%1""'; en = 'Applying rule ""%1""'"),
			Строка(Элементы.Список.ТекущаяСтрока)));
	ОткрытьФорму(
		"Справочник.ПравилаОбработкиПисем.Форма.ФормаВыбораПапкиДляПрименения",
		ПараметрыФормы,
		ЭтаФорма);
	
КонецПроцедуры


&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Если Копирование Тогда
		Отказ = Истина;
		Если ТипЗнч(Элементы.Список.ТекущаяСтрока) = Тип("СтрокаГруппировкиДинамическогоСписка") Тогда
			Возврат;
		КонецЕсли;
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("ПравилоОснование", Элементы.Список.ТекущаяСтрока);
		ОткрытьФорму("Справочник.ПравилаОбработкиПисем.ФормаОбъекта", ПараметрыФормы, Элемент);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Переименовать(Команда)
	
	Если ТипЗнч(Элементы.Список.ТекущаяСтрока) = Тип("СтрокаГруппировкиДинамическогоСписка") 
		Или Элементы.Список.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Ключ", Элементы.Список.ТекущаяСтрока);
	ОткрытьФорму("Справочник.ПравилаОбработкиПисем.Форма.ПереименованиеПравила", ПараметрыФормы);
	
КонецПроцедуры


&НаКлиенте
Процедура ДобавитьВВыбранные(Команда)
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Если ТипЗнч(Элементы.Список.ТекущаяСтрока) = Тип("СтрокаГруппировкиДинамическогоСписка") Тогда
		Возврат;
	КонецЕсли;
	Если ВыбранныеПравила.НайтиПоЗначению(Элементы.Список.ТекущаяСтрока) <> Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ВыбранныеПравила.Добавить(Элементы.Список.ТекущаяСтрока);
	
КонецПроцедуры

&НаКлиенте
Процедура УбратьИзВыбранных(Команда)
	
	Если Элементы.ВыбранныеПравила.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Элемент = ВыбранныеПравила.НайтиПоЗначению(Элементы.ВыбранныеПравила.ТекущиеДанные.Значение);
	ВыбранныеПравила.Удалить(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбранныеВверх(Команда)
	
	Если Элементы.ВыбранныеПравила.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Элемент = ВыбранныеПравила.НайтиПоЗначению(Элементы.ВыбранныеПравила.ТекущиеДанные.Значение);
	Попытка
		ВыбранныеПравила.Сдвинуть(Элемент, -1);
	Исключение
	КонецПопытки;
	
КонецПроцедуры


&НаКлиенте
Процедура ВыбранныеВниз(Команда)
	
	Если Элементы.ВыбранныеПравила.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Элемент = ВыбранныеПравила.НайтиПоЗначению(Элементы.ВыбранныеПравила.ТекущиеДанные.Значение);
	Попытка
		ВыбранныеПравила.Сдвинуть(Элемент, 1);
	Исключение
	КонецПопытки;
	
КонецПроцедуры


&НаКлиенте
Процедура Готово(Команда)
	
	Закрыть(ВыбранныеПравила.ВыгрузитьЗначения());
	
КонецПроцедуры


&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ДобавитьВВыбранные(Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбранныеПравилаПриАктивизацииСтроки(Элемент)
	
	Если Элементы.ВыбранныеПравила.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Элементы.Список.ТекущаяСтрока = Элементы.ВыбранныеПравила.ТекущиеДанные.Значение;
	ТекущееПравило = Элементы.Список.ТекущаяСтрока;	
	ОписаниеПравилаОбработки = ПолучитьОписаниеПравилаОбработки(ТекущееПравило);
	
КонецПроцедуры

