
// Сформировать сообщение СВД
Функция СформироватьСообщение(Транспорт, Документ, Контрагент, Организация, Правило,
		ТаблицаФайловДляОтправки = Неопределено) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	НастройкаПриемаОтправки = Транспорт.НастройкаПриемаОтправки;
	ФорматСообщения = Транспорт.ФорматСообщения;
	
	Если ФорматСообщения = Справочники.ФорматыСообщенийСВД.СообщениеПоГОСТ53898ВложенныеФайлы
		Или ФорматСообщения = Справочники.ФорматыСообщенийСВД.СообщениеПоГОСТ538982013ВложенныеФайлы 
		Или ФорматСообщения = Справочники.ФорматыСообщенийСВД.Сообщение1СДокументооборот Тогда
		
		ВозвращаемоеПолноеИмяФайла = "";
		ВозвращаемыйИдентификационныйНомерСообщения = "";
		
		ВозвращаемыйВидСообщенияСВД = Перечисления.ВидыСообщенийСВД.ОсновнойДокумент;
		
		Если Не РаботаССВД.ВыгрузитьИсходящийДокументВXML(Документ, ВозвращаемоеПолноеИмяФайла, Контрагент,
			Транспорт, ВозвращаемыйИдентификационныйНомерСообщения, Правило, ВозвращаемыйВидСообщенияСВД,
			ТаблицаФайловДляОтправки) Тогда
			
			Возврат Ложь;
			
		КонецЕсли;
		
		// Создать документ ИсходящееСообщениеСВД
		ИсходящееСообщениеСВД = РаботаССВД.СоздатьДокументИсходящееСообщениеСВД(Документ, Контрагент, 
		Организация, Транспорт, ФорматСообщения, ВозвращаемыйИдентификационныйНомерСообщения,
		ВозвращаемыйВидСообщенияСВД);
		Если  ФорматСообщения = Справочники.ФорматыСообщенийСВД.СообщениеПоГОСТ538982013ВложенныеФайлы     Тогда
			ИмяФайлаПаспорта = "DocInfo";
			ХранитьВерсии = Ложь;
			Для каждого СтрокаФайлДляОтправки Из ТаблицаФайловДляОтправки Цикл
				
				Если СтрокаФайлДляОтправки.Файл = Неопределено Тогда
					СведенияОФайле = РаботаСФайламиКлиентСервер.СведенияОФайле("ФайлСВерсией");
					СведенияОФайле.АдресВременногоХранилищаФайла = СтрокаФайлДляОтправки.ЭПВременноеХранилище;
					СведенияОФайле.ИмяБезРасширения = СтрокаФайлДляОтправки.ИмяФайла;
					СведенияОФайле.ХранитьВерсии = ХранитьВерсии;
					СведенияОФайле.РасширениеБезТочки = СтрокаФайлДляОтправки.ТекущаяВерсияРасширение;
					
					ФайлСсылка = РаботаСФайламиВызовСервера.СоздатьФайлСВерсией(
					ИсходящееСообщениеСВД,СведенияОФайле);
					
				Иначе
					НовыйФайл = РаботаСФайламиВызовСервера.СкопироватьФайл(СтрокаФайлДляОтправки.Файл, 
					ИсходящееСообщениеСВД,,ХранитьВерсии);
					ЗаблокироватьДанныеДляРедактирования(НовыйФайл.Ссылка);
					ФайлОбъект = НовыйФайл.ПолучитьОбъект();
					
					ФайлОбъект.ПолноеНаименование = СтрокаФайлДляОтправки.ИмяФайла;
					
					ФайлОбъект.Записать();
					РазблокироватьДанныеДляРедактирования(ФайлОбъект.Ссылка);
				КонецЕсли;
				
			КонецЦикла;
			
		Иначе
			ИмяФайлаПаспорта = "message";
		КонецЕсли;	
		// Добавить файл
		РаботаСФайламиВнешнийВызов.СоздатьФайлНаОсновеФайлаНаДиске(ИсходящееСообщениеСВД, 
		ВозвращаемоеПолноеИмяФайла, ИмяФайлаПаспорта);
		
		Попытка
			УдалитьФайлы(ВозвращаемоеПолноеИмяФайла);
		Исключение
			ЗаписьЖурналаРегистрации(
				НСтр("ru = 'СВД. Формирование сообщения на сервере СВД.'; en = 'EDES. Generation messages on EDES server.'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),
				УровеньЖурналаРегистрации.Ошибка,
				ФорматСообщения.Метаданные(),
				ФорматСообщения,
				ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		КонецПопытки;
		
		Возврат Истина;
		
	КонецЕсли;	
	
	Возврат РаботаССВДПереопределяемый.СформироватьСообщение(Транспорт, Документ, 
		Контрагент, Организация, Правило, ТаблицаФайловДляОтправки);    
	
КонецФункции

////////////////////////////////////////
////// Функции сервера СВД
////////////////////////////////////////

// Вызывается на сервере СВД и записывает в журнал сообщение СВД
// Если при записи возникла ошибка, то записывается уведомление об ошибке приема.
// Параметры:
//	СообщениеСВД - структура
//		Наименование - имя сообщения
//		Файлы - массив структур
//			Имя - Имя файла
//			Тип - MIME-тип файла
//			Данные - двоичные данные файла
Процедура ЗаписатьСообщения(ФорматСообщенияСсылка, СообщениеСВД) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ОшибочноеСообщение = Ложь;
	СообщениеОбОшибке = "";
	КодОшибки = 0;
	
	ИдентификаторСообщения = Неопределено;
	ПользовательОтКого = Неопределено;
	Сообщение = Неопределено;
	
	ПространствоИмен = РаботаССВД.ПолучитьПространствоИмен(ФорматСообщенияСсылка);

	// Получение информации о сообщении
	ИдентификаторСообщения = СообщениеСВД.Наименование;
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ТаблицаКонтактнаяИнформация.Ссылка
		|ИЗ
		|	Справочник.Пользователи.КонтактнаяИнформация КАК ТаблицаКонтактнаяИнформация
		|ГДЕ
		|	ТаблицаКонтактнаяИнформация.АдресЭП = &Адрес
		|	И ТаблицаКонтактнаяИнформация.Ссылка.Недействителен = ЛОЖЬ
		|	И ТаблицаКонтактнаяИнформация.Ссылка.Недействителен = ЛОЖЬ";
	Запрос.УстановитьПараметр("Адрес", СообщениеСВД.ОтправительПочта);
	РезультатЗапроса = Запрос.Выполнить();
	Если Не РезультатЗапроса.Пустой() Тогда
	    Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		ПользовательОтКого = Выборка.Ссылка;
		
		Если ФорматСообщенияСсылка = Справочники.ФорматыСообщенийСВД.СообщениеПоГОСТ53898ВложенныеФайлы
			Или ФорматСообщенияСсылка = Справочники.ФорматыСообщенийСВД.СообщениеПоГОСТ538982013ВложенныеФайлы  
			Или ФорматСообщенияСсылка = Справочники.ФорматыСообщенийСВД.Сообщение1СДокументооборот Тогда
			Если СообщениеСВД.Свойство("ИмяКорневогоЭлемента") Тогда
				ИмяКорневогоЭлемента = СообщениеСВД.ИмяКорневогоЭлемента;
			Иначе
				ИмяКорневогоЭлемента = "Header";
			КонецЕсли;    
			Если СообщениеСВД.Файлы.Количество() = 1 или ИмяКорневогоЭлемента <> "Header"  Тогда
				ИмяВременногоФайла = СообщениеСВД.ИмяВременногоОсновногоФайла;
				Если Не ПустаяСтрока(ИмяВременногоФайла) Тогда
					Попытка
						ТипОбъектаXDTO = ФабрикаXDTO.Тип(ПространствоИмен, ИмяКорневогоЭлемента);  
						Если ТипОбъектаXDTO = Неопределено Тогда
							ОшибочноеСообщение = Истина;
							СообщениеОбОшибке = НСтр("ru = 'Схема сообщения не обеспечивает соответствие стандарту ГОСТ 53898'; en = 'Message schema does not comply with GOST 53898'");          
							КодОшибки = 1000; 
						КонецЕсли;    
						ЧтениеXML = Новый ЧтениеXML;
						ЧтениеXML.ОткрытьФайл(ИмяВременногоФайла);
						Сообщение = ФабрикаXDTO.ПрочитатьXML(ЧтениеXML, ТипОбъектаXDTO);
						Сообщение.Проверить();
					Исключение
						ОшибочноеСообщение = Истина;
						
						Информация = ИнформацияОбОшибке();
						СообщениеОбОшибке = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
							НСтр("ru = 'Схема сообщения не обеспечивает соответствие стандарту  ГОСТ 53898 : ""%1""'; en = 'Message schema does not comply with GOST 53898: ""%1""'"),
						ПодробноеПредставлениеОшибки(Информация));
						
						КодОшибки = 1000;
					КонецПопытки;	
					
					ЧтениеXML.Закрыть();
					
					Попытка
						УдалитьФайлы(ИмяВременногоФайла);
					Исключение
						ЗаписьЖурналаРегистрации(
							НСтр("ru = 'СВД. Записать сообщения на сервере СВД.'; en = 'EDES. Save messages on EDES server.'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),
							УровеньЖурналаРегистрации.Ошибка,
							ФорматСообщенияСсылка.Метаданные(),
							ФорматСообщенияСсылка,
							ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
					КонецПопытки;
					
					Если Не ОшибочноеСообщение Тогда    
						Если  ИмяКорневогоЭлемента <> "Header"  Тогда
							ПользовательОтКогоСтр = Сообщение.Header.Sender.Contact.Organization.ShortName;
							ПользовательОтКого  = Справочники.Пользователи.НайтиПоНаименованию(ПользовательОтКогоСтр);
							ПользовательКомуСтр = Сообщение.Header.Recipient.Contact[0].Organization.ShortName;
							ПользовательКому    = Справочники.Пользователи.НайтиПоНаименованию(ПользовательКомуСтр);
							ИдентификаторСообщения = Сообщение.Header.ReturnID; 
						Иначе    
							ПользовательОтКогоСтр = Сообщение.from_organization;
							ПользовательОтКого = Справочники.Пользователи.НайтиПоНаименованию(ПользовательОтКогоСтр);
							ПользовательКомуСтр = Сообщение.to_organization;
							ПользовательКому = Справочники.Пользователи.НайтиПоНаименованию(ПользовательКомуСтр);
							ИдентификаторСообщения = Сообщение.msg_id;
						КонецЕсли;
						Если Не ЗначениеЗаполнено(ПользовательКому) Тогда
							ОшибочноеСообщение = Истина;
							СообщениеОбОшибке = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
							НСтр("ru = 'Получатель ""%1"" не найден среди абонентов сервера СВД'; en = 'Recipient ""%1"" is not found among the subscribers of EDES Server'"),
							ПользовательКомуСтр);    
							КодОшибки = 10; // Код ошибки по ГОСТ 53898
						КонецЕсли;
						
						Если Не ОшибочноеСообщение Тогда
							НачатьТранзакцию();
							Попытка
								
								//Если получатель найден, то записываем сообщение в справочник СерверныеСообщенияСВД
								НовоеСообщение = Справочники.СерверныеСообщенияСВД.СоздатьЭлемент();
								НовоеСообщение.ДатаПолученияСервером = ТекущаяДатаСеанса();
								НовоеСообщение.ОтКого = ПользовательОтКого;
								НовоеСообщение.Кому = ПользовательКому;	  
								НовоеСообщение.Отправлено = Ложь;
								НовоеСообщение.ИдентификаторСообщения = ИдентификаторСообщения;
								НовоеСообщение.ФорматСообщения = ФорматСообщенияСсылка;
								НовоеСообщение.Записать();
								// Получение файла XML из сообщения
								ЗаписьXML = Новый ЗаписьXML;
								ВременныйФайл = ПолучитьИмяВременногоФайла("xml");
								ЗаписьXML.ОткрытьФайл(ВременныйФайл, "UTF-8");
								ФабрикаXDTO.ЗаписатьXML(ЗаписьXML, Сообщение);
								ЗаписьXML.Закрыть();
								
								ТаблицаВложенний =  СообщениеСВД.Файлы;
								Для Каждого ОбъектXDTOФайл Из Сообщение.Header.ResourceList.Resource Цикл
									СтрокаТЗФайлов =  ТаблицаВложенний.Найти(Нрег(ОбъектXDTOФайл.UniqueName),"ИмяФайлаНрег"); 
									Если  СтрокаТЗФайлов <> Неопределено Тогда 
										ФайлСсылка = РаботаССВД.ДобавитьФайл2013(НовоеСообщение.Ссылка, СтрокаТЗФайлов);
									КонецЕсли;    
								КонецЦикла;	
								
								ЗафиксироватьТранзакцию();
							Исключение
								ОтменитьТранзакцию();
								ОшибочноеСообщение = Истина;
								
								Информация = ИнформацияОбОшибке();
								СообщениеОбОшибке = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
								НСтр("ru = 'В процессе обработки сообщения на сервере произошла ошибка ""%1""'; en = 'In the course of processing a message, an error ""%1"" occurred on the server.'"),
								ПодробноеПредставлениеОшибки(Информация));
								
								КодОшибки = 1001;
							КонецПопытки;	
						КонецЕсли;
					КонецЕсли;
				Иначе
					ОшибочноеСообщение = Истина;
					СообщениеОбОшибке = НСтр("ru = 'В сообщении отсутствует зона сообщения ""Header""'; en = 'Message has no ""Header"" area'");
					КодОшибки = 20; // Код ошибки по ГОСТ 53898
				КонецЕсли;
			Иначе
				ОшибочноеСообщение = Истина;
				СообщениеОбОшибке = НСтр("ru = 'Неправильное количество файлов в сообщении'; en = 'Wrong number of files in the message'");
				КодОшибки = 1002; 
			КонецЕсли;	
		Иначе
			ОшибочноеСообщение = РаботаССВДСерверСВДПереопределяемый.ЗаписатьСообщениеСВД(ФорматСообщенияСсылка, 
				СообщениеСВД);
		КонецЕсли;
	КонецЕсли;
	Если ОшибочноеСообщение Тогда
		
		ЗаписьЖурналаРегистрации(
			НСтр("ru = 'СВД. Записать сообщения на сервере СВД.'; en = 'EDES. Save messages on EDES server.'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),
			УровеньЖурналаРегистрации.Ошибка,
			ФорматСообщенияСсылка.Метаданные(),
			ФорматСообщенияСсылка,
			СообщениеОбОшибке);
		
		Если ЗначениеЗаполнено(ИдентификаторСообщения)
			И ЗначениеЗаполнено(ПользовательОтКого) Тогда
			Если  ИмяКорневогоЭлемента = "Header"  Тогда
				
				СообщениеОбОшибкеXDTO = СформироватьСообщениеОбОшибке(
					ИдентификаторСообщения, 
					10, // Получатель не найден (ГОСТ)
					СообщениеОбОшибке, 
					ПользовательОтКого,
					ПространствоИмен);
					ИмяФайлаОтчетаОбОшибке = "Сообщение_" + ИдентификаторСообщения;
			ИначеЕсли Сообщение <> Неопределено Тогда
				СообщениеОбОшибкеXDTO = РаботаССВД.СформироватьСообщениеОбОшибкеСВД2013(Сообщение,КодОшибки, 
					СообщениеОбОшибке, ПользовательОтКого);
				ИмяФайлаОтчетаОбОшибке = "Report";
			Иначе
				СообщениеОбОшибкеXDTO = Неопределено;  
			КонецЕсли;
			Если СообщениеОбОшибкеXDTO <>  Неопределено Тогда
				НовоеСообщение = Справочники.СерверныеСообщенияСВД.СоздатьЭлемент();
				НовоеСообщение.ДатаПолученияСервером = ТекущаяДатаСеанса();
				НовоеСообщение.ОтКого = ПользовательОтКого;
				НовоеСообщение.Кому = ПользовательОтКого;	
				НовоеСообщение.Отправлено = Ложь;
				НовоеСообщение.ИдентификаторСообщения = ИдентификаторСообщения;
				НовоеСообщение.ФорматСообщения = ФорматСообщенияСсылка;
				НовоеСообщение.Записать();
				// Получение файла XML из сообщения
				ЗаписьXML = Новый ЗаписьXML;
				ВременныйФайл = ПолучитьИмяВременногоФайла("xml");
				ЗаписьXML.ОткрытьФайл(ВременныйФайл, "UTF-8");
				ФабрикаXDTO.ЗаписатьXML(ЗаписьXML, СообщениеОбОшибкеXDTO);
				ЗаписьXML.Закрыть();
				
				РаботаСФайламиВнешнийВызов.СоздатьФайлНаОсновеФайлаНаДиске(
				НовоеСообщение.Ссылка,
				ВременныйФайл,
				//"Сообщение_" + ИдентификаторСообщения);
				ИмяФайлаОтчетаОбОшибке);  
				
				Попытка
					УдалитьФайлы(ВременныйФайл);
				Исключение
					ЗаписьЖурналаРегистрации(
						НСтр("ru = 'СВД. Записать сообщения на сервере СВД.'; en = 'EDES. Save messages on EDES server.'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),
						УровеньЖурналаРегистрации.Ошибка,
						ФорматСообщенияСсылка.Метаданные(),
						ФорматСообщенияСсылка,
						ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
				КонецПопытки;
			КонецЕсли;	
		КонецЕсли;	
	КонецЕсли;
	
КонецПроцедуры

Функция СформироватьСообщениеОбОшибке(ИдВходящегоСообщения, КодОшибки, ТекстОшибки, Кому, ПространствоИмен)
	
	Сообщение = СоздатьОбъект("Header", ПространствоИмен);
	// Вид стандарта, по которому создано данное сообщение 
	Сообщение.standart = НСтр("ru='Стандарт системы управления документами'; en = 'Document management system standard'");

	Сообщение.version = "1.0"; // Версия стандарта 
	Сообщение.time = УниверсальноеВремя(ТекущаяДатаСеанса()); // Дата и время формирования сообщения в UTC

	Сообщение.msg_type = 0; // Вид сообщения. Значение = 0 для уведомления.
	
	ИДПакета = Новый УникальныйИдентификатор;
	Сообщение.msg_id = ИдВСтроку(ИДПакета); // Уникальный служебный идентификационный номер сообщения 

	// для фонового задания тут не будет пользователя - надо его брать откуда то
	ТекущийПользователь = ПользователиКлиентСервер.ТекущийПользователь();
	
	// Уникальный служебный идентификационный номер отправителя
	Сообщение.from_org_id = Строка(ТекущийПользователь.УникальныйИдентификатор()); 
	
	// Организация-отправитель
	Сообщение.from_organization = НСтр("ru = 'Сервер СВД 1С:Документооборот'; en = '1С:Document management EDES server'"); 
	
	Сообщение.from_sys_id = "from_sys_id"; //  Уникальный служебный идентификационный номер  системы отправителя
	Сообщение.from_system = "1С:Документооборот"; // Наименование системы управления  документами отправителя	
	
	// Дополнительные данные о системе управления документами отправителя
	Сообщение.from_system_details = Метаданные.Версия; //   не обязательный  
	
	// При отправке уведомлений и ответных сообщений об исполнении ранее направленного документа   
	// значения атрибутов рекомендуется брать из атрибутов from_... принятого  соответствующего сообщения
	
	Сообщение.to_organization = Строка(Кому); // Организация-получатель 
	
	ОтветнаяИнформация = СоздатьОбъект("AcknowledgementType", ПространствоИмен);
	Сообщение.Acknowledgement = ОтветнаяИнформация;
	
	ОтветнаяИнформация.msg_id = ИдВходящегоСообщения;
	ОтветнаяИнформация.ack_type = 1;
	
	СообщениеОбОшибке = СоздатьОбъект("AckResult", ПространствоИмен);
	ОтветнаяИнформация.AckResult.Добавить(СообщениеОбОшибке);
	СообщениеОбОшибке.errorcode = КодОшибки;
	СообщениеОбОшибке.__content = ТекстОшибки;
	
	Возврат Сообщение;
	
КонецФункции

// Создает XDTO объект указанного типа из пространства имен ПространствоИмен
Функция СоздатьОбъект(ТипОбъекта, ПространствоИмен) Экспорт
	
	Возврат ФабрикаXDTO.Создать(ФабрикаXDTO.Тип(ПространствоИмен, ТипОбъекта));
	
КонецФункции

Функция ИдВСтроку(ИДДокумента)
	
	ИДДокументаСтрока = НРег(Строка(ИДДокумента));
	ИДДокументаСтрока = СтрЗаменить(ИДДокументаСтрока, "-", "");
	
	Возврат ИДДокументаСтрока;
	
КонецФункции	

