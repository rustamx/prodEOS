#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Проверяет что заполнены поля шаблона
Функция ПолучитьСписокНезаполненныхПолейНеобходимыхДляСтарта() Экспорт
	
	МассивПолей = Новый Массив;
	
	СтруктураРеквизитов = Новый Структура;
	Для Каждого Строка Из Шаблоны Цикл
		СтруктураРеквизитов.Вставить(Строка.Реквизит, Строка.Шаблон);
	КонецЦикла;	
	
	Попытка
		Ошибки = БизнесПроцессы[ТипШаблона].ПроверитьШаблон(СтруктураРеквизитов);
	Исключение
		МассивПолей.Добавить(НСтр("ru='Неверный тип процесса'; en = 'Invalid process type'"));
		Возврат МассивПолей;	
	КонецПопытки;	
	
	ЕстьОшибки = Ложь;
	Для Каждого Ошибка Из Ошибки Цикл
		МассивПолей.Добавить(Ошибка.Представление);
		ЕстьОшибки = Истина;
	КонецЦикла;	
	
	Если ЕстьОшибки Тогда
		Возврат МассивПолей;
	КонецЕсли;	
	
	Для Каждого Шаблон Из Шаблоны Цикл
		
		Если ЗначениеЗаполнено(Шаблон.Шаблон) Тогда
			
			ШаблонОбъект = Шаблон.Шаблон.ПолучитьОбъект();
			
			МассивШаблонаШаблона = ШаблонОбъект.ПолучитьСписокНезаполненныхПолейНеобходимыхДляСтарта();
			Если МассивШаблонаШаблона.Количество() <> 0 Тогда
				Для Каждого ИмяПоля Из МассивШаблонаШаблона Цикл
					МассивПолей.Добавить(ИмяПоля);
				КонецЦикла;
				Возврат МассивПолей;	
			КонецЕсли;	
			
		КонецЕсли;	
		
	КонецЦикла;		

	Возврат МассивПолей;
	
КонецФункции	

//Формирует текстовое представление бизнес-процесса, создаваемого по шаблону
Функция СформироватьСводкуПоШаблону() Экспорт
	
	Результат = ШаблоныБизнесПроцессов.ПолучитьОбщуюЧастьОписанияШаблона(Ссылка);
	
	Если Шаблоны.Количество() > 0 Тогда
		Результат = Результат + НСтр("ru = 'Этапы:'; en = 'Stages:'") + Символы.ПС;
		Для Каждого Шаблон Из Шаблоны Цикл
			Если ЗначениеЗаполнено(Шаблон.Шаблон) Тогда
				Результат = 
					Результат 
					+ Символы.Таб 
					+ Метаданные.БизнесПроцессы[ТипШаблона].Реквизиты[Шаблон.Реквизит].Синоним + ": " 
					+ Строка(Шаблон.Шаблон) 
					+ Символы.ПС;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	ДлительностьПроцесса = СрокиИсполненияПроцессов.ДлительностьИсполненияПроцесса(ЭтотОбъект);
	ДлительностьПроцессаСтрокой = СрокиИсполненияПроцессовКлиентСервер.ПредставлениеДлительности(
		ДлительностьПроцесса.СрокИсполненияПроцессаДни,
		ДлительностьПроцесса.СрокИсполненияПроцессаЧасы,
		ДлительностьПроцесса.СрокИсполненияПроцессаМинуты);
		
	Если ЗначениеЗаполнено(ДлительностьПроцессаСтрокой) Тогда
		Результат = Результат + Нстр("ru = 'Срок'; en = 'Due date'") + ": "
			+ ДлительностьПроцессаСтрокой;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область ПрограммныйИнтерфейс_ПоддержкаМеханизмаОтсутствий

// Получает исполнителей
Функция ПолучитьИсполнителей() Экспорт
	
	МассивИсполнителей = Новый Массив;
	
	Для Каждого СтрокаШаблон Из Шаблоны Цикл
		
		Шаблон = СтрокаШаблон.Шаблон;
		Если Шаблон = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		ШаблонОбъект = Шаблон.ПолучитьОбъект();
		Если ШаблонОбъект = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		ИсполнителиЭтапа = ШаблонОбъект.ПолучитьИсполнителей();
		Для Каждого Исполнитель Из ИсполнителиЭтапа Цикл
			МассивИсполнителей.Добавить(Исполнитель);
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат МассивИсполнителей;
	
КонецФункции

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ЭтоГруппа Тогда
		Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") И ДанныеЗаполнения.Свойство("ТипШаблона") Тогда
			ТипШаблона = ДанныеЗаполнения.ТипШаблона;
		КонецЕсли;
		
		Возврат;
	КонецЕсли;
	
	Если ЭтоНовый() Тогда
		ШаблоныБизнесПроцессов.НачальноеЗаполнениеШаблона(ЭтотОбъект, ДанныеЗаполнения);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ШаблоныБизнесПроцессов.ШаблонПередЗаписью(ЭтотОбъект, Отказ);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
