
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Предмет = Параметры.Предмет;
	Если ВстроеннаяПочтаКлиентСервер.ЭтоПисьмо(Предмет) Тогда 
		Предмет = РегистрыСведений.ПисьмаВеток.ПолучитьВетку(Предмет);
	КонецЕсли;
	
	ПоказыватьУдаленные = Ложь;
	ПоказыватьСнятыеСКонтроля = Истина;
	НастройкиОтбора = ХранилищеСистемныхНастроек.Загрузить(ИмяФормы + "/ТекущиеДанные");
	Если ЗначениеЗаполнено(НастройкиОтбора) Тогда
		Если НастройкиОтбора.Получить("ПоказыватьУдаленные") <> Неопределено Тогда
			ПоказыватьУдаленные = НастройкиОтбора.Получить("ПоказыватьУдаленные");
		КонецЕсли;	
		Если НастройкиОтбора.Получить("ПоказыватьСнятыеСКонтроля") <> Неопределено Тогда 
			ПоказыватьСнятыеСКонтроля = НастройкиОтбора.Получить("ПоказыватьСнятыеСКонтроля");
		КонецЕсли;	
	КонецЕсли;
	Элементы.ПоказыватьУдаленные.Пометка = ПоказыватьУдаленные;
	Элементы.ПоказыватьСнятыеСКонтроля.Пометка = ПоказыватьСнятыеСКонтроля;
	
	ЗаполнитьСписокКонтроля();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ЗаписьКонтроля" И Источник <> ЭтаФорма Тогда
		Если ЗначениеЗаполнено(Параметр.Предмет) И Параметр.Предмет = Предмет Тогда 
			ЗаполнитьСписокКонтроля();
		КонецЕсли;	
	КонецЕсли;	

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТаблицаКонтроля

&НаКлиенте
Процедура ТаблицаКонтроляВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Строка = ТаблицаКонтроля.НайтиПоИдентификатору(ВыбраннаяСтрока);
	Если Строка = Неопределено Тогда 
		Возврат;
	КонецЕсли;	
	
	Если Строка.ДоступнаПоПравам Тогда 
		ПоказатьЗначение(, Строка.Ссылка);
	Иначе 
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Ключ", Строка.Ссылка);
		ОткрытьФорму("Справочник.Контроль.Форма.НедоступнаяКарточка",ПараметрыФормы,ЭтаФорма);
	КонецЕсли;	

КонецПроцедуры

&НаКлиенте
Процедура ТаблицаКонтроляПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Основание", Предмет);

	Если Копирование Тогда 
		ТекущиеДанные = Элементы.ТаблицаКонтроля.ТекущиеДанные;
		Если ТекущиеДанные = Неопределено Тогда 
			Возврат;
		КонецЕсли;
		Если Не ТекущиеДанные.ДоступнаПоПравам Тогда 
			ТекстПредупреждения = НСтр("ru = 'Нет прав на копирование данной контрольной карточки'; en = 'No rights to copy'");
			ПоказатьПредупреждение(, ТекстПредупреждения);
			Возврат;
		КонецЕсли;
		ПараметрыФормы.Вставить("ЗначениеКопирования", ТекущиеДанные.Ссылка);
	КонецЕсли;

	ОткрытьФорму("Справочник.Контроль.Форма.ФормаНового", ПараметрыФормы, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаКонтроляПередНачаломИзменения(Элемент, Отказ)
	
	Отказ = Истина;
	
	ТекущиеДанные = Элементы.ТаблицаКонтроля.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	Если ТекущиеДанные.ДоступнаПоПравам Тогда 
		ПоказатьЗначение(, ТекущиеДанные.Ссылка);
	Иначе 
		ПоказатьПредупреждение(, ТекущиеДанные.ИнформацияОКонтроле);
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаКонтроляПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	
	ТекущиеДанные = Элементы.ТаблицаКонтроля.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	Если Не ТекущиеДанные.ДоступнаПоПравам Тогда 
		ТекстПредупреждения = НСтр("ru = 'Нет прав на удаление данной контрольной карточки'; en = 'No rights to deletion'");
		ПоказатьПредупреждение(, ТекстПредупреждения);
		Возврат;
	КонецЕсли;	
	
	Если Не ТекущиеДанные.ПометкаУдаления Тогда 
		ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Пометить ""%1"" на удаление?'; en = 'Mark ""%1"" for deletion?'"),
			ТекущиеДанные.Ссылка);
	Иначе
		ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Снять с ""%1"" пометку на удаление?'; en = 'Remove deletion mark from ""%1"" ?'"),
			ТекущиеДанные.Ссылка);	
	КонецЕсли;	
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ТаблицаКонтроляПередУдалениемПродолжение",
		ЭтотОбъект,
		Новый Структура("ТекущиеДанные", ТекущиеДанные));
		
	ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет,,КодВозвратаДиалога.Да);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПоказыватьУдаленные(Команда)
	
	ПоказыватьУдаленные = Не ПоказыватьУдаленные;
	Элементы.ПоказыватьУдаленные.Пометка = ПоказыватьУдаленные;
	ЗаполнитьСписокКонтроля();
		
КонецПроцедуры

&НаКлиенте
Процедура ПоказыватьСнятыеСКонтроля(Команда)
	
	ПоказыватьСнятыеСКонтроля = Не ПоказыватьСнятыеСКонтроля;
	Элементы.ПоказыватьСнятыеСКонтроля.Пометка = ПоказыватьСнятыеСКонтроля;
	ЗаполнитьСписокКонтроля();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьТаблицу(Команда)
	
	ЗаполнитьСписокКонтроля();

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьСписокКонтроля()	
	
	// Запоминание текущей строки
	ТекущаяСтрока = Неопределено;
	Если Элементы.ТаблицаКонтроля.ТекущаяСтрока <> Неопределено Тогда
		ТекущаяСтрока = ТаблицаКонтроля.НайтиПоИдентификатору(Элементы.ТаблицаКонтроля.ТекущаяСтрока);
	КонецЕсли;

	УстановитьПривилегированныйРежим(Истина);
	
	ТекстЗапроса = "";
	Для Каждого БизнесПроцесс Из Метаданные.БизнесПроцессы Цикл
		Если Не БизнесПроцесс.ТабличныеЧасти.Предметы.Реквизиты.Предмет.Тип.СодержитТип(ТипЗнч(Предмет)) Тогда 
			Продолжить;
		КонецЕсли;
		
		ТекстЗапроса = ТекстЗапроса +
		"ВЫБРАТЬ
		|	Ссылка
		|ИЗ
		|	БизнесПроцесс." + БизнесПроцесс.Имя + ".Предметы
		|ГДЕ 
		|	Предмет = &Предмет И РольПредмета = ЗНАЧЕНИЕ(Перечисление.РолиПредметов.Основной)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|";
	КонецЦикла;	
	
	МассивПредметов = Новый Массив;
	Если ТекстЗапроса <> "" Тогда 
		ТекстЗапроса = Лев(ТекстЗапроса, СтрДлина(ТекстЗапроса)-16);
		Запрос = Новый Запрос(ТекстЗапроса);
		Запрос.УстановитьПараметр("Предмет", Предмет);
		МассивПредметов = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	КонецЕсли;
	МассивПредметов.Добавить(Предмет);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СправочникКонтроль.Ссылка,
	|	СправочникКонтроль.ДатаПостановкиНаКонтроль КАК ДатаПостановкиНаКонтроль,
	|	СправочникКонтроль.ДатаСнятияСКонтроля,
	|	СправочникКонтроль.ИсполнителиСтрокой,
	|	СправочникКонтроль.Контролер,
	|	СправочникКонтроль.Описание,
	|	СправочникКонтроль.Предмет,
	|	СправочникКонтроль.СнятСКонтроля,
	|	СправочникКонтроль.СрокИсполнения,
	|	СправочникКонтроль.ПометкаУдаления,
	|	ВЫБОР
	|		КОГДА СправочникКонтроль.СнятСКонтроля
	|			ТОГДА 0
	|		КОГДА СправочникКонтроль.СрокИсполнения <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА РАЗНОСТЬДАТ(&ТекущаяДата, СправочникКонтроль.СрокИсполнения, ДЕНЬ)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ОсталосьДней,
	|	ЛОЖЬ КАК ДоступнаПоПравам
	|ИЗ
	|	Справочник.Контроль КАК СправочникКонтроль
	|ГДЕ
	|	СправочникКонтроль.Предмет В(&МассивПредметов)";
		
	Если Не ПоказыватьУдаленные Тогда 
		Запрос.Текст = Запрос.Текст + " И Не СправочникКонтроль.ПометкаУдаления ";
	КонецЕсли;
	Если Не ПоказыватьСнятыеСКонтроля Тогда 
		Запрос.Текст = Запрос.Текст + " И Не СправочникКонтроль.СнятСКонтроля ";
	КонецЕсли;
	Запрос.УстановитьПараметр("МассивПредметов", МассивПредметов);
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДатаСеанса());
	
	ПолнаяТаблица = Запрос.Выполнить().Выгрузить();
	ПолнаяТаблица.Сортировать("ОсталосьДней ВОЗР, ДатаПостановкиНаКонтроль ВОЗР");
	ПолнаяТаблица.Колонки.Добавить("ИнформацияОКонтроле");
	
	УстановитьПривилегированныйРежим(Ложь);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СправочникКонтроль.Ссылка
	|ИЗ
	|	Справочник.Контроль КАК СправочникКонтроль
	|ГДЕ
	|	СправочникКонтроль.Предмет В (&МассивПредметов)";
		
	Если Не ПоказыватьУдаленные Тогда 
		Запрос.Текст = Запрос.Текст + " И Не СправочникКонтроль.ПометкаУдаления ";
	КонецЕсли;
	Если Не ПоказыватьСнятыеСКонтроля Тогда 
		Запрос.Текст = Запрос.Текст + " И Не СправочникКонтроль.СнятСКонтроля ";
	КонецЕсли;
	Запрос.УстановитьПараметр("МассивПредметов", МассивПредметов);
	
	ТаблицаСУчетомПрав = Запрос.Выполнить().Выгрузить();	
	Для Каждого СтрокаКонтроль Из ПолнаяТаблица Цикл
		
		ПараметрыОтбора = Новый Структура("Ссылка", СтрокаКонтроль.Ссылка);
		НайденныеСтроки = ТаблицаСУчетомПрав.НайтиСтроки(ПараметрыОтбора);
		Если НайденныеСтроки.Количество() = 0 Тогда 
			СтрокаКонтроль.ДоступнаПоПравам = Ложь;
		Иначе 	
			СтрокаКонтроль.ДоступнаПоПравам = Истина;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СтрокаКонтроль.СрокИсполнения) Тогда 
			СрокИсполнения = Формат(СтрокаКонтроль.СрокИсполнения, "ДЛФ=D");
		Иначе 	
			СрокИсполнения = НСтр("ru = 'не указан'; en = 'not specified'");
		КонецЕсли;
		
		Если СтрокаКонтроль.ДоступнаПоПравам Тогда 
			
			ИнформацияОКонтроле = "";
			Если СтрокаКонтроль.СнятСКонтроля Тогда 
				ИнформацияОКонтроле = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Снят с контроля: %1, дата %2'; en = 'Monitoring stopped: %1, date %2'"),
					Строка(СтрокаКонтроль.Контролер),
					Формат(СтрокаКонтроль.ДатаСнятияСКонтроля, "ДЛФ=D"));
			Иначе	
				ИнформацияОКонтроле = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'На контроле: %1, срок %2'; en = 'Monitored: %1, due date %2'"),
					Строка(СтрокаКонтроль.Контролер),
					СрокИсполнения);
			КонецЕсли;	
			
			Если ЗначениеЗаполнено(СтрокаКонтроль.Описание) Тогда 
				ИнформацияОКонтроле = ИнформацияОКонтроле 
					+ Символы.ПС
					+ СтрокаКонтроль.Описание;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(СтрокаКонтроль.ИсполнителиСтрокой) Тогда 
				ИнформацияОКонтроле = ИнформацияОКонтроле 
					+ Символы.ПС
					+ СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						НСтр("ru = 'Кого: %1'; en = 'Who: %1'"),
						СтрокаКонтроль.ИсполнителиСтрокой);
			КонецЕсли;
			СтрокаКонтроль.ИнформацияОКонтроле = ИнформацияОКонтроле;
			
		Иначе
			
			Если СтрокаКонтроль.СнятСКонтроля Тогда 
				СтрокаКонтроль.ИнформацияОКонтроле = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Снят с контроля: %1, дата %2'; en = 'Monitoring stopped: %1, date %2'"),
					Строка(СтрокаКонтроль.Контролер),
					Формат(СтрокаКонтроль.ДатаСнятияСКонтроля, "ДЛФ=D"));
			Иначе
				СтрокаКонтроль.ИнформацияОКонтроле = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'На контроле: %1, срок %2'; en = 'Monitored: %1, due date %2'"),
					Строка(СтрокаКонтроль.Контролер),
					СрокИсполнения);
			КонецЕсли;	
			
		КонецЕсли;
			
	КонецЦикла;
	
	ЭтаФорма.ЗначениеВРеквизитФормы(ПолнаяТаблица, "ТаблицаКонтроля");
	
	Если ТекущаяСтрока <> Неопределено Тогда
		НайденныеСтроки = ТаблицаКонтроля.НайтиСтроки(Новый Структура("Ссылка", ТекущаяСтрока.Ссылка));
		Если НайденныеСтроки.Количество() > 0 Тогда
			Элементы.ТаблицаКонтроля.ТекущаяСтрока = НайденныеСтроки[0].ПолучитьИдентификатор();
		Иначе
			Элементы.ТаблицаКонтроля.ТекущаяСтрока = ТекущаяСтрока.ПолучитьИдентификатор();
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры	

&НаКлиенте
Процедура ТаблицаКонтроляПередУдалениемПродолжение(Результат, Параметры) Экспорт 
	
	Если Результат <> КодВозвратаДиалога.Да Тогда 
		Возврат;
	КонецЕсли;	
	
	ТекущиеДанные = Параметры.ТекущиеДанные;
	ТекущиеДанные.ПометкаУдаления = Не ТекущиеДанные.ПометкаУдаления;
	
	ПометитьНаУдаление(ТекущиеДанные.Ссылка, ТекущиеДанные.ПометкаУдаления);
	
	КонтрольКлиент.ОповеститьОЗаписиКонтроля(ТекущиеДанные);

КонецПроцедуры

&НаСервере
Процедура ПометитьНаУдаление(Контроль, ЗначениеПометкиУдаления)
	
	ОбъектКонтроль = Контроль.ПолучитьОбъект();
	ОбъектКонтроль.Заблокировать();
	ОбъектКонтроль.УстановитьПометкуУдаления(ЗначениеПометкиУдаления);
	ОбъектКонтроль.Разблокировать();
	
	Если Не ПоказыватьУдаленные Тогда 
		ЗаполнитьСписокКонтроля();
	КонецЕсли;	
	
КонецПроцедуры	

#КонецОбласти
