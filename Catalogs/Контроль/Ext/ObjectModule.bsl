#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс
//Код процедур и функций
#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Если ЭтоНовый() Тогда 
		
		Автор = ПользователиКлиентСервер.ТекущийПользователь();
		
		ПоставленНаКонтроль = Истина;
		ДатаПостановкиНаКонтроль = ТекущаяДатаСеанса();
		
		Если Не ЗначениеЗаполнено(Контролер) Тогда 
			Контролер = ПользователиКлиентСервер.ТекущийПользователь();
		КонецЕсли;
		
		Если ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.Файлы") Тогда 
			
			Предмет = ДанныеЗаполнения;
			Описание = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Контролировать ""%1""'; en = 'Monitor ""%1""'"),  
				Строка(ДанныеЗаполнения));
			НовыйИсполнитель = Исполнители.Добавить();
			НовыйИсполнитель.Исполнитель = ДанныеЗаполнения.Автор;
		
		ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.ВнутренниеДокументы") Тогда 
			
			Предмет = ДанныеЗаполнения;
			Описание = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Контролировать ""%1""'; en = 'Monitor ""%1""'"),  
				Строка(ДанныеЗаполнения));
			
			ДанныеПредмета = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения, "Подготовил, Ответственный, СрокИсполнения, ДатаОкончанияДействия");
			Если ЗначениеЗаполнено(ДанныеПредмета.Ответственный) Тогда
				НовыйИсполнитель = Исполнители.Добавить();
				НовыйИсполнитель.Исполнитель = ДанныеПредмета.Ответственный;
			ИначеЕсли ЗначениеЗаполнено(ДанныеПредмета.Подготовил) Тогда
				НовыйИсполнитель = Исполнители.Добавить();
				НовыйИсполнитель.Исполнитель = ДанныеПредмета.Подготовил;
			КонецЕсли;	
			Если ЗначениеЗаполнено(ДанныеПредмета.СрокИсполнения) Тогда 
				СрокИсполнения = ДанныеПредмета.СрокИсполнения;
			ИначеЕсли ЗначениеЗаполнено(ДанныеПредмета.ДатаОкончанияДействия) Тогда 
				СрокИсполнения = ДанныеПредмета.ДатаОкончанияДействия;
			КонецЕсли;	
			
		ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.ИсходящиеДокументы") Тогда 
			
			Предмет = ДанныеЗаполнения;
			Описание = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Контролировать ""%1""'; en = 'Monitor ""%1""'"),  
				Строка(ДанныеЗаполнения));
			
			ДанныеПредмета = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения, "Подготовил, Ответственный, СрокИсполнения");
			Если ЗначениеЗаполнено(ДанныеПредмета.Ответственный) Тогда
				НовыйИсполнитель = Исполнители.Добавить();
				НовыйИсполнитель.Исполнитель = ДанныеПредмета.Ответственный;
			ИначеЕсли ЗначениеЗаполнено(ДанныеПредмета.Подготовил) Тогда
				НовыйИсполнитель = Исполнители.Добавить();
				НовыйИсполнитель.Исполнитель = ДанныеПредмета.Подготовил;
			КонецЕсли;	
			СрокИсполнения = ДанныеПредмета.СрокИсполнения;
			
		ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.ВходящиеДокументы") Тогда 
			
			Предмет = ДанныеЗаполнения;
			Описание = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Контролировать ""%1""'; en = 'Monitor ""%1""'"),  
				Строка(ДанныеЗаполнения));
			
			ДанныеПредмета = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения, "Адресат, Ответственный, СрокИсполнения");
			Если ЗначениеЗаполнено(ДанныеПредмета.Ответственный) Тогда
				НовыйИсполнитель = Исполнители.Добавить();
				НовыйИсполнитель.Исполнитель = ДанныеПредмета.Ответственный;
			ИначеЕсли ЗначениеЗаполнено(ДанныеПредмета.Адресат) Тогда
				НовыйИсполнитель = Исполнители.Добавить();
				НовыйИсполнитель.Исполнитель = ДанныеПредмета.Адресат;
			КонецЕсли;	
			СрокИсполнения = ДанныеПредмета.СрокИсполнения;
				
		ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("БизнесПроцессСсылка.Исполнение") Тогда 
			
			Предмет = ДанныеЗаполнения;
			ДанныеПредмета = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения, 
				"Наименование, Описание, СрокИсполненияПроцесса, НомерИтерации,
				|Проверяющий, Контролер");
			
			Описание = СформироватьОписание(ДанныеЗаполнения, ДанныеПредмета.Наименование, ДанныеПредмета.Описание);
			СрокИсполнения = ДанныеПредмета.СрокИсполненияПроцесса;
			
			Для Каждого Исполнитель Из ДанныеЗаполнения.Исполнители Цикл 
				НовыйИсполнитель = Исполнители.Добавить();
				НовыйИсполнитель.Исполнитель = Исполнитель.Исполнитель;
				НовыйИсполнитель.Ответственный = Исполнитель.Ответственный;
				НовыйИсполнитель.Источник = Исполнитель.ЗадачаИсполнителя;
			КонецЦикла;	
			
			Если ЗначениеЗаполнено(ДанныеПредмета.Проверяющий) Тогда
				НовыйИсполнитель = Исполнители.Добавить();
				НовыйИсполнитель.Исполнитель = ДанныеПредмета.Проверяющий;
				
				ПараметрыОтбора = Новый Структура("НомерИтерации", ДанныеПредмета.НомерИтерации);
				НайденныеСтроки = ДанныеЗаполнения.РезультатыПроверки.НайтиСтроки(ПараметрыОтбора);
				Если НайденныеСтроки.Количество() > 0 Тогда 
					НовыйИсполнитель.Источник = НайденныеСтроки[0].ЗадачаПроверяющего;
				КонецЕсли;
			КонецЕсли;	
			
		ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("БизнесПроцессСсылка.Ознакомление") Тогда 
			
			Предмет = ДанныеЗаполнения;
			
			ДанныеПредмета = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения, 
				"Наименование, Описание, СрокИсполненияПроцесса");
			
			Описание = СформироватьОписание(ДанныеЗаполнения, ДанныеПредмета.Наименование, ДанныеПредмета.Описание);
			СрокИсполнения = ДанныеПредмета.СрокИсполненияПроцесса;
			
			Для Каждого Исполнитель Из ДанныеЗаполнения.Исполнители Цикл 
				НовыйИсполнитель = Исполнители.Добавить();
				НовыйИсполнитель.Исполнитель = Исполнитель.Исполнитель;
				НовыйИсполнитель.Источник = Исполнитель.ЗадачаИсполнителя;
			КонецЦикла;	
			
		ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("БизнесПроцессСсылка.Утверждение")
			Или  ТипЗнч(ДанныеЗаполнения) = Тип("БизнесПроцессСсылка.Рассмотрение")
			Или ТипЗнч(ДанныеЗаполнения) = Тип("БизнесПроцессСсылка.Регистрация") Тогда 
			
			Предмет = ДанныеЗаполнения;
			ДанныеПредмета = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения, 
				"Наименование, Описание, СрокИсполненияПроцесса, Автор,
				|Исполнитель");
			
			Описание = СформироватьОписание(ДанныеЗаполнения, ДанныеПредмета.Наименование, ДанныеПредмета.Описание);
			СрокИсполнения = ДанныеПредмета.СрокИсполненияПроцесса;

			Если ЗначениеЗаполнено(ДанныеПредмета.Исполнитель) Тогда
				НовыйИсполнитель = Исполнители.Добавить();
				НовыйИсполнитель.Исполнитель = ДанныеПредмета.Исполнитель;
				
				Если ЗначениеЗаполнено(ДанныеПредмета.Автор) Тогда 
					НовыйИсполнитель.Ответственный = Истина;
				КонецЕсли;	
			КонецЕсли;	

			Если ЗначениеЗаполнено(ДанныеПредмета.Автор) Тогда
				НовыйИсполнитель = Исполнители.Добавить();
				НовыйИсполнитель.Исполнитель = ДанныеПредмета.Автор;
			КонецЕсли;	
			
		ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("БизнесПроцессСсылка.Поручение") Тогда 
			
			Предмет = ДанныеЗаполнения;
			ДанныеПредмета = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения, 
				"Наименование, Описание, СрокИсполненияПроцесса,
				|Исполнитель,
				|Проверяющий,
				|Контролер");
			
			Описание = СформироватьОписание(ДанныеЗаполнения, ДанныеПредмета.Наименование, ДанныеПредмета.Описание);
			СрокИсполнения = ДанныеПредмета.СрокИсполненияПроцесса;
			
			Если ЗначениеЗаполнено(ДанныеПредмета.Исполнитель) Тогда
				НовыйИсполнитель = Исполнители.Добавить();
				НовыйИсполнитель.Исполнитель = ДанныеПредмета.Исполнитель;
				
				Если ЗначениеЗаполнено(ДанныеПредмета.Проверяющий) Тогда
					НовыйИсполнитель.Ответственный = Истина;
				КонецЕсли;	
			КонецЕсли;	
			
			Если ЗначениеЗаполнено(ДанныеПредмета.Проверяющий) Тогда
				НовыйИсполнитель = Исполнители.Добавить();
				НовыйИсполнитель.Исполнитель = ДанныеПредмета.Проверяющий;
			КонецЕсли;	
			
		ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("БизнесПроцессСсылка.Приглашение") Тогда 
			
			Предмет = ДанныеЗаполнения;
			ДанныеПредмета = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения, 
				"Наименование, Описание, СрокИсполненияПроцесса, Автор");
			
			Описание = СформироватьОписание(ДанныеЗаполнения, ДанныеПредмета.Наименование, ДанныеПредмета.Описание);
			СрокИсполнения = ДанныеПредмета.СрокИсполненияПроцесса;
			ИсполнителиПредмета = ДанныеЗаполнения.Исполнители;
			
			Для Каждого Исполнитель Из ИсполнителиПредмета Цикл 
				НовыйИсполнитель = Исполнители.Добавить();
				НовыйИсполнитель.Исполнитель = Исполнитель.Исполнитель;
				НовыйИсполнитель.Источник = Исполнитель.ЗадачаИсполнителя;
			КонецЦикла;

			Если ЗначениеЗаполнено(ДанныеПредмета.Автор) Тогда
				НовыйИсполнитель = Исполнители.Добавить();
				НовыйИсполнитель.Исполнитель = ДанныеПредмета.Автор;
			КонецЕсли;	
			
		ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("БизнесПроцессСсылка.Согласование") Тогда 
			
			Предмет = ДанныеЗаполнения;
			ДанныеПредмета = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения, 
				"Наименование, Описание, СрокИсполненияПроцесса, Автор");
			
			Описание = СформироватьОписание(ДанныеЗаполнения, ДанныеПредмета.Наименование, ДанныеПредмета.Описание);
			СрокИсполнения = ДанныеПредмета.СрокИсполненияПроцесса;
			ИсполнителиПредмета = ДанныеЗаполнения.Исполнители;
			
			Для Каждого Исполнитель Из ИсполнителиПредмета Цикл 
				НовыйИсполнитель = Исполнители.Добавить();
				НовыйИсполнитель.Исполнитель = Исполнитель.Исполнитель;
				НовыйИсполнитель.Источник = Исполнитель.ЗадачаИсполнителя;
			КонецЦикла;

			Если ЗначениеЗаполнено(ДанныеПредмета.Автор) Тогда
				НовыйИсполнитель = Исполнители.Добавить();
				НовыйИсполнитель.Исполнитель = ДанныеПредмета.Автор;
			КонецЕсли;	
				
		ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("БизнесПроцессСсылка.КомплексныйПроцесс")
			Или ТипЗнч(ДанныеЗаполнения) = Тип("БизнесПроцессСсылка.ОбработкаВнутреннегоДокумента")
			Или ТипЗнч(ДанныеЗаполнения) = Тип("БизнесПроцессСсылка.ОбработкаВходящегоДокумента")
			Или ТипЗнч(ДанныеЗаполнения) = Тип("БизнесПроцессСсылка.ОбработкаИсходящегоДокумента") Тогда 
			
			Предмет = ДанныеЗаполнения;
			Описание = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Контролировать ""%1""'; en = 'Monitor ""%1""'"),  
				Строка(ДанныеЗаполнения));
				
			Запрос = Новый Запрос;
			Запрос.Текст = 
				"ВЫБРАТЬ РАЗРЕШЕННЫЕ
				|	ДочерниеБизнесПроцессы.ДочернийПроцесс
				|ПОМЕСТИТЬ ДочерниеПроцессы
				|ИЗ
				|	РегистрСведений.ДочерниеБизнесПроцессы КАК ДочерниеБизнесПроцессы
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеБизнесПроцессов КАК ДанныеБизнесПроцессов
				|		ПО ДочерниеБизнесПроцессы.ДочернийПроцесс = ДанныеБизнесПроцессов.БизнесПроцесс
				|			И ДочерниеБизнесПроцессы.СвязующаяЗадача = ДанныеБизнесПроцессов.ВедущаяЗадача
				|ГДЕ
				|	ДочерниеБизнесПроцессы.РодительскийПроцесс = &БизнесПроцесс
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ЗадачаИсполнителя.Ссылка,
				|	ЗадачаИсполнителя.ТочкаМаршрута,
				|	ЗадачаИсполнителя.БизнесПроцесс,
				|	ЗадачаИсполнителя.Исполнитель,
				|	ЗадачаИсполнителя.РольИсполнителя,
				|	ЗадачаИсполнителя.ДатаИсполнения,
				|	ЗадачаИсполнителя.Выполнена
				|ИЗ
				|	ДочерниеПроцессы КАК ДочерниеПроцессы
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Задача.ЗадачаИсполнителя КАК ЗадачаИсполнителя
				|		ПО ДочерниеПроцессы.ДочернийПроцесс = ЗадачаИсполнителя.БизнесПроцесс
				|ГДЕ
				|	ЗадачаИсполнителя.ПометкаУдаления = ЛОЖЬ";
			
			Запрос.УстановитьПараметр("БизнесПроцесс", Предмет);
			ЗадачиПроцесса = Запрос.Выполнить().Выгрузить();
			
			Для Каждого СтрокаЗадача Из ЗадачиПроцесса Цикл
				БизнесПроцесс = СтрокаЗадача.БизнесПроцесс;
				
				Если СтрокаЗадача.ТочкаМаршрута = БизнесПроцессы.Согласование.ТочкиМаршрута.Согласовать Тогда 
					
					Отбор = Новый Структура("НомерИтерации, ЗадачаИсполнителя", БизнесПроцесс.НомерИтерации, СтрокаЗадача.Ссылка);
					Если БизнесПроцесс.РезультатыСогласования.НайтиСтроки(Отбор).Количество() = 0 Тогда 
						Продолжить;
					КонецЕсли;
					
				ИначеЕсли СтрокаЗадача.ТочкаМаршрута = БизнесПроцессы.Исполнение.ТочкиМаршрута.Исполнить
					  Или СтрокаЗадача.ТочкаМаршрута = БизнесПроцессы.Исполнение.ТочкиМаршрута.ОтветственноеИсполнение Тогда 
					
					Отбор = Новый Структура("НомерИтерации, ЗадачаИсполнителя", БизнесПроцесс.НомерИтерации, СтрокаЗадача.Ссылка);
					Если БизнесПроцесс.РезультатыИсполнения.НайтиСтроки(Отбор).Количество() = 0 Тогда 
						Продолжить;
					КонецЕсли;
					
				КонецЕсли;	
				
				НоваяСтрока = Исполнители.Добавить();
				НоваяСтрока.Источник = СтрокаЗадача.Ссылка;
				НоваяСтрока.Исполнено = СтрокаЗадача.Выполнена;
				НоваяСтрока.ДатаИсполнения = СтрокаЗадача.ДатаИсполнения;
				Если ЗначениеЗаполнено(СтрокаЗадача.Исполнитель) Тогда 
					НоваяСтрока.Исполнитель = СтрокаЗадача.Исполнитель;
				Иначе
					НоваяСтрока.Исполнитель = СтрокаЗадача.РольИсполнителя;
				КонецЕсли;
			КонецЦикла;
			
		ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.ВеткиПереписки") Тогда 
			
			Предмет = ДанныеЗаполнения;
			РеквизитыПисьма = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения,
			 	"КорневоеПисьмо.Тема, КорневоеПисьмо");
			 
			Описание = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Контролировать ""%1""'; en = 'Monitor ""%1""'"),  
				Строка(РеквизитыПисьма.КорневоеПисьмоТема));
				
			КорневоеПисьмо = РеквизитыПисьма.КорневоеПисьмо;
			Если ТипЗнч(КорневоеПисьмо) = Тип("ДокументСсылка.ИсходящееПисьмо") Тогда
				Для Каждого Строка Из КорневоеПисьмо.ПолучателиПисьма Цикл 
					НовыйИсполнитель = Исполнители.Добавить();
					НовыйИсполнитель.Исполнитель = Строка.Адресат;
					НовыйИсполнитель.Источник = КорневоеПисьмо;
				КонецЦикла;
			Иначе 
				КорневоеПисьмоОтправительАдресат = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДанныеЗаполнения,
					"КорневоеПисьмо.ОтправительАдресат");
				НовыйИсполнитель = Исполнители.Добавить();
				НовыйИсполнитель.Исполнитель = КорневоеПисьмоОтправительАдресат;
				НовыйИсполнитель.Источник = КорневоеПисьмо;
			КонецЕсли; 
			
		ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ВходящееПисьмо") Тогда 
			
			ВеткаПереписки = РегистрыСведений.ПисьмаВеток.ПолучитьВетку(ДанныеЗаполнения);
			Предмет = ВеткаПереписки;
			Описание = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Контролировать ""%1""'; en = 'Monitor ""%1""'"),  
				Строка(ДанныеЗаполнения.Тема));
				
			НовыйИсполнитель = Исполнители.Добавить();
			НовыйИсполнитель.Исполнитель = ДанныеЗаполнения.ОтправительАдресат;	
			НовыйИсполнитель.Источник = ДанныеЗаполнения.Ссылка;
				
		ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ИсходящееПисьмо") Тогда 	
			
			ВеткаПереписки = РегистрыСведений.ПисьмаВеток.ПолучитьВетку(ДанныеЗаполнения);
			Предмет = ВеткаПереписки;
			Описание = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Контролировать ""%1""'; en = 'Monitor ""%1""'"),  
				Строка(ДанныеЗаполнения.Тема));
				
			Для Каждого Строка Из ДанныеЗаполнения.ПолучателиПисьма Цикл 
				НовыйИсполнитель = Исполнители.Добавить();
				НовыйИсполнитель.Исполнитель = Строка.Адресат;
				НовыйИсполнитель.Источник = ДанныеЗаполнения.Ссылка;
			КонецЦикла;	
			
		ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.ПроектныеЗадачи") Тогда 
			
			Предмет = ДанныеЗаполнения;
			Описание = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Контролировать ""%1""'; en = 'Monitor ""%1""'"),  
				Строка(ДанныеЗаполнения));
				
			ДанныеПредмета = РаботаСПроектами.ПолучитьСрокиПроектнойЗадачи(ДанныеЗаполнения);
			СрокИсполнения = ДанныеПредмета.ТекущийПланОкончание;
			
			ИсполнителиПредмета = ДанныеЗаполнения.Исполнители;
			Для Каждого Исполнитель Из ИсполнителиПредмета Цикл 
				НовыйИсполнитель = Исполнители.Добавить();
				НовыйИсполнитель.Исполнитель = Исполнитель.Исполнитель;
			КонецЦикла;

		ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.Проекты") Тогда 
			
			Предмет = ДанныеЗаполнения;
			Описание = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Контролировать ""%1""'; en = 'Monitor ""%1""'"),  
				Строка(ДанныеЗаполнения));
				
			ДанныеПредмета = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения, 
				"ТекущийПланОкончание, Руководитель");

			СрокИсполнения = ДанныеПредмета.ТекущийПланОкончание;
			
			Если ЗначениеЗаполнено(ДанныеПредмета.Руководитель) Тогда
				НовыйИсполнитель = Исполнители.Добавить();
				НовыйИсполнитель.Исполнитель = ДанныеПредмета.Руководитель;
			КонецЕсли;	
			
		ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.Мероприятия") Тогда 
			
			Предмет = ДанныеЗаполнения;
			Описание = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Контролировать ""%1""'; en = 'Monitor ""%1""'"),  
				Строка(ДанныеЗаполнения));
				
			ДанныеПредмета = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения, 
				"ДатаОкончания, Организатор, Куратор,
				|Председатель,
				|Секретарь");

			СрокИсполнения = ДанныеПредмета.ДатаОкончания;
			
			Если ЗначениеЗаполнено(ДанныеПредмета.Председатель)
				И (ТипЗнч(ДанныеПредмета.Председатель) = Тип("СправочникСсылка.Пользователи")
				Или ТипЗнч(ДанныеПредмета.Председатель) = Тип("СправочникСсылка.ПолныеРоли"))Тогда
				НовыйИсполнитель = Исполнители.Добавить();
				НовыйИсполнитель.Исполнитель = ДанныеПредмета.Председатель;
			КонецЕсли;	
			
			Если ЗначениеЗаполнено(ДанныеПредмета.Секретарь)
				И (ТипЗнч(ДанныеПредмета.Секретарь) = Тип("СправочникСсылка.Пользователи")
				Или ТипЗнч(ДанныеПредмета.Секретарь) = Тип("СправочникСсылка.ПолныеРоли"))Тогда
				НайденныеИсполнители = Исполнители.НайтиСтроки(
					Новый Структура("Исполнитель", ДанныеПредмета.Секретарь));
				
				Если НайденныеИсполнители.Количество() = 0 Тогда 
					НовыйИсполнитель = Исполнители.Добавить();
					НовыйИсполнитель.Исполнитель = ДанныеПредмета.Секретарь;
				КонецЕсли;
			КонецЕсли;	
			
			Если ЗначениеЗаполнено(ДанныеПредмета.Организатор)
				И ТипЗнч(ДанныеПредмета.Организатор) = Тип("СправочникСсылка.Пользователи") Тогда
				НайденныеИсполнители = Исполнители.НайтиСтроки(
					Новый Структура("Исполнитель", ДанныеПредмета.Организатор));
				
				Если НайденныеИсполнители.Количество() = 0 Тогда 
					НовыйИсполнитель = Исполнители.Добавить();
					НовыйИсполнитель.Исполнитель = ДанныеПредмета.Организатор;
				КонецЕсли;
			КонецЕсли;	
			
			Если ЗначениеЗаполнено(ДанныеПредмета.Куратор) Тогда
				НайденныеИсполнители = Исполнители.НайтиСтроки(
					Новый Структура("Исполнитель", ДанныеПредмета.Куратор));
				
				Если НайденныеИсполнители.Количество() = 0 Тогда 
					НовыйИсполнитель = Исполнители.Добавить();
					НовыйИсполнитель.Исполнитель = ДанныеПредмета.Куратор;
				КонецЕсли;
			КонецЕсли;
			
		ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ЗадачаСсылка.ЗадачаИсполнителя") И ЗначениеЗаполнено(ДанныеЗаполнения) Тогда 
			
			Предмет = ДанныеЗаполнения;
			ДанныеПредмета = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения, 
				"Наименование, Описание, СрокИсполнения,
				|Исполнитель, РольИсполнителя");
			
			Описание = СформироватьОписание(ДанныеЗаполнения, ДанныеПредмета.Наименование, ДанныеПредмета.Описание);
			СрокИсполнения = ДанныеПредмета.СрокИсполнения;
			
			НовыйИсполнитель = Исполнители.Добавить();
			НовыйИсполнитель.Исполнитель = ?(ЗначениеЗаполнено(ДанныеПредмета.Исполнитель), ДанныеПредмета.Исполнитель, ДанныеПредмета.РольИсполнителя);
			НовыйИсполнитель.Источник = Предмет;
			
		ИначеЕсли ТипЗнч(ДанныеЗаполнения) <> Тип("Структура") И ЗначениеЗаполнено(ДанныеЗаполнения) Тогда 
			
			Предмет = ДанныеЗаполнения;
			Описание = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Контролировать ""%1""'; en = 'Monitor ""%1""'"),  
				Строка(ДанныеЗаполнения));
			
		КонецЕсли;
		
		Если Исполнители.Количество() > 1 И ЗначениеЗаполнено(Контролер) Тогда 
			КоличествоИсполнителей = Исполнители.Количество();
			Для Инд = 1 По КоличествоИсполнителей Цикл
				Строка = Исполнители[КоличествоИсполнителей - Инд];
				Если Строка.Исполнитель = Контролер Тогда 
					Исполнители.Удалить(Строка);
				КонецЕсли;	
			КонецЦикла;
		КонецЕсли;	
		
		Если Исполнители.Количество() > 1 Тогда 
			Если Не ЗначениеЗаполнено(Предмет) Или Не ОбщегоНазначения.ЭтоБизнесПроцесс(Предмет.Метаданные()) Тогда 
				Если Исполнители.Найти(Истина, "Ответственный") = Неопределено Тогда 
					Исполнители[0].Ответственный = Истина;
				КонецЕсли;	
			КонецЕсли;
		Иначе
			Если Исполнители.Количество() = 1 И Исполнители[0].Ответственный Тогда
				Исполнители[0].Ответственный = Ложь;
			КонецЕсли;	
		КонецЕсли;	
		
		УстановитьПривилегированныйРежим(Истина);
		
		// постановка на контроль уже стартованного процесса
		Если ЗначениеЗаполнено(Предмет)
			И ОбщегоНазначения.ЭтоБизнесПроцесс(Предмет.Метаданные())
			И Предмет.Стартован Тогда 
			
			Если ТипЗнч(Предмет) <> Тип("БизнесПроцессСсылка.КомплексныйПроцесс")
				И ТипЗнч(Предмет) <> Тип("БизнесПроцессСсылка.ОбработкаВходящегоДокумента")
				И ТипЗнч(Предмет) <> Тип("БизнесПроцессСсылка.ОбработкаВнутреннегоДокумента")
				И ТипЗнч(Предмет) <> Тип("БизнесПроцессСсылка.ОбработкаИсходящегоДокумента") Тогда 
				
				Запрос = Новый Запрос;
				Запрос.Текст = 
				"ВЫБРАТЬ
				|	ЗадачаИсполнителя.Ссылка,
				|	ЗадачаИсполнителя.Исполнитель,
				|	ЗадачаИсполнителя.РольИсполнителя,
				|	ЗадачаИсполнителя.Выполнена
				|ИЗ
				|	Задача.ЗадачаИсполнителя КАК ЗадачаИсполнителя
				|ГДЕ
				|	ЗадачаИсполнителя.БизнесПроцесс = &БизнесПроцесс
				|	И НЕ ЗадачаИсполнителя.ПометкаУдаления
				|
				|УПОРЯДОЧИТЬ ПО
				|	ЗадачаИсполнителя.Дата УБЫВ";
				
				Запрос.УстановитьПараметр("БизнесПроцесс", Предмет);
				ЗадачиПроцесса = Запрос.Выполнить().Выгрузить();
				
				КоличествоИсполнителей = Исполнители.Количество();
				Для Инд = 1 По КоличествоИсполнителей Цикл
					Строка = Исполнители[КоличествоИсполнителей - Инд];
					Если ЗначениеЗаполнено(Строка.Источник) Тогда 
						Продолжить;
					КонецЕсли;	
					
					НайденнаяСтрока = Неопределено;
					Для Каждого СтрокаЗадача Из ЗадачиПроцесса Цикл
						Если ТипЗнч(Строка.Исполнитель) = Тип("СправочникСсылка.ПолныеРоли")
							И Строка.Исполнитель = СтрокаЗадача.РольИсполнителя Тогда 
							НайденнаяСтрока = СтрокаЗадача;
							Прервать;
						ИначеЕсли ТипЗнч(Строка.Исполнитель) = Тип("СправочникСсылка.Пользователи")
							И Строка.Исполнитель = СтрокаЗадача.Исполнитель Тогда 
							НайденнаяСтрока = СтрокаЗадача;
							Прервать;
						КонецЕсли;	
					КонецЦикла;	
					
					Если НайденнаяСтрока <> Неопределено Тогда 
						Строка.Источник = НайденнаяСтрока.Ссылка;
						Строка.Исполнено = НайденнаяСтрока.Выполнена;
						ЗадачиПроцесса.Удалить(НайденнаяСтрока);
					КонецЕсли;	
				КонецЦикла;	
				
			КонецЕсли;
			
		КонецЕсли;	
		
	КонецЕсли;	
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если ЗначениеЗаполнено(Предмет) Тогда 
		
		// Проверка прав доступа контролера на предмет
		ВнешняяТранзакция = ТранзакцияАктивна();
		
		Если Не ВнешняяТранзакция Тогда
			НачатьТранзакцию();
		КонецЕсли;
		
		ПерезаписатьРабочуюГруппуПредмета(Предмет);
		
		// Проверка прав на предмет
		ПроверитьПраваКонтролераНаПредмет(Отказ);
		
		// Отмена транзакции, в рамках которой была создана рабочая группа для 
		// проверки прав
		Если Не ВнешняяТранзакция Тогда
			ОтменитьТранзакцию();
		КонецЕсли;
		
	КонецЕсли;	
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ИсполнителиСтрокой = ПолучитьИсполнителейСтрокой();
	Наименование = СвернутьТекстВСтроку(Описание, 150);
	
	// проверка возможности пометки удаления 
	СтараяПометкаУдаления = Ложь;
	Если ЗначениеЗаполнено(Ссылка) Тогда 
		СтараяПометкаУдаления = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, "ПометкаУдаления");
	КонецЕсли;
	ДополнительныеСвойства.Вставить("СтараяПометкаУдаления", СтараяПометкаУдаления);
	
	Если ПометкаУдаления И Не СтараяПометкаУдаления Тогда 
		Если Контроль.ЭтоПроцессСКонтролером(Предмет) Тогда 
			РеквизитыПредмета = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Предмет,
				"Стартован, ПометкаУдаления, Контролер");
			Если Контролер = РеквизитыПредмета.Контролер
				И РеквизитыПредмета.Стартован 
				И Не РеквизитыПредмета.ПометкаУдаления Тогда 
					ТекстСообщения = НСтр("ru = 'Нельзя пометить на удаление контрольную карточку, автоматически созданную процессом.'; en = 'One cannot mark for deletion the monitoring that was created automatically by a business process.'");
					ВызватьИсключение ТекстСообщения;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	НачальныйСнятСКонтроля = Ложь;
	Если ЗначениеЗаполнено(Ссылка) Тогда 
		НачальныйСнятСКонтроля = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, "СнятСКонтроля");
	КонецЕсли;	
	Если Не НачальныйСнятСКонтроля И Не СнятСКонтроля Тогда 
		Если Исполнители.Количество() = 0 Тогда 
			ВсеПроконтролированы = Ложь;
		Иначе	
			ВсеПроконтролированы = Истина;
			Для Каждого Строка Из Исполнители Цикл
				Если Не Строка.Проконтролировано Тогда 
					ВсеПроконтролированы = Ложь;
				КонецЕсли;	
			КонецЦикла;	
		КонецЕсли;	
		Если ВсеПроконтролированы Тогда 
			СнятСКонтроля = Истина;
			ДатаСнятияСКонтроля = ТекущаяДатаСеанса();
		КонецЕсли;	
	КонецЕсли;
	
	// обновление рабочей группы предмета
	Если ЗначениеЗаполнено(Предмет) Тогда 
		ПерезаписатьРабочуюГруппуПредмета(Предмет);
	КонецЕсли;
	
	СтарыйКонтролер = Справочники.Пользователи.ПустаяСсылка();
	Если ЗначениеЗаполнено(Ссылка) Тогда 
		СтарыйКонтролер = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, "Контролер");
	КонецЕсли;
	ДополнительныеСвойства.Вставить("СтарыйКонтролер", СтарыйКонтролер);
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	// установка контролера в процессе
	СтарыйКонтролер = ДополнительныеСвойства.СтарыйКонтролер;
	СтараяПометкаУдаления = ДополнительныеСвойства.СтараяПометкаУдаления;
	УстановкаПометки = Не СтараяПометкаУдаления И ПометкаУдаления;
	
	Если Не УстановкаПометки Тогда 
		Если Контроль.ЭтоПроцессСКонтролером(Предмет) Тогда 
			Если Не ЗначениеЗаполнено(Предмет.Контролер) Или 
				(СтарыйКонтролер = Предмет.Контролер 
				И СтарыйКонтролер <> Контролер) Тогда 
				ПраваПоОбъекту = ДокументооборотПраваДоступа.ПолучитьПраваПоОбъекту(Предмет); 
				Если ПраваПоОбъекту.Изменение Тогда 
					ПредметОбъект = Предмет.ПолучитьОбъект();
					ПредметОбъект.Контролер = Контролер;
					ПредметОбъект.Записать();
				КонецЕсли;
			КонецЕсли; 
		КонецЕсли;
	КонецЕсли;
	
	// установка состояния контроля для списков
	УстановитьСостояниеКонтроляВКеше(Предмет);
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	Для Каждого Исполнитель Из Исполнители Цикл 
		Исполнитель.Исполнено = Ложь;
	КонецЦикла;	
	
	ПоставленНаКонтроль = Истина;
	ДатаПостановкиНаКонтроль = ТекущаяДатаСеанса();
	
	СнятСКонтроля = Ложь;
	ДатаСнятияСКонтроля = '00010101';
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция СформироватьОписание(Предмет, Наименование, Описание)
	
	КонтрольноеСлово = "";
		
	Если ТипЗнч(Предмет) = Тип("БизнесПроцессСсылка.Исполнение") Тогда 
		КонтрольноеСлово = НСтр("ru = 'Исполнить'; en = 'Perform'");
		СловоЗамены = НСтр("ru = 'Контролировать исполнение'; en = 'Monitor performance'");
		
	ИначеЕсли ТипЗнч(Предмет) = Тип("БизнесПроцессСсылка.Ознакомление") Тогда
		КонтрольноеСлово = НСтр("ru = 'Ознакомиться'; en = 'Examine'");
		СловоЗамены = НСтр("ru = 'Контролировать ознакомление'; en = 'Monitor examination'");
		
	ИначеЕсли ТипЗнч(Предмет) = Тип("БизнесПроцессСсылка.Утверждение") Тогда
		КонтрольноеСлово = НСтр("ru = 'Утвердить'; en = 'Confirm'");
		СловоЗамены = НСтр("ru = 'Контролировать утверждение'; en = 'Monitor confirmation'");
		
	ИначеЕсли ТипЗнч(Предмет) = Тип("БизнесПроцессСсылка.Рассмотрение") Тогда
		КонтрольноеСлово = НСтр("ru = 'Рассмотреть'; en = 'Review'");
		СловоЗамены = НСтр("ru = 'Контролировать рассмотрение'; en = 'Monitor reviewal'");
		
	ИначеЕсли ТипЗнч(Предмет) = Тип("БизнесПроцессСсылка.Регистрация") Тогда
		КонтрольноеСлово = НСтр("ru = 'Зарегистрировать'; en = 'Register'");
		СловоЗамены = НСтр("ru = 'Контролировать регистрацию'; en = 'Monitor registration'");
		
	ИначеЕсли ТипЗнч(Предмет) = Тип("БизнесПроцессСсылка.Поручение") Тогда
		КонтрольноеСлово = НСтр("ru = 'Выполнить'; en = 'Execute'");
		СловоЗамены = НСтр("ru = 'Контролировать выполнение'; en = 'Monitor perform'");
		
	ИначеЕсли ТипЗнч(Предмет) = Тип("БизнесПроцессСсылка.Приглашение") Тогда
		КонтрольноеСлово = НСтр("ru = 'Принять участие в'; en = 'Attend to'");
		СловоЗамены = НСтр("ru = 'Контролировать приглашение'; en = 'Monitor invitation'");
		
	ИначеЕсли ТипЗнч(Предмет) = Тип("БизнесПроцессСсылка.Согласование") Тогда
		КонтрольноеСлово = НСтр("ru = 'Согласовать'; en = 'Approve'");
		СловоЗамены = НСтр("ru = 'Контролировать согласование'; en = 'Monitor approval'");
		
	КонецЕсли;	
	
	Если Не ЗначениеЗаполнено(КонтрольноеСлово) Тогда 
		
		ТекстОписания = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Контролировать: %1'; en = 'Monitor: %1'"), 
			СокрЛП(Наименование));
		
	Иначе	
		Если Лев(СокрЛП(Наименование), СтрДлина(КонтрольноеСлово)) = КонтрольноеСлово Тогда
			
			ТекстОписания = СловоЗамены + " " + СокрЛП(Сред(СокрЛП(Наименование), СтрДлина(КонтрольноеСлово)+1));
			
		Иначе	
			
			ТекстОписания = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Контролировать: %1'; en = 'Monitor: %1'"), 
				СокрЛП(Наименование));
			
		КонецЕсли;
	КонецЕсли;	
		
	Если ЗначениеЗаполнено(Описание) Тогда 
		ТекстОписания = ТекстОписания + Символы.ПС + Символы.ПС + Описание;
	КонецЕсли;
			
	Возврат ТекстОписания;
	
КонецФункции

Функция СвернутьТекстВСтроку(Текст, ДлинаСтроки)
	
	СтрокаВозврата = Текст;
	СтрокаВозврата = СтрЗаменить(СтрокаВозврата, Символы.ВК, " ");
	СтрокаВозврата = СтрЗаменить(СтрокаВозврата, Символы.ПС, " ");
	СтрокаВозврата = СтрЗаменить(СтрокаВозврата, Символы.Таб, " ");
	СтрокаВозврата = СтрЗаменить(СтрокаВозврата, "  ", " ");
	СтрокаВозврата = Лев(СтрокаВозврата, ДлинаСтроки);
	
	Возврат СтрокаВозврата;
	
КонецФункции

Процедура УстановитьСостояниеКонтроляВКеше(Предмет)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если Не ЗначениеЗаполнено(Предмет) Тогда 
		Возврат;
	КонецЕсли;	
	
	ТекстЗапросаПоПроцессам = "";
	Для Каждого БизнесПроцесс Из Метаданные.БизнесПроцессы Цикл
		Если Не БизнесПроцесс.ТабличныеЧасти.Предметы.Реквизиты.Предмет.Тип.СодержитТип(ТипЗнч(Предмет)) Тогда 
			Продолжить;
		КонецЕсли;
		
		ТекстЗапросаПоПроцессам = ТекстЗапросаПоПроцессам +
			"ВЫБРАТЬ
			|	Ссылка
			|		" + ?(ТекстЗапросаПоПроцессам = "", " ПОМЕСТИТЬ ПодчиненныеПроцессы " , "") + "
			|ИЗ
			|	БизнесПроцесс." + БизнесПроцесс.Имя + ".Предметы
			|ГДЕ 
			|	Предмет = &Предмет И РольПредмета = ЗНАЧЕНИЕ(Перечисление.РолиПредметов.Основной)
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|";
	КонецЦикла;	
	
	Если ТекстЗапросаПоПроцессам = "" Тогда 
		
		ТекстЗапроса = 
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	Контроль.Ссылка,
			|	Контроль.СнятСКонтроля,
			|	Контроль.ПоставленНаКонтроль,
			|	Контроль.СрокИсполнения
			|ИЗ
			|	Справочник.Контроль КАК Контроль
			|ГДЕ
			|	Контроль.Предмет = &Предмет
			|	И НЕ Контроль.ПометкаУдаления";
		
	Иначе
		
		ТекстЗапросаПоПроцессам = Лев(ТекстЗапросаПоПроцессам, СтрДлина(ТекстЗапросаПоПроцессам)-16);
		ТекстЗапросаПоПроцессам = ТекстЗапросаПоПроцессам + ";";
		
		ТекстЗапроса = ТекстЗапросаПоПроцессам + 
			"ВЫБРАТЬ
			|	Контроль.Ссылка,
			|	Контроль.СнятСКонтроля,
			|	Контроль.ПоставленНаКонтроль,
			|	Контроль.СрокИсполнения
			|ИЗ
			|	Справочник.Контроль КАК Контроль
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПодчиненныеПроцессы КАК ПодчиненныеПроцессы
			|		ПО Контроль.Предмет = ПодчиненныеПроцессы.Ссылка
			|ГДЕ
			|	НЕ Контроль.ПометкаУдаления
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	Контроль.Ссылка,
			|	Контроль.СнятСКонтроля,
			|	Контроль.ПоставленНаКонтроль,
			|	Контроль.СрокИсполнения
			|ИЗ
			|	Справочник.Контроль КАК Контроль
			|ГДЕ
			|	Контроль.Предмет = &Предмет
			|	И НЕ Контроль.ПометкаУдаления";
			
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Предмет", Предмет);
	
	Результат = Запрос.Выполнить().Выгрузить();
	Если Результат.Количество() = 0 Тогда 
		
		СрокИсполненияКеш = '00010101';
		СрокИсполненияОбщийКеш = '00010101';
		СостояниеКонтроля = Перечисления.СостоянияКонтроля.ПустаяСсылка();
		
	ИначеЕсли Результат.Количество() = 1 Тогда 
		
		СрокИсполненияКеш = Результат[0].СрокИсполнения;
		СрокИсполненияОбщийКеш = СрокИсполнения;
		Если Результат[0].СнятСКонтроля Тогда 
			СостояниеКонтроля = Перечисления.СостоянияКонтроля.СнятСКонтроля;
		Иначе
			СостояниеКонтроля = Перечисления.СостоянияКонтроля.НаКонтроле;
		КонецЕсли;	
		
	Иначе
		
		Если Результат.Найти(Истина, "СнятСКонтроля") <> Неопределено
		   И Результат.Найти(Ложь, "СнятСКонтроля") <> Неопределено Тогда 
			СостояниеКонтроля = Перечисления.СостоянияКонтроля.СмешанноНесколько;
		ИначеЕсли Результат.Найти(Истина, "СнятСКонтроля") <> Неопределено Тогда 
			СостояниеКонтроля = Перечисления.СостоянияКонтроля.СнятСКонтроляНесколько;
		Иначе	
			СостояниеКонтроля = Перечисления.СостоянияКонтроля.НаКонтролеНесколько;
		КонецЕсли;	
		
		СрокИсполненияКеш = '39990101';
		СрокИсполненияОбщийКеш = '00010101';
		ЕстьПустойСрок = Ложь;
		Для Каждого Строка Из Результат Цикл 
			Если Строка.СнятСКонтроля Тогда 
				Продолжить;
			КонецЕсли;	
			Если ЗначениеЗаполнено(Строка.СрокИсполнения) И Строка.СрокИсполнения < СрокИсполненияКеш Тогда 
				СрокИсполненияКеш = Строка.СрокИсполнения;
			КонецЕсли;
			Если Строка.СрокИсполнения > СрокИсполненияОбщийКеш Тогда 
				СрокИсполненияОбщийКеш = Строка.СрокИсполнения;
			КонецЕсли;
			Если Не ЗначениеЗаполнено(Строка.СрокИсполнения) Тогда 
				ЕстьПустойСрок = Истина;
			КонецЕсли;	
		КонецЦикла;	
		Если СрокИсполненияКеш = '39990101' Тогда 
			СрокИсполненияКеш = '00010101';
		КонецЕсли;	
		Если ЕстьПустойСрок Тогда 
			СрокИсполненияОбщийКеш = '00010101';
		КонецЕсли;	
		
	КонецЕсли;	
	
	Если ТипЗнч(Предмет) = Тип("СправочникСсылка.ВеткиПереписки") Тогда 
		ПредметКонтроля = Предмет.КорневоеПисьмо;
	Иначе	
		ПредметКонтроля = Предмет;
	КонецЕсли;	
	
	РегистрыСведений.КешИнформацииОбОбъектах.УстановитьПризнак(ПредметКонтроля,
		"СостояниеКонтроля",
		СостояниеКонтроля);	
	
	РегистрыСведений.КешИнформацииОбОбъектах.УстановитьПризнак(ПредметКонтроля,
		"СрокИсполнения",
		СрокИсполненияКеш);
	
	РегистрыСведений.КешИнформацииОбОбъектах.УстановитьПризнак(ПредметКонтроля,
		"СрокИсполненияОбщий",
		СрокИсполненияОбщийКеш);
	
	Если ОбщегоНазначения.ЭтоБизнесПроцесс(Предмет.Метаданные()) Тогда 
		ОсновныеПредметы = МультипредметностьКлиентСервер.ПолучитьМассивПредметовОбъекта(Предмет, , Истина);
		Для Каждого ОсновнойПредмет Из ОсновныеПредметы Цикл
			УстановитьСостояниеКонтроляВКеше(ОсновнойПредмет);
		КонецЦикла;	
	КонецЕсли;		
	
	// письма веток
	Если ТипЗнч(Предмет) = Тип("СправочникСсылка.ВеткиПереписки") Тогда
		ВеткаПереписки = Предмет;
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПисьмаВеток.Письмо КАК Письмо
		|ПОМЕСТИТЬ ПисьмаВеток
		|ИЗ
		|	РегистрСведений.ПисьмаВеток КАК ПисьмаВеток
		|ГДЕ
		|	ПисьмаВеток.ВеткаПереписки = &ВеткаПереписки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПисьмаВеток.Письмо
		|ИЗ
		|	ПисьмаВеток КАК ПисьмаВеток
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	ИсходящееПисьмо.Ссылка
		|ИЗ
		|	Документ.ИсходящееПисьмо КАК ИсходящееПисьмо
		|ГДЕ
		|	ИсходящееПисьмо.ДатаОтправки = ДАТАВРЕМЯ(1, 1, 1)
		|	И ИсходящееПисьмо.ПисьмоОснование В
		|			(ВЫБРАТЬ
		|				ПисьмаВеток.Письмо
		|			ИЗ
		|				ПисьмаВеток)
		|	И (ИсходящееПисьмо.ТипОтвета = ЗНАЧЕНИЕ(Перечисление.ТипыОтвета.ОтветНаПисьмо)
		|			ИЛИ ИсходящееПисьмо.ТипОтвета = ЗНАЧЕНИЕ(Перечисление.ТипыОтвета.ПересылкаПисьма))";
		
		Запрос.УстановитьПараметр("ВеткаПереписки", ВеткаПереписки);
		
		ПисьмаВетки = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Письмо");
		Для Каждого ПисьмоВетки Из ПисьмаВетки Цикл
			
			РегистрыСведений.КешИнформацииОбОбъектах.УстановитьПризнак(ПисьмоВетки,
				"СостояниеКонтроля",
				СостояниеКонтроля);
			
			РегистрыСведений.КешИнформацииОбОбъектах.УстановитьПризнак(ПисьмоВетки,
				"СрокИсполнения",
				СрокИсполненияКеш);
	
			РегистрыСведений.КешИнформацииОбОбъектах.УстановитьПризнак(ПисьмоВетки,
				"СрокИсполненияОбщий",
				СрокИсполненияОбщийКеш);
				
		КонецЦикла;
	КонецЕсли;	
	
КонецПроцедуры	

Процедура ПерезаписатьРабочуюГруппуПредмета(Предмет, ЗаполнятьПризнакИзмененияВРабочейГруппе = Ложь)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если Не ЗначениеЗаполнено(Предмет) Тогда 
		Возврат;
	КонецЕсли;	
	
	// Добавление контролера в рабочую группу предмета
	Если ТипЗнч(Предмет) = Тип("СправочникСсылка.ВходящиеДокументы")
		Или ТипЗнч(Предмет) = Тип("СправочникСсылка.ИсходящиеДокументы")
		Или ТипЗнч(Предмет) = Тип("СправочникСсылка.ВнутренниеДокументы") 
		Или ТипЗнч(Предмет) = Тип("СправочникСсылка.Мероприятия")
		Или ТипЗнч(Предмет) = Тип("СправочникСсылка.Проекты") Тогда 
		
	 	Если РаботаСРабочимиГруппами.ПоОбъектуВедетсяАвтоматическоеЗаполнениеРабочейГруппы(Предмет) Тогда
			
			ТаблицаУчастников = РаботаСРабочимиГруппами.ПолучитьПустуюТаблицуУчастников();
			РаботаСРабочимиГруппами.ДобавитьУчастникаВТаблицуНабора(ТаблицаУчастников, Контролер);
			РаботаСРабочимиГруппами.ДобавитьУчастниковВРабочуюГруппуОбъекта(
				Предмет, ТаблицаУчастников, Истина, ЗаполнятьПризнакИзмененияВРабочейГруппе);
				
		КонецЕсли;
		
	// Добавление контролера процесса в рабочую группу предмета	
	ИначеЕсли ОбщегоНазначения.ЭтоБизнесПроцесс(Предмет.Метаданные()) Тогда 
		
		Если Предмет.Стартован Тогда 
			ПредметыПроцесса = МультипредметностьКлиентСервер.ПолучитьМассивПредметовОбъекта(Предмет);
			Для Каждого ПредметПроцесса Из ПредметыПроцесса Цикл
				Попытка
					ПерезаписатьРабочуюГруппуПредмета(ПредметПроцесса, Истина);
				Исключение
					РаботаСРабочимиГруппами.ОбработатьИсключениеПерезаписиРабочейГруппыПредметаПроцесса(
						ПредметПроцесса);
				КонецПопытки;
			КонецЦикла;	
		КонецЕсли;
			
	КонецЕсли;	
	
	// добавление контролера процесса\задачи в участники процесса
	Если ОбщегоНазначения.ЭтоБизнесПроцесс(Предмет.Метаданные()) Тогда 
		БизнесПроцесс = Предмет;
	ИначеЕсли ТипЗнч(Предмет) = Тип("ЗадачаСсылка.ЗадачаИсполнителя") Тогда 	
		БизнесПроцесс = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Предмет, "БизнесПроцесс");
	Иначе	
		БизнесПроцесс = Неопределено;
	КонецЕсли;	
	
	Если БизнесПроцесс <> Неопределено Тогда 
		СтруктураУчастник = Новый Структура(
			"Участник",
			Контролер);
		НаборУчастниковПроцесса = РегистрыСведений.УчастникиПроцессов.ПолучитьУчастников(БизнесПроцесс);
		ЗаполнитьЗначенияСвойств(НаборУчастниковПроцесса.Добавить(), СтруктураУчастник);
		НаборУчастниковПроцесса.Свернуть(
			"Участник");
		РегистрыСведений.УчастникиПроцессов.ЗаписатьНаборПоПроцессу(БизнесПроцесс, НаборУчастниковПроцесса);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьПраваКонтролераНаПредмет(Отказ)
	
	Если ТипЗнч(Контролер) = Тип("СправочникСсылка.Пользователи") Тогда
	
		ПраваПоОбъекту = ДокументооборотПраваДоступа.ПолучитьПраваПоОбъекту(Предмет, Контролер);
		Если Не ПраваПоОбъекту.Чтение Тогда 
			ПредметСтрокой = Контроль.СформироватьПредставлениеПредмета(Предмет);
		
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'У контролера ""%1"" нет прав на предмет ""%2"".'; en = 'The monitor ""%1"" does not have the rights for ""%2"".'"),
				Контролер, 
				ПредметСтрокой);
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю( 
				ТекстСообщения,
				ЭтотОбъект, 
				"Контролер", 
				, 
				Отказ);	
		КонецЕсли;
	
	ИначеЕсли ТипЗнч(Контролер) = Тип("СправочникСсылка.ПолныеРоли") Тогда
		
		МассивПользователей = РегистрыСведений.ИсполнителиЗадач.ИсполнителиРоли(Контролер, Истина);
		
		КодВозврата = Истина;
		Для каждого Строка Из МассивПользователей Цикл
			ПраваПоОбъекту = ДокументооборотПраваДоступа.ПолучитьПраваПоОбъекту(Предмет, Строка);
			Если Не ПраваПоОбъекту.Чтение Тогда 
				КодВозврата = Ложь;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		Если КодВозврата = Ложь Тогда
			ПредметСтрокой = Контроль.СформироватьПредставлениеПредмета(Предмет);
		
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Не все пользователи  роли ""%1"" имеют права на предмет ""%2"".'; en = 'Not all role users ""%1"" have the right to subject ""%2"".'"),
				Контролер, 
				ПредметСтрокой);
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю( 
				ТекстСообщения,
				ЭтотОбъект, 
				"Контролер", 
				, 
				Отказ);	
		КонецЕсли;
	
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьИсполнителейСтрокой()
	
	Перем ИсполнителиСтрокой;
	
	ИсполнителиСтрокой = "";
	Для Каждого Строка Из Исполнители Цикл
		ИсполнителиСтрокой = ИсполнителиСтрокой + Строка(Строка.Исполнитель) + "; ";
	КонецЦикла;	
	Если ИсполнителиСтрокой	<> "" Тогда 
		ИсполнителиСтрокой = Лев(ИсполнителиСтрокой, СтрДлина(ИсполнителиСтрокой) - 2);
	КонецЕсли;	
	
	Возврат ИсполнителиСтрокой;
	
КонецФункции	

#КонецОбласти

#КонецЕсли
