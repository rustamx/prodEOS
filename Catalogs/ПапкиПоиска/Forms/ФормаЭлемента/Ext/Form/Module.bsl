&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если не ЗначениеЗаполнено(Объект.Ответственный) Тогда
		Объект.Ответственный = ПользователиКлиентСервер.ТекущийПользователь();
	КонецЕсли;
	
	ТекущийПользователь = ПользователиКлиентСервер.ТекущийПользователь();
	
	Если ЗначениеЗаполнено(Параметры.ЗначениеКопирования) Тогда
		ТаблицаУсловий = Новый ТаблицаЗначений;
		Массив = Новый Массив;
		Массив.Добавить(Тип("ПеречислениеСсылка.ВидыУсловийПоискаПисем"));	
		НоваяКолонка = ТаблицаУсловий.Колонки.Добавить("ВидУсловия", Новый ОписаниеТипов(Массив));
		Массив = Новый Массив;
		Массив.Добавить(Тип("Строка"));	
		НоваяКолонка = ТаблицаУсловий.Колонки.Добавить("ПредставлениеЗначенияУсловия", Новый ОписаниеТипов(Массив));
		Массив = Новый Массив;
		Массив.Добавить(Тип("СписокЗначений"));	
		НоваяКолонка = ТаблицаУсловий.Колонки.Добавить("ЗначенияУсловия", Новый ОписаниеТипов(Массив));
		
		Объект.Ответственный = Параметры.ЗначениеКопирования.Ответственный;
		
		УсловияОбъектаКопирования = Параметры.ЗначениеКопирования.ПолучитьОбъект().НастройкаОтбора.Получить();
		Для Каждого Строка Из УсловияОбъектаКопирования Цикл
			НоваяСтрока = ТаблицаУсловий.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
			НоваяСтрока.ПредставлениеЗначенияУсловия = 
				ПолучитьПредставлениеСпискаЗначенийДляУсловия(
				НоваяСтрока.ВидУсловия, НоваяСтрока.ЗначенияУсловия);
		КонецЦикла;
		ЗначениеВРеквизитФормы(ТаблицаУсловий, "УсловияПоискаПисем");
	Иначе
		ЗаполнитьТаблицуУсловий();
	КонецЕсли;
	
	Элементы.Ответственный.Видимость = РольДоступна("ПолныеПрава");
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуУсловий()
	
	УсловияПоискаПисем.Очистить();
	Для Каждого ЗначениеПеречисления Из Перечисления.ВидыУсловийПоискаПисем Цикл
		НоваяСтрока = УсловияПоискаПисем.Добавить();
		НоваяСтрока.ВидУсловия = ЗначениеПеречисления;
		НоваяСтрока.ПредставлениеЗначенияУсловия = "";
		НоваяСтрока.ЗначенияУсловия = Новый СписокЗначений;
		
		Если ЗначениеПеречисления = Перечисления.ВидыУсловийПоискаПисем.СпособОбъединенияУсловий Тогда
			НоваяСтрока.ЗначенияУсловия.Добавить(Перечисления.ТипыЛогическойСвязи.И);	
		ИначеЕсли ЗначениеПеречисления = Перечисления.ВидыУсловийПоискаПисем.ХранитсяВПапке Тогда
			ВсеМоиПапкиПользователя = ВстроеннаяПочтаСервер.ПолучитьВсеПапкиПисемПользователя(ПользователиКлиентСервер.ТекущийПользователь());
			Если ВсеМоиПапкиПользователя.Количество() > 0 Тогда
				НоваяСтрока.ЗначенияУсловия.Добавить("МоиПапки");
			КонецЕсли;
		ИначеЕсли ЗначениеПеречисления = Перечисления.ВидыУсловийПоискаПисем.ОтноситсяКУчетнойЗаписи Тогда
			НоваяСтрока.ЗначенияУсловия.Добавить("МоиУчетныеЗаписи");
		ИначеЕсли ЗначениеПеречисления = Перечисления.ВидыУсловийПоискаПисем.Удалено Тогда
			НоваяСтрока.ЗначенияУсловия.Добавить(Ложь);
		ИначеЕсли ЗначениеПеречисления = Перечисления.ВидыУсловийПоискаПисем.ВыбратьПервые Тогда	
			НоваяСтрока.ЗначенияУсловия.Добавить("100");
		ИначеЕсли ЗначениеПеречисления = Перечисления.ВидыУсловийПоискаПисем.ТипПисьма Тогда
			НоваяСтрока.ЗначенияУсловия.Добавить(0);
		КонецЕсли;	
		
		НоваяСтрока.ПредставлениеЗначенияУсловия = 
			ПолучитьПредставлениеСпискаЗначенийДляУсловия(
				НоваяСтрока.ВидУсловия, 
				НоваяСтрока.ЗначенияУсловия);

	КонецЦикла;
	
	Если Не Объект.Ссылка.Пустая() Тогда
		ПапкаПоиска = Объект.Ссылка;
		ПапкаПоискаОбъект = ПапкаПоиска.ПолучитьОбъект();
		НастройкиПапки = ПапкаПоискаОбъект.НастройкаОтбора.Получить();
		Для Каждого Строка Из УсловияПоискаПисем Цикл
			Для Каждого СтрокаТекущейПапки Из НастройкиПапки Цикл
				Если Строка.ВидУсловия = СтрокаТекущейПапки.ВидУсловия Тогда
					ЗаполнитьЗначенияСвойств(Строка, СтрокаТекущейПапки);
					Если Строка.ВидУсловия = Перечисления.ВидыУсловийПоискаПисем.ТипПисьма 
						И (Строка.ЗначенияУсловия.Количество() = 0
						Или ТипЗнч(Строка.ЗначенияУсловия[0].Значение) = Тип("Булево")) Тогда
						Строка.ЗначенияУсловия.Очистить();
						Строка.ЗначенияУсловия.Добавить(0);
					КонецЕсли;
				
					Строка.ПредставлениеЗначенияУсловия = 
						ПолучитьПредставлениеСпискаЗначенийДляУсловия(
							Строка.ВидУсловия, 
							Строка.ЗначенияУсловия);
					Прервать;		
				КонецЕсли;			
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
	ЗначениеЗаполненоОтКогоКому = Ложь;
	ЗначениеЗаполненоПерепискаС = Ложь;
	Для Каждого Строка Из УсловияПоискаПисем Цикл
		Если ЗначениеЗаполнено(Строка.ПредставлениеЗначенияУсловия) Тогда
			Если Строка.ВидУсловия = ПредопределенноеЗначение("Перечисление.ВидыУсловийПоискаПисем.ПерепискаС") Тогда
				ЗначениеЗаполненоПерепискаС = Истина;
			КонецЕсли;
			Если Строка.ВидУсловия = ПредопределенноеЗначение("Перечисление.ВидыУсловийПоискаПисем.ПолученоОт")
				ИЛИ Строка.ВидУсловия = ПредопределенноеЗначение("Перечисление.ВидыУсловийПоискаПисем.Кому") Тогда
				ЗначениеЗаполненоОтКогоКому = Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура УсловияПоискаПисемВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ТекущиеДанные = Элементы.УсловияПоискаПисем.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	ТекущийВидУсловия = ТекущиеДанные.ВидУсловия;
	
	Если ТекущийВидУсловия = ПредопределенноеЗначение("Перечисление.ВидыУсловийПоискаПисем.ИмеетВложения")
		ИЛИ ТекущийВидУсловия = ПредопределенноеЗначение("Перечисление.ВидыУсловийПоискаПисем.Удалено")
		ИЛИ ТекущийВидУсловия = ПредопределенноеЗначение("Перечисление.ВидыУсловийПоискаПисем.Прочтено") 
		ИЛИ ТекущийВидУсловия = ПредопределенноеЗначение("Перечисление.ВидыУсловийПоискаПисем.ЕстьОтвет")
		ИЛИ ТекущийВидУсловия = ПредопределенноеЗначение("Перечисление.ВидыУсловийПоискаПисем.Переслано") Тогда
				
		ТекущееЗначение = Неопределено;
		Если ТекущиеДанные.ЗначенияУсловия.Количество() > 0 Тогда
			ТекущееЗначение = ТекущиеДанные.ЗначенияУсловия[0].Значение;
		КонецЕсли;
		ТекущиеДанные.ЗначенияУсловия.Очистить();
		ТекущиеДанные.ПредставлениеЗначенияУсловия = "";
		Если ТекущееЗначение = Истина Тогда
			ТекущиеДанные.ЗначенияУсловия.Добавить(Ложь);
			ТекущиеДанные.ПредставлениеЗначенияУсловия = НСтр("ru = 'Нет'; en = 'No'");
		ИначеЕсли ТекущееЗначение = Ложь Тогда
		ИначеЕсли ТекущееЗначение = Неопределено Тогда
			ТекущиеДанные.ЗначенияУсловия.Добавить(Истина);
			ТекущиеДанные.ПредставлениеЗначенияУсловия = НСтр("ru = 'Да'; en = 'Yes'");	
		КонецЕсли;
		
	ИначеЕсли ТекущийВидУсловия = ПредопределенноеЗначение("Перечисление.ВидыУсловийПоискаПисем.ТипПисьма") Тогда
		
		ТекущееЗначение = Неопределено;
		Если ТекущиеДанные.ЗначенияУсловия.Количество() > 0 Тогда
			ТекущееЗначение = ТекущиеДанные.ЗначенияУсловия[0].Значение;
		КонецЕсли;
		ТекущиеДанные.ЗначенияУсловия.Очистить();
		ТекущиеДанные.ПредставлениеЗначенияУсловия = "";
		Если ТекущееЗначение = 2 Тогда
			ТекущиеДанные.ЗначенияУсловия.Добавить(0);
			ТекущиеДанные.ПредставлениеЗначенияУсловия = НСтр("ru = 'Входящие и исходящие'; en = 'Incoming and outgoing'");	
		ИначеЕсли ТекущееЗначение = 0 Тогда	
			ТекущиеДанные.ЗначенияУсловия.Добавить(1);
			ТекущиеДанные.ПредставлениеЗначенияУсловия = НСтр("ru = 'Только входящие'; en = 'Incoming only'");
		ИначеЕсли ТекущееЗначение = 1 Тогда
			ТекущиеДанные.ЗначенияУсловия.Добавить(2);
			ТекущиеДанные.ПредставлениеЗначенияУсловия = НСтр("ru = 'Только исходящие'; en = 'Only outgoing'");
		КонецЕсли;
		
	ИначеЕсли ТекущийВидУсловия = ПредопределенноеЗначение("Перечисление.ВидыУсловийПоискаПисем.СпособОбъединенияУсловий") Тогда 	
		
		ТекущееЗначение = Неопределено;
		Если ТекущиеДанные.ЗначенияУсловия.Количество() > 0 Тогда
			ТекущееЗначение = ТекущиеДанные.ЗначенияУсловия[0].Значение;
		КонецЕсли;
		ТекущиеДанные.ЗначенияУсловия.Очистить();
		ТекущиеДанные.ПредставлениеЗначенияУсловия = "";
		Если ТекущееЗначение = ПредопределенноеЗначение("Перечисление.ТипыЛогическойСвязи.И") Тогда
			ТекущиеДанные.ЗначенияУсловия.Добавить(ПредопределенноеЗначение("Перечисление.ТипыЛогическойСвязи.Или"));
			ТекущиеДанные.ПредставлениеЗначенияУсловия = НСтр("ru = 'По ""Или""'; en = 'With ""OR""'");
		Иначе
			ТекущиеДанные.ЗначенияУсловия.Добавить(ПредопределенноеЗначение("Перечисление.ТипыЛогическойСвязи.И"));
			ТекущиеДанные.ПредставлениеЗначенияУсловия = НСтр("ru = 'По ""И""'; en = 'With ""And""'");	
		КонецЕсли;
		
	Иначе
		
		ЗначенияУсловияНачалоВыбора(Неопределено, Неопределено, Истина);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УсловияПоискаПисемПриАктивизацииСтроки(Элемент)
	
	УстановитьРежимРедактированияЗначенияУсловия();
	
КонецПроцедуры

&НаКлиенте
Процедура УсловияПоискаПисемПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	ТекущиеДанные = Элементы.УсловияПоискаПисем.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьРежимРедактированияЗначенияУсловия();
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьРежимРедактированияЗначенияУсловия()
	
	ТекущиеДанные = Элементы.УсловияПоискаПисем.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
		
	ТекущийВидУсловия = ТекущиеДанные.ВидУсловия;
	
	Элементы.ЗначенияУсловия.Доступность = Истина;
	Элементы.ЗначенияУсловия.РедактированиеТекста = Ложь;
	Элементы.ЗначенияУсловия.КнопкаВыбора = Ложь;
	Элементы.ЗначенияУсловия.КнопкаОчистки = Истина;
	Элементы.ЗначенияУсловия.ТолькоПросмотр = Ложь;	
	Элементы.ЗначенияУсловия.РежимРедактирования = РежимРедактированияКолонки.Вход;
		
	Если ТекущийВидУсловия = ПредопределенноеЗначение("Перечисление.ВидыУсловийПоискаПисем.ТемаСодержитУказанныеСлова")
		ИЛИ ТекущийВидУсловия = ПредопределенноеЗначение("Перечисление.ВидыУсловийПоискаПисем.КомментарийСодержитСлова") 
		ИЛИ ТекущийВидУсловия = ПредопределенноеЗначение("Перечисление.ВидыУсловийПоискаПисем.ПерепискаС")
		ИЛИ ТекущийВидУсловия = ПредопределенноеЗначение("Перечисление.ВидыУсловийПоискаПисем.ПолученоОт")
		ИЛИ ТекущийВидУсловия = ПредопределенноеЗначение("Перечисление.ВидыУсловийПоискаПисем.Кому") 
		ИЛИ ТекущийВидУсловия = ПредопределенноеЗначение("Перечисление.ВидыУсловийПоискаПисем.ВыбратьПервые")Тогда
		
		Элементы.ЗначенияУсловия.ТолькоПросмотр = Ложь;
		Элементы.ЗначенияУсловия.РедактированиеТекста = Истина;
		Элементы.ЗначенияУсловия.КнопкаВыбора = Истина;
		Элементы.ЗначенияУсловия.РежимРедактирования = РежимРедактированияКолонки.Непосредственно;
		
	ИначеЕсли ТекущийВидУсловия = ПредопределенноеЗначение("Перечисление.ВидыУсловийПоискаПисем.ТекстСодержитУказанныеСлова") Тогда
		
		Элементы.ЗначенияУсловия.ТолькоПросмотр = Ложь;
		Элементы.ЗначенияУсловия.РедактированиеТекста = Истина;
		Элементы.ЗначенияУсловия.КнопкаВыбора = Ложь;
		Элементы.ЗначенияУсловия.РежимРедактирования = РежимРедактированияКолонки.Непосредственно;
		
	ИначеЕсли ТекущийВидУсловия = ПредопределенноеЗначение("Перечисление.ВидыУсловийПоискаПисем.ЗаПериод") Тогда
		
		Элементы.ЗначенияУсловия.ТолькоПросмотр = Ложь;
		Элементы.ЗначенияУсловия.КнопкаВыбора = Истина;
		Элементы.ЗначенияУсловия.РежимРедактирования = РежимРедактированияКолонки.Непосредственно;
		Элементы.УсловияПоискаПисем.ЗакончитьРедактированиеСтроки(Истина);
		
	ИначеЕсли ТекущийВидУсловия = ПредопределенноеЗначение("Перечисление.ВидыУсловийПоискаПисем.ОтмеченоФлагом")
		ИЛИ ТекущийВидУсловия = ПредопределенноеЗначение("Перечисление.ВидыУсловийПоискаПисем.ХранитсяВПапке")
		ИЛИ ТекущийВидУсловия = ПредопределенноеЗначение("Перечисление.ВидыУсловийПоискаПисем.ОтноситсяКУчетнойЗаписи")
		ИЛИ ТекущийВидУсловия = ПредопределенноеЗначение("Перечисление.ВидыУсловийПоискаПисем.ОтноситсяКПроекту") 
		ИЛИ ТекущийВидУсловия = ПредопределенноеЗначение("Перечисление.ВидыУсловийПоискаПисем.ИмеетВажность") Тогда
		
		Элементы.ЗначенияУсловия.ТолькоПросмотр = Ложь;
		Элементы.ЗначенияУсловия.КнопкаВыбора = Истина;
		Элементы.ЗначенияУсловия.РежимРедактирования = РежимРедактированияКолонки.Непосредственно;
		
	Иначе
		
		Элементы.ЗначенияУсловия.ТолькоПросмотр = ЗначениеЗаполнено(ТекущиеДанные.ПредставлениеЗначенияУсловия);
		
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ЗначенияУсловияПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.УсловияПоискаПисем.ТекущиеДанные;
	
	Если ТекущийВидУсловия = ПредопределенноеЗначение("Перечисление.ВидыУсловийПоискаПисем.ТемаСодержитУказанныеСлова")
		ИЛИ ТекущийВидУсловия = ПредопределенноеЗначение("Перечисление.ВидыУсловийПоискаПисем.ТекстСодержитУказанныеСлова")
		ИЛИ ТекущийВидУсловия = ПредопределенноеЗначение("Перечисление.ВидыУсловийПоискаПисем.ПерепискаС")
		ИЛИ ТекущийВидУсловия = ПредопределенноеЗначение("Перечисление.ВидыУсловийПоискаПисем.ПолученоОт")
		ИЛИ ТекущийВидУсловия = ПредопределенноеЗначение("Перечисление.ВидыУсловийПоискаПисем.Кому")
		ИЛИ ТекущийВидУсловия = ПредопределенноеЗначение("Перечисление.ВидыУсловийПоискаПисем.КомментарийСодержитСлова") Тогда
		
		МассивПодстрок = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(
			ТекущиеДанные.ПредставлениеЗначенияУсловия, 
			";");
		ТекущиеДанные.ЗначенияУсловия.Очистить();
		Для Каждого Подстрока Из МассивПодстрок Цикл
			ТекущиеДанные.ЗначенияУсловия.Добавить(Подстрока);	
		КонецЦикла;
		
		ЗначениеЗаполненоОтКогоКому = Ложь;
		ЗначениеЗаполненоПерепискаС = Ложь;
		Если ЗначениеЗаполнено(ТекущиеДанные.ПредставлениеЗначенияУсловия) Тогда
			Если ТекущийВидУсловия = ПредопределенноеЗначение("Перечисление.ВидыУсловийПоискаПисем.ПерепискаС") Тогда
				ЗначениеЗаполненоПерепискаС = Истина;
			КонецЕсли;
			Если ТекущийВидУсловия = ПредопределенноеЗначение("Перечисление.ВидыУсловийПоискаПисем.ПолученоОт")
				ИЛИ ТекущийВидУсловия = ПредопределенноеЗначение("Перечисление.ВидыУсловийПоискаПисем.Кому") Тогда
				ЗначениеЗаполненоОтКогоКому = Истина;
			КонецЕсли;
		КонецЕсли;
		
	ИначеЕсли ТекущийВидУсловия = ПредопределенноеЗначение("Перечисление.ВидыУсловийПоискаПисем.ВыбратьПервые") Тогда
		ТекущиеДанные.ЗначенияУсловия.Очистить();
		Если ЗначениеЗаполнено(ТекущиеДанные.ПредставлениеЗначенияУсловия) Тогда 
			ТекущиеДанные.ЗначенияУсловия.Добавить(Число(СтрЗаменить(ТекущиеДанные.ПредставлениеЗначенияУсловия, " ", "")));
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗначенияУсловияНачалоВыбораПродолжениеПослеВводаТекста(РезультатФормы, Параметры) Экспорт
	
	Если ТипЗнч(РезультатФормы) <> Тип("Структура") Тогда
		Возврат;
	КонецЕсли;
	ТекущиеДанные = Элементы.УсловияПоискаПисем.ТекущиеДанные;
	ТекущиеДанные.ПредставлениеЗначенияУсловия = 
		ПолучитьПредставлениеСпискаЗначенийДляУсловия(ТекущийВидУсловия, РезультатФормы.Список);
	ТекущиеДанные.ЗначенияУсловия.Очистить();
	Для Каждого ЗначениеСписка Из РезультатФормы.Список Цикл
		ТекущиеДанные.ЗначенияУсловия.Добавить(ЗначениеСписка.Значение);	
	КонецЦикла;	
	
КонецПроцедуры

&НаКлиенте
Процедура ЗначенияУсловияНачалоВыбораПродолжениеПослеВводаАдресов(РезультатФормы, Параметры) Экспорт
	
	ТекущиеДанные = Элементы.УсловияПоискаПисем.ТекущиеДанные;
	Если ТипЗнч(РезультатФормы) = Тип("Структура") Тогда
		ТекущиеДанные.ПредставлениеЗначенияУсловия = 
		ПолучитьПредставлениеСпискаЗначенийДляУсловия(ТекущийВидУсловия, РезультатФормы.Список);
		ТекущиеДанные.ЗначенияУсловия.Очистить();
		Для Каждого ЗначениеСписка Из РезультатФормы.Список Цикл
			ТекущиеДанные.ЗначенияУсловия.Добавить(ЗначениеСписка.Значение);	
		КонецЦикла;
	КонецЕсли;
	
	ЗначениеЗаполненоОтКогоКому = Ложь;
	ЗначениеЗаполненоПерепискаС = Ложь;
	Если ЗначениеЗаполнено(ТекущиеДанные.ПредставлениеЗначенияУсловия) Тогда
		Если ТекущийВидУсловия = ПредопределенноеЗначение("Перечисление.ВидыУсловийПоискаПисем.ПерепискаС") Тогда
			ЗначениеЗаполненоПерепискаС = Истина;
		КонецЕсли;
		Если ТекущийВидУсловия = ПредопределенноеЗначение("Перечисление.ВидыУсловийПоискаПисем.ПолученоОт")
			ИЛИ ТекущийВидУсловия = ПредопределенноеЗначение("Перечисление.ВидыУсловийПоискаПисем.Кому") Тогда
			ЗначениеЗаполненоОтКогоКому = Истина;
		КонецЕсли;
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ЗначенияУсловияНачалоВыбораПродолжениеПослеВводаДат(РезультатФормы, Параметры) Экспорт
	
	Если ТипЗнч(РезультатФормы) <> Тип("Структура") Тогда
		Возврат;
	КонецЕсли;
	ТекущиеДанные = Элементы.УсловияПоискаПисем.ТекущиеДанные;
	ТекущиеДанные.ПредставлениеЗначенияУсловия = 
		ПолучитьПредставлениеСпискаЗначенийДляУсловия(ТекущийВидУсловия, РезультатФормы.Список);
	ТекущиеДанные.ЗначенияУсловия.Очистить();
	Для Каждого ЗначениеСписка Из РезультатФормы.Список Цикл
		ТекущиеДанные.ЗначенияУсловия.Добавить(ЗначениеСписка.Значение);	
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗначенияУсловияНачалоВыбораПродолжениеПослеВводаПеречисления(РезультатФормы, Параметры) Экспорт
	
	ТекущиеДанные = Элементы.УсловияПоискаПисем.ТекущиеДанные;
	Если РезультатФормы <> Неопределено Тогда
		ТекущиеДанные.ЗначенияУсловия.Очистить();
		ТекущиеДанные.ЗначенияУсловия.ЗагрузитьЗначения(РезультатФормы);
	КонецЕсли;
	ТекущиеДанные = Элементы.УсловияПоискаПисем.ТекущиеДанные;
	ТекущиеДанные.ПредставлениеЗначенияУсловия = 
		ПолучитьПредставлениеСпискаЗначенийДляУсловия(ТекущийВидУсловия, ТекущиеДанные.ЗначенияУсловия);	
	
КонецПроцедуры

&НаКлиенте
Процедура ЗначенияУсловияНачалоВыбораПродолжениеПослеВводаПапокИУчетныхЗаписей(РезультатФормы, Параметры) Экспорт
	
	ТекущиеДанные = Элементы.УсловияПоискаПисем.ТекущиеДанные;
	Если РезультатФормы <> Неопределено Тогда
		ТекущиеДанные.ЗначенияУсловия.Очистить();
		ТекущиеДанные.ЗначенияУсловия.ЗагрузитьЗначения(РезультатФормы);
	КонецЕсли;
	ТекущиеДанные.ПредставлениеЗначенияУсловия = 
		ПолучитьПредставлениеСпискаЗначенийДляУсловия(ТекущийВидУсловия, ТекущиеДанные.ЗначенияУсловия);	
	
КонецПроцедуры

&НаКлиенте
Процедура ЗначенияУсловияНачалоВыбораПродолжениеПослеВводаПроектов(РезультатФормы, Параметры) Экспорт
	
	Если ТипЗнч(РезультатФормы) <> Тип("Структура") Тогда
		Возврат;
	КонецЕсли;
	ТекущиеДанные = Элементы.УсловияПоискаПисем.ТекущиеДанные;
	ТекущиеДанные.ПредставлениеЗначенияУсловия = 
		ПолучитьПредставлениеСпискаЗначенийДляУсловия(ТекущийВидУсловия, РезультатФормы.Список);
	ТекущиеДанные.ЗначенияУсловия.Очистить();
	Для Каждого ЗначениеСписка Из РезультатФормы.Список Цикл
		ТекущиеДанные.ЗначенияУсловия.Добавить(ЗначениеСписка.Значение);	
	КонецЦикла;
	
КонецПроцедуры
	
&НаКлиенте
Процедура ЗначенияУсловияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ТекущиеДанные = Элементы.УсловияПоискаПисем.ТекущиеДанные;
	
	Если ТекущийВидУсловия = ПредопределенноеЗначение("Перечисление.ВидыУсловийПоискаПисем.ТемаСодержитУказанныеСлова")
		ИЛИ ТекущийВидУсловия = ПредопределенноеЗначение("Перечисление.ВидыУсловийПоискаПисем.КомментарийСодержитСлова") Тогда
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("СписокЗначений", ТекущиеДанные.ЗначенияУсловия);
		Если ТекущийВидУсловия = ПредопределенноеЗначение("Перечисление.ВидыУсловийПоискаПисем.ТемаСодержитУказанныеСлова") Тогда
			ПараметрыФормы.Вставить("Поле", НСтр("ru = 'Тема'; en = 'Subject'"));
		Иначе
			ПараметрыФормы.Вставить("Поле", НСтр("ru = 'Комментарий'; en = 'Comment'"));
		КонецЕсли;
		ОписаниеОповещения = Новый ОписаниеОповещения(
			"ЗначенияУсловияНачалоВыбораПродолжениеПослеВводаТекста",
			ЭтотОбъект);
		ОткрытьФорму(
			"Обработка.ПоискПисемПоРеквизитам.Форма.ПоискТекста",
			ПараметрыФормы,,,,,
			ОписаниеОповещения,
			РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
				
	ИначеЕсли ТекущийВидУсловия = ПредопределенноеЗначение("Перечисление.ВидыУсловийПоискаПисем.ПолученоОт")
		ИЛИ ТекущийВидУсловия = ПредопределенноеЗначение("Перечисление.ВидыУсловийПоискаПисем.Кому")
		ИЛИ ТекущийВидУсловия = ПредопределенноеЗначение("Перечисление.ВидыУсловийПоискаПисем.ПерепискаС") Тогда
		
		ПараметрыФормы = Новый Структура;
		Если ТекущийВидУсловия = ПредопределенноеЗначение("Перечисление.ВидыУсловийПоискаПисем.ПолученоОт") Тогда
			ПараметрыФормы.Вставить("Заголовок", НСтр("ru = 'Выбор отправителей письма'; en = 'Selection of email senders'"));
		ИначеЕсли ТекущийВидУсловия = ПредопределенноеЗначение("Перечисление.ВидыУсловийПоискаПисем.Кому") Тогда
			ПараметрыФормы.Вставить("Заголовок", НСтр("ru = 'Выбор получателей письма'; en = 'Selection of email recipients'"));			
		КонецЕсли;
		ПараметрыФормы.Вставить("СписокЗначений", ТекущиеДанные.ЗначенияУсловия);
		ПараметрыФормы.Вставить(
			"СписокПредставлений", 
			СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ТекущиеДанные.ПредставлениеЗначенияУсловия, ";"));
			
		ОписаниеОповещения = Новый ОписаниеОповещения(
			"ЗначенияУсловияНачалоВыбораПродолжениеПослеВводаАдресов",
			ЭтотОбъект);
		ОткрытьФорму(
			"Обработка.ПоискПисемПоРеквизитам.Форма.ВводАдресов", 
			ПараметрыФормы,,,,,
			ОписаниеОповещения,
			РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
	ИначеЕсли ТекущийВидУсловия = ПредопределенноеЗначение("Перечисление.ВидыУсловийПоискаПисем.ЗаПериод") Тогда
		
		Если ТекущиеДанные.ЗначенияУсловия.Количество() = 0 Тогда
			ТекущиеДанные.ЗначенияУсловия.Добавить(Дата(1,1,1));
			ТекущиеДанные.ЗначенияУсловия.Добавить(Дата(1,1,1));
		Конецесли;
		
		ПараметрыФормы = Новый Структура("СписокЗначений", ТекущиеДанные.ЗначенияУсловия);
		ОпсианиеОповещения = Новый ОписаниеОповещения(
			"ЗначенияУсловияНачалоВыбораПродолжениеПослеВводаДат",
			ЭтотОбъект);
		ОткрытьФорму(
			"Обработка.ПоискПисемПоРеквизитам.Форма.ПоискДат", 
			ПараметрыФормы,,,,,
			ОписаниеОповещения,
			РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);		
				
	ИначеЕсли ТекущийВидУсловия = ПредопределенноеЗначение("Перечисление.ВидыУсловийПоискаПисем.ИмеетВажность") 
		ИЛИ ТекущийВидУсловия = ПредопределенноеЗначение("Перечисление.ВидыУсловийПоискаПисем.ОтмеченоФлагом") Тогда
		
		ПараметрыФормы = Новый Структура;
		Если ТекущийВидУсловия = ПредопределенноеЗначение("Перечисление.ВидыУсловийПоискаПисем.ИмеетВажность") Тогда
			ПараметрыФормы.Вставить("ИмяПеречисления", "ВажностьПисем");
			ПараметрыФормы.Вставить("ЗаголовокФормы", НСтр("ru = 'Выбор важности писем'; en = 'Selection of email importance'"));
		ИначеЕсли ТекущийВидУсловия = ПредопределенноеЗначение("Перечисление.ВидыУсловийПоискаПисем.ОтмеченоФлагом") Тогда
			ПараметрыФормы.Вставить("ИмяПеречисления", "ФлагиОбъектов");
			ПараметрыФормы.Вставить("ЗаголовокФормы", НСтр("ru = 'Выбор флагов писем'; en = 'Selection of email flags'"));
		КонецЕсли;
		ПараметрыФормы.Вставить("ОтмеченныеЗначения", ТекущиеДанные.ЗначенияУсловия.ВыгрузитьЗначения());
		ОписаниеОповещения = Новый ОписаниеОповещения(
			"ЗначенияУсловияНачалоВыбораПродолжениеПослеВводаПеречисления",
			ЭтотОбъект);
		ОткрытьФорму(
			"Обработка.ПоискПисемПоРеквизитам.Форма.ПоискПоПеречислению",
			ПараметрыФормы,,,,,
			ОписаниеОповещения,
			РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
			
	ИначеЕсли ТекущийВидУсловия = ПредопределенноеЗначение("Перечисление.ВидыУсловийПоискаПисем.ХранитсяВПапке") Тогда
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("ОтмеченныеЗначения", ТекущиеДанные.ЗначенияУсловия.ВыгрузитьЗначения());
		ОписаниеОповещения = Новый ОписаниеОповещения(
			"ЗначенияУсловияНачалоВыбораПродолжениеПослеВводаПапокИУчетныхЗаписей",
			ЭтотОбъект);
		ОткрытьФорму(
			"Обработка.ПоискПисемПоРеквизитам.Форма.ПодборПапок",
			ПараметрыФормы,,,,,
			ОписаниеОповещения,
			РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
	ИначеЕсли ТекущийВидУсловия = ПредопределенноеЗначение("Перечисление.ВидыУсловийПоискаПисем.ОтноситсяКУчетнойЗаписи") Тогда
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("ОтмеченныеЗначения", ТекущиеДанные.ЗначенияУсловия.ВыгрузитьЗначения());
		ОписаниеОповещения = Новый ОписаниеОповещения(
			"ЗначенияУсловияНачалоВыбораПродолжениеПослеВводаПапокИУчетныхЗаписей",
			ЭтотОбъект);
		ОткрытьФорму(
			"Обработка.ПоискПисемПоРеквизитам.Форма.ПодборУчетныхЗаписей",
			ПараметрыФормы,,,,,
			ОписаниеОповещения,
			РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
			
	ИначеЕсли ТекущийВидУсловия = ПредопределенноеЗначение("Перечисление.ВидыУсловийПоискаПисем.ОтноситсяКПроекту") Тогда
		
		МассивВыбранные = Новый Массив;
		Для Каждого ЭлементСписка Из ТекущиеДанные.ЗначенияУсловия Цикл
			МассивВыбранные.Добавить(ЭлементСписка.Значение);
		КонецЦикла;
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("СписокЗначений", ТекущиеДанные.ЗначенияУсловия);
		ПараметрыФормы.Вставить("ТипСправочника", "Проекты");
		ПараметрыФормы.Вставить("ЗаголовокФормы", НСтр("ru = 'Выбор проектов'; en = 'Selection of projects'"));
		ОписаниеОповещения = Новый ОписаниеОповещения(
			"ЗначенияУсловияНачалоВыбораПродолжениеПослеВводаПроектов",
			ЭтотОбъект);
		ОткрытьФорму(
			"Обработка.ПоискПисемПоРеквизитам.Форма.ПоискПоСправочнику", 
			ПараметрыФормы, 
			ЭтаФорма,,,,
			ОписаниеОповещения,
			РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
					
	КонецЕсли;
		
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ПолучитьПредставлениеСпискаЗначенийДляУсловия(ВидУсловия, СписокЗначений)
	
	Представление = "";
	
	Если СписокЗначений.Количество() = 0 Тогда
		Возврат Представление;
	КонецЕсли;

	Если ВидУсловия = ПредопределенноеЗначение("Перечисление.ВидыУсловийПоискаПисем.ТемаСодержитУказанныеСлова")
		ИЛИ ВидУсловия = ПредопределенноеЗначение("Перечисление.ВидыУсловийПоискаПисем.ТекстСодержитУказанныеСлова")
		ИЛИ ВидУсловия = ПредопределенноеЗначение("Перечисление.ВидыУсловийПоискаПисем.ПолученоОт")
		ИЛИ ВидУсловия = ПредопределенноеЗначение("Перечисление.ВидыУсловийПоискаПисем.Кому")
		ИЛИ ВидУсловия = ПредопределенноеЗначение("Перечисление.ВидыУсловийПоискаПисем.ПерепискаС")
		ИЛИ ВидУсловия = ПредопределенноеЗначение("Перечисление.ВидыУсловийПоискаПисем.ИмеетВажность") 
		ИЛИ ВидУсловия = ПредопределенноеЗначение("Перечисление.ВидыУсловийПоискаПисем.ОтмеченоФлагом")
		ИЛИ ВидУсловия = ПредопределенноеЗначение("Перечисление.ВидыУсловийПоискаПисем.ХранитсяВПапке")
		ИЛИ ВидУсловия = ПредопределенноеЗначение("Перечисление.ВидыУсловийПоискаПисем.ОтноситсяКУчетнойЗаписи")
		ИЛИ ВидУсловия = ПредопределенноеЗначение("Перечисление.ВидыУсловийПоискаПисем.ОтноситсяКПроекту") 
		ИЛИ ВидУсловия = ПредопределенноеЗначение("Перечисление.ВидыУсловийПоискаПисем.КомментарийСодержитСлова") Тогда
		
		Для Каждого ЭлементСписка Из СписокЗначений Цикл
			СтрокаДляДобавления = Строка(ЭлементСписка.Значение);
			Если ЭлементСписка.Значение = "МоиПапки" Тогда
				СтрокаДляДобавления = НСтр("ru = 'Мои папки'; en = 'My folders'");
			ИначеЕсли ЭлементСписка.Значение = "МоиУчетныеЗаписи" Тогда
				СтрокаДляДобавления = НСтр("ru = 'Мои учетные записи'; en = 'My accounts'");
			КонецЕсли;
			Если Не ЗначениеЗаполнено(Представление) Тогда	
				Представление = СтрокаДляДобавления;
			Иначе
				Представление = Представление + ";" + СтрокаДляДобавления;
			КонецЕсли;
		КонецЦикла;
		
	ИначеЕсли ВидУсловия = ПредопределенноеЗначение("Перечисление.ВидыУсловийПоискаПисем.ЗаПериод") Тогда	
		
		Если СписокЗначений.Количество() = 2 Тогда
			ДатаПосле = СписокЗначений[0].Значение;
			ДатаДо = СписокЗначений[1].Значение;
			
			Если ЗначениеЗаполнено(ДатаПосле) Тогда
			Представление = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'С %1'; en = 'From %1'"),
				Формат(ДатаПосле, "ДЛФ=D"));
			Конецесли;
			
			Если ЗначениеЗаполнено(ДатаДо) Тогда
				Если ЗначениеЗаполнено(Представление) Тогда
					Представление = Представление + 
						СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
							НСтр("ru = ' и по %1'; en = ' to %1'"),
							Формат(ДатаДо, "ДЛФ=D"));
				Иначе
					Представление = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						НСтр("ru = 'По %1'; en = 'To %1'"),
						Формат(ДатаДо, "ДЛФ=D"));	
				КонецЕсли;
			Конецесли;
		КонецЕсли;
	ИначеЕсли ВидУсловия = ПредопределенноеЗначение("Перечисление.ВидыУсловийПоискаПисем.СпособОбъединенияУсловий") Тогда
		Представление = "";
		Если СписокЗначений.Количество() > 0 Тогда
			Если СписокЗначений[0].Значение = ПредопределенноеЗначение("Перечисление.ТипыЛогическойСвязи.И") Тогда
				Представление = НСтр("ru = 'По ""И""'; en = 'With ""AND""'");
			ИначеЕсли СписокЗначений[0].Значение = ПредопределенноеЗначение("Перечисление.ТипыЛогическойСвязи.Или") Тогда
				Представление = НСтр("ru = 'По ""Или""'; en = 'With ""OR""'");
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли ВидУсловия = ПредопределенноеЗначение("Перечисление.ВидыУсловийПоискаПисем.ТипПисьма") Тогда
		Представление = "";
		Если СписокЗначений.Количество() > 0 Тогда
			Если СписокЗначений[0].Значение = 0 Тогда
				Представление = НСтр("ru = 'Входящие и исходящие'; en = 'Incoming and outgoing'");
			ИначеЕсли СписокЗначений[0].Значение = 1 Тогда
				Представление = НСтр("ru = 'Только входящие'; en = 'Incoming only'");
			ИначеЕсли СписокЗначений[0].Значение = 2 Тогда	
				Представление = НСтр("ru = 'Только исходящие'; en = 'Only outgoing'");
			КонецЕсли;
		КонецЕсли;	
	Иначе
		Представление = Строка(СписокЗначений[0].Значение);
	КонецЕсли;

	Возврат Представление;
	
КонецФункции

&НаКлиенте
Процедура ЗначенияУсловияОчистка(Элемент, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.УсловияПоискаПисем.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные.ЗначенияУсловия.Очистить();
	ТекущиеДанные.ПредставлениеЗначенияУсловия = "";
	
	ТекущийВидУсловия = ТекущиеДанные.ВидУсловия;
	
	ЗначениеЗаполненоОтКогоКому = Ложь;
	ЗначениеЗаполненоПерепискаС = Ложь;
	Если ЗначениеЗаполнено(ТекущиеДанные.ПредставлениеЗначенияУсловия) Тогда
		Если ТекущийВидУсловия = ПредопределенноеЗначение("Перечисление.ВидыУсловийПоискаПисем.ПерепискаС") Тогда
			ЗначениеЗаполненоПерепискаС = Истина;
		КонецЕсли;
		Если ТекущийВидУсловия = ПредопределенноеЗначение("Перечисление.ВидыУсловийПоискаПисем.ПолученоОт")
			ИЛИ ТекущийВидУсловия = ПредопределенноеЗначение("Перечисление.ВидыУсловийПоискаПисем.Кому") Тогда
			ЗначениеЗаполненоОтКогоКому = Истина;
		КонецЕсли;
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ЗначенияУсловияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.УсловияПоискаПисем.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТекущиеДанные.ВидУсловия = ПредопределенноеЗначение("Перечисление.ВидыУсловийПоискаПисем.ПолученоОт") 
		ИЛИ ТекущиеДанные.ВидУсловия = ПредопределенноеЗначение("Перечисление.ВидыУсловийПоискаПисем.Кому")
		ИЛИ ТекущиеДанные.ВидУсловия = ПредопределенноеЗначение("Перечисление.ВидыУсловийПоискаПисем.ПерепискаС") Тогда
		
		СтандартнаяОбработка = Ложь;
		
		Если ТипЗнч(ВыбранноеЗначение) = Тип("Структура") Тогда
			
			ТекущиеДанные.ЗначенияУсловия.Очистить();
			Если ЗначениеЗаполнено(ВыбранноеЗначение.Контакт) Тогда
				ТекущиеДанные.ЗначенияУсловия.Добавить(ВыбранноеЗначение.Контакт);
			Иначе
				ТекущиеДанные.ЗначенияУсловия.Добавить(ВыбранноеЗначение.Адресат);
			КонецЕсли;
			ТекущиеДанные.ПредставлениеЗначенияУсловия = ВыбранноеЗначение.Представление;
				
		КонецЕсли;
		
		ЗначениеЗаполненоОтКогоКому = Ложь;
		ЗначениеЗаполненоПерепискаС = Ложь;
		Если ЗначениеЗаполнено(ТекущиеДанные.ПредставлениеЗначенияУсловия) Тогда
			Если ТекущийВидУсловия = ПредопределенноеЗначение("Перечисление.ВидыУсловийПоискаПисем.ПерепискаС") Тогда
				ЗначениеЗаполненоПерепискаС = Истина;
			КонецЕсли;
			Если ТекущийВидУсловия = ПредопределенноеЗначение("Перечисление.ВидыУсловийПоискаПисем.ПолученоОт")
				ИЛИ ТекущийВидУсловия = ПредопределенноеЗначение("Перечисление.ВидыУсловийПоискаПисем.Кому") Тогда
				ЗначениеЗаполненоОтКогоКому = Истина;
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗначенияУсловияАвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка)
	
	#Если ВебКлиент Тогда
		Возврат;
	#КонецЕсли
	
	ТекущиеДанные = Элементы.УсловияПоискаПисем.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Или ПустаяСтрока(Текст) Тогда
		Возврат;
	КонецЕсли;
	
	ЭтоВебКлиент = Ложь;
	#Если ВебКлиент Тогда
		ЭтоВебКлиент = Истина;
	#КонецЕсли
	
	Если ТекущиеДанные.ВидУсловия = 
			ПредопределенноеЗначение("Перечисление.ВидыУсловийПоискаПисем.ПолученоОт") 
		ИЛИ ТекущиеДанные.ВидУсловия = 
			ПредопределенноеЗначение("Перечисление.ВидыУсловийПоискаПисем.Кому")
		ИЛИ ТекущиеДанные.ВидУсловия = 
			ПредопределенноеЗначение("Перечисление.ВидыУсловийПоискаПисем.ПерепискаС")Тогда	 
		
		Если СтрДлина(Текст) < 2 Тогда
			Возврат;
		КонецЕсли;
		ДанныеВыбора = ВстроеннаяПочтаСервер.ПолучитьДанныеВыбораДляЭлектронногоПисьма(Текст, 
			ТекущийПользователь, 
			ЭтоВебКлиент);
			
		ВстроеннаяПочтаКлиент.ЗаполнитьКартинкиВСпискеВыбора(ДанныеВыбора);		
		
		Если ДанныеВыбора.Количество() <> 0 Тогда
			СтандартнаяОбработка = Ложь;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ТаблицаУсловий = РеквизитФормыВЗначение("УсловияПоискаПисем");
	ТекущийОбъект.НастройкаОтбора = Новый ХранилищеЗначения(ТаблицаУсловий);

КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Если ЭтоНовыйОбъект Тогда
		Оповестить("СозданиеПапкиПоиска", Объект.Ссылка);
	Иначе
		Оповестить("ЗаписьПапкиПоиска", Объект.Ссылка);
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если Не ПоискПисемПоРеквизитамКлиент.ПроверитьЗаполнениеОбязательныхУсловийДляПапкиПоиска(УсловияПоискаПисем) Тогда
		Текст = НСтр("ru = 'Для сохранения папки поиска необходимо заполнить условие ""Папка"" или ""Учетная запись"".'; en = 'In order to save the search folder, you must fill in the ""Folder"" or ""Account"" condition.'");
		Для Каждого Строка Из УсловияПоискаПисем Цикл
			Если Строка.ВидУсловия = ПредопределенноеЗначение("Перечисление.ВидыУсловийПоискаПисем.ХранитсяВПапке") Тогда
				Индекс = УсловияПоискаПисем.Индекс(Строка);
				ИмяРеквизита = "УсловияПоискаПисем[" + Строка(Индекс) + "].ПредставлениеЗначенияУсловия";
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Текст,, ИмяРеквизита);
				Возврат;	
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	ЭтоНовыйОбъект = Объект.Ссылка.Пустая();
	
КонецПроцедуры

