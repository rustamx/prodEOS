
Процедура ПриКопировании(ОбъектКопирования)
	
	ТаблицаУсловий = Новый ТаблицаЗначений;
	Массив = Новый Массив;
	Массив.Добавить(Тип("ПеречислениеСсылка.ВидыУсловийПоискаПисем"));	
	НоваяКолонка = ТаблицаУсловий.Колонки.Добавить("ВидУсловия", Новый ОписаниеТипов(Массив));
	Массив = Новый Массив;
	Массив.Добавить(Тип("Строка"));	
	НоваяКолонка = ТаблицаУсловий.Колонки.Добавить("ПредставлениеЗначенияУсловия", Новый ОписаниеТипов(Массив));
	Массив = Новый Массив;
	Массив.Добавить(Тип("СписокЗначений"));	
	НоваяКолонка = ТаблицаУсловий.Колонки.Добавить("ЗначенияУсловия", Новый ОписаниеТипов(Массив));
	
	Ответственный = ОбъектКопирования.Ответственный;
	КоличествоОбъектов = 0;
	
	УсловияОбъектаКопирования = ОбъектКопирования.НастройкаОтбора.Получить();
	Для Каждого Строка Из УсловияОбъектаКопирования Цикл
		НоваяСтрока = ТаблицаУсловий.Добавить();
		ЗаполнитьЗначенияСвойств(ТаблицаУсловий.Добавить(), Строка);
		НоваяСтрока.ПредставлениеЗначенияУсловия = 
			ПолучитьПредставлениеСпискаЗначенийДляУсловия(
			НоваяСтрока.ВидУсловия, НоваяСтрока.ЗначенияУсловия);
	КонецЦикла;
	
	НастройкаОтбора = Новый ХранилищеЗначения(ТаблицаУсловий);
	
КонецПроцедуры

Функция ПолучитьПредставлениеСпискаЗначенийДляУсловия(ВидУсловия, СписокЗначений)
	
	Представление = "";
	
	Если СписокЗначений.Количество() = 0 Тогда
		Возврат Представление;
	КонецЕсли;

	Если ВидУсловия = ПредопределенноеЗначение("Перечисление.ВидыУсловийПоискаПисем.ТемаСодержитУказанныеСлова")
		ИЛИ ВидУсловия = ПредопределенноеЗначение("Перечисление.ВидыУсловийПоискаПисем.ТекстСодержитУказанныеСлова")
		ИЛИ ВидУсловия = ПредопределенноеЗначение("Перечисление.ВидыУсловийПоискаПисем.ПерепискаС")
		ИЛИ ВидУсловия = ПредопределенноеЗначение("Перечисление.ВидыУсловийПоискаПисем.ПолученоОт")
		ИЛИ ВидУсловия = ПредопределенноеЗначение("Перечисление.ВидыУсловийПоискаПисем.Кому")
		ИЛИ ВидУсловия = ПредопределенноеЗначение("Перечисление.ВидыУсловийПоискаПисем.ИмеетВажность") 
		ИЛИ ВидУсловия = ПредопределенноеЗначение("Перечисление.ВидыУсловийПоискаПисем.ОтмеченоФлагом")
		ИЛИ ВидУсловия = ПредопределенноеЗначение("Перечисление.ВидыУсловийПоискаПисем.ХранитсяВПапке")
		ИЛИ ВидУсловия = ПредопределенноеЗначение("Перечисление.ВидыУсловийПоискаПисем.ОтноситсяКУчетнойЗаписи")
		ИЛИ ВидУсловия = ПредопределенноеЗначение("Перечисление.ВидыУсловийПоискаПисем.ОтноситсяКПроекту") 
		ИЛИ ВидУсловия = ПредопределенноеЗначение("Перечисление.ВидыУсловийПоискаПисем.КомментарийСодержитСлова") Тогда
		
		Для Каждого ЭлементСписка Из СписокЗначений Цикл
			Если Не ЗначениеЗаполнено(Представление) Тогда
				Представление = Строка(ЭлементСписка.Значение);
			Иначе
				Представление = Представление + ";" + Строка(ЭлементСписка.Значение);
			КонецЕсли;
		КонецЦикла;
		
	ИначеЕсли ВидУсловия = ПредопределенноеЗначение("Перечисление.ВидыУсловийПоискаПисем.ЗаПериод") Тогда	
		
		Если СписокЗначений.Количество() = 2 Тогда
			ДатаПосле = СписокЗначений[0].Значение;
			ДатаДо = СписокЗначений[1].Значение;
			
			Если ЗначениеЗаполнено(ДатаПосле) Тогда
			Представление = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'С %1'; en = 'From %1'"),
				Формат(ДатаПосле, "ДЛФ=D"));
			Конецесли;
			
			Если ЗначениеЗаполнено(ДатаДо) Тогда
				Если ЗначениеЗаполнено(Представление) Тогда
					Представление = Представление + 
						СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
							НСтр("ru = ' и по %1'; en = ' to %1'"),
							Формат(ДатаДо, "ДЛФ=D"));
				Иначе
					Представление = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						НСтр("ru = 'По %1'; en = 'To %1'"),
						Формат(ДатаДо, "ДЛФ=D"));	
				КонецЕсли;
			Конецесли;
		КонецЕсли;
	Иначе
		Представление = Строка(СписокЗначений[0].Значение);
	КонецЕсли;

	Возврат Представление;
	
КонецФункции

