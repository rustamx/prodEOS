
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Ссылка = Параметры.Ссылка;
	Комментарий = Параметры.Комментарий;
	ПредставлениеУсловия = Параметры.ПредставлениеУсловия;
	Наименование = Параметры.Наименование;
	ПометкаУдаления = Параметры.ПометкаУдаления;
	ГруппаТомов = Параметры.ГруппаТомов;
	Порядок = Параметры.Порядок;
	НавигационнаяСсылкаНаУсловие = Параметры.НавигационнаяСсылкаНаУсловие;
	УникальныйИдентификаторФормыРодителя = Параметры.УникальныйИдентификаторФормыРодителя;
	Ответственный = Параметры.Ответственный;
	ПоУмолчанию = Параметры.ПоУмолчанию;
	ЕстьПравилоПоУмолчанию = Параметры.ЕстьПравилоПоУмолчанию;
	
	Если Не ЗначениеЗаполнено(Ответственный) Тогда
		Ответственный = Пользователи.ТекущийПользователь();
	КонецЕсли;	
	
	ЗаполнитьПоляКомпоновки();
	
	Элементы.КомпоновщикНастройкиОтбор.Видимость = Не ПоУмолчанию;
	
	Если ЗначениеЗаполнено(Ссылка) Тогда
		Заголовок = Строка(Ссылка) + НСтр("ru=' (Правило)'; en = ' (Rule)'");
	Иначе	
		Заголовок = НСтр("ru='Правило (Создание)'; en = 'Rule (create)'");
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоляКомпоновки()
	
	Настройки = Неопределено;
	Если ЗначениеЗаполнено(НавигационнаяСсылкаНаУсловие) Тогда
		Хранилище = ПолучитьИзВременногоХранилища(НавигационнаяСсылкаНаУсловие);
		Настройки = Хранилище.Получить();
	КонецЕсли;
	СхемаКомпоновкиДанных = Справочники.ПравилаРазмещенияФайловВТомах.ПолучитьМакет("Версии");
	Если Настройки = Неопределено Тогда
		Настройки = СхемаКомпоновкиДанных.НастройкиПоУмолчанию;
	КонецЕсли;

	АдресСхемы = ПоместитьВоВременноеХранилище(СхемаКомпоновкиДанных, Новый УникальныйИдентификатор());
	ИсточникНастроек = Новый ИсточникДоступныхНастроекКомпоновкиДанных(АдресСхемы);
	Компоновщик.Инициализировать(ИсточникНастроек);
	Компоновщик.ЗагрузитьНастройки(Настройки);
	
КонецПроцедуры

&НаСервере
Функция ПоместитьКомпоновщикВоВременноеХранилище()
	
	ПредставлениеУсловия = Строка(Компоновщик.Настройки.Отбор);
	
	БезУсловий = (Компоновщик.Настройки.Отбор.Элементы.Количество() = 0);
	
	НастройкаУсловия = Новый ХранилищеЗначения(Компоновщик.ПолучитьНастройки());
	АдресХранилища = ПоместитьВоВременноеХранилище(НастройкаУсловия, УникальныйИдентификаторФормыРодителя);
	Возврат АдресХранилища;
	
КонецФункции

&НаКлиенте
Процедура ОК(Команда)
	ВыполнитьЗаписьИЗакрыть();
КонецПроцедуры

&НаКлиенте
Функция ВыполнитьЗаписьИЗакрыть()
	
	ОчиститьСообщения();
	
	Если Не ПроверитьЗаполнение() Тогда
		Возврат Ложь;
	КонецЕсли;	
	
	Если ЕстьПравилоПоУмолчанию И ПоУмолчанию Тогда
		ТекстОшибки = НСтр("ru = 'Правило ""по умолчанию"" может быть только одно.'; en = 'There can be only one ""default""  rule.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, , "ПоУмолчанию");
		Возврат Ложь;
	КонецЕсли;		
	
	НавигационнаяСсылкаНаУсловие = ПоместитьКомпоновщикВоВременноеХранилище();
	
	Если Не ПоУмолчанию И БезУсловий Тогда
		ТекстОшибки = НСтр("ru = 'Не указаны условия.'; en = 'Conditions are not specified.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, , "Компоновщик.Настройки.Отбор");
		Возврат Ложь;
	КонецЕсли;		
	
	СтруктураВозврата = Новый Структура("Ссылка, Комментарий, Наименование, ПредставлениеУсловия, ПометкаУдаления, ГруппаТомов, Порядок, НавигационнаяСсылкаНаУсловие, УникальныйИдентификаторФормыРодителя, Ответственный, ПоУмолчанию",
		Ссылка, Комментарий, Наименование, ПредставлениеУсловия, 
		ПометкаУдаления, ГруппаТомов, Порядок, 
		НавигационнаяСсылкаНаУсловие, 
		УникальныйИдентификаторФормыРодителя,
		Ответственный,
		ПоУмолчанию);
		
	Модифицированность = Ложь;
		
	Закрыть(СтруктураВозврата);	
	Возврат Истина;
	
КонецФункции

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если ОбщегоНазначенияДокументооборотКлиент.ПередЗакрытием(
		Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка, Модифицированность) Тогда
		Возврат;
	КонецЕсли;
	
	Если Модифицированность Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения(
			"ПередЗакрытиемПродолжение",
			ЭтотОбъект);
		ПоказатьВопрос(
			ОписаниеОповещения,
			НСтр("ru = 'Правило было изменено. Сохранить изменения?'; en = 'The rule was changed. Save changes?'"), 
			РежимДиалогаВопрос.ДаНетОтмена);
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытиемПродолжение(КодВозврата, Параметры) Экспорт
	
	Если КодВозврата = КодВозвратаДиалога.Нет Тогда
		Модифицированность = Ложь;
		Закрыть();
		Возврат;
	КонецЕсли;
	
	Если КодВозврата <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	ВыполнитьЗаписьИЗакрыть();
	
КонецПроцедуры

&НаСервере
Функция ПоместитьКомпоновщикВХранилищеЗначения(НетУсловий)
	
	НетУсловий = Ложь;
	ПредставлениеУсловия = Строка(Компоновщик.Настройки.Отбор);
	
	Если Компоновщик.Настройки.Отбор.Элементы.Количество() = 0 Тогда
		НетУсловий = Истина;
	КонецЕсли;
	
	НастройкаУсловия = Новый ХранилищеЗначения(Компоновщик.ПолучитьНастройки());
	Возврат НастройкаУсловия;
	
КонецФункции

&НаКлиенте
Процедура ПроверитьУсловие(Команда)
	
	НетУсловий = Ложь;
	НастройкаУсловия = ПоместитьКомпоновщикВХранилищеЗначения(НетУсловий);
	
	Если НетУсловий Тогда
		ПоказатьПредупреждение(,НСтр("ru='Нет условий отбора.'; en = 'There is no criteria.'"));
		Возврат;
	КонецЕсли;	
	
	ПараметрыФормы = Новый Структура("НастройкаУсловия", НастройкаУсловия);
	ОткрытьФорму(
		"Справочник.ПравилаРазмещенияФайловВТомах.Форма.ПроверкаПравила", 
		ПараметрыФормы, 
		ЭтаФорма,,,,,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоУмолчаниюПриИзменении(Элемент)
	Элементы.КомпоновщикНастройкиОтбор.Видимость = Не ПоУмолчанию;
КонецПроцедуры


