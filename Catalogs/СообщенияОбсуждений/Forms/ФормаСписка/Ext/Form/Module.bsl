#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ТекущееСообщениеПрочтено = Истина;
	Список.Параметры.УстановитьЗначениеПараметра("Пользователь", Пользователи.ТекущийПользователь());
	
	// Отображение удаленных
	ПереключитьОтображатьУдаленные();
	
	// Отображение области чтения
	ОбновитьОтображениеОбластиЧтенияСервер();
	
	// Прочтение
	ИспользоватьАвтоматическоеПрочтение =
		ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
			"НастройкиПрочтения",
			"ПомечатьСообщенияФорумаКакПрочтенныеПриПрочтенныеПриПросмотреВОбластиЧтения",
			Ложь);
	
	ШрифтОбластиЧтения = РаботаСОбсуждениями.ПолучитьПерсональнуюНастройку("ШрифтОбластиЧтения");
	УстановитьШрифтОбластиЧтения(Ложь);
	
	// Автообновление
	Если ОбщегоНазначенияДокументооборот.ПриложениеЯвляетсяВебКлиентом() Тогда
		Элементы.СписокКонтекстноеМенюНастроитьАвтообновлениеСпискаСообщений.Видимость = Ложь;
	Иначе
		Автообновление.ЗагрузитьНастройкиАвтообновленияСписка(ЭтаФорма, "Список");
		Элементы.СписокКонтекстноеМенюНастроитьАвтообновлениеСпискаСообщений.Видимость = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	Если ОбщегоНазначенияДокументооборотКлиент.ПриЗакрытии(ЗавершениеРаботы) Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТекущееСообщение)
		И Не ТекущееСообщениеПрочтено 
		И ИспользоватьАвтоматическоеПрочтение 
		И ОбластьЧтенияВключена Тогда
		ОповеститьОПрочтении = УстановитьПрочтение(ТекущееСообщение);
		РаботаСПрочтениямиКлиент.ОповеститьОПрочтении(ТекущееСообщение, ОповеститьОПрочтении);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если РаботаСПрочтениямиКлиент.ПроверитьНеобходимостьОбновления(
			ИмяСобытия, Параметр, "Обсуждения") Тогда
		Элементы.Список.Обновить();
	КонецЕсли;
	
	Если ИмяСобытия = "Изменение_ТемыОбсуждений" Тогда
		Элементы.Список.Обновить();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	// Отображение удаленных
	Если ОтображатьУдаленные Тогда
		ПереключитьОтображатьУдаленные();
	КонецЕсли;
	
	// Отображать только непрочтенные
	Если ТолькоНепрочтенные Тогда
		ПереключитьТолькоНепрочтенные();
	КонецЕсли;
	
	// Отображение области чтения
	Если ОтображениеОбластиЧтения <> Перечисления.ВариантыОтображенияОбластиЧтения.НеОтображать Тогда
		ОбновитьОтображениеОбластиЧтенияСервер();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ТекущееСообщениеТекстОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя = "Родитель" Тогда
		
		СтандартнаяОбработка = Ложь;
		Элементы.Список.ТекущаяСтрока = Элементы.Список.ТекущиеДанные.Родитель;
		
	ИначеЕсли Поле.Имя = "КартинкаОтветить" Или Поле.Имя = "ГиперссылкаОтветить" Тогда
		
		СтандартнаяОбработка = Ложь;
		
		ОтветитьНаСообщение();
		
	ИначеЕсли Поле.Имя = "КартинкаФайлы" Или Поле.Имя = "ГиперссылкаФайлы" Тогда
		
		СтандартнаяОбработка = Ложь;
		
		ПараметрыФормы = Новый Структура("Ключ, ДействиеПриОткрытии", ВыбраннаяСтрока, "ОткрытьФайлы");
		ОткрытьФорму("Справочник.СообщенияОбсуждений.Форма.ФормаЭлемента", 
			ПараметрыФормы,
			ЭтаФорма);
		
	ИначеЕсли Поле.Имя = "КартинкаГолосование" Или Поле.Имя = "ГиперссылкаГолосование" Тогда
		
		СтандартнаяОбработка = Ложь;
		
		ПараметрыФормы = Новый Структура("Ключ, ДействиеПриОткрытии", ВыбраннаяСтрока, "ОткрытьГолосование");
		ОткрытьФорму("Справочник.СообщенияОбсуждений.Форма.ФормаЭлемента", 
			ПараметрыФормы,
			ЭтаФорма);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	Если Элементы.Список.ТекущаяСтрока <> Неопределено Тогда
		ПодключитьОбработчикОжидания("ОбработкаОжиданияПрочтения", 0.2, Истина);
	Иначе
		ОчиститьТекущееСообщение();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	
	ОтветитьНаСообщение();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура НастроитьАвтообновлениеСпискаСообщений(Команда)
	
	АвтообновлениеКлиент.УстановитьПараметрыАвтообновленияСписка(ЭтаФорма, "Список");
	
КонецПроцедуры

&НаКлиенте
Процедура ОбластьЧтенияВыбратьШрифт(Команда)
	
	ДиалогВыбораШрифтаОбластиЧтения = Новый ДиалогВыбораШрифта;
	ДиалогВыбораШрифтаОбластиЧтения.Шрифт = ШрифтОбластиЧтения;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбластьЧтенияВыбратьШрифтЗавершение", ЭтотОбъект);
	
	ДиалогВыбораШрифтаОбластиЧтения.Показать(ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбластьЧтенияВыбратьШрифтЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ШрифтОбластиЧтения = Результат;
	УстановитьШрифтОбластиЧтения(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбластьЧтенияОтключена(Команда)
	
	ОтображениеОбластиЧтения = ПредопределенноеЗначение("Перечисление.ВариантыОтображенияОбластиЧтения.НеОтображать");
	ОбновитьОтображениеОбластиЧтенияСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбластьЧтенияСнизу(Команда)
	
	ОтображениеОбластиЧтения = ПредопределенноеЗначение("Перечисление.ВариантыОтображенияОбластиЧтения.Внизу");
	ОбновитьОтображениеОбластиЧтенияСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбластьЧтенияСправа(Команда)
	
	ОтображениеОбластиЧтения = ПредопределенноеЗначение("Перечисление.ВариантыОтображенияОбластиЧтения.Справа");
	ОбновитьОтображениеОбластиЧтенияСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьОтветыНаСообщение(Команда)
	
	Если Не ПоказаныОтветыНаСообщение Тогда
		
		Если (Элементы.Список.ТекущаяСтрока = Неопределено
			Или ТипЗнч(Элементы.Список.ТекущаяСтрока) <> Тип("СправочникСсылка.СообщенияОбсуждений"))Тогда
			Возврат;
		КонецЕсли;
		
		ПоказаныОтветыНаСообщение = Истина;
		ВОтветНа = Элементы.Список.ТекущиеДанные.Ссылка;
		
	Иначе
		
		ПоказаныОтветыНаСообщение = Ложь;
		ВОтветНа = "";
		
	КонецЕсли;
	
	ПереключитьОтветыНаСообщение();
	
КонецПроцедуры

&НаКлиенте
Процедура ПометитьКакПрочтенные(Команда)
	
	Сообщения = ПолучитьВыбранныеСообщения(Истина);
	КоличествоСообщений = Сообщения.Количество();
	Если Сообщения.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ЧислоПрочтенных = 0;
	ВыделенныеСтроки = Элементы.Список.ВыделенныеСтроки;
	Для каждого Ссылка Из ВыделенныеСтроки Цикл
		
		Если ТипЗнч(Ссылка) = Тип("СправочникСсылка.СообщенияОбсуждений") Тогда
			
			Прочтен = Элементы.Список.ДанныеСтроки(Ссылка).Прочтен;
			
			Если Прочтен Тогда
				
				ЧислоПрочтенных = ЧислоПрочтенных + 1;
				
			КонецЕсли;	
			
		КонецЕсли;
		
	КонецЦикла;
	
	ПоставитьПометкуПрочтения = Истина;
	
	Если КоличествоСообщений = ЧислоПрочтенных Тогда
		ПоставитьПометкуПрочтения = Ложь;
	Иначе
		ПоставитьПометкуПрочтения = Истина;
	КонецЕсли;	
	
	Если КоличествоСообщений > 1 Тогда
		Если ПоставитьПометкуПрочтения Тогда
			Состояние(НСтр("ru = 'Сообщения помечаются как прочтенные. Пожалуйста подождите...'; en = 'Messages are being marked as read. Please wait...'"));
		Иначе
			Состояние(НСтр("ru = 'Снимается пометка прочтенности. Пожалуйста подождите...'; en = 'Unmarking as read. Please wait...'"));
		КонецЕсли;	
	КонецЕсли;
	
	ОповеститьОПрочтении = УстановитьПрочтение(Сообщения, ПоставитьПометкуПрочтения);
	
	РаботаСПрочтениямиКлиент.ОповеститьОПрочтении(Сообщения, ОповеститьОПрочтении);
	Если КоличествоСообщений > 1 Тогда
		
		Если ПоставитьПометкуПрочтения Тогда
			ТекстСостояния = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Сообщения помечены как прочтенные (%1)'; en = 'Messages (%1) have been marked as read'"),
				КоличествоСообщений);
		Иначе
			ТекстСостояния = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Сняты пометки прочтенности сообщений (%1)'; en = 'Messages (%1) has been unmarked as read'"),
				КоличествоСообщений);
		КонецЕсли;
			
		Состояние(ТекстСостояния);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТолькоНепрочтенные(Команда)
	
	ТолькоНепрочтенные = Не ТолькоНепрочтенные;
	ПереключитьТолькоНепрочтенные();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтображатьУдаленные(Команда)
	
	ОтображатьУдаленные = Не ОтображатьУдаленные;
	ПереключитьОтображатьУдаленные();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы_Отправить

&НаКлиенте
Процедура ПроцессИсполнение(Команда)
	
	ОткрытьПомощникСозданияОсновныхПроцессов("Исполнение");
	
КонецПроцедуры

&НаКлиенте
Процедура ПроцессОзнакомление(Команда)
	
	ОткрытьПомощникСозданияОсновныхПроцессов("Ознакомление");
	
КонецПроцедуры

&НаКлиенте
Процедура ПроцессОбработка(Команда)
	
	ОткрытьПомощникСозданияОсновныхПроцессов("КомплексныйПроцесс");
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьПомощникСозданияОсновныхПроцессов(ТипыОпераций)
	
	ВыделенныеСтроки = Новый Массив;
	
	Для Каждого СтрСписка Из Элементы.Список.ВыделенныеСтроки Цикл
		ВыделенныеСтроки.Добавить(Элементы.Список.ДанныеСтроки(СтрСписка).Ссылка);
	КонецЦикла;
	
	РаботаСБизнесПроцессамиКлиент.ОткрытьПомощникСозданияОсновныхПроцессов(
		ТипыОпераций, ВыделенныеСтроки, ЭтаФорма, "ФормаСписка");
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПереключитьОтветыНаСообщение()
	
	Параметр =
		Список.Параметры.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ОтветыНаСообщение"));
	Параметр.Использование = Ложь;
	
	Элементы.ФормаПоказатьОтветыНаСообщение.Пометка = ПоказаныОтветыНаСообщение;
	
	Если ПоказаныОтветыНаСообщение Тогда
		Список.Параметры.УстановитьЗначениеПараметра("ОтветыНаСообщение", ВОтветНа);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОжиданияПрочтения()
	
	Сообщение = ПолучитьТекущееСообщение(Ложь);
	Если Сообщение = Неопределено
		Или Сообщение = ТекущееСообщение Тогда
		Возврат;
	КонецЕсли;
	
	ПредыдущееСообщение = ТекущееСообщение;
	ПредыдущееСообщениеПрочтено = ТекущееСообщениеПрочтено;
	Если Не ПредыдущееСообщениеПрочтено 
		И ИспользоватьАвтоматическоеПрочтение 
		И ОбластьЧтенияВключена Тогда
		ОповеститьОПрочтении = УстановитьПрочтение(ПредыдущееСообщение);
		РаботаСПрочтениямиКлиент.ОповеститьОПрочтении(ПредыдущееСообщение, ОповеститьОПрочтении);
	КонецЕсли;
	ТекущееСообщение = Сообщение;
	ТекущиеДанныеСообщения = Элементы.Список.ТекущиеДанные;
	Если ТекущиеДанныеСообщения <> Неопределено Тогда
		Если ТекущиеДанныеСообщения.Свойство("ТекстСообщения")
			И ТекущиеДанныеСообщения.Свойство("Автор")
			И ТекущиеДанныеСообщения.Свойство("ДатаСообщения") Тогда
			
			ТекущееСообщениеТекст = РаботаСОбсуждениямиКлиентСервер.СформироватьТекстовоеПредставлениеСообщения(
					ТекущиеДанныеСообщения.ТекстСообщения,
					ТекущиеДанныеСообщения.Автор,
					ТекущиеДанныеСообщения.ДатаСообщения);
			
		Иначе
			ОчиститьТекущееСообщение();
		КонецЕсли;
		
		Если Элементы.Список.ТекущиеДанные.Свойство("Прочтен") Тогда
			ТекущееСообщениеПрочтено = Элементы.Список.ТекущиеДанные.Прочтен;
		Иначе
			ТекущееСообщениеПрочтено = Ложь;
		КонецЕсли;
	Иначе
		ОчиститьТекущееСообщение();
		ТекущееСообщениеПрочтено = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьВыбранныеСообщения(ВыводитьПредупреждение = Ложь)
	
	Результат = Новый Массив;
	
	ВыделенныеСтроки = Элементы.Список.ВыделенныеСтроки;
	Для каждого Ссылка Из ВыделенныеСтроки Цикл
		Если ТипЗнч(Ссылка) = Тип("СправочникСсылка.СообщенияОбсуждений") Тогда
			Результат.Добавить(Ссылка);
		КонецЕсли;
	КонецЦикла;
	
	Сообщение = ПолучитьТекущееСообщение(Ложь);
	
	Если ЗначениеЗаполнено(Сообщение)
		И Результат.Найти(Сообщение) = Неопределено Тогда
		Результат.Добавить(Сообщение);
	КонецЕсли;
	
	Если Результат.Количество() = 0 И ВыводитьПредупреждение Тогда
		ТекстПредупреждения = НСтр("ru = 'Не выбрано сообщение.'; en = 'Message is not selected.'");
		ПоказатьПредупреждение(, ТекстПредупреждения);
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Функция ПолучитьТекущееСообщение(ВыводитьПредупреждение = Ложь)
	
	ТекущаяСтрока = Элементы.Список.ТекущаяСтрока;
	Если ТекущаяСтрока = Неопределено Тогда
		Если ВыводитьПредупреждение Тогда
			ТекстПредупреждения = НСтр("ru = 'Не выбрано сообщение.'; en = 'Message is not selected.'");
			ПоказатьПредупреждение(, ТекстПредупреждения);
		КонецЕсли;
		Возврат Неопределено;
	КонецЕсли;
	
	ТекущиеДанныеСообщения = Элементы.Список.ТекущиеДанные;
	Если ТекущиеДанныеСообщения = Неопределено Тогда
		Если ВыводитьПредупреждение Тогда
			ТекстПредупреждения = НСтр("ru = 'Не выбрано сообщение.'; en = 'Message is not selected.'");
			ПоказатьПредупреждение(, ТекстПредупреждения);
		КонецЕсли;
		Возврат Неопределено;
	КонецЕсли;
	
	Если ТекущиеДанныеСообщения <> Неопределено И Не ТекущиеДанныеСообщения.Свойство("Ссылка") Тогда
		Если ВыводитьПредупреждение Тогда
			ТекстПредупреждения = НСтр("ru = 'Не выбрано сообщение.'; en = 'Message is not selected.'");
			ПоказатьПредупреждение(, ТекстПредупреждения);
		КонецЕсли;
		Возврат Неопределено;
	КонецЕсли;
	
	Сообщение = ТекущиеДанныеСообщения.Ссылка;
	Если Не ТипЗнч(Сообщение) = Тип("СправочникСсылка.СообщенияОбсуждений") Тогда
		Если ВыводитьПредупреждение Тогда
			ТекстПредупреждения = НСтр("ru = 'Не выбрано сообщение.'; en = 'Message is not selected.'");
			ПоказатьПредупреждение(, ТекстПредупреждения);
		КонецЕсли;
		Возврат Неопределено;
	КонецЕсли;
	
	Возврат Сообщение;
	
КонецФункции

&НаСервере 
Функция УстановитьПрочтение(Сообщение, Прочтен = Истина)
	
	ПрочтениеУстановлено = РаботаСПрочтениями.УстановитьСвойствоПрочтен(Сообщение, Прочтен);
	
	// Не устанавливать прочтенность сообщения автоматически в случае ручной установки прочтения.
	ТекущееСообщениеПрочтено = Истина;
	
	Возврат ПрочтениеУстановлено;

КонецФункции

&НаСервере
Процедура ОбновитьОтображениеОбластиЧтенияСервер()
	
	Если ОтображениеОбластиЧтения = ПредопределенноеЗначение("Перечисление.ВариантыОтображенияОбластиЧтения.Внизу") Тогда
		
		Элементы.ГруппаСписок.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
		Элементы.ТекущееСообщениеТекст.Видимость = Истина;
		Элементы.ОбластьЧтенияСнизу.Пометка = Истина;
		Элементы.ОбластьЧтенияСправа.Пометка = Ложь;
		Элементы.ОбластьЧтенияОтключена.Пометка = Ложь;
		ОбластьЧтенияВключена = Истина;
		
	ИначеЕсли ОтображениеОбластиЧтения = ПредопределенноеЗначение("Перечисление.ВариантыОтображенияОбластиЧтения.Справа") Тогда
		
		Элементы.ГруппаСписок.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
		Элементы.ТекущееСообщениеТекст.Видимость = Истина;
		Элементы.ОбластьЧтенияСнизу.Пометка = Ложь;
		Элементы.ОбластьЧтенияСправа.Пометка = Истина;
		Элементы.ОбластьЧтенияОтключена.Пометка = Ложь;
		ОбластьЧтенияВключена = Истина;
		
	ИначеЕсли ОтображениеОбластиЧтения = ПредопределенноеЗначение("Перечисление.ВариантыОтображенияОбластиЧтения.НеОтображать") Тогда
		
		Элементы.ОбластьЧтенияСнизу.Пометка = Ложь;
		Элементы.ТекущееСообщениеТекст.Видимость = Ложь;
		Элементы.ОбластьЧтенияСправа.Пометка = Ложь;
		Элементы.ОбластьЧтенияОтключена.Пометка = Истина;
		ОбластьЧтенияВключена = Ложь;
		
	Иначе
		
		ОтображениеОбластиЧтения = ПредопределенноеЗначение("Перечисление.ВариантыОтображенияОбластиЧтения.НеОтображать");
		ОбновитьОтображениеОбластиЧтенияСервер();
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьШрифтОбластиЧтения(УстановитьПерсональнуюНастройку)
	
	Элементы.ТекущееСообщениеТекст.Шрифт = ШрифтОбластиЧтения;
	
	Если УстановитьПерсональнуюНастройку Тогда
		РаботаСОбсуждениями.УстановитьПерсональнуюНастройку("ШрифтОбластиЧтения", ШрифтОбластиЧтения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьТекущееСообщение()
	
	ТекущееСообщение = Неопределено;
	ТекущееСообщениеТекст = "";
	
КонецПроцедуры

&НаСервере
Процедура ПереключитьТолькоНепрочтенные()
	
	Параметр = Список.Параметры.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ТолькоНепрочтенные"));
	Параметр.Использование = Ложь;
	
	Элементы.ТолькоНепрочтенные.Пометка = ТолькоНепрочтенные;
	
	Если ТолькоНепрочтенные Тогда
		Список.Параметры.УстановитьЗначениеПараметра("ТолькоНепрочтенные", ТолькоНепрочтенные);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПереключитьОтображатьУдаленные()
	
	Элементы.ОтображатьУдаленные.Пометка = ОтображатьУдаленные;
	Список.Параметры.УстановитьЗначениеПараметра("ОтображатьУдаленные", ОтображатьУдаленные);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтветитьНаСообщение()
	
	Сообщение = ПолучитьТекущееСообщение(Истина);
	Если Сообщение = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура("Сообщение", Сообщение);
	ОткрытьФорму("Справочник.СообщенияОбсуждений.Форма.ФормаЭлемента", 
		ПараметрыФормы,
		ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти
