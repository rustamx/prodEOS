#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
// Отправить сообщение СВД
Функция ОтправитьСообщение(НастройкаПриемаОтправки, Транспорт, ИсходящееСообщениеСВД) Экспорт
	
	Попытка
		
		УчетнаяЗапись = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(НастройкаПриемаОтправки, "УчетнаяЗаписьПочты");
		ПараметрыОтправки = Новый Структура();
		
		// Тема
		ПараметрыОтправки.Вставить("Тема", ИсходящееСообщениеСВД.ИдентификаторСообщения);
		
		// Текст
		ПараметрыОтправки.Вставить("Текст", Строка(ТекущаяДатаСеанса()));
		
		// Кому
		ПараметрыОтправки.Вставить(
			"Кому", ОбщегоНазначения.ЗначениеРеквизитаОбъекта(НастройкаПриемаОтправки, "АдресОтправки"));
		
		// Вставка вложений
		МассивВложений = Новый Массив;
		МассивФайлов = РаботаСФайламиВызовСервера.ПолучитьВсеПодчиненныеФайлы(ИсходящееСообщениеСВД);
		Для каждого ФайлСсылка Из МассивФайлов Цикл
			
			ДвоичныеДанныеФайла = РаботаСФайламиВызовСервера.ПолучитьДвоичныеДанныеФайла(ФайлСсылка);
			
			АдресВоВременномХранилище = ПоместитьВоВременноеХранилище(ДвоичныеДанныеФайла);
			
			СтруктураВложения = Новый Структура();
			СтруктураВложения.Вставить("Адрес", АдресВоВременномХранилище);
			СтруктураВложения.Вставить("ИмяФайла", ФайлСсылка.Наименование + "." + ФайлСсылка.ТекущаяВерсияРасширение);
			МассивВложений.Добавить(СтруктураВложения);

		КонецЦикла;
		ПараметрыОтправки.Вставить("Вложения", МассивВложений);
			
		ЛегкаяПочтаСервер.ОтправитьИнтернетПочта(ПараметрыОтправки, УчетнаяЗапись);	
		
		Возврат Истина;
		
	Исключение
		
		Информация = ИнформацияОбОшибке();
		ЗаписьЖурналаРегистрации(
			НСтр("ru = 'СВД. Отправка почты'; en = 'EDES. Sending mail'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),
			УровеньЖурналаРегистрации.Ошибка,
			ИсходящееСообщениеСВД.Метаданные(),
			ИсходящееСообщениеСВД,
			НСтр("ru = 'Невозможно отправить сообщение. '; en = 'Unable to send the message. '", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка())
				+ ПодробноеПредставлениеОшибки(Информация));
		
		Возврат Ложь;
		
	КонецПопытки;
	
КонецФункции

// Отправить сообщения СВД
Функция ОтправитьСообщения(НастройкаПриемаОтправки, Транспорт) Экспорт
	
	Выборка = РаботаССВД.ПолучитьИсходящиеСообщенияДляОтправкиПоТранспорту(Транспорт);
	
	Пока Выборка.Следующий() Цикл
		
		ИсходящееСообщениеСВД = Выборка.Ссылка;
		ИсходящееСообщениеСВДОбъект = Выборка.Ссылка.ПолучитьОбъект();
		
		Попытка
			
			Если ОтправитьСообщение(НастройкаПриемаОтправки, Транспорт, ИсходящееСообщениеСВД) Тогда
								
				ОтправляемыйДокумент = ИсходящееСообщениеСВДОбъект.Документ;
				
				// если это не уведомление - запишем в историю
				Если ЗначениеЗаполнено(ОтправляемыйДокумент) 
					И (ИсходящееСообщениеСВД.ВидСообщения = Перечисления.ВидыСообщенийСВД.ОсновнойДокумент
					Или ИсходящееСообщениеСВД.ВидСообщения = Перечисления.ВидыСообщенийСВД.ДокументОтвет) Тогда
					РаботаССВД.ЗаписатьВИсториюСостоянийСВД(ОтправляемыйДокумент, 
						ИсходящееСообщениеСВД, Справочники.ВидыСостоянийДокументовВСВД.Отправлен,
						ИсходящееСообщениеСВДОбъект.ИдентификаторСообщения);
						
					РаботаССВД.ЗафиксироватьФактОтправкиДокумента(ОтправляемыйДокумент, ИсходящееСообщениеСВДОбъект.Получатель);					
				КонецЕсли;
				
				ИсходящееСообщениеСВДОбъект.ДатаОтправки = ТекущаяДатаСеанса();
				ИсходящееСообщениеСВДОбъект.Отправлено = Истина;
				ИсходящееСообщениеСВДОбъект.Записать();
				
			КонецЕсли;
			
		Исключение
			
			СообщениеОбОшибке = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
			ЗаписьЖурналаРегистрации(
				НСтр("ru = 'СВД. Отправка на сервер'; en = 'EDES. Sending to server'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),
				УровеньЖурналаРегистрации.Ошибка,
				Метаданные.Документы.ИсходящееСообщениеСВД,
				ИсходящееСообщениеСВД,
				СообщениеОбОшибке);
				
			ОтправляемыйДокумент = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(
				ИсходящееСообщениеСВД, "Документ");
			
			// если это не уведомление - запишем в историю
			Если ЗначениеЗаполнено(ОтправляемыйДокумент) Тогда
				
				РаботаССВД.ЗаписатьВИсториюСостоянийСВД(
					ОтправляемыйДокумент, 
					ИсходящееСообщениеСВД, 
					Справочники.ВидыСостоянийДокументовВСВД.Ошибка,
					ИсходящееСообщениеСВДОбъект.ИдентификаторСообщения,
					СообщениеОбОшибке);
					
			КонецЕсли;
			
		КонецПопытки;	
			
	КонецЦикла;
	
	Возврат Истина;
	
КонецФункции

// Получить сообщения СВД
Функция ПолучитьСообщения(НастройкаПриемаОтправки, Транспорт) Экспорт
	
	МассивСообщенийСВД = Новый Массив;
	УчетнаяЗапись = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(НастройкаПриемаОтправки, "УчетнаяЗаписьПочты");
	СообщениеОбОшибке = "";
	Соединение = Почта.ИнтернетПочтаУстановитьСоединение(УчетнаяЗапись, , СообщениеОбОшибке);
	Если Соединение = Неопределено Тогда
		
		ЗаписьЖурналаРегистрации(
			НСтр("ru = 'СВД. Получение сообщения с сервера. Получение почты'; en = 'EDES. Receiving message from server. Receiving mail'",
				ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()), 
			УровеньЖурналаРегистрации.Ошибка,
			НастройкаПриемаОтправки.Метаданные(),
			НастройкаПриемаОтправки,
			НСтр("ru = 'Невозможно подключиться к почтовому серверу.'; en = 'Unable connect to mail server.'",
				ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()));
		Возврат МассивСообщенийСВД;
		
	КонецЕсли;

	ПараметрыЗагрузки = Почта.СформироватьСтруктуруПараметровЗагрузки();
	
	ПротоколВходящейПочты = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(УчетнаяЗапись, 
		"ПротоколВходящейПочты");

	ПараметрыОтбора = Неопределено;
	Если ПротоколВходящейПочты = "IMAP" Тогда
		
		ПараметрыЗагрузки.ПараметрыОтбора.Вставить("ПослеДатыОтправления", ТекущаяДата() - 7 * 86400);
		ПараметрыЗагрузки.ПараметрыОтбора.Вставить("Удаленные", Ложь);
		
		Попытка
		
			ПараметрыЗагрузки.Идентификаторы = 
				Соединение.ПолучитьИдентификаторы(ПараметрыЗагрузки.Идентификаторы, 
					ПараметрыЗагрузки.ПараметрыОтбора);
					
		Исключение
					
			ПараметрыЗагрузки.ПараметрыОтбора.Удалить("ПослеДатыОтправления");
			
			ПараметрыЗагрузки.Идентификаторы = 
				Соединение.ПолучитьИдентификаторы(ПараметрыЗагрузки.Идентификаторы, 
					ПараметрыЗагрузки.ПараметрыОтбора);
			
		КонецПопытки;	
		
	КонецЕсли;	
	
	СообщениеОбОшибке = "";
	Сообщения = Почта.ПолучитьВходящиеСообщения(Соединение, ПараметрыЗагрузки, СообщениеОбОшибке);
	
    Если Сообщения <> Неопределено Тогда
		ИдентификаторыЗагруженныхСообщений = Новый Массив;
		Для каждого Сообщение Из Сообщения Цикл
			Для Каждого Вложение Из Сообщение.Вложения Цикл
				Если Найти(НРег(Вложение.Имя), ".xml") > 0 Тогда
					ИмяВременногоФайла = ПолучитьИмяВременногоФайла("xml");
					Вложение.Данные.Записать(ИмяВременногоФайла);
					РаботаССВД.СоздатьВходящееСообщениеСВДИзXML(Транспорт, ИмяВременногоФайла);
					УдалитьФайлы(ИмяВременногоФайла);
				КонецЕсли;
			КонецЦикла;
			ИдентификаторыЗагруженныхСообщений.Добавить(Сообщение.Идентификатор[0]);
		КонецЦикла;
		
		СообщениеОбОшибке = "";
		Если Не Почта.УдалитьСообщенияВПочтовомЯщике(
			Соединение,
			ИдентификаторыЗагруженныхСообщений,
			СообщениеОбОшибке) Тогда	
			
			ЗаписьЖурналаРегистрации(
				НСтр("ru = 'СВД. Получение сообщения с сервера. Получение почты'; en = 'EDES. Receiving message from server. Receiving mail'",
					ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),
				УровеньЖурналаРегистрации.Ошибка,
				НастройкаПриемаОтправки.Метаданные(),
				НастройкаПриемаОтправки,
				НСтр("ru = 'Невозможно удалить полученные сообщения. '; en = 'Unable to delete the received messages. '", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка())
					+ СообщениеОбОшибке);
			
		КонецЕсли;
	Иначе
		
		ЗаписьЖурналаРегистрации(
			НСтр("ru = 'СВД. Получение сообщения с сервера. Получение почты'; en = 'EDES. Receiving message from server. Receiving mail'",
				ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()), 
			УровеньЖурналаРегистрации.Ошибка,
			НастройкаПриемаОтправки.Метаданные(),
			НастройкаПриемаОтправки,   	
			НСтр("ru = 'Невозможно загрузить сообщения. '; en = 'Unable to download the messages. '", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка())
				+ СообщениеОбОшибке);
		
	КонецЕсли;
	
	Соединение.Отключиться();
	
КонецФункции

// Возвращает формат сообщений в данном виде доставки транспорта
Функция ФорматСообщенияСВД() Экспорт
	
	Возврат Справочники.ФорматыСообщенийСВД.СообщениеПоГОСТ53898ВложенныеФайлы;
	
КонецФункции	

// Возвращает Истина, если в данном виде доставки транспорта требуется заполнить участников
Функция ТребуетсяЗаполнитьСписокУчастников() Экспорт
	
	Возврат Истина;
	
КонецФункции	

// Получить наименование контрагента в СВД
Функция ПолучитьНаименованиеКонтрагентаВСВД(Контрагент, Транспорт) Экспорт
	
	Возврат РаботаССВД.ПолучитьНаименованиеКонтрагентаВСВДКлиентСервер(Контрагент, Транспорт);
	
КонецФункции	

// Получить наименование организации в СВД
Функция ПолучитьНаименованиеОрганизацииВСВД(ОрганизацияДокумента, Транспорт) Экспорт
	
	Возврат РаботаССВД.ПолучитьНаименованиеОрганизацииВСВДКлиентСервер(ОрганизацияДокумента, Транспорт);
	
КонецФункции	

#КонецЕсли
