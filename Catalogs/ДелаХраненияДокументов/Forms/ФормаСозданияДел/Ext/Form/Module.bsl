
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Параметры.Год) Тогда 
		Год = Параметры.Год;
	Иначе
		Год = Год(ТекущаяДата());
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Параметры.Организация) Тогда 
		Организация = Параметры.Организация;
	Иначе	
		Организация = РаботаСОрганизациями.ПолучитьОрганизациюПоУмолчанию();
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Параметры.Подразделение) Тогда 
		Подразделение = Параметры.Подразделение;
	КонецЕсли;
	
	ЗаполнитьДерево();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПометкаПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.Дерево.ТекущаяСтрока;
	ЭлементДерева = Дерево.НайтиПоИдентификатору(ТекущаяСтрока);
	ПометитьПодчиненные(ЭлементДерева, ЭлементДерева.Пометка);
	
КонецПроцедуры

&НаКлиенте
Процедура ГодПриИзменении(Элемент)
	
	ЗаполнитьДерево();
	
	Для Каждого ЭлементДерева Из Дерево.ПолучитьЭлементы() Цикл
		Элементы.Дерево.Развернуть(ЭлементДерева.ПолучитьИдентификатор());
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	ЗаполнитьДерево();
	
	Для Каждого ЭлементДерева Из Дерево.ПолучитьЭлементы() Цикл
		Элементы.Дерево.Развернуть(ЭлементДерева.ПолучитьИдентификатор());
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПодразделениеПриИзменении(Элемент)
	
	ЗаполнитьДерево();
	
	Для Каждого ЭлементДерева Из Дерево.ПолучитьЭлементы() Цикл
		Элементы.Дерево.Развернуть(ЭлементДерева.ПолучитьИдентификатор());
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Отметить(Команда)
	
	ПометитьПодчиненные(Неопределено, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьОтметку(Команда)
	
	ПометитьПодчиненные(Неопределено, Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура Создать(Команда)
	
	ОчиститьСообщения();
	
	СоздатьНаСервере();
	Оповестить("ИзмененаНоменклатураДел");
	
	ОписаниеОповещение = Новый ОписаниеОповещения("СоздатьПродолжение", ЭтотОбъект);
	ПоказатьПредупреждение(ОписаниеОповещение, НСтр("ru = 'Дела по выделенным элементам номенклатуры созданы.'; en = 'Cases for the selected catalog items created.'"));
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьПродолжение(ДополнительныеПараметры) Экспорт 
	
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПометитьПодчиненные(ЭлементДерева, Пометка)
	
	Если ЭлементДерева = Неопределено Тогда 
		Для Каждого ПодчиненныйЭлемент Из Дерево.ПолучитьЭлементы() Цикл
			ПометитьПодчиненные(ПодчиненныйЭлемент, Пометка);
		КонецЦикла;
	Иначе
		Если Не ЭлементДерева.Переходящее Тогда 
			ЭлементДерева.Пометка = Пометка;
		КонецЕсли;
		
		Для Каждого ПодчиненныйЭлемент Из ЭлементДерева.ПолучитьЭлементы() Цикл
			ПометитьПодчиненные(ПодчиненныйЭлемент, Пометка);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СоздатьПодчиненные(СтрокаДерева)
	
	Если СтрокаДерева.ЭтоРаздел Тогда
		Для Каждого ПодчиненнаяСтрока Из СтрокаДерева.Строки Цикл
			СоздатьПодчиненные(ПодчиненнаяСтрока);
		КонецЦикла;
		
	Иначе 
		
		Если Не СтрокаДерева.Пометка Тогда
			Возврат;
		КонецЕсли;
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ ПЕРВЫЕ 1
			|	Дела.НомерТома КАК НомерТома,
			|	Дела.ДатаНачала,
			|	Дела.ДатаОкончания
			|ИЗ
			|	Справочник.ДелаХраненияДокументов КАК Дела
			|ГДЕ
			|	НЕ Дела.ПометкаУдаления
			|	И Дела.НоменклатураДел.Индекс = &Индекс
			|	И Дела.Организация = &Организация
			|	И ГОД(Дела.ДатаНачала) <= &Год
			|	И (Дела.ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1)
			|			ИЛИ Дела.ДатаОкончания <> ДАТАВРЕМЯ(1, 1, 1)
			|				И ГОД(Дела.ДатаОкончания) >= &Год)
			|
			|УПОРЯДОЧИТЬ ПО
			|	НомерТома УБЫВ";
		
		ИсходнаяНоменклатура = СтрокаДерева.Ссылка;
		НовыйЭлемент = Справочники.ДелаХраненияДокументов.СоздатьЭлемент();
		
		НовыйЭлемент.НоменклатураДел = ИсходнаяНоменклатура;
		НовыйЭлемент.Организация = СтрокаДерева.Организация;
		НовыйЭлемент.Подразделение = СтрокаДерева.Подразделение;
		
		Запрос.УстановитьПараметр("Индекс", СтрокаДерева.Индекс);
		Запрос.УстановитьПараметр("Организация", СтрокаДерева.Организация);
		Запрос.УстановитьПараметр("Год", Год);
		
		Результат = Запрос.Выполнить();
		Если Результат.Пустой() Тогда 
			НовыйЭлемент.НомерТома = 1;
			НовыйЭлемент.ДатаНачала = Дата(Год, 1, 1);
		Иначе 
			Выборка = Результат.Выбрать();
			Выборка.Следующий();
				
			НовыйЭлемент.НомерТома = Выборка.НомерТома + 1;
			Если ЗначениеЗаполнено(Выборка.ДатаОкончания) Тогда 
				НовыйЭлемент.ДатаНачала = Выборка.ДатаОкончания + 3600 * 24;
			Иначе 
				НовыйЭлемент.ДатаНачала = Дата(Год, 1, 1);
			КонецЕсли;
		КонецЕсли;
		
		НовыйЭлемент.Записать();
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СоздатьНаСервере()
	
	ДеревоЗнч = РеквизитФормыВЗначение("Дерево");
	ДеревоЗнч.Колонки.Добавить("НоваяСсылка");
	
	НачатьТранзакцию();
	Попытка
		
		Для Каждого ПодчиненнаяСтрока Из ДеревоЗнч.Строки Цикл
			СоздатьПодчиненные(ПодчиненнаяСтрока);
		КонецЦикла;
		
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
		ВызватьИсключение;
	КонецПопытки;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДерево()
	
	ДеревоЗнч = РеквизитФормыВЗначение("Дерево");
	ДеревоЗнч.Строки.Очистить();
	
	ЗапросРазделы = Новый Запрос;
	ЗапросРазделы.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	РазделыНоменклатурыДел.Ссылка,
		|	РазделыНоменклатурыДел.Родитель,
		|	РазделыНоменклатурыДел.Индекс КАК Индекс,
		|	РазделыНоменклатурыДел.Наименование
		|ИЗ
		|	Справочник.РазделыНоменклатурыДел КАК РазделыНоменклатурыДел
		|ГДЕ
		|	РазделыНоменклатурыДел.Год = &Год";
	
	Если ЗначениеЗаполнено(Организация) Тогда 
		ЗапросРазделы.Текст = ЗапросРазделы.Текст + "
		|	И РазделыНоменклатурыДел.Организация = &Организация";
		ЗапросРазделы.Параметры.Вставить("Организация", Организация);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Подразделение) Тогда 
		ЗапросРазделы.Текст = ЗапросРазделы.Текст + "
		|	И РазделыНоменклатурыДел.Подразделение = &Подразделение";
		ЗапросРазделы.Параметры.Вставить("Подразделение", Подразделение);
	КонецЕсли;
	
	ЗапросРазделы.Текст = ЗапросРазделы.Текст + "
		|
		|УПОРЯДОЧИТЬ ПО
		|	Индекс";
		
	ЗапросРазделы.Параметры.Вставить("Год", Год);
	Выборка = ЗапросРазделы.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Если Не ЗначениеЗаполнено(Выборка.Родитель) Тогда
			СтрокаРодитель = ДеревоЗнч;
		Иначе
			СтрокаРодитель = ДеревоЗнч.Строки.Найти(Выборка.Родитель, "Ссылка", Истина);
		КонецЕсли;
		
		Если СтрокаРодитель = Неопределено Тогда 
			СтрокаРодитель = ДеревоЗнч;
		КонецЕсли;
		
		НоваяСтрока = СтрокаРодитель.Строки.Добавить();
		НоваяСтрока.Ссылка = Выборка.Ссылка;
		НоваяСтрока.Наименование = Выборка.Наименование;
		НоваяСтрока.Индекс = Выборка.Индекс;
		НоваяСтрока.Пометка = Истина;
		НоваяСтрока.ЭтоРаздел = Истина;
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Номенклатура.Ссылка,
		|	Номенклатура.Наименование,
		|	Номенклатура.Индекс,
		|	Номенклатура.Раздел,
		|	Номенклатура.Организация,
		|	Номенклатура.Раздел.Подразделение Как Подразделение,
		|	ВЫБОР
		|		КОГДА Номенклатура.Ссылка В
		|				(ВЫБРАТЬ
		|					ДелаХраненияДокументов.НоменклатураДел
		|				ИЗ
		|					Справочник.ДелаХраненияДокументов.ОтноситсяКНоменклатуреДел КАК ДелаХраненияДокументов
		|				ГДЕ
		|					ДелаХраненияДокументов.НоменклатураДел = Номенклатура.Ссылка
		|					И НЕ ДелаХраненияДокументов.Ссылка.ПометкаУдаления
		|					И НЕ ДелаХраненияДокументов.Ссылка.ДелоЗакрыто
		|					И ГОД(ДелаХраненияДокументов.Ссылка.ДатаНачала) < &Год
		|					И (ДелаХраненияДокументов.Ссылка.ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1)
		|						ИЛИ ГОД(ДелаХраненияДокументов.Ссылка.ДатаОкончания) >= &Год))
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК Переходящее,
		|	ВЫБОР
		|		КОГДА Номенклатура.Ссылка В
		|				(ВЫБРАТЬ
		|					ДелаХраненияДокументов.НоменклатураДел
		|				ИЗ
		|					Справочник.ДелаХраненияДокументов.ОтноситсяКНоменклатуреДел КАК ДелаХраненияДокументов
		|				ГДЕ
		|					ДелаХраненияДокументов.НоменклатураДел = Номенклатура.Ссылка
		|					И НЕ ДелаХраненияДокументов.Ссылка.ПометкаУдаления
		|					И НЕ ДелаХраненияДокументов.Ссылка.ДелоЗакрыто
		|					И ГОД(ДелаХраненияДокументов.Ссылка.ДатаНачала) = &Год
		|					И (ДелаХраненияДокументов.Ссылка.ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1)
		|						ИЛИ ГОД(ДелаХраненияДокументов.Ссылка.ДатаОкончания) >= &Год))
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ДелоУжеСоздано
		|ИЗ
		|	Справочник.НоменклатураДел КАК Номенклатура
		|ГДЕ
		|	НЕ Номенклатура.ПометкаУдаления
		|	И Номенклатура.Год = &Год";
		
	Если ЗначениеЗаполнено(Организация) Тогда 
		Запрос.Текст = Запрос.Текст + "
		|	И Номенклатура.Организация = &Организация";
		Запрос.Параметры.Вставить("Организация", Организация);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Подразделение) Тогда 
		Запрос.Текст = Запрос.Текст + "
		|	И Номенклатура.Раздел.Подразделение = &Подразделение";
		Запрос.Параметры.Вставить("Подразделение", Подразделение);
	КонецЕсли;
	
	Запрос.Параметры.Вставить("Год", Год);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Если Не ЗначениеЗаполнено(Выборка.Раздел) Тогда
			СтрокаРодитель = ДеревоЗнч;
		Иначе
			СтрокаРодитель = ДеревоЗнч.Строки.Найти(Выборка.Раздел, "Ссылка", Истина);
		КонецЕсли;
		
		Если СтрокаРодитель <> Неопределено Тогда 
			НоваяСтрока = СтрокаРодитель.Строки.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
			
			Если Выборка.Переходящее Тогда 
				НоваяСтрока.Подробности = НСтр("ru = 'Есть переходящее дело'; en = 'Has a carried over case'");
			ИначеЕсли Выборка.ДелоУжеСоздано Тогда 
				НоваяСтрока.Подробности = НСтр("ru = 'Дело уже создано'; en = 'Case already created'");
			Иначе 
				НоваяСтрока.Подробности = НСтр("ru = 'Будет создано новое дело'; en = 'New case will be created'");
				НоваяСтрока.Пометка = Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	ЗначениеВРеквизитФормы(ДеревоЗнч, "Дерево");
	
КонецПроцедуры

#КонецОбласти
