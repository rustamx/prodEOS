
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Параметры.ПеренестиИзДела) Тогда 
		ПеренестиИзДела = Параметры.ПеренестиИзДела;
		ЗаполнитьСписок();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПеренестиИзДелаПриИзменении(Элемент)
	
	ЗаполнитьСписок();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Отметить(Команда)
	
	Для Каждого Строка Из Список Цикл
		Строка.Пометка = Истина;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьОтметку(Команда)
	
	Для Каждого Строка Из Список Цикл
		Строка.Пометка = Ложь;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура Перенести(Команда)
	
	ОчиститьСообщения();
	
	Если Не ПеренестиНаСервере() Тогда 
		Возврат;
	КонецЕсли;
	
	ПоказатьОповещениеПользователя(
		"Перенос документов дела:", ,
		"Отмеченные документы перенесены в дело " + Строка(ПеренестиВДело),
		БиблиотекаКартинок.Информация32);
			
	ЗаполнитьСписок();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьСписок()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВходящиеДокументы.Ссылка КАК Ссылка,
	|	ВходящиеДокументы.Заголовок КАК Наименование,
	|	ВходящиеДокументы.ДатаРегистрации КАК ДатаРегистрации,
	|	ВходящиеДокументы.РегистрационныйНомер КАК РегистрационныйНомер,
	|	ИСТИНА КАК Пометка
	|ИЗ
	|	Справочник.ВходящиеДокументы КАК ВходящиеДокументы
	|ГДЕ
	|	ВходящиеДокументы.Дело = &Дело
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ИсходящиеДокументы.Ссылка,
	|	ИсходящиеДокументы.Заголовок,
	|	ИсходящиеДокументы.ДатаРегистрации,
	|	ИсходящиеДокументы.РегистрационныйНомер,
	|	ИСТИНА
	|ИЗ
	|	Справочник.ИсходящиеДокументы КАК ИсходящиеДокументы
	|ГДЕ
	|	ИсходящиеДокументы.Дело = &Дело
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВнутренниеДокументы.Ссылка,
	|	ВнутренниеДокументы.Заголовок,
	|	ВнутренниеДокументы.ДатаРегистрации,
	|	ВнутренниеДокументы.РегистрационныйНомер,
	|	ИСТИНА
	|ИЗ
	|	Справочник.ВнутренниеДокументы КАК ВнутренниеДокументы
	|ГДЕ
	|	ВнутренниеДокументы.Дело = &Дело";
	Запрос.УстановитьПараметр("Дело", ПеренестиИзДела);
	
	ЗначениеВРеквизитФормы(Запрос.Выполнить().Выгрузить(), "Список");
	
КонецПроцедуры

&НаСервере
Функция ПеренестиНаСервере()
	
	Если Не ПроверитьЗаполнение() Тогда 
		Возврат Ложь;
	КонецЕсли;
	
	Если ПеренестиИзДела.ДелоЗакрыто Тогда 
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru = 'Нельзя перенести документы из закрытого дела'; en = 'It is not possible to transfer documents from a closed case'"),,,"ПеренестиИзДела");
		Возврат Ложь;
	КонецЕсли;
	
	Если ПеренестиВДело.ДелоЗакрыто Тогда 
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru = 'Нельзя перенести документы в закрытое дело'; en = 'It is not possible to transfer documents to a closed case.'"),,,"ПеренестиВДело");
		Возврат Ложь;
	КонецЕсли; 
	
	ПараметрыОтбора = Новый Структура("Пометка", Истина);
	Если Список.НайтиСтроки(ПараметрыОтбора).Количество() = 0 Тогда 
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru = 'Не отмечены документы, которые должны быть перенесены'; en = 'Documents to move are not selected'"),,,"Список");
		Возврат Ложь;
	КонецЕсли;
	
	НачатьТранзакцию();
	Попытка 
		
		Для Каждого Строка Из Список Цикл 
			
			Если Не Строка.Пометка Тогда
				Продолжить;
			КонецЕсли;
			
			ДокументОбъект = Строка.Ссылка.ПолучитьОбъект();
			ДокументОбъект.Заблокировать();
			ДокументОбъект.Дело = ПеренестиВДело;
			ДокументОбъект.Записать();
			
		КонецЦикла;
		
	ЗафиксироватьТранзакцию();
	Исключение	
		ОтменитьТранзакцию();
	    ВызватьИсключение;
	КонецПопытки;
	
	Возврат Истина;
	
КонецФункции

#КонецОбласти


