#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ИсходныйЗапросСписка = Список.ТекстЗапроса;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("АдресВременногоХранилища", Параметры.АдресВременногоХранилища);
	ПараметрыФормы.Вставить("Организация", Параметры.Организация);
	ПараметрыФормы.Вставить("РежимВыбора", Параметры.РежимВыбора);
	ПараметрыФормы.Вставить("СостояниеНаДату", Параметры.СостояниеНаДату);
	ПараметрыФормы.Вставить("ДатаРегистрации", Параметры.ДатаРегистрации);

	Если Параметры.Свойство("НоменклатураДел") И ЗначениеЗаполнено(Параметры.НоменклатураДел) Тогда
		ПараметрыФормы.Вставить("НоменклатураДел", Параметры.НоменклатураДел);
	КонецЕсли;
	Если Параметры.Свойство("ВидДокумента") И ЗначениеЗаполнено(Параметры.ВидДокумента) Тогда
		ПараметрыФормы.Вставить("ВидДокумента", Параметры.ВидДокумента);
	КонецЕсли;
	Если Параметры.Свойство("Контрагент") Тогда
		ПараметрыФормы.Вставить("Контрагент", Параметры.Контрагент);
	КонецЕсли;
	Если Параметры.Свойство("ВопросДеятельности") Тогда
		ПараметрыФормы.Вставить("ВопросДеятельности", Параметры.ВопросДеятельности);
	КонецЕсли;
	Если Параметры.Свойство("Подразделение") И ЗначениеЗаполнено(Параметры.Подразделение) Тогда
		ПараметрыФормы.Вставить("Подразделение", Параметры.Подразделение);
	КонецЕсли;

	Если Параметры.РежимВыбора = "ИзКарточкиДокумента" Тогда 
		
		ПервыйЗапуск = ХранилищеОбщихНастроек.Загрузить("ФормаВыбораДелаХраненияДокументов", "ПервыйЗапуск");
		Если ПервыйЗапуск = Неопределено Тогда
			ПоказыватьТолькоПодходящиеДела = Истина;
		Иначе
			ПоказыватьТолькоПодходящиеДела = ХранилищеОбщихНастроек.Загрузить("ФормаВыбораДелаХраненияДокументов", "ПоказыватьТолькоПодходящиеДела");
		КонецЕсли;
		Элементы.ПоказыватьТолькоПодходящиеДела.Видимость = Истина;
		
		Если ПоказыватьТолькоПодходящиеДела Тогда
			УстановитьНаСписокОтборПоНастройкам(Параметры);
		Иначе
			УстановитьНаСписокСтандартныйОтбор(Параметры);
		КонецЕсли;
				
	ИначеЕсли Параметры.РежимВыбора = "ИзПередачиДелВАрхив" 
		  Или Параметры.РежимВыбора = "ИзУничтоженияДел" Тогда 
		  
		Элементы.ПоказыватьТолькоПодходящиеДела.Видимость = Ложь;
		  
		Список.ТекстЗапроса = СтрЗаменить(Список.ТекстЗапроса, 
		  	"РегистрСведений.СостоянияДелХраненияДокументов.СрезПоследних(", 
			"РегистрСведений.СостоянияДелХраненияДокументов.СрезПоследних(&Период");
		  
		Период = Новый Граница(Параметры.СостояниеНаДату, ВидГраницы.Исключая);
		Список.Параметры.УстановитьЗначениеПараметра("Период", Период);
			
		Если ПолучитьФункциональнуюОпцию("ИспользоватьУчетПоОрганизациям") И ЗначениеЗаполнено(Параметры.Организация) Тогда 
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор, "Организация", Параметры.Организация);
		КонецЕсли;
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор, "ДелоЗакрыто", Истина);
		
		Состояния = Новый Массив;
		Состояния.Добавить(Перечисления.СостоянияДелХраненияДокументов.ПустаяСсылка());
		Если Параметры.РежимВыбора = "ИзУничтоженияДел" Тогда 
			Состояния.Добавить(Перечисления.СостоянияДелХраненияДокументов.ПереданоВАрхив);
			
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор,
				"КатегорияДела", 
				Перечисления.КатегорииДел.Постоянное,
				ВидСравненияКомпоновкиДанных.НеРавно); 
		КонецЕсли; 
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор,
			"Состояние", 
			Состояния,
			ВидСравненияКомпоновкиДанных.ВСписке); 
		
		АдресВременногоХранилища = Параметры.АдресВременногоХранилища;
		Если ЗначениеЗаполнено(АдресВременногоХранилища) Тогда 
			Выбранные.Загрузить( ПолучитьИзВременногоХранилища(АдресВременногоХранилища) );
			ОбновитьУсловноеОформление();
		КонецЕсли;	
			
	КонецЕсли;
	
	Если Параметры.Отбор.Свойство("ПометкаУдаления") И Не Параметры.Отбор.ПометкаУдаления Тогда 
		Элементы.ПоказыватьУдаленные.Видимость = Ложь;
	Иначе 
		ПоказыватьУдаленные = Ложь;
		ПоказатьУдаленные();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если ОбщегоНазначенияДокументооборотКлиент.ПередЗакрытием(
		Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка, Модифицированность) Тогда
		Возврат;
	КонецЕсли;
	
	СохранитьНастройку();
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	Если Не Параметры.Отбор.Свойство("ПометкаУдаления") Тогда
		ПоказыватьУдаленные = Настройки["ПоказыватьУдаленные"];
		ПоказатьУдаленные();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПоказыватьТолькоПодходящиеДелаПриИзменении(Элемент)
	
	Если ПоказыватьТолькоПодходящиеДела Тогда
		УстановитьНаСписокОтборПоНастройкам(ПараметрыФормы);
	Иначе
		УстановитьНаСписокСтандартныйОтбор(ПараметрыФормы);
	КонецЕсли;
		
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПоказыватьУдаленные(Команда)
	
	ПоказыватьУдаленные = Не ПоказыватьУдаленные;
	
	ПоказатьУдаленные();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОбновитьУсловноеОформление()
	
	МассивВыбранных = Новый Массив;
	Для Каждого Строка Из Выбранные Цикл
		МассивВыбранных.Добавить(Строка.ДелоХраненияДокументов);
	КонецЦикла;	
	
	Если Список.УсловноеОформление.Элементы.Количество() > 0 Тогда 
		ЭлементОформления = Список.УсловноеОформление.Элементы[0];
	Иначе
		ЭлементОформления = Список.УсловноеОформление.Элементы.Добавить();
		ЭлементОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЗакрытыеНеактуальныеЗаписи);
		ЭлементОтбора = ЭлементОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных")); 
		ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Ссылка");
		ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
		ЭлементОтбора.Использование = Истина;
	КонецЕсли;	
	
	ЭлементОформления.Отбор.Элементы[0].ПравоеЗначение = МассивВыбранных;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьНаСписокОтборПоНастройкам(Параметры)
	
	УстановитьНаСписокСтандартныйОтбор(Параметры);
	
	Если Параметры.Свойство("НоменклатураДел") И ЗначениеЗаполнено(Параметры.НоменклатураДел) Тогда 
		
		Список.Параметры.УстановитьЗначениеПараметра("Номенклатура", Параметры.НоменклатураДел);
		
	Иначе
		
		Запрос = Новый Запрос;
		Запрос.Текст = "";
		
		ПереданВидДокумента = Ложь;
		Если Параметры.Свойство("ВидДокумента") И ЗначениеЗаполнено(Параметры.ВидДокумента) Тогда 
			Запрос.Текст = Запрос.Текст + 
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
			|	ДелаХраненияДокументов.Ссылка КАК Ссылка
			|ИЗ
			|	Справочник.ДелаХраненияДокументов КАК ДелаХраненияДокументов
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.НоменклатураДел.ВидыДокументов КАК НоменклатураДелВидыДокументов
			|		ПО (НоменклатураДелВидыДокументов.Ссылка = ДелаХраненияДокументов.НоменклатураДел)
			|			И (НоменклатураДелВидыДокументов.ВидДокумента В ИЕРАРХИИ (&ВидДокумента))
			|ГДЕ
			|	НЕ ДелаХраненияДокументов.ПометкаУдаления
			|	И НЕ ДелаХраненияДокументов.ДелоЗакрыто";
			Запрос.Текст = Запрос.Текст + ";";
			Запрос.УстановитьПараметр("ВидДокумента", Параметры.ВидДокумента);
			
			ПереданВидДокумента = Истина;
		КонецЕсли;	
		
		ПереданКонтрагент = Ложь;
		ПереданМассивКонтрагентов = Ложь;
		Если Параметры.Свойство("Контрагент") И ТипЗнч(Параметры.Контрагент) = Тип("СправочникСсылка.Контрагенты") И ЗначениеЗаполнено(Параметры.Контрагент) Тогда 
			
			Запрос.Текст = Запрос.Текст + 
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
			|	ДелаХраненияДокументов.Ссылка КАК Ссылка
			|ИЗ
			|	Справочник.ДелаХраненияДокументов КАК ДелаХраненияДокументов
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.НоменклатураДел.Контрагенты КАК НоменклатураДелКонтрагенты
			|		ПО (НоменклатураДелКонтрагенты.Ссылка = ДелаХраненияДокументов.НоменклатураДел)
			|			И (НоменклатураДелКонтрагенты.Контрагент В ИЕРАРХИИ (&Контрагент))
			|ГДЕ
			|	НЕ ДелаХраненияДокументов.ПометкаУдаления
			|	И НЕ ДелаХраненияДокументов.ДелоЗакрыто";
			Запрос.Текст = Запрос.Текст + ";";
			Запрос.УстановитьПараметр("Контрагент", Параметры.Контрагент);
			
			ПереданКонтрагент = Истина;
		ИначеЕсли Параметры.Свойство("Контрагент") И ТипЗнч(Параметры.Контрагент) = Тип("Массив") И Параметры.Контрагент.Количество() = 1 Тогда 
			
			Запрос.Текст = Запрос.Текст + 
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
			|	ДелаХраненияДокументов.Ссылка КАК Ссылка
			|ИЗ
			|	Справочник.ДелаХраненияДокументов КАК ДелаХраненияДокументов
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.НоменклатураДел.Контрагенты КАК НоменклатураДелКонтрагенты
			|		ПО (НоменклатураДелКонтрагенты.Ссылка = ДелаХраненияДокументов.НоменклатураДел)
			|			И (НоменклатураДелКонтрагенты.Контрагент В ИЕРАРХИИ (&Контрагент))
			|ГДЕ
			|	НЕ ДелаХраненияДокументов.ПометкаУдаления
			|	И НЕ ДелаХраненияДокументов.ДелоЗакрыто";
			Запрос.Текст = Запрос.Текст + ";";
			Запрос.УстановитьПараметр("Контрагент", Параметры.Контрагент[0]);
			
			ПереданКонтрагент = Истина;
		ИначеЕсли Параметры.Свойство("Контрагент") И ТипЗнч(Параметры.Контрагент) = Тип("Массив") И Параметры.Контрагент.Количество() > 1 Тогда
			ПереданМассивКонтрагентов  = Истина;
		КонецЕсли;	
		
		
		ПереданВопросДеятельности = Ложь;
		Если Параметры.Свойство("ВопросДеятельности") И ЗначениеЗаполнено(Параметры.ВопросДеятельности) Тогда 
			Запрос.Текст = Запрос.Текст + 
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
			|	ДелаХраненияДокументов.Ссылка КАК Ссылка
			|ИЗ
			|	Справочник.ДелаХраненияДокументов КАК ДелаХраненияДокументов
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.НоменклатураДел.ВопросыДеятельности КАК НоменклатураДелВопросыДеятельности
			|		ПО (НоменклатураДелВопросыДеятельности.Ссылка = ДелаХраненияДокументов.НоменклатураДел)
			|			И (НоменклатураДелВопросыДеятельности.ВопросДеятельности В ИЕРАРХИИ (&ВопросДеятельности))
			|ГДЕ
			|	НЕ ДелаХраненияДокументов.ПометкаУдаления
			|	И НЕ ДелаХраненияДокументов.ДелоЗакрыто";
			Запрос.Текст = Запрос.Текст + ";";
			Запрос.УстановитьПараметр("ВопросДеятельности", Параметры.ВопросДеятельности);
			
			ПереданВопросДеятельности = Истина;
		КонецЕсли;
		
		Если Запрос.Текст <> "" Тогда 
			Если ПолучитьФункциональнуюОпцию("ИспользоватьУчетПоОрганизациям") И ЗначениеЗаполнено(Параметры.Организация) Тогда 
				Запрос.Текст = СтрЗаменить(Запрос.Текст, 
				"НЕ ДелаХраненияДокументов.ПометкаУдаления", 
				"НЕ ДелаХраненияДокументов.ПометкаУдаления И (Организация = &Организация) ");
				Запрос.УстановитьПараметр("Организация", Параметры.Организация);
			КонецЕсли;
			
			
			Результаты = Запрос.ВыполнитьПакет();
			
			ДелаДляВыбораПоВидуДок = Неопределено;
			Если ПереданВидДокумента Тогда 
				ДелаДляВыбораПоВидуДок = Результаты[0].Выгрузить().ВыгрузитьКолонку("Ссылка");
			КонецЕсли;	
			
			ДелаДляВыбораПоКорр = Неопределено;
			Если ПереданКонтрагент Тогда 
				Если ПереданВидДокумента Тогда 
					ДелаДляВыбораПоКорр = Результаты[1].Выгрузить().ВыгрузитьКолонку("Ссылка");
				Иначе
					ДелаДляВыбораПоКорр = Результаты[0].Выгрузить().ВыгрузитьКолонку("Ссылка");
				КонецЕсли;	
			КонецЕсли;
			
			ДелаДляВыбораПоВопрДеят = Неопределено;
			Если ПереданВопросДеятельности Тогда 
				Если ПереданВидДокумента И ПереданКонтрагент Тогда 
					ДелаДляВыбораПоВопрДеят = Результаты[2].Выгрузить().ВыгрузитьКолонку("Ссылка");
				ИначеЕсли ПереданВидДокумента  Тогда 
					ДелаДляВыбораПоВопрДеят = Результаты[1].Выгрузить().ВыгрузитьКолонку("Ссылка");
				ИначеЕсли ПереданКонтрагент Тогда 
					ДелаДляВыбораПоВопрДеят = Результаты[1].Выгрузить().ВыгрузитьКолонку("Ссылка");
				Иначе
					ДелаДляВыбораПоВопрДеят = Результаты[0].Выгрузить().ВыгрузитьКолонку("Ссылка");
				КонецЕсли;	
			КонецЕсли;
			
		КонецЕсли;	
		
		Если ПереданМассивКонтрагентов Тогда 
			
			Для Поз = 0 По Параметры.Контрагент.ВГраница() Цикл
				
				Запрос = Новый Запрос;
				Запрос.Текст = 
				"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
				|	ДелаХраненияДокументов.Ссылка КАК Ссылка
				|ИЗ
				|	Справочник.ДелаХраненияДокументов КАК ДелаХраненияДокументов
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.НоменклатураДел.Контрагенты КАК НоменклатураДелКонтрагенты
				|		ПО (НоменклатураДелКонтрагенты.Ссылка = ДелаХраненияДокументов.НоменклатураДел)
				|			И (НоменклатураДелКонтрагенты.Контрагент В ИЕРАРХИИ (&Контрагент))
				|ГДЕ
				|	НЕ ДелаХраненияДокументов.ПометкаУдаления
				|	И НЕ ДелаХраненияДокументов.ДелоЗакрыто";
				
				Если ПолучитьФункциональнуюОпцию("ИспользоватьУчетПоОрганизациям") И ЗначениеЗаполнено(Параметры.Организация) Тогда 
					Запрос.Текст = Запрос.Текст + " И (Организация = &Организация) ";
					Запрос.УстановитьПараметр("Организация", Параметры.Организация);
				КонецЕсли;
				
				Запрос.УстановитьПараметр("Контрагент", Параметры.Контрагент[Поз]);
				врДелаДляВыбораПоКорр = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
				
				Если Поз = 0 Тогда 
					ДелаДляВыбораПоКорр = Новый Массив;
					Для Инд = 0 По врДелаДляВыбораПоКорр.ВГраница() Цикл
						ДелаДляВыбораПоКорр.Добавить(врДелаДляВыбораПоКорр[Инд]);
					КонецЦикла;	
				Иначе
					ВГраница = ДелаДляВыбораПоКорр.ВГраница();
					Для Инд = 0 По ВГраница Цикл
						Если врДелаДляВыбораПоКорр.Найти(ДелаДляВыбораПоКорр[ВГраница-Инд]) = Неопределено Тогда 
							ДелаДляВыбораПоКорр.Удалить(ВГраница-Инд);
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;	
				
			КонецЦикла;
			
		КонецЕсли;
		
		
		Если ДелаДляВыбораПоВидуДок = Неопределено
		   И ДелаДляВыбораПоКорр = Неопределено 
		   И ДелаДляВыбораПоВопрДеят = Неопределено Тогда 
			Возврат;
		КонецЕсли;	
			
		Если ДелаДляВыбораПоВидуДок = Неопределено Тогда 
			ДелаДляВыбораПоВидуДок = Новый Массив;
		КонецЕсли;
		
		Если ДелаДляВыбораПоКорр = Неопределено Тогда 
			ДелаДляВыбораПоКорр = Новый Массив;
		КонецЕсли;
		
		Если ДелаДляВыбораПоВопрДеят = Неопределено Тогда 
			ДелаДляВыбораПоВопрДеят = Новый Массив;
		КонецЕсли;
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ДелаХраненияДокументов.Ссылка КАК Ссылка,
		|	1 КАК Номер
		|ИЗ
		|	Справочник.ДелаХраненияДокументов КАК ДелаХраненияДокументов
		|ГДЕ
		|	ДелаХраненияДокументов.Ссылка В(&ДелаДляВыбораПоВидуДок)
		|	И ДелаХраненияДокументов.Ссылка В(&ДелаДляВыбораПоКорр)
		|	И ДелаХраненияДокументов.Ссылка В(&ДелаДляВыбораПоВопрДеят)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДелаХраненияДокументов.Ссылка,
		|	2
		|ИЗ
		|	Справочник.ДелаХраненияДокументов КАК ДелаХраненияДокументов
		|ГДЕ
		|	(ДелаХраненияДокументов.Ссылка В (&ДелаДляВыбораПоВидуДок)
		|				И ДелаХраненияДокументов.Ссылка В (&ДелаДляВыбораПоКорр)
		|				И НЕ ДелаХраненияДокументов.НоменклатураДел.ВопросыДеятельностиЗаполнены
		|			ИЛИ ДелаХраненияДокументов.Ссылка В (&ДелаДляВыбораПоВидуДок)
		|				И ДелаХраненияДокументов.Ссылка В (&ДелаДляВыбораПоВопрДеят)
		|				И НЕ ДелаХраненияДокументов.НоменклатураДел.КонтрагентыЗаполнены
		|			ИЛИ ДелаХраненияДокументов.Ссылка В (&ДелаДляВыбораПоКорр)
		|				И ДелаХраненияДокументов.Ссылка В (&ДелаДляВыбораПоВопрДеят)
		|				И НЕ ДелаХраненияДокументов.НоменклатураДел.ВидыДокументовЗаполнены)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДелаХраненияДокументов.Ссылка,
		|	3
		|ИЗ
		|	Справочник.ДелаХраненияДокументов КАК ДелаХраненияДокументов
		|ГДЕ
		|	(ДелаХраненияДокументов.Ссылка В (&ДелаДляВыбораПоВидуДок)
		|				И НЕ ДелаХраненияДокументов.НоменклатураДел.КонтрагентыЗаполнены
		|				И НЕ ДелаХраненияДокументов.НоменклатураДел.ВопросыДеятельностиЗаполнены
		|			ИЛИ ДелаХраненияДокументов.Ссылка В (&ДелаДляВыбораПоКорр)
		|				И НЕ ДелаХраненияДокументов.НоменклатураДел.ВидыДокументовЗаполнены
		|				И НЕ ДелаХраненияДокументов.НоменклатураДел.ВопросыДеятельностиЗаполнены
		|			ИЛИ ДелаХраненияДокументов.Ссылка В (&ДелаДляВыбораПоВопрДеят)
		|				И НЕ ДелаХраненияДокументов.НоменклатураДел.ВидыДокументовЗаполнены
		|				И НЕ ДелаХраненияДокументов.НоменклатураДел.КонтрагентыЗаполнены)";
		
		Запрос.УстановитьПараметр("ДелаДляВыбораПоВопрДеят", ДелаДляВыбораПоВопрДеят);
		Запрос.УстановитьПараметр("ДелаДляВыбораПоВидуДок", ДелаДляВыбораПоВидуДок);
		Запрос.УстановитьПараметр("ДелаДляВыбораПоКорр", ДелаДляВыбораПоКорр);
		
		Результат = Запрос.Выполнить().Выгрузить();
		
		Если Результат.Найти(1, "Номер") <> Неопределено Тогда 
			ЕстьНомер = 1;
		ИначеЕсли Результат.Найти(2, "Номер") <> Неопределено Тогда 
			ЕстьНомер = 2;
		ИначеЕсли Результат.Найти(3, "Номер") <> Неопределено Тогда 	
			ЕстьНомер = 3;
		Иначе	
			ЕстьНомер = 0;
		КонецЕсли;
		
		Если ЕстьНомер > 0 Тогда 
			ДелаДляВыбора = Новый Массив;
			Для Каждого Строка Из Результат Цикл
				Если Строка.Номер = ЕстьНомер Тогда 
					ДелаДляВыбора.Добавить(Строка.Ссылка);
				КонецЕсли;	
			КонецЦикла;
			
			Список.ТекстЗапроса = Список.ТекстЗапроса + " И СправочникДела.Ссылка В (&ДелаДляВыбора) ";
			Список.Параметры.УстановитьЗначениеПараметра("ДелаДляВыбора", ДелаДляВыбора);
		Иначе	
			Список.ТекстЗапроса = Список.ТекстЗапроса + 
			"   И НЕ СправочникДела.НоменклатураДел.ВидыДокументовЗаполнены
			|	И НЕ СправочникДела.НоменклатураДел.КонтрагентыЗаполнены
			|	И НЕ СправочникДела.НоменклатураДел.ВопросыДеятельностиЗаполнены";
		КонецЕсли;	
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьНаСписокСтандартныйОтбор(Параметры)
	
	Список.ТекстЗапроса = ИсходныйЗапросСписка;
	Если ПолучитьФункциональнуюОпцию("ИспользоватьУчетПоОрганизациям") И ЗначениеЗаполнено(Параметры.Организация) Тогда 
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор, "Организация", Параметры.Организация);
	КонецЕсли;
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор, "ДелоЗакрыто", Ложь);
	
	Список.ТекстЗапроса = Список.ТекстЗапроса + 
		" ГДЕ 
		| (&ДатаРегистрации >= НАЧАЛОПЕРИОДА(ДатаНачала, ДЕНЬ) ИЛИ ДатаНачала = ДАТАВРЕМЯ(1,1,1)) 
		| И
		| (&ДатаРегистрации <= КОНЕЦПЕРИОДА(ДатаОкончания, ДЕНЬ) ИЛИ ДатаОкончания = ДАТАВРЕМЯ(1,1,1)) 
		| ";
	
	Если ЗначениеЗаполнено(Параметры.ДатаРегистрации) Тогда 
		Список.Параметры.УстановитьЗначениеПараметра("ДатаРегистрации", Параметры.ДатаРегистрации);	
	Иначе	
		Список.Параметры.УстановитьЗначениеПараметра("ДатаРегистрации", ТекущаяДата());	
	КонецЕсли;
	
	Если Параметры.Свойство("НоменклатураДел") И ЗначениеЗаполнено(Параметры.НоменклатураДел) Тогда 
		Список.ТекстЗапроса = Список.ТекстЗапроса + "
		|И СправочникДела.ОтноситсяКНоменклатуреДел.НоменклатураДел = &Номенклатура";
		Список.Параметры.УстановитьЗначениеПараметра("Номенклатура", Параметры.НоменклатураДел);
	КонецЕсли;
	
	Если Параметры.Свойство("Подразделение") И ЗначениеЗаполнено(Параметры.Подразделение) Тогда
		ПустоеИПодразделение = Делопроизводство.ПолучитьПодразделениеИПустуюСсылку(Параметры.Подразделение);
		
		// если для текущего подразделения нет дел, то даем списывать в родительское
		ТекущееПодразделение = Параметры.Подразделение;
		Пока ЗначениеЗаполнено(ТекущееПодразделение) Цикл
			Запрос = Новый Запрос;
			Запрос.Текст = 
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
			|	ИСТИНА
			|ИЗ
			|	Справочник.ДелаХраненияДокументов КАК ДелаХраненияДокументов
			|ГДЕ
			|	ДелаХраненияДокументов.Подразделение = &Подразделение
			|	И (&ДатаРегистрации >= НАЧАЛОПЕРИОДА(ДелаХраненияДокументов.ДатаНачала, ДЕНЬ)
			|			ИЛИ ДелаХраненияДокументов.ДатаНачала = ДАТАВРЕМЯ(1, 1, 1))
			|	И (&ДатаРегистрации <= КОНЕЦПЕРИОДА(ДелаХраненияДокументов.ДатаОкончания, ДЕНЬ)
			|			ИЛИ ДелаХраненияДокументов.ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1))";
			Запрос.УстановитьПараметр("Подразделение", ТекущееПодразделение);
			Запрос.УстановитьПараметр("ДатаРегистрации", ?(ЗначениеЗаполнено(Параметры.ДатаРегистрации), Параметры.ДатаРегистрации, ТекущаяДата()));	
		
			Если Не Запрос.Выполнить().Пустой() Тогда 
				ПустоеИПодразделение.Добавить(ТекущееПодразделение);
				Прервать;
			КонецЕсли;	
		
			ТекущееПодразделение = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТекущееПодразделение, "Родитель");;
		КонецЦикла;
		
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор,
			"Подразделение",
			ПустоеИПодразделение,
			ВидСравненияКомпоновкиДанных.ВСписке);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СохранитьНастройку()
	
	ХранилищеОбщихНастроек.Сохранить("ФормаВыбораДелаХраненияДокументов", "ПервыйЗапуск", Ложь);
	ХранилищеОбщихНастроек.Сохранить("ФормаВыбораДелаХраненияДокументов", "ПоказыватьТолькоПодходящиеДела", ПоказыватьТолькоПодходящиеДела);
	
КонецПроцедуры

&НаСервере
Процедура ПоказатьУдаленные()
	
	Если ПоказыватьУдаленные Тогда
		ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбораДинамическогоСписка(Список, "ПометкаУдаления");
	Иначе
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список, "ПометкаУдаления", Ложь);
	КонецЕсли;
	
	Элементы.ПоказыватьУдаленные.Пометка = ПоказыватьУдаленные;
	
КонецПроцедуры

#КонецОбласти
