#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Параметры.ТекущаяСтрока) И ДокументооборотПраваДоступа.ПолучитьПраваПоОбъекту(Параметры.ТекущаяСтрока).Чтение Тогда 	
		ТекущаяПапка = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Параметры.ТекущаяСтрока, "Папка");
		Элементы.Папки.ТекущаяСтрока = ТекущаяПапка;
	Иначе	
		ТекущаяПапка = Справочники.ПапкиПроектов.ПустаяСсылка();
	КонецЕсли;
	
	ТекущийПользователь = ПользователиКлиентСервер.ТекущийПользователь();
	Список.Параметры.УстановитьЗначениеПараметра("ТекущийПользователь", ТекущийПользователь);
	
	Если РольДоступна("КонтрольПроектов") Или РаботаСПроектами.НетСвоихПроектов(ТекущийПользователь) Тогда 
		ВидПросмотра = Перечисления.ВидыПросмотраСпискаОбъектов.ПоПапкам;
		ТолькоМоиПроекты = Ложь;
	Иначе
		ВидПросмотра = Перечисления.ВидыПросмотраСпискаОбъектов.Списком;
		ТолькоМоиПроекты = Истина;
	КонецЕсли;	
	
	ПереключитьВидПросмотра(ТекущаяПапка);
	ПереключитьОтборПоПроектам();
	
	ПоказыватьУдаленные = Ложь;
	ПоказатьУдаленные();
	
	Если Параметры.Отбор.Свойство("ПометкаУдаления") И Не Параметры.Отбор.ПометкаУдаления Тогда 
		Элементы.ПоказыватьУдаленные.Видимость = Ложь;
	КонецЕсли;
	
	Если РольДоступна("ПолныеПрава") Тогда 
		Элементы.Папки.ОтображатьКорень = Истина;
	Иначе	
		Элементы.Папки.ОтображатьКорень = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	ВидПросмотра = Настройки["ВидПросмотра"];
	Если Не ЗначениеЗаполнено(ВидПросмотра) Тогда
		ВидПросмотра = Перечисления.ВидыПросмотраСпискаОбъектов.ПоПапкам;
	КонецЕсли;
	
	ТекущаяПапка = Настройки["ТекущаяПапка"];
	Элементы.Папки.ТекущаяСтрока = ТекущаяПапка;
	
	ПереключитьВидПросмотра(ТекущаяПапка);
	
	Если Не Параметры.Отбор.Свойство("ПометкаУдаления") Тогда
		ПоказыватьУдаленные = Настройки["ПоказыватьУдаленные"];
		ПоказатьУдаленные();
	КонецЕсли;
	
	ТолькоМоиПроекты = Настройки["ТолькоМоиПроекты"];
	ПереключитьОтборПоПроектам();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ТолькоМоиПроектыПриИзменении(Элемент)
	
	ПереключитьОтборПоПроектам();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыПапки

&НаКлиенте
Процедура ПапкиПриАктивизацииСтроки(Элемент)
	
	ПодключитьОбработчикОжидания("ОбработкаОжидания", 0.2, Истина);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Отказ = Истина;
	
	Если Копирование Тогда
		ТекущиеДанные = Элемент.ТекущиеДанные;
		Если ТекущиеДанные = Неопределено Тогда 
			Возврат;
		КонецЕсли;	
		
		ТекущаяСтрока = Элемент.ТекущаяСтрока;
		Если ТипЗнч(ТекущаяСтрока) <> Тип("СправочникСсылка.Проекты") Тогда 
			Возврат;
		КонецЕсли;	
		
		Если Элемент.ТекущиеДанные.ЭтоГруппа Тогда 
			Возврат;
		КонецЕсли;
		
		ОписаниеОповещения = Новый ОписаниеОповещения(
			"СписокПередНачаломДобавленияПродолжение",
			ЭтотОбъект,
			Новый Структура("ТекущаяСтрока", ТекущаяСтрока));
			
		ЗадатьВопросКопирования = ТекущиеДанные.ЕстьПроектныеЗадачи ИЛИ ТекущиеДанные.ЕстьКонтрольныеТочки;
				
		Если ЗадатьВопросКопирования Тогда
			
			ТекстВопроса = НСтр("ru = 'Копировать ""%1"" проекта ""%2""?'; en = 'Copy  ""%1"" of ""%2"" project?'");
			
			ТекстПараметраВопроса = ""; 
			Если ТекущиеДанные.ЕстьПроектныеЗадачи Тогда
				ТекстПараметраВопроса = ТекстПараметраВопроса + "задачи";
			КонецЕсли;
			Если ТекущиеДанные.ЕстьКонтрольныеТочки Тогда
				Если ТекущиеДанные.ЕстьПроектныеЗадачи Тогда
					ТекстПараметраВопроса = ТекстПараметраВопроса + " и ";
				КонецЕсли;
				ТекстПараметраВопроса = ТекстПараметраВопроса + "контрольные точки";
			КонецЕсли;
			
			ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				ТекстВопроса,
				ТекстПараметраВопроса,
		    	Строка(ТекущаяСтрока));
			ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		Иначе
			ВыполнитьОбработкуОповещения(ОписаниеОповещения, КодВозвратаДиалога.Нет);
		КонецЕсли;	
		
	Иначе	
		ЗначенияЗаполнения = Новый Структура;
		ЗначенияЗаполнения.Вставить("Папка", Элементы.Папки.ТекущаяСтрока);
	
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("ЗначенияЗаполнения", ЗначенияЗаполнения);
	
		Открытьформу("Справочник.Проекты.ФормаОбъекта", ПараметрыФормы, Элементы.Список);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПередНачаломДобавленияПродолжение(Результат, Параметры) Экспорт 
	
	ЗначенияЗаполнения = Новый Структура;
	ЗначенияЗаполнения.Вставить("Папка", Элементы.Папки.ТекущаяСтрока);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ЗначенияЗаполнения", ЗначенияЗаполнения);
	ПараметрыФормы.Вставить("ЗначениеКопирования", Параметры.ТекущаяСтрока);
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ПараметрыФормы.Вставить("КопироватьЗадачиКонтрольныеТочки", Истина);
	КонецЕсли;

	ОткрытьФорму("Справочник.Проекты.Форма.ФормаЭлемента", ПараметрыФормы, ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура РежимПросмотраСписком(Команда)
	
	ВидПросмотра = ПредопределенноеЗначение("Перечисление.ВидыПросмотраСпискаОбъектов.Списком");
	
	ПереключитьВидПросмотра(Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура РежимПросмотраПоПапкам(Команда)
	
	ВидПросмотра = ПредопределенноеЗначение("Перечисление.ВидыПросмотраСпискаОбъектов.ПоПапкам");
	
	Если Элементы.Список.ТекущиеДанные <> Неопределено Тогда 
		ТекущаяПапка = Элементы.Список.ТекущиеДанные.Папка;
		Элементы.Папки.ТекущаяСтрока = ТекущаяПапка;
	Иначе	
		ТекущаяПапка = Элементы.Папки.ТекущаяСтрока;
	КонецЕсли;
	
	ПереключитьВидПросмотра(ТекущаяПапка);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказыватьУдаленные(Команда)
	
	ПоказыватьУдаленные = Не ПоказыватьУдаленные;
	
	ПоказатьУдаленные();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОбработкаОжидания()
	
	Если Элементы.Папки.ТекущаяСтрока <> ТекущаяПапка Тогда 
		
		Список.Параметры.УстановитьЗначениеПараметра("Группа", Элементы.Папки.ТекущаяСтрока);
		
		ТекущаяПапка = Элементы.Папки.ТекущаяСтрока;
		
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура ПереключитьВидПросмотра(ТекПапка)

	Элементы.РежимПросмотраСписком.Пометка = Ложь;
	Элементы.РежимПросмотраПоПапкам.Пометка = Ложь;
	
	Если ВидПросмотра = Перечисления.ВидыПросмотраСпискаОбъектов.Списком Тогда
		
		Элементы.Папки.Видимость = Ложь;
		
		Параметр = Список.Параметры.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Группа"));
		Если Параметр <> Неопределено И Параметр.Использование Тогда 
			Параметр.Использование = Ложь;
		КонецЕсли;	
		
		Элементы.РежимПросмотраСписком.Пометка = Истина;
		
	ИначеЕсли ВидПросмотра = Перечисления.ВидыПросмотраСпискаОбъектов.ПоПапкам Тогда
		
		Элементы.Папки.Видимость = Истина;
		
		Список.Параметры.УстановитьЗначениеПараметра("Группа", ТекПапка);
		
		Элементы.РежимПросмотраПоПапкам.Пометка = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПоказатьУдаленные()
	
	Если ПоказыватьУдаленные Тогда
		ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбораДинамическогоСписка(Список, "ПометкаУдаления");
		ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбораДинамическогоСписка(Папки, "ПометкаУдаления");
	Иначе
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список, "ПометкаУдаления", Ложь,
			ВидСравненияКомпоновкиДанных.Равно, , Истина);
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Папки, "ПометкаУдаления", Ложь,
			ВидСравненияКомпоновкиДанных.Равно, , Истина);
	КонецЕсли;
	
	Элементы.ПоказыватьУдаленные.Пометка = ПоказыватьУдаленные;
	
КонецПроцедуры

&НаСервере
Процедура ПереключитьОтборПоПроектам()
	
	Список.Параметры.УстановитьЗначениеПараметра("ТолькоМоиПроекты", ТолькоМоиПроекты);
	
КонецПроцедуры

#КонецОбласти
