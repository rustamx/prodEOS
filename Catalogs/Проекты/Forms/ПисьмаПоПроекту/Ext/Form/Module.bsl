#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Проект = Параметры.Проект;
	
	Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = 'Письма по проекту ""%1""'; en = 'Emails by project ""%1""'"),
		Проект);
	
	ЗаполнитьДеревоПереписки();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	РазвернутьДеревоПисем();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если РаботаСПрочтениямиКлиент.ПроверитьНеобходимостьОбновления(ИмяСобытия, Параметр, "Почта") Тогда
		ОбновитьТекущийСписок();
	КонецЕсли;
	
	Если ИмяСобытия = "ПисьмаИзменены" Тогда
		ОбновитьТекущийСписок();
	КонецЕсли;
	
	Если ИмяСобытия = "ПисьмоОтправлено" Тогда
		ЗаполнитьДеревоПереписки();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыДеревоПисем

&НаКлиенте
Процедура ДеревоПисемВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПоказатьЗначение(, Элементы.ДеревоПисем.ТекущиеДанные.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоПисемПередНачаломИзменения(Элемент, Отказ)
	
	Отказ = Истина;
	ПоказатьЗначение(, Элементы.ДеревоПисем.ТекущиеДанные.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоПисемПриАктивизацииСтроки(Элемент)
	
	ПодключитьОбработчикОжидания("ОбработатьАктивизациюСтрокиСписка", 0.5, Истина);
	
	ТекущиеДанные = Элементы.ДеревоПисем.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		УстановитьДоступностьКоманд(ТекущиеДанные);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыВложения

&НаКлиенте
Процедура ВложенияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если Элемент.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	
	ВстроеннаяПочтаКлиент.ОткрытьВложение(Элемент.ТекущиеДанные.Ссылка, УникальныйИдентификатор);
	
КонецПроцедуры

&НаКлиенте
Процедура ВложенияПриАктивизацииСтроки(Элемент)
	
	УстановитьДоступностьКомандРаботыСВложением();
	
КонецПроцедуры

&НаКлиенте
Процедура ВложенияПередНачаломИзменения(Элемент, Отказ)

	Отказ = Истина;
	
	Если Элемент.ТекущиеДанные <> Неопределено Тогда
		ПоказатьЗначение(, Элементы.Вложения.ТекущиеДанные.Ссылка);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПредпросмотрHTMLПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ВстроеннаяПочтаКлиент.ОткрытьСсылку(ДанныеСобытия.Href, ДанныеСобытия.Element, ТекущееПисьмо, Элемент.Документ);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Обновить(Команда)
	
	ЗаполнитьДеревоПереписки();
	РазвернутьДеревоПисем();
	
КонецПроцедуры

&НаКлиенте
Процедура Ответить(Команда)
	
	ТекущиеДанные = Элементы.ДеревоПисем.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ВстроеннаяПочтаКлиент.ОтветитьНаПисьмо(ТекущиеДанные.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтветитьВсем(Команда)
	
	ТекущиеДанные = Элементы.ДеревоПисем.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ВстроеннаяПочтаКлиент.ОтветитьВсемНаПисьмо(ТекущиеДанные.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура Переслать(Команда)
	
	ТекущиеДанные = Элементы.ДеревоПисем.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ВстроеннаяПочтаКлиент.ПереслатьПисьмо(ТекущиеДанные.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьВложениеКак(Команда)
	
	Если Элементы.Вложения.ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Элементы.Вложения.ВыделенныеСтроки.Количество() > 1 Тогда
		СписокФайловДляВыгрузки = Новый СписокЗначений;
		Для каждого ВыбраннаяСтрока Из Элементы.Вложения.ВыделенныеСтроки Цикл
			ДанныеСтроки = Элементы.Вложения.ДанныеСтроки(ВыбраннаяСтрока);
			Если ЗначениеЗаполнено(ДанныеСтроки.Ссылка) Тогда
				СписокФайловДляВыгрузки.Добавить(ДанныеСтроки.Ссылка);
			КонецЕсли;
		КонецЦикла;
		Если СписокФайловДляВыгрузки.Количество() > 0 Тогда
			ВстроеннаяПочтаКлиент.СохранитьВложенияКак(СписокФайловДляВыгрузки, УникальныйИдентификатор);
		КонецЕсли;
	Иначе
		ДанныеФайла = РаботаСФайламиВызовСервера.ДанныеФайлаДляСохранения(
			Элементы.Вложения.ТекущиеДанные.Ссылка,
			Неопределено,
			ЭтаФорма.УникальныйИдентификатор);
		КомандыРаботыСФайламиКлиент.СохранитьКак(ДанныеФайла, УникальныйИдентификатор);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПросмотретьВложение(Команда)
	
	ТекущиеДанные = Элементы.Вложения.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ВстроеннаяПочтаКлиент.ОткрытьВложение(ТекущиеДанные.Ссылка, УникальныйИдентификатор);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура РазвернутьДеревоПисем()
	
	Для Каждого СтрокаДерева Из ДеревоПисем.ПолучитьЭлементы() Цикл
		Элементы.ДеревоПисем.Развернуть(СтрокаДерева.ПолучитьИдентификатор(), Истина);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьАктивизациюСтрокиСписка()
	
	Если Элементы.ДеревоПисем.ТекущаяСтрока = Неопределено
	 Или ТипЗнч(Элементы.ДеревоПисем.ТекущаяСтрока) = Тип("СтрокаГруппировкиДинамическогоСписка") Тогда
		Предпросмотр = "<html><body></body></html>";
		Вложения.Очистить();
		Возврат;
	КонецЕсли;
	
	Результат = СформироватьДанныеДляПредпросмотраПисьма(
		Элементы.ДеревоПисем.ТекущиеДанные.Ссылка,
		УникальныйИдентификатор);
		
	Предпросмотр = Результат.HTMLПредставлениеПисьма;
		
	Вложения.Очистить();
	Если Результат.Свойство("Вложения") Тогда
		Для Каждого Вложение Из Результат.Вложения Цикл
			СтрокаВложение = Вложения.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаВложение, Вложение);
		КонецЦикла;
	КонецЕсли;
	
	Если Вложения.Количество() > 0 Тогда
		Элементы.СтраницыПредпросмотр.ТекущаяСтраница = Элементы.СтраницаПредпросмотрСВложениями;
	Иначе
		Элементы.СтраницыПредпросмотр.ТекущаяСтраница = Элементы.СтраницаПредпросмотрБезВложений;
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция СформироватьДанныеДляПредпросмотраПисьма(Письмо, УникальныйИдентификаторФормы)
	
	Результат = Новый Структура("HTMLПредставлениеПисьма");
	
	Результат.HTMLПредставлениеПисьма = ВстроеннаяПочтаСервер.СформироватьHTMLПредставлениеПисьма(
		Письмо,
		УникальныйИдентификаторФормы,
		Истина, // ВыводитьШапку
		,
		,
		Ложь); // ВыводитьИсториюПереписки
	
	Если ЗначениеЗаполнено(Письмо) Тогда
		
		Вложения = Новый Массив;
		
		ФайлыПисьма = ВстроеннаяПочтаСервер.ПолучитьФайлыПисьма(
			Письмо, // Письмо
			Истина, // ФормироватьРазмерПредставление
			Ложь, // ВключатьПомеченныеНаУдаление
			Ложь,    // ТолькоСИдентификаторами
			Истина); // ТолькоБезИдентификаторов  - чтобы картинки в HTML не показывать
		
		Для каждого ФайлыПисьмаСтрока Из ФайлыПисьма Цикл
			
			Вложение = Новый Структура(
				"ИмяФайла,
				|ИндексКартинки,
				|ПометкаУдаления,
				|Представление,
				|Размер,
				|РазмерПредставление,
				|Редактирует,
				|РедактируетТекущийПользователь,
				|Ссылка");
			
			ЗаполнитьЗначенияСвойств(Вложение, ФайлыПисьмаСтрока);
			Вложения.Добавить(Вложение);
			
		КонецЦикла;
		
		Результат.Вставить("Вложения", Вложения);
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура УстановитьДоступностьКоманд(ТекущиеДанные)
	
	ЭтоВходящееПисьмо = ВстроеннаяПочтаКлиентСервер.ЭтоВходящееПисьмо(ТекущиеДанные.Ссылка);
	ЭтоИсходящееПисьмо = ВстроеннаяПочтаКлиентСервер.ЭтоИсходящееПисьмо(ТекущиеДанные.Ссылка);
	
	Элементы.Ответить.Доступность = ЭтоВходящееПисьмо;
	Элементы.ОтветитьВсем.Доступность = ЭтоВходящееПисьмо;
	Элементы.Переслать.Доступность = ЭтоВходящееПисьмо Или ЭтоИсходящееПисьмо;
	
	Элементы.ДеревоПисемКонтекстноеМенюОтветить.Доступность = ЭтоВходящееПисьмо;
	Элементы.ДеревоПисемКонтекстноеМенюПереслать.Доступность = ЭтоВходящееПисьмо Или ЭтоИсходящееПисьмо;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьТекущийСписок()
	
	Элементы.ДеревоПисем.Обновить();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДеревоПереписки()
	
	ДеревоПисем.ПолучитьЭлементы().Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВходящееПисьмо.Ссылка
	|ИЗ
	|	Документ.ВходящееПисьмо КАК ВходящееПисьмо
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СвязиДокументов КАК СвязиДокументов
	|		ПО ВходящееПисьмо.Ссылка = СвязиДокументов.Документ
	|			И (СвязиДокументов.ТипСвязи = ЗНАЧЕНИЕ(Справочник.ТипыСвязей.ПолученоВОтветНаПисьмо))
	|ГДЕ
	|	ВходящееПисьмо.Проект = &Проект
	|	И СвязиДокументов.СвязанныйДокумент ЕСТЬ NULL 
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ИсходящееПисьмо.Ссылка
	|ИЗ
	|	Документ.ИсходящееПисьмо КАК ИсходящееПисьмо
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СвязиДокументов КАК СвязиДокументов
	|		ПО ИсходящееПисьмо.Ссылка = СвязиДокументов.Документ
	|			И (СвязиДокументов.ТипСвязи = ЗНАЧЕНИЕ(Справочник.ТипыСвязей.ПисьмоОтправленоВОтветНа)
	|				ИЛИ СвязиДокументов.ТипСвязи = ЗНАЧЕНИЕ(Справочник.ТипыСвязей.ПересылкаПисьма))
	|ГДЕ
	|	ИсходящееПисьмо.Проект = &Проект
	|	И СвязиДокументов.СвязанныйДокумент ЕСТЬ NULL ";
	
	Запрос.УстановитьПараметр("Проект", Проект);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		КорневоеПисьмо = Выборка.Ссылка;	
		
		КорневойУровень = Истина;
		ЗаполнитьУзелДереваПереписки(ДеревоПисем.ПолучитьЭлементы(), КорневоеПисьмо, КорневойУровень);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура НайтиВДеревеПоСсылке(КоллекцияЭлементовОдногоУровня, ИскомаяСсылка, Индекс)
	
	Если ТипЗнч(Индекс) = Тип("Число") И Индекс > -1 Тогда
		Возврат;
	КонецЕсли;
	
	Для каждого СтрокаДерева Из КоллекцияЭлементовОдногоУровня Цикл
		
		Если СтрокаДерева.Ссылка = ИскомаяСсылка Тогда
			Индекс = СтрокаДерева.ПолучитьИдентификатор();
		Иначе
			НайтиВДеревеПоСсылке(СтрокаДерева.ПолучитьЭлементы(), ИскомаяСсылка, Индекс);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьУзелДереваПереписки(ЭлементыДерева, ПисьмоРодитель, Знач КорневойУровень)
	
	СтрокаКорня = ЭлементыДерева.Добавить();
	Если ВстроеннаяПочтаКлиентСервер.ЭтоВходящееПисьмо(ПисьмоРодитель) Тогда
		
		РеквизитыПисьма = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ПисьмоРодитель,
			"Дата, ОтправительАдресат, Тема, ЕстьВложения, Размер, Важность, Проект");
			
		Если РеквизитыПисьма.Проект <> Проект Тогда 
			Возврат;
		КонецЕсли;	
			
		РеквизитыПисьма.Вставить("ПолучателиПисьмаСтрокой", 
			ВстроеннаяПочтаСервер.ТаблицаПолучателейВСтроку(ПисьмоРодитель.ПолучателиПисьма));
		ОтправительАдресат = РеквизитыПисьма.ОтправительАдресат;
		ДанныеАдресата = ВстроеннаяПочтаСервер.ПолучитьПредставлениеИКонтактАдресата(ОтправительАдресат);
		РеквизитыПисьма.Вставить("ОтправительАдрес", ОтправительАдресат.Адрес);
		РеквизитыПисьма.Вставить("ОтправительОтображаемоеИмя", ДанныеАдресата.Представление);
		РеквизитыПисьма.Вставить("ОтправительКонтакт", ДанныеАдресата.Контакт);
		
		СтрокаКорня.Ссылка = ПисьмоРодитель;
		СтрокаКорня.Дата = РеквизитыПисьма.Дата;
		
		СтрокаКорня.Кому = РеквизитыПисьма.ПолучателиПисьмаСтрокой;
		СтрокаКорня.ОтКого = РеквизитыПисьма.ОтправительОтображаемоеИмя;
		
		СтрокаКорня.Тема = РеквизитыПисьма.Тема;
		
		Если РеквизитыПисьма.Важность = Перечисления.ВажностьПисем.Высокая Тогда
			СтрокаКорня.ВажностьНомерКартинки = 2;
		ИначеЕсли РеквизитыПисьма.Важность = Перечисления.ВажностьПисем.Низкая ТОгда
			СтрокаКорня.ВажностьНомерКартинки = 0;
		Иначе
			СтрокаКорня.ВажностьНомерКартинки = 1;
		КонецЕсли;
		
		СтрокаКорня.Размер = РеквизитыПисьма.Размер / 1024;
		СтрокаКорня.ЕстьВложения = РеквизитыПисьма.ЕстьВложения;
		СтрокаКорня.НомерКартинки = 0;
		СтрокаКорня.Вид = ?(ВстроеннаяПочтаКлиентСервер.ЭтоВходящееПисьмо(ПисьмоРодитель), 0, 1);
		
	ИначеЕсли ВстроеннаяПочтаКлиентСервер.ЭтоИсходящееПисьмо(ПисьмоРодитель) Тогда
		
		РеквизитыПисьма = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ПисьмоРодитель,
			"Дата, Тема, ЕстьВложения, Размер, Важность, УчетнаяЗапись, Проект");
			
		Если РеквизитыПисьма.Проект <> Проект Тогда 
			Возврат;
		КонецЕсли;	
			
		РеквизитыПисьма.Вставить("ПолучателиПисьмаСтрокой",
			ВстроеннаяПочтаСервер.ТаблицаПолучателейВСтроку(ПисьмоРодитель.ПолучателиПисьма));
		СтрокаКорня.Ссылка = ПисьмоРодитель;
		СтрокаКорня.Дата = РеквизитыПисьма.Дата;
		
		СтрокаКорня.Кому = РеквизитыПисьма.ПолучателиПисьмаСтрокой;
		СтрокаКорня.ОтКого = Справочники.УчетныеЗаписиЭлектроннойПочты.ПолучитьПредставлениеАдреса(РеквизитыПисьма.УчетнаяЗапись);
		
		СтрокаКорня.Тема = РеквизитыПисьма.Тема;
		
		Если РеквизитыПисьма.Важность = Перечисления.ВажностьПисем.Высокая Тогда
			СтрокаКорня.ВажностьНомерКартинки = 2;
		ИначеЕсли РеквизитыПисьма.Важность = Перечисления.ВажностьПисем.Низкая ТОгда
			СтрокаКорня.ВажностьНомерКартинки = 0;
		Иначе
			СтрокаКорня.ВажностьНомерКартинки = 1;
		КонецЕсли;
		
		СтрокаКорня.Размер = РеквизитыПисьма.Размер / 1024;
		СтрокаКорня.ЕстьВложения = РеквизитыПисьма.ЕстьВложения;
		СтрокаКорня.НомерКартинки = 0;
		СтрокаКорня.Вид = ?(ВстроеннаяПочтаКлиентСервер.ЭтоВходящееПисьмо(ПисьмоРодитель), 0, 1);
		
	КонецЕсли;
	
	Таблица = Новый Массив;
	ВстроеннаяПочтаСервер.ПолучитьПодчиненныеПисьма(ПисьмоРодитель, Таблица);
	Для НомерПисьма = 0 По Таблица.Количество() - 1 Цикл
		Строка = Таблица[НомерПисьма];
		
		Если Не ВстроеннаяПочтаКлиентСервер.ЭтоПисьмо(Строка.Ссылка) Тогда 
			Продолжить;
		КонецЕсли;	
			
		ЗаполнитьУзелДереваПереписки(СтрокаКорня.ПолучитьЭлементы(), Строка.Ссылка, Ложь);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьДоступностьКомандРаботыСВложением()
	
	Если Элементы.Вложения.ТекущаяСтрока = Неопределено Тогда
		Элементы.ПросмотретьВложение.Доступность = Ложь;
		Элементы.СохранитьВложениеКак.Доступность = Ложь;
	Иначе
		ТекущиеДанные = Элементы.Вложения.ТекущиеДанные;
		Элементы.ПросмотретьВложение.Доступность = Истина;
		Элементы.СохранитьВложениеКак.Доступность = Истина;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
