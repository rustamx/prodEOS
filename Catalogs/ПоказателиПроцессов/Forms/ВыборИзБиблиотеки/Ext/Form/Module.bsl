#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	// Вариант формы.
	УстановитьВариантФормы();
	
	// Типы основания.
	ТипыОснования.ЗагрузитьЗначения(
		Справочники.ПоказателиПроцессов.ТипыОснованияБиблиотечныхПоказателей());
	Для Каждого ТипОснования Из ТипыОснования Цикл
		ТипОснования.Представление = Строка(ТипОснования.Значение);
	КонецЦикла;
	ТипыОснования.СортироватьПоПредставлению();
	Если ТекущийТипОснования = Неопределено Тогда
		Если ТипыОснования.Количество() <> 0 Тогда
			ТекущийТипОснования = ТипыОснования[0].Значение;
		КонецЕсли;
	Иначе
		Элементы.ТипыОснования.ТекущаяСтрока =
			ТипыОснования.НайтиПоЗначению(ТекущийТипОснования).ПолучитьИдентификатор();
	КонецЕсли;
	
	// Основания.
	ОбновитьТаблицуОснованияНаСервере();
	Если ТекущееОснование = Неопределено Тогда
		Если Основания.Количество() <> 0 Тогда
			ТекущееОснование = Основания[0].Значение;
		КонецЕсли;
	Иначе
		Элементы.Основания.ТекущаяСтрока =
			Основания.НайтиПоЗначению(ТекущееОснование).ПолучитьИдентификатор();
	КонецЕсли;
	
	// Варианты расчета.
	ВариантыРасчета.ЗагрузитьЗначения(
		Справочники.ПоказателиПроцессов.ВариантыРасчетаБиблиотечныхПоказателей());
	Для Каждого ВариантРасчета Из ВариантыРасчета Цикл
		ВариантРасчета.Представление =
			Справочники.ПоказателиПроцессов.ПредставлениеВариантаРасчета(ВариантРасчета.Значение);
	КонецЦикла;
	ВариантыРасчета.СортироватьПоПредставлению();
	Если ТекущийВариантРасчета = Неопределено Тогда
		Если ВариантыРасчета.Количество() <> 0 Тогда
			ТекущийВариантРасчета = ВариантыРасчета[0].Значение;
			ТекущийВариантРасчетаТекст = ВариантыРасчета[0].Представление;
		КонецЕсли;
	Иначе
		ИндексТекущегоЭлемента = Неопределено;
		Для Каждого ЭлементСписка Из ВариантыРасчета Цикл
			Если ЭлементСписка.Значение.ДанныеДляРасчета = ТекущийВариантРасчета.ДанныеДляРасчета
				И ЭлементСписка.Значение.СпособРасчета = ТекущийВариантРасчета.СпособРасчета Тогда
				ИндексТекущегоЭлемента = ЭлементСписка.ПолучитьИдентификатор();
				Прервать;
			КонецЕсли;
		КонецЦикла;
		Элементы.ВариантыРасчета.ТекущаяСтрока = ИндексТекущегоЭлемента;
	КонецЕсли;
	
	// Варианты отбора.
	ОбновитьТаблицуВариантыОтбора();
	
	УстановитьОтображениеКоманднойПанели();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьДоступностьЭлементов();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТипыОснования

&НаКлиенте
Процедура ТипыОснованияПриАктивизацииСтроки(Элемент)
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		НовыйТекущийТипОснования = Неопределено;
	Иначе
		НовыйТекущийТипОснования = ТекущиеДанные.Значение;
	КонецЕсли;
	
	Если НовыйТекущийТипОснования = ТекущийТипОснования Тогда
		Возврат;
	КонецЕсли;
	
	ТекущийТипОснования = НовыйТекущийТипОснования;
	ТекущийВариантОтбора = Неопределено;
	ТекущийВариантОтбораТекст = "";
	ПодключитьОбработчикОжидания("ОбновитьТаблицуОснования", 0.1, Истина);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыОснования

&НаКлиенте
Процедура ОснованияПриАктивизацииСтроки(Элемент)
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		НовыйТекущееОснование = Неопределено;
	Иначе
		НовыйТекущееОснование = ТекущиеДанные.Значение;
	КонецЕсли;
	
	Если НовыйТекущееОснование = ТекущееОснование Тогда
		Возврат;
	КонецЕсли;
	
	ТекущееОснование = НовыйТекущееОснование;
	ТекущийВариантОтбора = Неопределено;
	ТекущийВариантОтбораТекст = "";
	УстановитьДоступностьЭлементов();
	
КонецПроцедуры

&НаКлиенте
Процедура ОснованияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ВыполнитьДалее();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыВариантыРасчета

&НаКлиенте
Процедура ВариантыРасчетаВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если ВариантФормы = "ВыборВариантаРасчета" Тогда
		ВыполнитьГотово();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВариантыРасчетаПриАктивизацииСтроки(Элемент)
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		НовыйТекущийВариантРасчета = Неопределено;
		НовыйТекущийВариантРасчетаТекст = "";
	Иначе
		НовыйТекущийВариантРасчета = ТекущиеДанные.Значение;
		НовыйТекущийВариантРасчетаТекст = ТекущиеДанные.Представление;
	КонецЕсли;
	
	Если НовыйТекущийВариантРасчетаТекст = ТекущийВариантРасчетаТекст Тогда
		Возврат;
	КонецЕсли;
	
	Если ВариантФормы = "ВыборВариантаРасчета" Тогда
		ТекущийВариантРасчета = НовыйТекущийВариантРасчета;
		ТекущийВариантРасчетаТекст = НовыйТекущийВариантРасчетаТекст;
	Иначе
		ПодключитьОбработчикОжидания("ОбновитьТаблицуВариантыОтбораКлиент", 0.2, Истина);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыВариантыОтбора

&НаКлиенте
Процедура ВариантыОтбораПриАктивизацииСтроки(Элемент)
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		ТекущийВариантОтбора = Неопределено;
		ТекущийВариантОтбораТекст = "";
	Иначе
		ТекущийВариантОтбора = ТекущиеДанные.Значение;
		ТекущийВариантОтбораТекст = ТекущиеДанные.Представление;
	КонецЕсли;
	
	УстановитьДоступностьЭлементов();
	
КонецПроцедуры

&НаКлиенте
Процедура ВариантыОтбораВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ВыполнитьГотово();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Далее(Команда)
	
	ВыполнитьДалее();
	
КонецПроцедуры

&НаКлиенте
Процедура Назад(Команда)
	
	НазадНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура Готово(Команда)
	
	ВыполнитьГотово();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ДалееНаСервере()
	
	Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаВариантПоказателя;
	УстановитьОтображениеКоманднойПанели();
	
	ОбновитьТаблицуВариантыОтбора();
	
КонецПроцедуры

&НаСервере
Процедура НазадНаСервере()
	
	Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаОснование;
	УстановитьОтображениеКоманднойПанели();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтображениеКоманднойПанели()
	
	Если ВариантФормы = "СозданиеПоказателя"
		Или ВариантФормы = "ВыборВариантаОтбора" Тогда
		
		Если Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаОснование Тогда
			
			Элементы.Назад.Видимость = Ложь;
			Элементы.Далее.Видимость = Истина;
			Элементы.Готово.Видимость = Ложь;
			
			Элементы.Далее.КнопкаПоУмолчанию = Истина;
			
		ИначеЕсли Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаВариантПоказателя Тогда
			
			Элементы.Назад.Видимость = Истина;
			Элементы.Далее.Видимость = Ложь;
			Элементы.Готово.Видимость = Истина;
			
			Элементы.Готово.КнопкаПоУмолчанию = Истина;
			
		КонецЕсли;
		
	ИначеЕсли ВариантФормы = "ВыборВариантаРасчета" Тогда
		
		Элементы.Назад.Видимость = Ложь;
		Элементы.Далее.Видимость = Ложь;
		Элементы.Готово.Видимость = Истина;
		
		Элементы.Готово.КнопкаПоУмолчанию = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьТаблицуОснования()
	
	ОбновитьТаблицуОснованияНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьТаблицуОснованияНаСервере()
	
	Основания.Очистить();
	Если Не ЗначениеЗаполнено(ТекущийТипОснования) Тогда
		Возврат;
	КонецЕсли;
	
	МетаданныеТипа = Метаданные.НайтиПоТипу(ТекущийТипОснования);
	
	ТекстЗапроса = Новый Массив;
	ТекстЗапроса.Добавить(
		СтрШаблон(
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ТаблицаСправочника.Ссылка КАК Ссылка,
			|	ТаблицаСправочника.Представление КАК Представление
			|ИЗ
			|	Справочник.%1 КАК ТаблицаСправочника
			|ГДЕ
			|	ТаблицаСправочника.ПометкаУдаления = ЛОЖЬ",
			МетаданныеТипа.Имя));
	
	// Шаблоны процессов
	Если ТекущийТипОснования = Тип("СправочникСсылка.ШаблоныИсполнения")
		Или ТекущийТипОснования = Тип("СправочникСсылка.ШаблоныКомплексныхБизнесПроцессов")
		Или ТекущийТипОснования = Тип("СправочникСсылка.ШаблоныОзнакомления")
		Или ТекущийТипОснования = Тип("СправочникСсылка.ШаблоныПоручения")
		Или ТекущийТипОснования = Тип("СправочникСсылка.ШаблоныПриглашения")
		Или ТекущийТипОснования = Тип("СправочникСсылка.ШаблоныРассмотрения")
		Или ТекущийТипОснования = Тип("СправочникСсылка.ШаблоныРегистрации") 
		Или ТекущийТипОснования = Тип("СправочникСсылка.ШаблоныСогласования")
		Или ТекущийТипОснования = Тип("СправочникСсылка.ШаблоныСоставныхБизнесПроцессов")
		Или ТекущийТипОснования = Тип("СправочникСсылка.ШаблоныУтверждения") Тогда
		ТекстЗапроса.Добавить("	И ТаблицаСправочника.ШаблонВКомплексномПроцессе = ЛОЖЬ");
		ТекстЗапроса.Добавить("	И ТаблицаСправочника.ЭтоГруппа = ЛОЖЬ");
	КонецЕсли;
	
	// Основания с группами
	Если ТекущийТипОснования = Тип("СправочникСсылка.ВидыВнутреннихДокументов")
		Или ТекущийТипОснования = Тип("СправочникСсылка.ВидыВходящихДокументов")
		Или ТекущийТипОснования = Тип("СправочникСсылка.ВидыИсходящихДокументов")
		Или ТекущийТипОснования = Тип("СправочникСсылка.Проекты") Тогда
		ТекстЗапроса.Добавить("	И ТаблицаСправочника.ЭтоГруппа = ЛОЖЬ");
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = СтрСоединить(ТекстЗапроса, Символы.ПС);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Основания.Добавить(Выборка.Ссылка, Выборка.Представление);
	КонецЦикла;
	
	Основания.СортироватьПоПредставлению();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьТаблицуВариантыОтбораКлиент()
	
	ТекущиеДанные = Элементы.ВариантыРасчета.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		НовыйТекущийВариантРасчета = Неопределено;
		НовыйТекущийВариантРасчетаТекст = "";
	Иначе
		НовыйТекущийВариантРасчета = ТекущиеДанные.Значение;
		НовыйТекущийВариантРасчетаТекст = ТекущиеДанные.Представление;
	КонецЕсли;
	
	Если НовыйТекущийВариантРасчетаТекст = ТекущийВариантРасчетаТекст Тогда
		Возврат;
	КонецЕсли;
	
	ТекущийВариантРасчета = НовыйТекущийВариантРасчета;
	ТекущийВариантРасчетаТекст = НовыйТекущийВариантРасчетаТекст;
	ТекущийВариантОтбора = Неопределено;
	ТекущийВариантОтбораТекст = Неопределено;
	
	ОбновитьТаблицуВариантыОтбора();
	УстановитьДоступностьЭлементов();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьТаблицуВариантыОтбора()
	
	ВариантыОтбора.Очистить();
	Если Не ЗначениеЗаполнено(ТекущееОснование) Тогда
		Возврат;
	КонецЕсли;
	
	ТипыПроцессовИсключения =
		Справочники.ПоказателиПроцессов.ТипыПроцессовИсключенияВариантаРасчета(ТекущийВариантРасчета);
	НаборыВариантовОтбора =
		Справочники.ПоказателиПроцессов.НаборыВариантовОтбораБиблиотечныхПоказателей(ТекущееОснование);
	Для Каждого НаборВариантовОтбора Из НаборыВариантовОтбора Цикл
		
		Если НаборВариантовОтбора.Количество() <> 1 Тогда
			Продолжить;
		КонецЕсли;
		
		ВариантОтбора = НаборВариантовОтбора[0];
		Если ТипыПроцессовИсключения.Найти(ВариантОтбора.ТипПроцесса) <> Неопределено Тогда
			ЕстьНеподходящийТипПроцесса = Истина;
			Продолжить;
		КонецЕсли;
		
		ПредставлениеНабораВариантовОтбора =
			Справочники.ПоказателиПроцессов.ПредставлениеНабораВариантовОтбора(НаборВариантовОтбора);
		ВариантыОтбора.Добавить(ВариантОтбора, ПредставлениеНабораВариантовОтбора);
		
	КонецЦикла;
	
	Если ТекущийВариантОтбора = Неопределено Тогда
		Если ВариантыОтбора.Количество() <> 0 Тогда
			ТекущийВариантОтбора = ВариантыОтбора[0].Значение;
			ТекущийВариантОтбораТекст = ВариантыОтбора[0].Представление;
		КонецЕсли;
	Иначе
		ИндексТекущегоЭлемента = Неопределено;
		Для Каждого ЭлементСписка Из ВариантыОтбора Цикл
			Если ЭлементСписка.Значение.ВидПредмета = ТекущийВариантОтбора.ВидПредмета
				И ЭлементСписка.Значение.Ответственный = ТекущийВариантОтбора.Ответственный
				И ЭлементСписка.Значение.Проект = ТекущийВариантОтбора.Проект
				И ЭлементСписка.Значение.ТипПредмета = ТекущийВариантОтбора.ТипПредмета
				И ЭлементСписка.Значение.ТипПроцесса = ТекущийВариантОтбора.ТипПроцесса
				И ЭлементСписка.Значение.Шаблон = ТекущийВариантОтбора.Шаблон
				И ЭлементСписка.Значение.ЭтапОбработкиПредмета =
					ТекущийВариантОтбора.ЭтапОбработкиПредмета Тогда
				ИндексТекущегоЭлемента = ЭлементСписка.ПолучитьИдентификатор();
				Прервать;
			КонецЕсли;
		КонецЦикла;
		Элементы.ВариантыОтбора.ТекущаяСтрока = ИндексТекущегоЭлемента;
	КонецЕсли;
	
	ВариантыОтбора.СортироватьПоПредставлению();
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьДоступностьЭлементов()
	
	Если ВариантФормы = "СозданиеПоказателя" Тогда
		
		Элементы.Далее.Доступность = ТекущееОснование <> Неопределено;
		Элементы.Готово.Доступность = ТекущийВариантРасчета <> Неопределено
			И ТекущийВариантОтбора <> Неопределено;
		
	ИначеЕсли ВариантФормы = "ВыборВариантаРасчета" Тогда
		
		Элементы.Готово.Доступность = ТекущийВариантРасчета <> Неопределено;
		
	ИначеЕсли ВариантФормы = "ВыборВариантаОтбора" Тогда
		
		Элементы.Далее.Доступность = ТекущееОснование <> Неопределено;
		Элементы.Готово.Доступность = ТекущийВариантОтбора <> Неопределено;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВариантФормы()
	
	ВариантФормы = Параметры.ВариантФормы;
	КлючНазначенияИспользования = ВариантФормы;
	КлючСохраненияПоложенияОкна = ВариантФормы;
	
	Если ВариантФормы = "СозданиеПоказателя" Тогда
		
		Заголовок = НСтр("ru = 'Создание показателя процесса'; en = 'Creating process metric'");
		
	ИначеЕсли ВариантФормы = "ВыборВариантаРасчета" Тогда
		
		Заголовок = НСтр("ru = 'Выбор варианта расчета'; en = 'Selecting calculation variant'");
		
		Элементы.СтраницаОснование.Видимость = Ложь;
		Элементы.ГруппаВариантОтбора.Видимость = Ложь;
		
		Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаВариантПоказателя;
		
	ИначеЕсли ВариантФормы = "ВыборВариантаОтбора" Тогда
		
		Заголовок = НСтр("ru = 'Выбор варианта отбора'; en = 'Selecting filter variant'");
		
		Элементы.ВариантыРасчета.Видимость = Ложь;
		
	КонецЕсли;
	
	Если Параметры.ТекущийВариантРасчета <> Неопределено Тогда
		
		ТекущийВариантРасчета = Параметры.ТекущийВариантРасчета;
		ТекущийВариантРасчетаТекст = Справочники.ПоказателиПроцессов.ПредставлениеВариантаРасчета(
			ТекущийВариантРасчета);
		
	КонецЕсли;
	
	Если Параметры.ТекущийНаборВариантовОтбора.Количество() = 1 Тогда
		
		ОснованиеВариантОтбора = Справочники.ПоказателиПроцессов.ОснованиеВариантОтбора(
			Параметры.ТекущийНаборВариантовОтбора[0]);
		Если ОснованиеВариантОтбора <> Неопределено Тогда
			ТекущееОснование = ОснованиеВариантОтбора;
			ТекущийТипОснования = ТипЗнч(ТекущееОснование);
			ТекущийВариантОтбора = Параметры.ТекущийНаборВариантовОтбора[0];
			ТекущийВариантОтбораТекст =
				Справочники.ПоказателиПроцессов.ПредставлениеНабораВариантовОтбора(
					Параметры.ТекущийНаборВариантовОтбора);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьДалее()
	
	ДалееНаСервере();
	
	УстановитьДоступностьЭлементов();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьГотово()
	
	Результат = Новый Структура;
	
	Если ВариантФормы = "ВыборВариантаРасчета"
		Или ВариантФормы = "СозданиеПоказателя" Тогда
		
		Если ТекущийВариантРасчета = Неопределено Тогда
			ПоказатьПредупреждение(, НСтр("ru = 'Не выбран вариант расчета.'; en = 'Calculation variant not specified.'"));
		КонецЕсли;
		Результат.Вставить("ВариантРасчета", ТекущийВариантРасчета);
		Результат.Вставить("ВариантРасчетаТекст", ТекущийВариантРасчетаТекст);
		
	КонецЕсли;
	
	Если ВариантФормы = "ВыборВариантаОтбора"
		Или ВариантФормы = "СозданиеПоказателя" Тогда
		
		Если ТекущийВариантОтбора = Неопределено Тогда
			ПоказатьПредупреждение(, НСтр("ru = 'Не выбран вариант отбора.'; en = 'Filter variant not specified.'"));
		КонецЕсли;
		
		НаборВариантовОтбора = Новый Массив;
		НаборВариантовОтбора.Добавить(ТекущийВариантОтбора);
		
		Результат.Вставить("НаборВариантовОтбора", НаборВариантовОтбора);
		Результат.Вставить("ВариантОтбораТекст", ТекущийВариантОтбораТекст);
		
	КонецЕсли;
	
	Закрыть(Результат);
	
КонецПроцедуры

#КонецОбласти
