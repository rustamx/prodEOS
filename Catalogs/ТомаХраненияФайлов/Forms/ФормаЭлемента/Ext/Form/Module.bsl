
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Объект.Ссылка.Пустая() Тогда
		Объект.ПорядокЗаполнения = Справочники.ТомаХраненияФайлов.НайтиМаксимальныйПорядок(Объект.Родитель) + 1;
	КонецЕсли;
	
	Если НЕ Объект.Ссылка.Пустая() Тогда
		Элементы.ПолныйПутьLinux.ОтображениеПредупрежденияПриРедактировании = ОтображениеПредупрежденияПриРедактировании.Отображать;
		Элементы.ПолныйПутьWindows.ОтображениеПредупрежденияПриРедактировании = ОтображениеПредупрежденияПриРедактировании.Отображать;
		
		ТекущийРазмерВБайтах = ФайловыеФункции.ПодсчитатьРазмерФайловНаТоме(Объект.Ссылка); 
		ТекущийРазмер = ТекущийРазмерВБайтах / (1024 * 1024);
		Если ТекущийРазмер = 0 И ТекущийРазмерВБайтах <> 0 Тогда
			ТекущийРазмер = 1;
		КонецЕсли;
	КонецЕсли;
	
	ТипПлатформыСервера = ОбщегоНазначенияДокументооборотПовтИсп.ТипПлатформыСервера();
	
	Если ТипПлатформыСервера = ТипПлатформы.Windows_x86 ИЛИ ТипПлатформыСервера = ТипПлатформы.Windows_x86_64 Тогда
		Элементы.ПолныйПутьWindows.АвтоОтметкаНезаполненного = Истина;
	Иначе
		Элементы.ПолныйПутьLinux.АвтоОтметкаНезаполненного = Истина;
	КонецЕсли;
	
	Если Не Объект.Ссылка.Пустая() Тогда
		
		ТаблицаПравилВыгруженная = РаботаСФайламиВызовСервера.НайтиПравилаРазмещенияДляТомаПодробно(Объект.Ссылка.Родитель);
		
		Для Каждого Строка Из ТаблицаПравилВыгруженная Цикл
			НоваяСтрока = ТаблицаПравил.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
		КонецЦикла;
	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	// Добавляем слэш в конце, если его нет
	Если Не ПустаяСтрока(Объект.ПолныйПутьWindows) Тогда
		Если Прав(Объект.ПолныйПутьWindows, 1) <> "\" Тогда
			Объект.ПолныйПутьWindows = Объект.ПолныйПутьWindows + "\";
		КонецЕсли;
		
		Если Прав(Объект.ПолныйПутьWindows, 2) = "\\" Тогда
			Объект.ПолныйПутьWindows = Лев(Объект.ПолныйПутьWindows, СтрДлина(Объект.ПолныйПутьWindows) - 1);
		КонецЕсли;
	КонецЕсли;
	
	// Добавляем слэш в конце, если его нет
	Если Не ПустаяСтрока(Объект.ПолныйПутьLinux) Тогда
		Если Прав(Объект.ПолныйПутьLinux, 1) <> "\" Тогда
			Объект.ПолныйПутьLinux = Объект.ПолныйПутьLinux + "\";
		КонецЕсли;
		
		Если Прав(Объект.ПолныйПутьLinux, 2) = "\\" Тогда
			Объект.ПолныйПутьLinux = Лев(Объект.ПолныйПутьLinux, СтрДлина(Объект.ПолныйПутьLinux) - 1);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаПравилСсылкаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаПравилПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаПравилПередНачаломИзменения(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаПравилВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПоказатьЗначение(,Элемент.ТекущиеДанные.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьЦелостностьТома(Команда)
	
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	КоличествоФайловВТоме = РаботаСФайламиВызовСервера.ПодсчитатьКоличествоФайловВТоме(Объект.Ссылка);
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"ПроверитьЦелостностьТомаПродолжение",
		ЭтотОбъект);

	Если КоличествоФайловВТоме > 100000 Тогда  // порог - 100 тыс файлов
		
		ТекстВопроса = СтрШаблон(НСтр("ru = 'В томе находится %1 файлов.
			| Выполнить проверку целостности тома?
			| Эта операция может занять продолжительное время.';
			|en = 'The volume has %1 files.
			|Perform an integrity check of the volume?
			|This operation can take a long time.'"), 
			Формат(КоличествоФайловВТоме, ""));
			
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		
	Иначе 
		
		ВыполнитьОбработкуОповещения(ОписаниеОповещения, КодВозвратаДиалога.Да);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьЦелостностьТомаПродолжение(Результат, Параметры) Экспорт

	Если Результат <> КодВозвратаДиалога.Да Тогда 
		Возврат;
	КонецЕсли;
	
	ПараметрыОтчета = Новый Структура();
	ПараметрыОтчета.Вставить("СформироватьПриОткрытии", Истина);
	ПараметрыОтчета.Вставить("Отбор", Новый Структура("Том", Объект.Ссылка));
	
	ОткрытьФорму("Отчет.ПроверкаЦелостностиТома.ФормаОбъекта", ПараметрыОтчета);
	
КонецПроцедуры


