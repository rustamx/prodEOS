&НаКлиенте
Перем РаскрытыеРазделы;

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Выбранные разделы
	РазделыОтображения = РаботаСОбсуждениями.ПолучитьРазделыОтображения();
	ВыбранныеРазделы = РазделыОтображения.ВыбранныеРазделы;
	ДоступныеРазделы = РазделыОтображения.ДоступныеРазделы;
	ОтображатьВсеРазделы = РазделыОтображения.ОтображатьВсеРазделы;
	
	// Обновление данных отображения при первом открытии
	ЗаполнитьДеревоРазделов();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Изменение_ПапкиФорума" Тогда
		ТекущийРаздел = Параметр;
		ОбновитьКлиент();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	// Отображение удаленных
	Если ОтображатьУдаленные Тогда
		ЗаполнитьДеревоРазделов();
	КонецЕсли;
	
	// Текущий раздел
	ВосстановитьПоложениеТекущейСтроки();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыДеревоРазделов

&НаКлиенте
Процедура ДеревоРазделовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ПоказатьЗначение(, ТекущийРаздел);
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоРазделовПриАктивизацииСтроки(Элемент)
	
	ТекущийРаздел = ПолучитьТекущийРаздел();
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоРазделовПередНачаломДобавления(
	Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	
	Если Копирование Тогда
		ПараметрыФормы = Новый Структура("ЗначениеКопирования", ТекущийРаздел);
	Иначе
		ЗначениеЗаполнения = Новый Структура("Родитель", ТекущийРаздел);
		ПараметрыФормы = Новый Структура("ЗначенияЗаполнения", ЗначениеЗаполнения);
	КонецЕсли;
	
	ОткрытьФорму("Справочник.ПапкиФорума.ФормаОбъекта", ПараметрыФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоРазделовПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоРазделовОтображатьРазделПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ДеревоРазделов.ТекущиеДанные;
	Если ТекущиеДанные.Ссылка <> ПредопределенноеЗначение("Справочник.ПапкиФорума.ПустаяСсылка") Тогда
		
		// Один раздел
		Если ТекущиеДанные.ОтображатьРаздел Тогда
			ТекущаяСтрока = Элементы.ДеревоРазделов.ТекущаяСтрока;
			ЭлементДерева = ДеревоРазделов.НайтиПоИдентификатору(ТекущаяСтрока);
			ПометитьДочерниеРазделы(ЭлементДерева, Истина);
		КонецЕсли;
		
	Иначе
		
		// Все разделы
		ОтображатьВсеРазделы = ТекущиеДанные.ОтображатьРаздел;
		ПометитьДочерниеРазделы(ДеревоРазделов, ОтображатьВсеРазделы);
		
	КонецЕсли;
	
	ЗапомнитьРазделы();
	ОбновитьКлиент();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Выбрать(Команда)
	
	СтруктураРазделыОтображения = Новый Структура(
		"ВыбранныеРазделы, ДоступныеРазделы, ОтображатьВсеРазделы",
		ВыбранныеРазделы, ДоступныеРазделы, ОтображатьВсеРазделы);
	Закрыть(СтруктураРазделыОтображения);
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьРаздел(Команда)
	
	ПоказатьЗначение(, ТекущийРаздел);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтображатьУдаленные(Команда)
	
	ОтображатьУдаленные = Не ОтображатьУдаленные;
	
	ОбновитьКлиент();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьДеревоРазделов()
	
	Элементы.ДеревоРазделовКонтекстноеМенюОтображатьУдаленные.Пометка = ОтображатьУдаленные;
	
	Дерево = РеквизитФормыВЗначение("ДеревоРазделов");
	Дерево.Строки.Очистить();
	
	// Все разделы
	НоваяСтрока = Дерево.Строки.Добавить();
	НоваяСтрока.Ссылка = Справочники.ПапкиФорума.ПустаяСсылка();
	НоваяСтрока.Наименование = НСтр("ru = 'Все разделы'; en = 'All sections'");
	НоваяСтрока.ОтображатьРаздел = ОтображатьВсеРазделы;
	
	// Разделы
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СправочникПапкиФорума.Ссылка КАК Ссылка,
	|	СправочникПапкиФорума.Родитель КАК Родитель,
	|	СправочникПапкиФорума.ПометкаУдаления КАК ПометкаУдаления,
	|	СправочникПапкиФорума.Наименование КАК Наименование,
	|	ВЫБОР
	|		КОГДА СправочникПапкиФорума.ПометкаУдаления
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ИндексКартинки
	|ИЗ
	|	Справочник.ПапкиФорума КАК СправочникПапкиФорума
	|ГДЕ
	|	(&ОтображатьУдаленные
	|			ИЛИ НЕ СправочникПапкиФорума.ПометкаУдаления)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Наименование ИЕРАРХИЯ";
	
	Запрос.УстановитьПараметр("ОтображатьУдаленные", ОтображатьУдаленные);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.ПометкаУдаления И Не ОтображатьУдаленные Тогда 
			Продолжить;
		КонецЕсли;
		
		Родитель = Выборка.Родитель;
		Если Не ЗначениеЗаполнено(Родитель) Тогда 
			НоваяСтрока = Дерево.Строки.Добавить();
		Иначе	
			НайденнаяСтрока = Дерево.Строки.Найти(Родитель, "Ссылка", Истина);
			Если НайденнаяСтрока <> Неопределено Тогда
				НоваяСтрока = НайденнаяСтрока.Строки.Добавить();
			Иначе
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		НоваяСтрока.ОтображатьРаздел = ОтображатьВсеРазделы;
		
	КонецЦикла;
	
	ЗначениеВРеквизитФормы(Дерево, "ДеревоРазделов");
	
	ВосстановитьВыбранныеРазделы();
	
	ВосстановитьПоложениеТекущейСтроки();
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьТекущийРаздел()
	
	ТекущиеДанные = Элементы.ДеревоРазделов.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат ПредопределенноеЗначение("Справочник.ПапкиФорума.ПустаяСсылка");
	КонецЕсли;
	
	Возврат ТекущиеДанные.Ссылка;
	
КонецФункции

&НаКлиенте
Процедура ПередОбновлениемНаКлиенте()
	
	Если РаскрытыеРазделы = Неопределено Тогда
		РаскрытыеРазделы = Новый СписокЗначений;
	Иначе
		РаскрытыеРазделы.Очистить();
	КонецЕсли;
	
	РаботаСОбсуждениямиКлиент.ПолучитьМассивРаскрытыхСообщений(
		Элементы.ДеревоРазделов,
		ДеревоРазделов.ПолучитьЭлементы(),
		РаскрытыеРазделы);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеОбновленияНаКлиенте()
	
	РаботаСОбсуждениямиКлиент.УстановитьРазвернутостьЭлементовДерева(
		Элементы.ДеревоРазделов,
		ДеревоРазделов,
		РаскрытыеРазделы);
	РаскрытыеРазделы = Неопределено;
	
КонецПроцедуры

&НаКлиенте
Процедура ПометитьДочерниеРазделы(ЭлементДерева, Пометка)
	
	ПодчиненныеЭлементыДерева = ЭлементДерева.ПолучитьЭлементы();
	Для Каждого ПодчиненныйЭлементДерева Из ПодчиненныеЭлементыДерева Цикл
		ПодчиненныйЭлементДерева.ОтображатьРаздел = Пометка;
		ПометитьДочерниеРазделы(ПодчиненныйЭлементДерева, Пометка);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗапомнитьРазделы()
	
	ВыбранныеРазделы.Очистить();
	РаботаСОбсуждениямиКлиент.ПолучитьМассивПомеченныхЭлементов(
		Элементы.ДеревоРазделов,
		ДеревоРазделов.ПолучитьЭлементы(),
		ВыбранныеРазделы,
		"ОтображатьРаздел");
	
КонецПроцедуры

&НаСервере
Процедура ВосстановитьВыбранныеРазделы()
	
	Если ОтображатьВсеРазделы Тогда
		Возврат;
	КонецЕсли;
	
	Дерево = РеквизитФормыВЗначение("ДеревоРазделов");
	
	Для Каждого ВыбранныйРаздел Из ВыбранныеРазделы Цикл
		
		СтрокаДерева = Дерево.Строки.Найти(ВыбранныйРаздел.Значение, "Ссылка", Истина);
		Если СтрокаДерева = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаДерева.ОтображатьРаздел = Истина;
		
	КонецЦикла;
	
	ЗначениеВРеквизитФормы(Дерево, "ДеревоРазделов");
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьКлиент()
	
	ПередОбновлениемНаКлиенте();
	ЗаполнитьДеревоРазделов();
	ПослеОбновленияНаКлиенте();
	
КонецПроцедуры

&НаСервере
Процедура ВосстановитьПоложениеТекущейСтроки()
	
	Индекс = -1;
	РаботаСОбсуждениямиКлиентСервер.НайтиСообщениеВДеревеПоСсылке(
		ДеревоРазделов.ПолучитьЭлементы(), ТекущийРаздел, Индекс);
	Если Индекс > -1 Тогда
		Элементы.ДеревоРазделов.ТекущаяСтрока = Индекс;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
