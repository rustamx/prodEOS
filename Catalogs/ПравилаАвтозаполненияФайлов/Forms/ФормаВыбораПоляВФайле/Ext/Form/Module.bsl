#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если Параметры.Свойство("МножественныйВыбор") Тогда 
		МножественныйВыбор = Параметры.МножественныйВыбор;
	КонецЕсли;
	
	Если Параметры.СписокПолей <> Неопределено И
		Параметры.СписокПолей.Количество() > 0 Тогда
		СписокПолейОбъект.Очистить();
		Для Каждого Поле Из Параметры.СписокПолей Цикл
			НоваяСтрока = СписокПолейОбъект.Добавить();
			НоваяСтрока.Наименование = Поле.Наименование;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	ШаблонФайла = Параметры.ФайлШаблон;
	РасширениеФайла = НРег(ШаблонФайла.ТекущаяВерсияРасширение);
	ДанныеФайла = РаботаСФайламиВызовСервера.ДанныеФайла(ШаблонФайла.Ссылка);
	ТекущаяВерсия = ШаблонФайла.ТекущаяВерсия.ПолучитьОбъект();	
	ИмяСРасширениемФайла = ТекущаяВерсия.ПолноеНаименование + "." + ТекущаяВерсия.Расширение;
	ДвоичныеДанныеФайла = АвтозаполнениеШаблоновФайловСервер.ПолучитьДвоичныеДанныеФайла(ШаблонФайла);

	ВыполнятьЗаполнениеНаСервере = Константы.ИзменениеФайловMSWordТолькоНаСервере.Получить();
	
	Если РасширениеФайла = "odt" Тогда
		
		ИмяФайлаСПутем = ПолучитьИмяВременногоФайла(ТекущаяВерсия.Расширение);
		ДвоичныеДанныеФайла.Записать(ИмяФайлаСПутем);
		
		КопироватьФайл(ИмяФайлаСПутем, СтрЗаменить(ИмяФайлаСПутем, РасширениеФайла, "zip"));
		ИмяФайлаСПутемZIP = СтрЗаменить(ИмяФайлаСПутем, РасширениеФайла, "zip");

		ВременнаяПапкаДляРазархивирования = ПолучитьИмяВременногоФайла("");
		ВременныйZIPФайл = ПолучитьИмяВременногоФайла("zip"); 

		Архив = Новый ЧтениеZipФайла();
		Архив.Открыть(ИмяФайлаСПутемZIP);
		Архив.ИзвлечьВсе(ВременнаяПапкаДляРазархивирования, РежимВосстановленияПутейФайловZIP.Восстанавливать);
		Архив.Закрыть();
		ЧтениеXML = Новый ЧтениеXML(); 
		СписокПолей = Новый Массив();
		
		//Поиск полей в теле шаблона
		ЧтениеXML.ОткрытьФайл(ВременнаяПапкаДляРазархивирования + "/content.xml");
		РезультатПроверки = АвтозаполнениеШаблоновФайловКлиентСервер.НайтиПоляВФайлеOpenOfficeWriter(ЧтениеXML);
		ЧтениеXML.Закрыть();
		Для Каждого Элемент Из РезультатПроверки Цикл
			Если СписокПолей.Найти(Элемент) = Неопределено Тогда
				СписокПолей.Добавить(Элемент);
			КонецЕсли;
		КонецЦикла;
		//Поиск полей в колонтитулах шаблона
		ЧтениеXML.ОткрытьФайл(ВременнаяПапкаДляРазархивирования + "/styles.xml");
		РезультатПроверки = АвтозаполнениеШаблоновФайловКлиентСервер.НайтиПоляВФайлеOpenOfficeWriter(ЧтениеXML);
		ЧтениеXML.Закрыть();
		Для Каждого Элемент Из РезультатПроверки Цикл
			Если СписокПолей.Найти(Элемент) = Неопределено Тогда
				СписокПолей.Добавить(Элемент);
			КонецЕсли;
		КонецЦикла;
		
		Для Каждого Элемент Из СписокПолей Цикл
			НоваяСтрока = СписокПолейОбъект.Добавить();
			НоваяСтрока.Наименование = Элемент;
		КонецЦикла;
	ИначеЕсли РасширениеФайла <> "doc" Тогда
		СписокПолей = АвтозаполнениеШаблоновФайловКлиентСервер.НайтиВсеПоляВФайлеMSWord(РасширениеФайла, ДвоичныеДанныеФайла);
		Для Каждого Элемент Из СписокПолей Цикл
			НоваяСтрока = СписокПолейОбъект.Добавить();
			НоваяСтрока.Наименование = Элемент;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	#Если НЕ ВебКлиент Тогда
		Если НЕ ВыполнятьЗаполнениеНаСервере
			И РасширениеФайла = "doc" Тогда
			Состояние(НСтр("ru = 'Выполняется поиск полей в шаблоне файла'; en = 'Searches fields in the template file'"));
			СписокПолей = АвтозаполнениеШаблоновФайловКлиентСервер.НайтиВсеПоляВФайлеMSWord(РасширениеФайла, ДвоичныеДанныеФайла);
			Для Каждого Элемент Из СписокПолей Цикл
				НоваяСтрока = СписокПолейОбъект.Добавить();
				НоваяСтрока.Наименование = Элемент;
			КонецЦикла;
			Состояние(НСтр("ru = 'Поиск полей в шаблоне файла завершен'; en = 'Search fields in the template file completed'"));
		КонецЕсли;
	#КонецЕсли
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СписокПолейФормаВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если МножественныйВыбор Тогда 
		ВыделенныеСтроки = Элементы.СписокПолейФорма.ВыделенныеСтроки;
		НаименованиеПоля = "";
		Для Каждого Строка Из ВыделенныеСтроки Цикл 
			ДанныеСтроки = Элементы.СписокПолейФорма.ДанныеСтроки(Строка);
			НаименованиеПоля = НаименованиеПоля + ДанныеСтроки.Наименование + ", ";
		КонецЦикла;
		
		Если Прав(НаименованиеПоля, 2) = ", " Тогда 
			НаименованиеПоля = Лев(НаименованиеПоля, СтрДлина(НаименованиеПоля) -2);
		КонецЕсли;
	Иначе 
		НаименованиеПоля = Элемент.ТекущиеДанные.Наименование;
	КонецЕсли;
	
	ДанныеДляВозврата = Новый Структура("НаименованиеПоля, СписокПолей", НаименованиеПоля, СписокПолейОбъект);
	ОповеститьОВыборе(ДанныеДляВозврата);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПолейФормаВыборЗначения(Элемент, Значение, СтандартнаяОбработка)
	
	Если МножественныйВыбор Тогда 
		ВыделенныеСтроки = Элементы.СписокПолейФорма.ВыделенныеСтроки;
		НаименованиеПоля = "";
		Для Каждого Строка Из ВыделенныеСтроки Цикл 
			ДанныеСтроки = Элементы.СписокПолейФорма.ДанныеСтроки(Строка);
			НаименованиеПоля = НаименованиеПоля + ДанныеСтроки.Наименование + ", ";
		КонецЦикла;
		
		Если Прав(НаименованиеПоля, 2) = ", " Тогда 
			НаименованиеПоля = Лев(НаименованиеПоля, СтрДлина(НаименованиеПоля) -2);
		КонецЕсли;
	Иначе 
		НаименованиеПоля = Элемент.ТекущиеДанные.Наименование;
	КонецЕсли;
	
	ДанныеДляВозврата = Новый Структура("НаименованиеПоля, СписокПолей", НаименованиеПоля, СписокПолейОбъект);
	ОповеститьОВыборе(ДанныеДляВозврата);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Отмена(Команда)
	
	Закрыть(Неопределено);
	
КонецПроцедуры

#КонецОбласти
