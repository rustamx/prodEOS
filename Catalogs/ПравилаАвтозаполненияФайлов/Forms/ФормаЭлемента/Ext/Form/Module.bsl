
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ИмяТипаВладельцаФайла = "";
	ВыполнятьЗаполнениеФайловНаСервере = Константы.ИзменениеФайловMSWordТолькоНаСервере.Получить();
	
	Элементы.ТипВладельцаФайла.СписокВыбора.Добавить(
		Строка( Тип("СправочникСсылка.ВидыВнутреннихДокументов")),
		НСтр("ru = 'Внутренний документ'; en = 'Internal document'"));
	Элементы.ТипВладельцаФайла.СписокВыбора.Добавить(
		Строка( Тип("СправочникСсылка.ВидыИсходящихДокументов")),
		НСтр("ru = 'Исходящий документ'; en = 'Outgoing document'"));
	
	Если ЗначениеЗаполнено(Объект.ВладелецФайла) Тогда
		Если ТипЗнч(Объект.ВладелецФайла) = Тип("СправочникСсылка.ВидыВнутреннихДокументов") Тогда
			ИмяТипаВладельцаФайла = НСтр("ru = 'Внутренний документ'; en = 'Internal document'");
		ИначеЕсли ТипЗнч(Объект.ВладелецФайла) = Тип("СправочникСсылка.ВидыИсходящихДокументов")  Тогда
			ИмяТипаВладельцаФайла = НСтр("ru = 'Исходящий документ'; en = 'Outgoing document'");
		КонецЕсли;
		ТипВладельцаФайла = Строка(ТипЗнч(Объект.ВладелецФайла));
	КонецЕсли;
	
	Элементы.ВладелецФайла.ТолькоПросмотр = ПустаяСтрока(ТипВладельцаФайла);
	Элементы.ВладелецФайла.ОтметкаНезаполненного = НЕ Элементы.ВладелецФайла.ТолькоПросмотр 
		И НЕ ЗначениеЗаполнено(Объект.ВладелецФайла);
	
	ИмяТипаВнутренниеДокументы = Метаданные.Справочники.ВидыВнутреннихДокументов.ПолноеИмя();
	ИмяТипаИсходящиеДокументы = Метаданные.Справочники.ВидыИсходящихДокументов.ПолноеИмя();
	
	СформироватьЗаголовокФормы(ЭтаФорма);
	
	Если Параметры.Свойство("РежимСозданияДоговора") И Параметры.РежимСозданияДоговора Тогда 
		Элементы.ЛеваяГруппа.Видимость = Ложь;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.ШаблонФайла) Тогда 
		РасширениеФайла = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.ШаблонФайла,
			"ТекущаяВерсияРасширение");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	#Если ВебКлиент Тогда
		Элементы.ФормаПроверитьПравила.Видимость = Ложь;
	#КонецЕсли
	
	Если НРег(РасширениеФайла) = "txt" Или 
		НРег(РасширениеФайла) = "html" Или 
		НРег(РасширениеФайла) = "htm" Тогда
		
		Элементы.ДанныеДляАвтозаполненияТермДляЗамены.Видимость = Ложь;
	Иначе
		Элементы.ДанныеДляАвтозаполненияТермДляЗамены.Видимость = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если ОбщегоНазначенияДокументооборотКлиент.ПередЗакрытием(
		Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка, Модифицированность) Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ПустаяСтрока(ПолноеИмяФайлаДляПроверки) Тогда
		УдалитьФайлы(ПолноеИмяФайлаДляПроверки);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_Файл" И Параметр.Событие = "ДанныеФайлаИзменены"
		И (ТипЗнч(Параметр) = Тип("Структура")
		И Параметр.Свойство("Файл")
		И Параметр.Файл = Объект.ШаблонФайла 
		Или Параметр = Объект.ШаблонФайла) Тогда
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)

	#Если НЕ ВебКлиент Тогда
		Если НЕ ВыполнятьЗаполнениеФайловНаСервере Тогда
			РасширениеШаблона = НРег(РасширениеФайла);
			Если АвтозаполнениеШаблоновФайловКлиентСервер.ФорматMSWord(РасширениеШаблона) Тогда
				ДвоичныеДанныеШаблона = ПолучитьДвоичныеДанные(Объект.ШаблонФайла);
				Состояние(НСтр("ru = 'В шаблоне файла осуществляется поиск указанных полей и строк. Пожалуйста, подождите...'; en = 'Searching for specified fields and strings in the file template. Please wait ...'"));
				ТекстОшибки = АвтозаполнениеШаблоновФайловКлиентСервер.ПроверитьНаличиеПолейИСтрокВФайлеMSWord(РасширениеШаблона, Объект.ДанныеДляАвтозаполнения, ДвоичныеДанныеШаблона);
				Если НЕ ПустаяСтрока(ТекстОшибки) Тогда
					Отказ = Истина;
					Состояние(НСтр("ru = 'Поиск полей и строк завершен. Обнаружены ошибки.'; en = 'Search fields and rows completed. Errors have been detected.'"));
					ВызватьИсключение(ТекстОшибки);
				КонецЕсли;
				Состояние();
			КонецЕсли;
		КонецЕсли;
	#КонецЕсли
	
	Объект.Наименование = Объект.ШаблонФайла;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ПравилаАвтозаполненияФайлов.Код,
		|	ПравилаАвтозаполненияФайлов.ВладелецФайла,
		|	ПравилаАвтозаполненияФайлов.ШаблонФайла
		|ИЗ
		|	Справочник.ПравилаАвтозаполненияФайлов КАК ПравилаАвтозаполненияФайлов
		|ГДЕ
		|	(ПравилаАвтозаполненияФайлов.Ссылка <> &Ссылка) 
		|	И ПравилаАвтозаполненияФайлов.ВладелецФайла = &ВладелецФайла
		|	И ПравилаАвтозаполненияФайлов.ШаблонФайла = &ШаблонФайла";
		
		Запрос.УстановитьПараметр("Ссылка", ТекущийОбъект.Ссылка);
		Запрос.УстановитьПараметр("ВладелецФайла", ТекущийОбъект.ВладелецФайла);
		Запрос.УстановитьПараметр("ШаблонФайла", ТекущийОбъект.ШаблонФайла);
		
	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	Если ВыборкаДетальныеЗаписи.Количество() > 0 Тогда
		ТекстИсключения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Невозможно сохранить правила.
				|Для владельца файла ""%1"" и шаблона файла ""%2"" уже задано другое правило';
				|en = 'Unable to save rule.
				|For the owner of the file ""%1""and the template file ""%2"" was already set another rule'"),
			ТекущийОбъект.ВладелецФайла,
			ТекущийОбъект.ШаблонФайла);
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	РасширениеФайла = НРег(ТекущийОбъект.ШаблонФайла.ТекущаяВерсияРасширение);
		
	//выполним проверку на правильность заполнения правил замены
	//для документов MS Office и OpenOffice Writer выполним поиск указанных полей/переменных и текста, который планируется заменять
	//для текстовых документов выполним поиск текста, который планируется заменять
	
	ДанныеФайла = РаботаСФайламиВызовСервера.ДанныеФайла(ТекущийОбъект.ШаблонФайла.Ссылка);
	ТекущаяВерсия = ТекущийОбъект.ШаблонФайла.ТекущаяВерсия.ПолучитьОбъект();	
	ИмяСРасширениемФайла = ТекущаяВерсия.ПолноеНаименование + "." + ТекущаяВерсия.Расширение;
	ДвоичныеДанныеФайла = АвтозаполнениеШаблоновФайловСервер.ПолучитьДвоичныеДанныеФайла(ТекущийОбъект.ШаблонФайла);
	ИмяФайлаСПутем = ПолучитьИмяВременногоФайла(ТекущаяВерсия.Расширение);
	ДвоичныеДанныеФайла.Записать(ИмяФайлаСПутем);
	
	Если АвтозаполнениеШаблоновФайловКлиентСервер.ТекстовыйФормат(РасширениеФайла) Тогда		
		Текст = Новый ЧтениеТекста(ИмяФайлаСПутем);
		Стр = Текст.Прочитать();
		Текст.Закрыть();
		
		ЕстьОшибкаПоСтрокам = Ложь;
		ОписаниеОшибкиСтроки = НСтр("ru = 'Следующие строки отсутствуют в шаблоне:'; en = 'Following rows are not in the template:'") + Символы.ВК;
		
		Если Стр <> Неопределено Тогда 
			Для Каждого НастройкаЗамены из ТекущийОбъект.ДанныеДляАвтозаполнения Цикл
				Если НЕ ПустаяСтрока(НастройкаЗамены.ТермДляЗамены) Тогда
					ТекстИсключения = НСтр("ru = 'Правила автозаполнения для текстовых файлов не могут содержать указания полей для замены. Допускается использование только строк для замены.'; en = 'Text file autofill rules cannot contain fields for replacement. Only the strings to replace should be specified.'");
					ВызватьИсключение ТекстИсключения;
				ИначеЕсли ПустаяСтрока(НастройкаЗамены.ЗаменяемаяСтрока) Тогда
					ТекстИсключения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						НСтр("ru = 'Необходимо указать строку, которую заменяет значение ""%1"".'; en = 'You must specify a string that replaces value of ""%1"".'"),
						НастройкаЗамены.ЗначениеЗамены);
					ВызватьИсключение ТекстИсключения;
				ИначеЕсли СтрЧислоВхождений(Стр,НастройкаЗамены.ЗаменяемаяСтрока) = 0 Тогда
					ОписаниеОшибкиСтроки = ОписаниеОшибкиСтроки + НастройкаЗамены.ЗаменяемаяСтрока + Символы.ВК;
					ЕстьОшибкаПоСтрокам = Истина;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		УдалитьФайлы(ИмяФайлаСПутем);
		Если ЕстьОшибкаПоСтрокам Тогда
			ВызватьИсключение ОписаниеОшибкиСтроки;
		КонецЕсли;
		
	ИначеЕсли ВыполнятьЗаполнениеФайловНаСервере
		И АвтозаполнениеШаблоновФайловКлиентСервер.ФорматMSWord(РасширениеФайла) Тогда
			
		ТекстОшибки = АвтозаполнениеШаблоновФайловКлиентСервер.ПроверитьНаличиеПолейИСтрокВФайлеMSWord(РасширениеФайла, ТекущийОбъект.ДанныеДляАвтозаполнения, ДвоичныеДанныеФайла);
		Если НЕ ПустаяСтрока(ТекстОшибки) Тогда
			ВызватьИсключение(ТекстОшибки);
		КонецЕсли;
		
	ИначеЕсли РасширениеФайла = "odt" Тогда
		КопироватьФайл(ИмяФайлаСПутем, СтрЗаменить(ИмяФайлаСПутем, РасширениеФайла, "zip"));
		ИмяФайлаСПутемZIP = СтрЗаменить(ИмяФайлаСПутем, РасширениеФайла, "zip");

		ВременнаяПапкаДляРазархивирования = ПолучитьИмяВременногоФайла("");
		ВременныйZIPФайл = ПолучитьИмяВременногоФайла("zip"); 

		Архив = Новый ЧтениеZipФайла();
		Архив.Открыть(ИмяФайлаСПутемZIP);
		Архив.ИзвлечьВсе(ВременнаяПапкаДляРазархивирования, РежимВосстановленияПутейФайловZIP.Восстанавливать);
		Архив.Закрыть();
		ЧтениеXML = Новый ЧтениеXML(); 
		
		//Осуществляем проверку наличия указанных полей и строк для замены 
		СтрокаСОшибочнымиПолямиВТеле = "";
		СтрокаСОшибочнымиСтрокамиВТеле = "";
		СтрокаСОшибочнымиПолямиВКолонтитулах = "";
		СтрокаСОшибочнымиСтрокамиВКолонтитулах = "";
		
		Для Каждого НастройкаЗамены Из ТекущийОбъект.ДанныеДляАвтозаполнения Цикл
			Если ПустаяСтрока(НастройкаЗамены.ТермДляЗамены) И
				ПустаяСтрока(НастройкаЗамены.ЗаменяемаяСтрока) Тогда
				ВызватьИсключение(НСтр("ru = 'Необходимо указать либо строку для замены, либо поле для замены'; en = 'You must specify a string or field for replacement'"));
			КонецЕсли;
			Если НЕ ПустаяСтрока(НастройкаЗамены.ТермДляЗамены) Тогда
				
				//Поиск по отсутствующим полям в теле шаблона
				ЧтениеXML.ОткрытьФайл(ВременнаяПапкаДляРазархивирования + "/content.xml");
				РезультатПроверки = АвтозаполнениеШаблоновФайловКлиентСервер.ПроверитьНаличиеПолейИСтрокВФайлеOpenOfficeWriter(ЧтениеXML, НастройкаЗамены.ТермДляЗамены, "Поле");
				
				Если НЕ ПустаяСтрока(РезультатПроверки) Тогда
					СтрокаСОшибочнымиПолямиВТеле = СтрокаСОшибочнымиПолямиВТеле + РезультатПроверки + ";";
					РезультатПроверки = "";
				КонецЕсли;
				
				ЧтениеXML.Закрыть();
				
				//Поиск по отсутствующим полям в колонтитулах шаблона
				ЧтениеXML.ОткрытьФайл(ВременнаяПапкаДляРазархивирования + "/styles.xml");
				РезультатПроверки = АвтозаполнениеШаблоновФайловКлиентСервер.ПроверитьНаличиеПолейИСтрокВФайлеOpenOfficeWriter(ЧтениеXML, НастройкаЗамены.ТермДляЗамены, "Поле");
				Если НЕ ПустаяСтрока(РезультатПроверки) Тогда
					СтрокаСОшибочнымиПолямиВКолонтитулах = СтрокаСОшибочнымиПолямиВКолонтитулах + РезультатПроверки + ";";
					РезультатПроверки = "";
				КонецЕсли;
				ЧтениеXML.Закрыть();
				
			КонецЕсли;
			Если НЕ ПустаяСтрока(НастройкаЗамены.ЗаменяемаяСтрока) Тогда
				
				//Поиск по отсутствующему тексту в теле шаблона
				ЧтениеXML.ОткрытьФайл(ВременнаяПапкаДляРазархивирования + "/content.xml");
				РезультатПроверки = АвтозаполнениеШаблоновФайловКлиентСервер.ПроверитьНаличиеПолейИСтрокВФайлеOpenOfficeWriter(ЧтениеXML, НастройкаЗамены.ЗаменяемаяСтрока, "Строка");
				Если НЕ ПустаяСтрока(РезультатПроверки) Тогда
					СтрокаСОшибочнымиСтрокамиВТеле = СтрокаСОшибочнымиСтрокамиВТеле + РезультатПроверки + ";";
					РезультатПроверки = "";
				КонецЕсли;
				ЧтениеXML.Закрыть();
				
				//Поиск по отсутствующему тексту в колонтитулах шаблона
				ЧтениеXML.ОткрытьФайл(ВременнаяПапкаДляРазархивирования + "/styles.xml");
				РезультатПроверки = АвтозаполнениеШаблоновФайловКлиентСервер.ПроверитьНаличиеПолейИСтрокВФайлеOpenOfficeWriter(ЧтениеXML, НастройкаЗамены.ЗаменяемаяСтрока, "Строка");
				
				Если НЕ ПустаяСтрока(РезультатПроверки) Тогда
					СтрокаСОшибочнымиСтрокамиВКолонтитулах = СтрокаСОшибочнымиСтрокамиВКолонтитулах + РезультатПроверки + ";";
					РезультатПроверки = "";
				КонецЕсли;
				
				ЧтениеXML.Закрыть();
				
			КонецЕсли;
		КонецЦикла;
		
		УдалитьФайлы(ВременнаяПапкаДляРазархивирования);
		
		//Формирование сообщения об ошибке
		ЕстьОшибкаПоПолям = Ложь;
		ОписаниеОшибкиПоля = НСтр("ru = 'Следующие поля отсутствуют в шаблоне:'; en = 'Following fields are not in the template:'") + Символы.ВК;
		
		ЕстьОшибкаПоСтрокам = Ложь;
		ОписаниеОшибкиСтроки = НСтр("ru = 'Следующие строки отсутствуют в шаблоне:'; en = 'Following rows are not in the template:'") + Символы.ВК;
		
		Для Каждого НастройкаЗамены из ТекущийОбъект.ДанныеДляАвтозаполнения Цикл
			Если СтрЧислоВхождений(СтрокаСОшибочнымиПолямиВТеле, НастройкаЗамены.ТермДляЗамены) > 0 И
				 СтрЧислоВхождений(СтрокаСОшибочнымиПолямиВКолонтитулах, НастройкаЗамены.ТермДляЗамены) > 0 Тогда
				ОписаниеОшибкиПоля = ОписаниеОшибкиПоля + НастройкаЗамены.ТермДляЗамены + Символы.ВК;
				ЕстьОшибкаПоПолям = Истина;
			КонецЕсли;
			Если СтрЧислоВхождений(СтрокаСОшибочнымиСтрокамиВТеле, НастройкаЗамены.ЗаменяемаяСтрока) > 0 И
				 СтрЧислоВхождений(СтрокаСОшибочнымиСтрокамиВКолонтитулах, НастройкаЗамены.ЗаменяемаяСтрока) > 0 Тогда
				ОписаниеОшибкиСтроки = ОписаниеОшибкиСтроки + НастройкаЗамены.ЗаменяемаяСтрока + Символы.ВК;
				ЕстьОшибкаПоСтрокам = Истина;
			КонецЕсли; 
		КонецЦикла;
		
		Если ЕстьОшибкаПоПолям И
			 ЕстьОшибкаПоСтрокам Тогда
			ВызватьИсключение ОписаниеОшибкиПоля + Символы.ВК + ОписаниеОшибкиСтроки;
		ИначеЕсли ЕстьОшибкаПоПолям Тогда
			ВызватьИсключение ОписаниеОшибкиПоля;
		ИначеЕсли ЕстьОшибкаПоСтрокам Тогда
			ВызватьИсключение ОписаниеОшибкиСтроки;
		КонецЕсли;
	КонецЕсли;
	
	ПараметрыЗаписи.Вставить("ЭтоНовыйОбъект", НЕ ЗначениеЗаполнено(ТекущийОбъект.Ссылка));
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Если ПараметрыЗаписи.ЭтоНовыйОбъект Тогда 
		СтруктураОповещения = Новый Структура("ВидДокумента, Шаблон, Правило", 
			Объект.ВладелецФайла, Объект.ШаблонФайла, Объект.Ссылка);
		Оповестить("ЗаписаноПравилоАвтозаполнения", СтруктураОповещения); 
		СформироватьЗаголовокФормы(ЭтаФорма);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ШаблонФайлаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПараметрыФормы = Новый Структура("ВыборШаблона, ТекущаяСтрока, ВыборДляПравилАвтозаполнения", Истина, ПредопределенноеЗначение("Справочник.ПапкиФайлов.Шаблоны"), Истина);
	ОткрытьФорму("Справочник.Файлы.Форма.ФормаВыбораФайлаВПапках", ПараметрыФормы, Элемент);

КонецПроцедуры

&НаКлиенте
Процедура ШаблонФайлаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Структура") Тогда
		Если Объект.ШаблонФайла <> ВыбранноеЗначение.Файл Тогда
			СписокПолейШаблона.Очистить();
			Модифицированность = Истина;
		КонецЕсли;
		Объект.ШаблонФайла = ВыбранноеЗначение.Файл;
		РасширениеФайла = ВыбранноеЗначение.Расширение;
	ИначеЕсли ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.Файлы") Тогда
		Если Объект.ШаблонФайла <> ВыбранноеЗначение Тогда
			СписокПолейШаблона.Очистить();
			Модифицированность = Истина;
		КонецЕсли;
		Объект.ШаблонФайла = ВыбранноеЗначение;
		РасширениеФайла = НРег(ОбщегоНазначенияДокументооборотВызовСервера.ЗначениеРеквизитаОбъекта(
			ВыбранноеЗначение, "ТекущаяВерсияРасширение"));
	Иначе
		Возврат;
	КонецЕсли;
	
	Если РасширениеФайла = "txt" Или 
		РасширениеФайла = "html" Или 
		РасширениеФайла = "htm" Тогда
		
		Элементы.ДанныеДляАвтозаполнения.ПодчиненныеЭлементы.ДанныеДляАвтозаполненияТермДляЗамены.Видимость = Ложь;
		
		Пока Истина цикл
			ЕстьПолеДляЗамены = Ложь;
			Для каждого Автозамена из Объект.ДанныеДляАвтозаполнения цикл
				Если НЕ ПустаяСтрока(Автозамена.ТермДляЗамены) Тогда
					Объект.ДанныеДляАвтозаполнения.Удалить(Автозамена.НомерСтроки - 1);
					ЕстьПолеДляЗамены = Истина;
					Прервать;
				КонецЕсли;
			КонецЦикла;
			
			Если НЕ ЕстьПолеДляЗамены Тогда 
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
	Иначе
		Элементы.ДанныеДляАвтозаполнения.ПодчиненныеЭлементы.ДанныеДляАвтозаполненияТермДляЗамены.Видимость = Истина;
	КонецЕсли;
	
	СформироватьЗаголовокФормы(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ШаблонФайлаАвтоПодбор(Элемент, Текст, ДанныеВыбора, Параметры, Ожидание, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если СтрДлина(Текст) < 3 Тогда
		Возврат;
	КонецЕсли;
	ШаблонФайлаАвтоПодборНаСервере(Текст, ДанныеВыбора);
	
КонецПроцедуры

&НаКлиенте
Процедура ШаблонФайлаОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, Параметры, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если Не ЗначениеЗаполнено(Текст) Тогда
		Возврат;
	КонецЕсли;
	ШаблонФайлаАвтоПодборНаСервере(Текст, ДанныеВыбора);
	
	Если ДанныеВыбора.Количество() = 1 Тогда
		ВыбранноеЗначение = ДанныеВыбора[0].Значение;
		Если Объект.ШаблонФайла <> ВыбранноеЗначение Тогда
			СписокПолейШаблона.Очистить();
			Модифицированность = Истина;
		КонецЕсли;
		Объект.ШаблонФайла = ВыбранноеЗначение;
		РасширениеФайла = НРег(ОбщегоНазначенияДокументооборотВызовСервера.ЗначениеРеквизитаОбъекта(
			ВыбранноеЗначение, "ТекущаяВерсияРасширение"));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТипВладельцаФайлаПриИзменении(Элемент)
	
	Элементы.ВладелецФайла.ТолькоПросмотр = ПустаяСтрока(ТипВладельцаФайла);
	Если ЗначениеЗаполнено(Объект.ВладелецФайла) Тогда
		ИмяТипаВладельцаФайла = "";
		Если ТипВладельцаФайла = Строка(ТипЗнч(Объект.ВладелецФайла)) Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;	
	
	Если ТипВладельцаФайла = Строка(Тип("СправочникСсылка.ВидыВнутреннихДокументов")) Тогда
		Объект.ВладелецФайла = ПредопределенноеЗначение("Справочник.ВидыВнутреннихДокументов.ПустаяСсылка");
	Иначе
		Объект.ВладелецФайла = ПредопределенноеЗначение("Справочник.ВидыИсходящихДокументов.ПустаяСсылка");
	КонецЕсли;
	Элементы.ВладелецФайла.ОтметкаНезаполненного = НЕ Элементы.ВладелецФайла.ТолькоПросмотр;
	
КонецПроцедуры

&НаКлиенте
Процедура ВладелецФайлаПриИзменении(Элемент)
	
	Элемент.ОтметкаНезаполненного = НЕ ЗначениеЗаполнено(Объект.ВладелецФайла);
	Если Не ЗначениеЗаполнено(Объект.ВладелецФайла) Тогда
		Если ТипВладельцаФайла = Строка(Тип("СправочникСсылка.ВидыВнутреннихДокументов")) Тогда
			Объект.ВладелецФайла = ПредопределенноеЗначение("Справочник.ВидыВнутреннихДокументов.ПустаяСсылка");
		Иначе
			Объект.ВладелецФайла = ПредопределенноеЗначение("Справочник.ВидыИсходящихДокументов.ПустаяСсылка");
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВладелецФайлаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если ТипВладельцаФайла = Строка(Тип("СправочникСсылка.ВидыВнутреннихДокументов")) Тогда
		ВыбранныйТип = ИмяТипаВнутренниеДокументы;
	Иначе
		ВыбранныйТип = ИмяТипаИсходящиеДокументы;
	КонецЕсли;
	
	РаботаСФайламиКлиент.ОбъектВыборСФайлами(Элемент, ВыбранныйТип, Объект.ВладелецФайла);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыРабочаяГруппаДокумента

&НаКлиенте
Процедура ДанныеДляАвтозаполненияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ДоступностьПолей = Истина;
	
	Если НРег(РасширениеФайла) = "txt" ИЛИ
		НРег(РасширениеФайла) = "html" ИЛИ
		НРег(РасширениеФайла) = "htm" Тогда
		ДоступностьПолей = Ложь;
	КонецЕсли;
		
	ПараметрыОткрытияФормы = Новый Структура();
	ПараметрыОткрытияФормы.Вставить("ЗначениеЗамены", Элемент.ТекущиеДанные.ЗначениеЗамены);
	ПараметрыОткрытияФормы.Вставить("ИмяПоля", Элемент.ТекущиеДанные.ТермДляЗамены);
	ПараметрыОткрытияФормы.Вставить("ПодстрокаПоиска", Элемент.ТекущиеДанные.ЗаменяемаяСтрока);
	ПараметрыОткрытияФормы.Вставить("ДоступностьПоля", ДоступностьПолей);
	
	Если ТипВладельцаФайла = Строка(Тип("СправочникСсылка.ВидыВнутреннихДокументов")) Тогда
		ВыбранныйТип = НСтр("ru = 'Внутренний документ'; en = 'Internal document'");
	Иначе
		ВыбранныйТип = НСтр("ru = 'Исходящий документ'; en = 'Outgoing document'");
	КонецЕсли;
	
	ПараметрыОткрытияФормы.Вставить("ТипДокумента", ВыбранныйТип);
	ПараметрыОткрытияФормы.Вставить("ШаблонФайла", Объект.ШаблонФайла);
	ПараметрыОткрытияФормы.Вставить("СписокПолей", СписокПолейШаблона);
	ПараметрыОткрытияФормы.Вставить("ВладелецФайла", Объект.ВладелецФайла);
	ПараметрыОткрытияФормы.Вставить("Выражение", Элемент.ТекущиеДанные.ВыражениеОбработкиРезультатаЗамены);
	ПараметрыОткрытияФормы.Вставить("ФорматЗначенияЗамены", Элемент.ТекущиеДанные.ФорматЗначенияЗамены);
	ПараметрыОткрытияФормы.Вставить("ТипЗначенияЗамены", Элемент.ТекущиеДанные.ТипЗначенияЗамены);
	// ТСК Талько Э.Г.; 16.07.2018; Печать {
	ДокументКачества = ра_ОбщегоНазначенияКлиентСервер.ДокументКачества(Объект.ВладелецФайла);
	Если ДокументКачества <> Неопределено Тогда
		ПараметрыОткрытияФормы.Вставить("ВладелецФайла", ДокументКачества);
	КонецЕсли;
	// ТСК Талько Э.Г.; 16.07.2018; Печать }
	
	ПараметрыОбработчика = Новый Структура;
	ПараметрыОбработчика.Вставить("Элемент", Элемент);
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"ДанныеДляАвтозаполненияВыборПродолжение",
		ЭтотОбъект,
		ПараметрыОбработчика);
	
	ОткрытьФорму(
		"Справочник.ПравилаАвтозаполненияФайлов.Форма.ФормаНастройкиЗамены",
		ПараметрыОткрытияФормы,,,,,
		ОписаниеОповещения,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	    
КонецПроцедуры 

&НаКлиенте
Процедура ДанныеДляАвтозаполненияВыборПродолжение(Результат, Параметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Элемент = Параметры.Элемент;
	
	Элемент.ТекущиеДанные.ТермДляЗамены = Результат.ИмяПоля;
	Элемент.ТекущиеДанные.ЗаменяемаяСтрока = Результат.ПодстрокаПоиска;
	Элемент.ТекущиеДанные.ЗначениеЗамены = Результат.ЗначениеЗамены;
	Элемент.ТекущиеДанные.ФорматЗначенияЗамены = Результат.ФорматЗначенияЗамены;
	Элемент.ТекущиеДанные.ТипЗначенияЗамены = Результат.ТипЗначенияЗамены;
	Элемент.ТекущиеДанные.ВыражениеОбработкиРезультатаЗамены = Результат.Выражение;
	Если Результат.СписокПолейШаблона.Количество() > 0 Тогда
		СписокПолейШаблона.Очистить();
		Для каждого Поле из Результат.СписокПолейШаблона Цикл
			НоваяСтрока = СписокПолейШаблона.Добавить();
			НоваяСтрока.Наименование = Поле.Наименование;
		КонецЦикла;
	КонецЕсли;
	Модифицированность = Истина;
		
КонецПроцедуры

&НаКлиенте
Процедура ДанныеДляАвтозаполненияПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	//проверка на заполненность обязательных полей шапки перед добавлением замен
    ОчиститьСообщения();
	
	Если НЕ ЗначениеЗаполнено(Объект.ШаблонФайла) Тогда
		ТекстСообщения = НСтр("ru = 'Поле ""Шаблон файла"" не заполнено'; en = 'Field  ""File template"" is not filled'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,, "Объект.ШаблонФайла", ,Отказ);
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ТипВладельцаФайла) Тогда
		ТекстСообщения = НСтр("ru = 'Поле ""Тип документа"" не заполнено'; en = 'Field  ""Document class"" is not filled'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,, "ТипВладельцаФайла", ,Отказ);
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(Объект.ВладелецФайла) 
		И НЕ Элементы.ВладелецФайла.ТолькоПросмотр Тогда
		ТекстСообщения = НСтр("ru = 'Поле ""Вид документа"" не заполнено'; en = 'Field  ""Document type"" is not filled'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,, "Объект.ВладелецФайла", ,Отказ);
	КонецЕсли;

	Если Отказ Тогда
		Возврат;
	КонецЕсли;
		
	ПараметрыОткрытияФормы = Новый Структура;
	
	Если НРег(РасширениеФайла) = "txt" Или 
		НРег(РасширениеФайла) = "html" Или 
		НРег(РасширениеФайла) = "htm" Тогда
		ПараметрыОткрытияФормы.Вставить("ДоступностьПоля", Ложь);
	Иначе 
		ПараметрыОткрытияФормы.Вставить("ДоступностьПоля", Истина);
	КонецЕсли;
	
	ПараметрыОткрытияФормы.Вставить("Выражение", "");
	ПараметрыОткрытияФормы.Вставить("ФорматЗначенияЗамены", "");
	ПараметрыОткрытияФормы.Вставить("ТипЗначенияЗамены", "");
	Если Копирование = Истина Тогда
		ПараметрыОткрытияФормы.Вставить("ЗначениеЗамены", Элемент.ТекущиеДанные.ЗначениеЗамены);
		ПараметрыОткрытияФормы.Вставить("ИмяПоля", Элемент.ТекущиеДанные.ТермДляЗамены);
		ПараметрыОткрытияФормы.Вставить("ПодстрокаПоиска", Элемент.ТекущиеДанные.ЗаменяемаяСтрока);
		ПараметрыОткрытияФормы.Вставить("ФорматЗначенияЗамены", Элемент.ТекущиеДанные.ФорматЗначенияЗамены);
		ПараметрыОткрытияФормы.Вставить("ТипЗначенияЗамены", Элемент.ТекущиеДанные.ТипЗначенияЗамены);
		ПараметрыОткрытияФормы.Вставить("Выражение", Элемент.ТекущиеДанные.ВыражениеОбработкиРезультатаЗамены);
	КонецЕсли;
	
	Если ТипВладельцаФайла = Строка(Тип("СправочникСсылка.ВидыВнутреннихДокументов")) Тогда
		ВыбранныйТип = НСтр("ru = 'Внутренний документ'; en = 'Internal document'");
	Иначе
		ВыбранныйТип = НСтр("ru = 'Исходящий документ'; en = 'Outgoing document'");
	КонецЕсли;
	
	ПараметрыОткрытияФормы.Вставить("ТипДокумента", ВыбранныйТип);
	ПараметрыОткрытияФормы.Вставить("ШаблонФайла", Объект.ШаблонФайла);
	ПараметрыОткрытияФормы.Вставить("СписокПолей", СписокПолейШаблона);
	ПараметрыОткрытияФормы.Вставить("ВладелецФайла", Объект.ВладелецФайла);
	
	ОткрытьФорму("Справочник.ПравилаАвтозаполненияФайлов.Форма.ФормаНастройкиЗамены", ПараметрыОткрытияФормы, Элемент);
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ДанныеДляАвтозаполненияОбработкаЗаписиНового(НовыйОбъект, Источник, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Строка = Объект.ДанныеДляАвтозаполнения.Добавить();
	Строка.ТермДляЗамены = НовыйОбъект.ИмяПоля;
	Строка.ЗаменяемаяСтрока = НовыйОбъект.ПодстрокаПоиска;
	Строка.ЗначениеЗамены = НовыйОбъект.ЗначениеЗамены;
	Строка.ФорматЗначенияЗамены = НовыйОбъект.ФорматЗначенияЗамены;
	Строка.ТипЗначенияЗамены = НовыйОбъект.ТипЗначенияЗамены;
    Строка.ВыражениеОбработкиРезультатаЗамены = НовыйОбъект.Выражение;

	
	Если НовыйОбъект.СписокПолейШаблона.Количество() > 0 Тогда
		СписокПолейШаблона.Очистить();
		Для Каждого Поле из НовыйОбъект.СписокПолейШаблона Цикл
			НоваяСтрока = СписокПолейШаблона.Добавить();
			НоваяСтрока.Наименование = Поле.Наименование;
		КонецЦикла;
	КонецЕсли;
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ДанныеДляАвтозаполненияПередНачаломИзменения(Элемент, Отказ)
	
	ДанныеДляАвтозаполненияВыбор(Элемент, Неопределено, Неопределено, Ложь);
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ДанныеДляАвтозаполненияПередУдалением(Элемент, Отказ)
		
	ТекстВопроса = НСтр("ru = 'Удалить выбранные настройки автозаполнения (" + Элемент.ВыделенныеСтроки.Количество() + ")?'; en = 'Delete selected autofill settings (" + Элемент.ВыделенныеСтроки.Количество() + ")?'");
	Режим = Новый СписокЗначений;
	Режим.Добавить(КодВозвратаДиалога.Да, НСтр("ru = 'Да, удалить'; en = 'Yes, delete'"));
	Режим.Добавить(КодВозвратаДиалога.Нет, НСтр("ru = 'Нет, не удалять'; en = 'No, do not delete'"));
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"ДанныеДляАвтозаполненияПередУдалениемПродолжение",
		ЭтотОбъект);
	
	ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, Режим, , КодВозвратаДиалога.Нет);
	Отказ = Истина;
		
КонецПроцедуры

&НаКлиенте
Процедура ДанныеДляАвтозаполненияПередУдалениемПродолжение(Ответ, Параметры) Экспорт
	
	Если Ответ <> КодВозвратаДиалога.Да Тогда
	    Возврат;
	КонецЕсли;
	
	ВыделенныеСтроки = Элементы.ДанныеДляАвтозаполнения.ВыделенныеСтроки;
	Для Каждого ВыделеннаяСтрока Из ВыделенныеСтроки Цикл
		Модифицированность = Истина;
		ЭлементКоллекции = Элементы.ДанныеДляАвтозаполнения.ДанныеСтроки(ВыделеннаяСтрока);
		Объект.ДанныеДляАвтозаполнения.Удалить(Объект.ДанныеДляАвтозаполнения.Индекс(ЭлементКоллекции));
	КонецЦикла;
		
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПроверитьПравило(Команда)
	
	#Если ВебКлиент Тогда
		Сообщение = НСтр("ru = 'В web-клиенте нельзя осуществлять проверку правил.'; en = 'In web client it is impossible to verify the rules'");
		ПоказатьПредупреждение(,Сообщение);
		Возврат;
	#КонецЕсли

	ОписаниеОповещения = Новый ОписаниеОповещения(
		"ПроверитьПравилоПродолжениеПослеВопросаОЗаписи",
		ЭтотОбъект);
	
	Если Модифицированность Тогда
		ПоказатьВопрос(
			ОписаниеОповещения,
			НСтр("ru = 'Данные были изменены. Сохранить изменения?'; en = 'Data has been changed. Save changes?'"), 
			РежимДиалогаВопрос.ДаНетОтмена, , 
			КодВозвратаДиалога.Отмена);
	Иначе
		ВыполнитьОбработкуОповещения(ОписаниеОповещения, Неопределено);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьПравилоПродолжениеПослеВопросаОЗаписи(Ответ, Параметры) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		Если Не Записать() Тогда
			Возврат;
		КонецЕсли;
	ИначеЕсли Ответ = КодВозвратаДиалога.Нет Тогда
		Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
			Текст = НСтр("ru = 'Новое правило перед проверкой должно быть записано. Записать?'; en = 'The new rule should be saved before testing. Save?'");
			ОписаниеОповещения = Новый ОписаниеОповещения(
				"ПроверитьПравилоПродолжениеПослеЗаписиНовогоПравила",
				ЭтотОбъект);
			ПоказатьВопрос(ОписаниеОповещения, Текст, РежимДиалогаВопрос.ДаНет);
			Возврат;
		КонецЕсли;
	ИначеЕсли Ответ = КодВозвратаДиалога.Отмена Тогда
		Возврат;
	КонецЕсли;

	ОписаниеОповещения = Новый ОписаниеОповещения(
		"ПроверитьПравилоПродолжениеПослеВыбораДокумента",
		ЭтотОбъект);
	
	ПараметрыФормы = Новый Структура("Отбор", Новый Структура("ВидДокумента", Объект.ВладелецФайла));
	
	Если ТипЗнч(Объект.ВладелецФайла) = Тип("СправочникСсылка.ВидыВнутреннихДокументов") Тогда
		ПараметрыФормы = Новый Структура("Отбор", Новый Структура("ВидДокумента", Объект.ВладелецФайла));
		ОткрытьФорму(
			"Справочник.ВнутренниеДокументы.ФормаВыбора", 
			ПараметрыФормы, 
			ЭтаФорма,,,,
			ОписаниеОповещения,
			РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
	ИначеЕсли ТипЗнч(Объект.ВладелецФайла) = Тип("СправочникСсылка.ВидыИсходящихДокументов") Тогда
		ПараметрыФормы = Новый Структура("Отбор", Новый Структура("ВидДокумента", Объект.ВладелецФайла));
		ОткрытьФорму(
			"Справочник.ИсходящиеДокументы.ФормаВыбора",
			ПараметрыФормы,
			ЭтаФорма,,,,
			ОписаниеОповещения,
			РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
	Иначе
		ПараметрыФормы = Новый Структура("Отбор", Новый Структура("Ссылка", Объект.ВладелецФайла));
		ОткрытьФорму(
			"Справочник.ПапкиФайлов.ФормаВыбора", 
			ПараметрыФормы, 
			ЭтаФорма,,,,
			ОписаниеОповещения,
			РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
	КонецЕсли;	
		
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьПравилоПродолжениеПослеЗаписиНовогоПравила(Результат, Параметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		Если Записать() Тогда
			ПроверитьПравило(Неопределено);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьПравилоПродолжениеПослеВыбораДокумента(Результат, Параметры) Экспорт
	
	#Если Не ВебКлиент Тогда
		
	Если НЕ ЗначениеЗаполнено(Результат) Тогда
		Возврат;
	КонецЕсли;

	Состояние(НСтр("ru = 'Выполняется заполнение шаблона файла. Пожалуйста, подождите...'; en = 'Is populated template file. Please wait...'"));
	РезультатЗаполненияФайла = АвтозаполнениеШаблоновФайловКлиентСервер.ЗаполнитьПоляФайлаДаннымиВладельца(
		Истина,
		Объект.ШаблонФайла,
		Ложь,
		УникальныйИдентификатор,
		Результат);
	Если РезультатЗаполненияФайла.Свойство("ДвоичныеДанныеЗаполненногоФайла")
		И РезультатЗаполненияФайла.ДвоичныеДанныеЗаполненногоФайла <> Неопределено Тогда
		
		Если РезультатЗаполненияФайла.ДвоичныеДанныеЗаполненногоФайла = "Linux" Тогда
			ОписаниеОшибки = НСтр("ru = 'Автозаполнение файлов Microsoft Word 2003 возможно только в Windows. Обратитесь к администратору.'; en = 'Autofilling template files of Microsoft Word 2003 is only possible in Windows. Please contact the administrator.'");
			ПоказатьПредупреждение(,ОписаниеОшибки);
			Состояние();
			Возврат;
		КонецЕсли;
		
		ПутьКФайлу = ПолучитьИмяВременногоФайла(Элементы.ТипШаблона.ТекстРедактирования);
		РезультатЗаполненияФайла.ДвоичныеДанныеЗаполненногоФайла.Записать(ПутьКФайлу);
		ДелопроизводствоКлиент.ОткрытьФайлПриложением(ПутьКФайлу);
		ПолноеИмяФайлаДляПроверки = ПутьКФайлу;
	КонецЕсли;
	Состояние();	
	
	#КонецЕсли

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Процедура ШаблонФайлаАвтоПодборНаСервере(Текст, ДанныеВыбора)
	
	ДанныеВыбора = Новый СписокЗначений;
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Файлы.Ссылка,
		|	Файлы.ИндексКартинки
		|ИЗ
		|	Справочник.Файлы КАК Файлы
		|ГДЕ
		|	Файлы.Наименование ПОДОБНО &Наименование
		|	И Файлы.ВладелецФайла В ИЕРАРХИИ(&ВладелецФайла)
		|	И Файлы.ТекущаяВерсияРасширение В(&ТекущаяВерсияРасширение)";
		
	Запрос.УстановитьПараметр("Наименование", Текст + "%");
	Запрос.УстановитьПараметр("ВладелецФайла", Справочники.ПапкиФайлов.Шаблоны);
	СписокРасширенийШаблонов = Новый Массив;
	СписокРасширенийШаблонов.Добавить("doc");
	СписокРасширенийШаблонов.Добавить("docx");
	СписокРасширенийШаблонов.Добавить("dot");
	СписокРасширенийШаблонов.Добавить("dotx");
	СписокРасширенийШаблонов.Добавить("txt");
	СписокРасширенийШаблонов.Добавить("odt");
	СписокРасширенийШаблонов.Добавить("html");
	Запрос.УстановитьПараметр("ТекущаяВерсияРасширение", СписокРасширенийШаблонов);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ДанныеВыбора.Добавить(Выборка.Ссылка);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура СформироватьЗаголовокФормы(Форма)
	
	Объект = Форма.Объект;
	
	Если Объект.Ссылка.Пустая() Тогда 
		Если ЗначениеЗаполнено(Объект.ШаблонФайла) Тогда 
			Форма.Заголовок = СтрШаблон(НСтр("ru = 'Настройка заполнения файла ""%1"" (создание)'; en = 'Setting fill file ""%1"" (creation)'"),
				Объект.ШаблонФайла);
		Иначе 
			Форма.Заголовок = НСтр("ru = 'Настройка заполнения файла (создание)'; en = 'Setting fill file (creation)'");
		КонецЕсли;
	Иначе 
		Если ЗначениеЗаполнено(Объект.ШаблонФайла) Тогда 
			Форма.Заголовок = СтрШаблон(НСтр("ru = 'Настройка заполнения файла ""%1""'; en = 'Setting fill file ""%1""'"),
				Объект.ШаблонФайла);
		Иначе 
			Форма.Заголовок = НСтр("ru = 'Настройка заполнения файла'; en = 'Setting fill file'");
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьДвоичныеДанные(Файл)
	
	Возврат АвтозаполнениеШаблоновФайловСервер.ПолучитьДвоичныеДанныеФайла(Файл);
	
КонецФункции

#КонецОбласти
