#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ТекущийПользователь = ПользователиКлиентСервер.ТекущийПользователь();
	
	Мероприятие = Параметры.Мероприятие;
	Если ЗначениеЗаполнено(Мероприятие) Тогда 
		
		ПрочитатьСостоянияМероприятия();
		
		Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Состояние мероприятия ""%1""'; en = 'Event state ""%1""'"),
			Строка(Мероприятие));
		
	Иначе
		
		СостояниеМероприятия = Перечисления.СостоянияМероприятий.МероприятиеВСтадииПодготовки;
		УстановилМероприятия = ТекущийПользователь;
		ДатаМероприятия = ТекущаяДата();
		
	КонецЕсли;
	
	УчестьИзмененныеСостояния(Параметры.ИзмененныеСостояния);
	
	УстановитьПараметрыФункциональныхОпцийФормы(Новый Структура("ВидМероприятия", Параметры.ВидМероприятия));
	
	ПриложениеЯвляетсяВебКлиентом = ОбщегоНазначенияДокументооборот.ПриложениеЯвляетсяВебКлиентом();
	
	Если Параметры.Свойство("ДляПросмотра") И Параметры.ДляПросмотра Тогда 
		
		Элементы.ФормаЗаписать.Видимость = Ложь;
		Элементы.ФормаОтмена.Заголовок = НСтр("ru = 'Закрыть'; en = 'Close'");
		Элементы.ФормаОтмена.ФормаОтмена = Истина;
		
		Элементы.СостояниеМероприятия.ТолькоПросмотр = Истина;
		Элементы.СостояниеПрограммы.ТолькоПросмотр = Истина;
		Элементы.СостояниеПриглашений.ТолькоПросмотр = Истина;
		Элементы.СостояниеМатериаловВыступающих.ТолькоПросмотр = Истина;
		Элементы.СостояниеПротокола.ТолькоПросмотр = Истина;
		
	КонецЕсли;
	
	Параметры.Свойство("ЕстьРешениеНеПринято", ЕстьРешениеНеПринято);
	
	// Установка активизированного элемента
	Если Параметры.АктивизироватьЭлемент = "СостояниеМероприятия" Тогда
		Элементы.СостояниеМероприятия.АктивизироватьПоУмолчанию = Истина;
	ИначеЕсли Параметры.АктивизироватьЭлемент = "СостояниеПрограммы" Тогда
		Элементы.СостояниеПрограммы.АктивизироватьПоУмолчанию = Истина;
	ИначеЕсли Параметры.АктивизироватьЭлемент = "СостояниеПриглашений" Тогда
		Элементы.СостояниеПриглашений.АктивизироватьПоУмолчанию = Истина;
	ИначеЕсли Параметры.АктивизироватьЭлемент = "СостояниеМатериаловВыступающих" Тогда
		Элементы.СостояниеМатериаловВыступающих.АктивизироватьПоУмолчанию = Истина;
	ИначеЕсли Параметры.АктивизироватьЭлемент = "СостояниеПротокола" Тогда
		Элементы.СостояниеПротокола.АктивизироватьПоУмолчанию = Истина;
	КонецЕсли;
	
	Если ПолучитьФункциональнуюОпциюФормы("УчитыватьКакПротокольноеМероприятие") Тогда
		КлючСохраненияПоложенияОкна = "ПротокольноеМероприятие";
	Иначе
		КлючСохраненияПоложенияОкна = "Мероприятие";
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИзмененаИсторияСостояний" И Параметр = Мероприятие Тогда 
		ПрочитатьСостоянияМероприятия();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура МероприятиеПриИзменении(Элемент)
	
	Если ЕстьРешениеНеПринято
		И СостояниеМероприятия = ПредопределенноеЗначение("Перечисление.СостоянияМероприятий.МероприятиеПроведено") Тогда 
		
		ОписаниеОповещения = Новый ОписаниеОповещения("МероприятиеПриИзмененииЗавершение", ЭтотОбъект);
		ТекстВопроса = НСтр("ru = 'Не по всем пунктам программы приняты решения. Продолжить?'; en = 'Not all agenda items have been decided on. Do you want to contiue?'");
		
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		Возврат;
		
	КонецЕсли;
	
	ПриИзмененииСостояния("Мероприятия");
	
КонецПроцедуры

&НаКлиенте
Процедура МероприятиеПриИзмененииЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> КодВозвратаДиалога.Да Тогда
		СостояниеМероприятия = НачальноеСостояниеМероприятия;
		Возврат;
	КонецЕсли;
	
	ПриИзмененииСостояния("Мероприятия");
	
КонецПроцедуры

&НаКлиенте
Процедура ПрограммаПриИзменении(Элемент)
	
	ПриИзмененииСостояния("Программы");
	
КонецПроцедуры

&НаКлиенте
Процедура ПриглашенияПриИзменении(Элемент)
	
	ПриИзмененииСостояния("Приглашений");
	
КонецПроцедуры

&НаКлиенте
Процедура МатериалыПриИзменении(Элемент)
	
	ПриИзмененииСостояния("МатериаловВыступающих");
	
КонецПроцедуры

&НаКлиенте
Процедура ПротоколПриИзменении(Элемент)
	
	ПриИзмененииСостояния("Протокола");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Записать(Команда)
	
	ОчиститьСообщения();
	Если Не ПроверитьЗаполнение() Тогда 
		Возврат;
	КонецЕсли;
	
	МассивСостояний = Новый Массив;
	
	ИменаСостояний = ПолучитьИменаСостояний();
	Для Каждого Строка Из ИменаСостояний Цикл
		ИмяСостояния = Строка.Ключ;
		
		Если ЭтаФорма["НачальноеСостояние" + ИмяСостояния] <> ЭтаФорма["Состояние" + ИмяСостояния] Тогда
			СтруктураСостояния = Новый Структура("Состояние, Установил, Период, НачальноеСостояние, Тип",
				ЭтаФорма["Состояние" + ИмяСостояния],
				ЭтаФорма["Установил" + ИмяСостояния],
				ЭтаФорма["Дата"  + ИмяСостояния],
				ЭтаФорма["НачальноеСостояние" + ИмяСостояния],
				ИмяСостояния);
				
			МассивСостояний.Добавить(СтруктураСостояния);
		КонецЕсли;
		
	КонецЦикла;
	
	Закрыть(МассивСостояний);
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПриИзмененииСостояния(ИмяСостояния)
	
	Если Не ЗначениеЗаполнено(ЭтаФорма["Состояние" + ИмяСостояния]) Тогда 
		ЭтаФорма["Установил" + ИмяСостояния] = Неопределено;
		ЭтаФорма["Дата" + ИмяСостояния] = '00010101';
		Возврат;
	КонецЕсли;
	
	Если ЭтаФорма["Состояние" + ИмяСостояния] = ЭтаФорма["НачальноеСостояние" + ИмяСостояния] Тогда 
		Возврат;
	КонецЕсли;
	
	ЭтаФорма["Установил" + ИмяСостояния] = ТекущийПользователь;
	ЭтаФорма["Дата" + ИмяСостояния] = ТекущаяДата();
	
КонецПроцедуры

&НаСервере
Процедура ПрочитатьСостоянияМероприятия()
	
	ИменаСостояний = ПолучитьИменаСостояний();
	Для Каждого Строка Из ИменаСостояний Цикл
		
		ИмяСостояния = Строка.Ключ;
		
		СтруктураСостояния = УправлениеМероприятиями.ПолучитьСтруктуруСостоянияМероприятия(Мероприятие, "Состояние" + ИмяСостояния);
		
		ЭтаФорма["Состояние" + ИмяСостояния] = СтруктураСостояния.Состояние;
		ЭтаФорма["Установил" + ИмяСостояния] = СтруктураСостояния.Установил;
		ЭтаФорма["Дата"  + ИмяСостояния] = СтруктураСостояния.ДатаУстановки;
		
		ЭтаФорма["НачальноеСостояние" + ИмяСостояния] = СтруктураСостояния.Состояние;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ПолучитьИменаСостояний()
	
	ИменаСостояний = Новый Структура("Мероприятия, Программы, Приглашений, МатериаловВыступающих, Протокола"); 
	
	Возврат ИменаСостояний;
	
КонецФункции

&НаСервере
Процедура УчестьИзмененныеСостояния(ИзмененныеСостояния)
	
	Для Каждого ЭлементИзмененноеСостояние Из ИзмененныеСостояния Цикл
		
		ИзмененноеСостояние = ЭлементИзмененноеСостояние.Значение;
		Если ЗначениеЗаполнено(ИзмененноеСостояние.Состояние) Тогда 
			ИмяСостояния = УправлениеМероприятиями.ПолучитьИмяЭлементаСостояния(ИзмененноеСостояние.Состояние);
		Иначе
			ИмяСостояния = УправлениеМероприятиями.ПолучитьИмяЭлементаСостояния(ИзмененноеСостояние.НачальноеСостояние);
		КонецЕсли;
		
		Если ИзмененноеСостояние.НачальноеСостояние <> ЭтаФорма["НачальноеСостояние" + ИмяСостояния] Тогда
			Продолжить;
		КонецЕсли;
		
		ЭтаФорма["Состояние" + ИмяСостояния] = ИзмененноеСостояние.Состояние;
		ЭтаФорма["Установил" + ИмяСостояния] = ИзмененноеСостояние.Установил;
		ЭтаФорма["Дата" + ИмяСостояния] = ИзмененноеСостояние.Период;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти
