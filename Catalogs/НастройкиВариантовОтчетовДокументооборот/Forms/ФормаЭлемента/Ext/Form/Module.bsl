#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ДеревоЗначений = ПолучитьДеревоКатегорий();
	
	ЗначениеВРеквизитФормы(ДеревоЗначений, "ДеревоКатегорий");
	
	ДеревоЗначений = ПолучитьДеревоРазделов();
	
	ЗначениеВРеквизитФормы(ДеревоЗначений, "ДеревоРазделов");
	
	ПолныеПраваНаВарианты = ВариантыОтчетов.ПолныеПраваНаВарианты();

	Если НЕ Объект.Пользовательский Тогда
		Элементы.Наименование.ТолькоПросмотр = Истина;
		Элементы.Доступен.ТолькоПросмотр = Истина;
		Элементы.Автор.ТолькоПросмотр = Истина;
		Элементы.Автор.АвтоОтметкаНезаполненного = Ложь;
	КонецЕсли;

	Элементы.Доступен.ТолькоПросмотр = НЕ ПолныеПраваНаВарианты;
	Элементы.Автор.ТолькоПросмотр = НЕ ПолныеПраваНаВарианты;
	Доступен = Не Объект.ТолькоДляАвтора;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ХранилищеСнимокОтчета = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Ссылка, "ХранилищеСнимокОтчета");
	ДвоичныеДанные = ХранилищеСнимокОтчета.Получить();
	ЕстьКартинка = ЗначениеЗаполнено(ДвоичныеДанные);
	Снимок = ПолучитьНавигационнуюСсылку(Объект.Ссылка, "ХранилищеСнимокОтчета");
	
	Элементы.Снимок.Гиперссылка = Не ЕстьКартинка;
	Элементы.АдресКартинкиКонтекстноеМенюДобавитьИзображение.Доступность = Не ЕстьКартинка;
	Элементы.АдресКартинкиКонтекстноеМенюОчиститьИзображение.Доступность = ЕстьКартинка;

КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Дерево = Новый ДеревоЗначений;
	
	Дерево = РеквизитФормыВЗначение("ДеревоКатегорий", );
	ЗаписатьКатегорииВариантаОтчетаНаСервере(Дерево, ТекущийОбъект);
	
	Дерево = РеквизитФормыВЗначение("ДеревоРазделов", );
	ЗаписатьРазделыВариантаОтчетаНаСервере(Дерево, ТекущийОбъект);

	ТекущийОбъект.РедактируетсяВручную = Истина;
		
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДоступенПриИзменении(Элемент)
	
	Объект.ТолькоДляАвтора =  Не Доступен;
	
КонецПроцедуры

&НаКлиенте
Процедура АдресКартинкиНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ЗаблокироватьДанныеФормыДляРедактирования();
	ДобавитьИзображениеНаКлиенте();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФорм

&НаКлиенте
Процедура ОчиститьИзображение(Команда)
	
	ЗаблокироватьДанныеФормыДляРедактирования();
	ОчиститьИзображениеСервер();
	ЕстьКартинка = Ложь;
	Элементы.Снимок.Гиперссылка = Не ЕстьКартинка;
	Элементы.АдресКартинкиКонтекстноеМенюДобавитьИзображение.Доступность = Не ЕстьКартинка;
	Элементы.АдресКартинкиКонтекстноеМенюОчиститьИзображение.Доступность = ЕстьКартинка;
	Прочитать();
	РазблокироватьДанныеФормыДляРедактирования();
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьИзображение(Команда)
	
	ДобавитьИзображениеНаКлиенте();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ПолучитьДеревоКатегорий()
	
	Дерево = Новый ДеревоЗначений;
	Дерево.Колонки.Добавить("Ссылка",     Новый ОписаниеТипов("СправочникСсылка.КатегорииОтчетов"));
	Дерево.Колонки.Добавить("Выбрана", Новый ОписаниеТипов("Булево"));
	Дерево.Колонки.Добавить("Наименование", Новый ОписаниеТипов("Строка"));

	Запрос = Новый Запрос;
	Запрос.Текст =
			"ВЫБРАТЬ
			|	КатегорииОтчетов.Наименование КАК Наименование,
			|	КатегорииОтчетов.Ссылка КАК Ссылка,
			|	ВЫБОР
			|		КОГДА НастройкиВариантовОтчетовДокументооборотКатегории.Категория ЕСТЬ NULL 
			|			ТОГДА ЛОЖЬ
			|		ИНАЧЕ ИСТИНА
			|	КОНЕЦ КАК Выбрана
			|ИЗ
			|	Справочник.КатегорииОтчетов КАК КатегорииОтчетов
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НастройкиВариантовОтчетовДокументооборот.Категории КАК НастройкиВариантовОтчетовДокументооборотКатегории
			|		ПО (НастройкиВариантовОтчетовДокументооборотКатегории.Категория = КатегорииОтчетов.Ссылка)
			|			И (НастройкиВариантовОтчетовДокументооборотКатегории.Ссылка = &Ссылка)
			|ГДЕ
			|	КатегорииОтчетов.ПометкаУдаления = ЛОЖЬ
			|
			|УПОРЯДОЧИТЬ ПО
			|	КатегорииОтчетов.Наименование";
		
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	Результат = Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Истина);
	ВыборкаДетальныеЗаписи = Результат.Выбрать();
	УстановитьПривилегированныйРежим(Ложь);

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		Строка = Дерево.Строки.Добавить();
		Строка.Ссылка = ВыборкаДетальныеЗаписи.Ссылка;
		Строка.Выбрана = ВыборкаДетальныеЗаписи.Выбрана;
		Строка.Наименование = ВыборкаДетальныеЗаписи.Ссылка.Наименование;
		
	КонецЦикла;
	
	Возврат Дерево;

КонецФункции

&НаСервере
Процедура ЗаписатьКатегорииВариантаОтчетаНаСервере(ДеревоЗначений, ТекущийОбъект)
	
	ТекущийОбъект.Категории.Очистить();
	
	Отбор = Новый Структура("Выбрана", Истина);
	ВыбранныеКатегории = ДеревоЗначений.Строки.НайтиСтроки(Отбор, Истина);
	
	Для Каждого ВыбраннаяКатегория из ВыбранныеКатегории Цикл
		
		ОтборКатегория = Новый Структура("Категория", ВыбраннаяКатегория.Ссылка);
		
		НайденныеКатегории = ТекущийОбъект.Категории.НайтиСтроки(ОтборКатегория);
		
		Если НайденныеКатегории.Количество() = 0 Тогда
			
			НоваяСтрока = ТекущийОбъект.Категории.Добавить();
			НоваяСтрока.Категория = ВыбраннаяКатегория.Ссылка;
			
		КонецЕсли;
		
	КонецЦикла;
	
	ТекущийОбъект.Категории.Свернуть("Категория");
	
КонецПроцедуры

&НаСервере
Функция ПолучитьДеревоРазделов()
	
	СписокТипов = Новый Массив;
	СписокТипов.Добавить("СправочникСсылка.ИдентификаторыОбъектовМетаданных");
	СписокТипов.Добавить("ПеречислениеСсылка.РазделыОтчетов");
	ОписаниеСоставногоТипа = Новый ОписаниеТипов(СписокТипов);

	
	Дерево = Новый ДеревоЗначений;
	Дерево.Колонки.Добавить("Ссылка",ОписаниеСоставногоТипа);
	Дерево.Колонки.Добавить("Выбрана", Новый ОписаниеТипов("Булево"));
	Дерево.Колонки.Добавить("Наименование", Новый ОписаниеТипов("Строка"));

	
	ТЗРазделыИОМ = Новый ТаблицаЗначений();
	ТЗРазделыИОМ.Колонки.Добавить("Раздел",
		Новый ОписаниеТипов("СправочникСсылка.ИдентификаторыОбъектовМетаданных"));
		
	ТЗРазделыРО = Новый ТаблицаЗначений();
	ТЗРазделыРО.Колонки.Добавить("Раздел",
		Новый ОписаниеТипов("ПеречислениеСсылка.РазделыОтчетов"));
	

	//Добавляем разделы конфигурации
	Строка = ТЗРазделыИОМ.Добавить();
	Строка.Раздел = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(
		Метаданные.Подсистемы.ДокументыИФайлы);
	
	Строка = ТЗРазделыИОМ.Добавить();
	Строка.Раздел = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(
		Метаданные.Подсистемы.НСИ);
	
	Строка = ТЗРазделыИОМ.Добавить();
	Строка.Раздел = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(
		Метаданные.Подсистемы.НастройкаИАдминистрирование);
	
	Строка = ТЗРазделыИОМ.Добавить();
	Строка.Раздел = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(
		Метаданные.Подсистемы.СовместнаяРабота);
	
	Строка = ТЗРазделыИОМ.Добавить();
	Строка.Раздел = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(
		Метаданные.Подсистемы.УчетВремени);
	
	Строка = ТЗРазделыИОМ.Добавить();
	Строка.Раздел = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(
		Метаданные.Подсистемы.УправлениеБизнесПроцессами);
		
	//Добавляем формы списков в которых может быть доступен вариант отчета
	
	Для Каждого ЭлРаздел Из Перечисления.РазделыОтчетов Цикл
		Строка = ТЗРазделыРО.Добавить();
		Строка.Раздел = ЭлРаздел;
	КонецЦикла;
	
	Запрос = Новый Запрос ();
	Запрос.Текст = 
			"ВЫБРАТЬ
			|	РазделыИОМ.Раздел КАК Раздел
			|ПОМЕСТИТЬ РазделыИОМ
			|ИЗ
			|	&РазделыИОМ КАК РазделыИОМ
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	РазделыРО.Раздел КАК Раздел
			|ПОМЕСТИТЬ РазделыРО
			|ИЗ
			|	&РазделыРО КАК РазделыРО
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Разделы.Раздел КАК Раздел
			|ПОМЕСТИТЬ Разделы
			|ИЗ
			|	РазделыИОМ КАК Разделы
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	Разделы.Раздел
			|ИЗ
			|	РазделыРО КАК Разделы
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Разделы.Раздел КАК Ссылка,
			|	ВЫБОР
			|		КОГДА НастройкиВариантовОтчетовДокументооборотРазмещение.Раздел ЕСТЬ NULL 
			|			ТОГДА ЛОЖЬ
			|		ИНАЧЕ ИСТИНА
			|	КОНЕЦ КАК Выбрана
			|ИЗ
			|	Разделы КАК Разделы
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НастройкиВариантовОтчетовДокументооборот.Размещение КАК НастройкиВариантовОтчетовДокументооборотРазмещение
			|		ПО Разделы.Раздел = НастройкиВариантовОтчетовДокументооборотРазмещение.Раздел
			|			И (НастройкиВариантовОтчетовДокументооборотРазмещение.Ссылка = &Ссылка)";
	
	Запрос.УстановитьПараметр("РазделыИОМ", ТЗРазделыИОМ);
	Запрос.УстановитьПараметр("РазделыРО", ТЗРазделыРО);
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);

	Результат = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		Строка = Дерево.Строки.Добавить();
		
		Строка.Ссылка = ВыборкаДетальныеЗаписи.Ссылка;
		Строка.Выбрана = ВыборкаДетальныеЗаписи.Выбрана;
		
		Если ТипЗнч(Строка.Ссылка) = Тип("СправочникСсылка.ИдентификаторыОбъектовМетаданных") Тогда
			
			Строка.Наименование = ВыборкаДетальныеЗаписи.Ссылка.Синоним;
			
		Иначе
			
			Строка.Наименование = Строка(ВыборкаДетальныеЗаписи.Ссылка);
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Дерево;

КонецФункции

&НаСервере
Процедура ЗаписатьРазделыВариантаОтчетаНаСервере(ДеревоЗначений, ТекущийОбъект)
	
	Отбор = Новый Структура("Выбрана", Истина);
	ВыбранныеРазделы = ДеревоЗначений.Строки.НайтиСтроки(Отбор, Истина);
	ТекущийОбъект.Размещение.Очистить();
	
	Для Каждого ВыбранныйРаздел из ВыбранныеРазделы Цикл
		
		ОтборРаздел = Новый Структура("Раздел", ВыбранныйРаздел.Ссылка);
		
		НайденныеРазделы = ТекущийОбъект.Размещение.НайтиСтроки(ОтборРаздел);
		
		Если НайденныеРазделы.Количество() = 0 Тогда
			
			НоваяСтрока = ТекущийОбъект.Размещение.Добавить();
			НоваяСтрока.Раздел = ВыбранныйРаздел.Ссылка;
		КонецЕсли;
		
	КонецЦикла;
		
КонецПроцедуры

&НаКлиенте
Процедура ОбновлениеИзФайлаЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат.Успех = Истина Тогда
		Модифицированность = Истина;
		РегистрацияОбработки = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ФильтрДиалоговВыбораИСохранения() Экспорт
	
	Фильтр = НСтр("ru = 'Макет отчета (*.%1)|*.%1'; en = 'Report template (*.%1)|*.%1'");
	Фильтр = СтрШаблон(Фильтр, "mxl");
	Возврат Фильтр;
	
КонецФункции

&НаКлиенте
Процедура ДобавитьИзображениеНаКлиенте()
	
	ПараметрыОписания = Новый Структура(
		"АдресВременногоХранилищаФайла", 
		"");
		
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"ДобавитьИзображениеНаКлиентеПродолжение",
		ЭтотОбъект,
		ПараметрыОписания);
		
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ТекстВопроса = НСтр("ru='Для выбора изображения необходимо записать объект. Записать?'; en = 'You have to save the object to choose an image. Save it?'");
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	Иначе
		ВыполнитьОбработкуОповещения(ОписаниеОповещения, КодВозвратаДиалога.Да);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОчиститьИзображениеСервер()
	
	ЗаблокироватьДанныеДляРедактирования(Объект.Ссылка, , УникальныйИдентификатор);
	СнимокОбъект = Объект.Ссылка.ПолучитьОбъект();
	СнимокОбъект.ХранилищеСнимокОтчета = Новый ХранилищеЗначения(Неопределено);
	СнимокОбъект.Записать();
	РазблокироватьДанныеДляРедактирования(Объект.Ссылка, УникальныйИдентификатор);
	
КонецПроцедуры	

&НаКлиенте
Процедура ДобавитьИзображениеНаКлиентеПродолжение(Результат, ДополнительныеПараметры)Экспорт 
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		Записать();
	Иначе
		Возврат;
	КонецЕсли;

	Если Не ЕстьКартинка И ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		ОписаниеОповещения = Новый ОписаниеОповещения(
			"ВыборКартинкиПродолжение",
			ЭтотОбъект,
			ДополнительныеПараметры);

		ФайловыеФункцииКлиент.ВыбратьКартинкуИПоместитьВХранилище(
			ОписаниеОповещения, УникальныйИдентификатор, Ложь);
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ВыборКартинкиПродолжение(Результат, Параметры) Экспорт 

	Если Результат <> Истина Тогда
		Возврат;
	КонецЕсли;
	
	ЗаписатьИзображение(Параметры.АдресВременногоХранилищаФайла);

	ЕстьКартинка = Истина;
	Элементы.Снимок.Гиперссылка = Не ЕстьКартинка;
	Элементы.АдресКартинкиКонтекстноеМенюДобавитьИзображение.Доступность = Не ЕстьКартинка;
	Элементы.АдресКартинкиКонтекстноеМенюОчиститьИзображение.Доступность = ЕстьКартинка;
	Прочитать();
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьИзображение(АдресВременногоХранилищаФайла)
	
	ЗаблокироватьДанныеДляРедактирования(Объект.Ссылка, , УникальныйИдентификатор);
	СнимокОбъект = Объект.Ссылка.ПолучитьОбъект();
	ДвоичныеДанные = ПолучитьИзВременногоХранилища(АдресВременногоХранилищаФайла);
	СнимокОбъект.ХранилищеСнимокОтчета = Новый ХранилищеЗначения(ДвоичныеДанные);
	СнимокОбъект.Записать();
	РазблокироватьДанныеДляРедактирования(Объект.Ссылка, УникальныйИдентификатор);
	
КонецПроцедуры	

#КонецОбласти


