#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПротоколированиеРаботыПользователей.ЗаписатьОткрытие(Объект.Ссылка);
	
	Если Объект.Ссылка.Пустая() Тогда
		Если Не ЗначениеЗаполнено(Объект.Год) Тогда
			Объект.Год = Год(ТекущаяДата());
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(Объект.СрокХранения) Тогда 
			Объект.СрокХранения = 0;
		КонецЕсли;	
		
		Если Не ЗначениеЗаполнено(Объект.Организация) Тогда 
			Если ЗначениеЗаполнено(Объект.Раздел) Тогда 
				Объект.Организация = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Раздел, "Организация");
			Иначе 	
				Объект.Организация = РаботаСОрганизациями.ПолучитьОрганизациюПоУмолчанию();
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;	
	
	СрокХраненияЗаполнитьСписокВыбора(Элементы.СрокХранения.СписокВыбора, Объект.КатегорияДела);
	
	// Инструкции
	ПоказыватьИнструкции = ПолучитьФункциональнуюОпцию("ИспользоватьИнструкции");
	ПолучитьИнструкции();
	
	// СтандартныеПодсистемы.Печать
	УправлениеПечатью.ПриСозданииНаСервере(ЭтаФорма);
	// Конец СтандартныеПодсистемы.Печать
	
	// СтандартныеПодсистемы.БазоваяФункциональность
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.БазоваяФункциональность
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ЗаполнитьПодписьЛет();
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ПараметрыЗаписи.Вставить("ЭтоНовыйОбъект", Не ЗначениеЗаполнено(ТекущийОбъект.Ссылка));
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	ПротоколированиеРаботыПользователей.ЗаписатьСоздание(Объект.Ссылка, ПараметрыЗаписи.ЭтоНовыйОбъект);
	ПротоколированиеРаботыПользователей.ЗаписатьИзменение(Объект.Ссылка);
	
	Если Не ПараметрыЗаписи.ЭтоНовыйОбъект Тогда 
		Возврат;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Дела.Ссылка
		|ИЗ
		|	Справочник.ДелаХраненияДокументов КАК Дела
		|ГДЕ
		|	НЕ Дела.ПометкаУдаления
		|	И НЕ Дела.ДелоЗакрыто
		|	И Дела.НоменклатураДел.Индекс = &Индекс
		|	И Дела.Организация = &Организация
		|	И (Дела.ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1)
		|			ИЛИ Дела.ДатаОкончания <> ДАТАВРЕМЯ(1, 1, 1)
		|				И ГОД(Дела.ДатаОкончания) >= &Год)";
	
	Запрос.УстановитьПараметр("Индекс", ТекущийОбъект.Индекс);
	Запрос.УстановитьПараметр("Организация", ТекущийОбъект.Организация);
	Запрос.УстановитьПараметр("Год", ТекущийОбъект.Год);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ЗаблокироватьДанныеДляРедактирования(Выборка.Ссылка);
		ДелоОбъект = Выборка.Ссылка.ПолучитьОбъект();
		
		НоваяСтрока = ДелоОбъект.ОтноситсяКНоменклатуреДел.Добавить();
		НоваяСтрока.НоменклатураДел = ТекущийОбъект.Ссылка;
		
		ОбновлениеИнформационнойБазы.ЗаписатьДанные(ДелоОбъект);
		РазблокироватьДанныеДляРедактирования(Выборка.Ссылка);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("ИзмененаНоменклатураДел", Объект.Ссылка, ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)

	Если Настройки["ПоказыватьИнструкции"] <> Неопределено
		И ПолучитьФункциональнуюОпцию("ИспользоватьИнструкции") Тогда
		ПолучитьИнструкции();
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СрокХраненияПриИзменении(Элемент)
	
	ЗаполнитьПодписьЛет();
	
КонецПроцедуры

&НаКлиенте
Процедура СрокХраненияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ВыбранноеЗначение = НСтр("ru = '<Произвольный>'; en = '<Arbitrary>'") Тогда 
		
		СтандартнаяОбработка = Ложь;
		Объект.СрокХранения = "";
		
	ИначеЕсли ВыбранноеЗначение = НСтр("ru = '1 год'; en = '1 year'") 
		  Или ВыбранноеЗначение = НСтр("ru = '3 года'; en = '3 year'") 
		  Или ВыбранноеЗначение = НСтр("ru = '5 лет'; en = '5 years'") 
		  Или ВыбранноеЗначение = НСтр("ru = '10 лет'; en = '10 years'") 
		  Или ВыбранноеЗначение = НСтр("ru = '15 лет'; en = '15 years'") 
		  Или ВыбранноеЗначение = НСтр("ru = '50 лет'; en = '50 years'") 
		  Или ВыбранноеЗначение = НСтр("ru = '75 лет'; en = '75 years'") Тогда 
		
		СтандартнаяОбработка = Ложь;
		Объект.СрокХранения = Число(Лев(ВыбранноеЗначение, 2));
		ЗаполнитьПодписьЛет();
		
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура КатегорияДелаПриИзменении(Элемент)
	
	Если Объект.КатегорияДела = ПредопределенноеЗначение("Перечисление.КатегорииДел.ВременноеДо10") Тогда
		
		Объект.СрокХранения = "";
		
	ИначеЕсли Объект.КатегорияДела = ПредопределенноеЗначение("Перечисление.КатегорииДел.ВременноеСвыше10") Тогда
		
		Объект.СрокХранения = "";	
		
	ИначеЕсли Объект.КатегорияДела = ПредопределенноеЗначение("Перечисление.КатегорииДел.Постоянное") Тогда
		
		Объект.СрокХранения = НСтр("ru = 'Постоянно'; en = 'Permanently'");
		
	КонецЕсли;	
	
	СрокХраненияЗаполнитьСписокВыбора(Элементы.СрокХранения.СписокВыбора, Объект.КатегорияДела);
	
КонецПроцедуры

&НаКлиенте
Процедура РазделНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ПоказыватьДелаЗа", Объект.Год);
	ПараметрыФормы.Вставить("Организация", Объект.Организация);
	ПараметрыФормы.Вставить("ТекущаяСтрока", Объект.Раздел);
	
	ОткрытьФорму("Справочник.РазделыНоменклатурыДел.ФормаВыбора", ПараметрыФормы, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ИнструкцияПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	РаботаСИнструкциямиКлиент.ОткрытьСсылку(ДанныеСобытия.Href, ДанныеСобытия.Element, Элемент.Документ);
	
КонецПроцедуры

&НаКлиенте
Процедура ВидДокументаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормы = Новый Структура("РежимВыбора, ТекущаяСтрока", Истина, Элементы.ВидыДокументов.ТекущиеДанные.ВидДокумента);
	ОткрытьФорму("ОбщаяФорма.ВидыДокументов", ПараметрыФормы, Элемент);
		
КонецПроцедуры

&НаКлиенте
Процедура ВидыДокументовПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
 		Элементы.ВидыДокументов.ТекущиеДанные.ВидДокумента = 
			ПредопределенноеЗначение("Справочник.ВидыВнутреннихДокументов.ПустаяСсылка");
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ВидДокументаАвтоПодбор(Элемент, Текст, ДанныеВыбора, Параметры, Ожидание, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Текст) Тогда 
		СтандартнаяОбработка = Ложь;
		ДанныеВыбора = СформироватьДанныеВыбораВидаДокументов(Текст);
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ВидДокументаОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, Параметры, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Текст) Тогда 
		СтандартнаяОбработка = Ложь;
		ДанныеВыбора = СформироватьДанныеВыбораВидаДокументов(Текст);
	КонецЕсли;	

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПоказыватьИнструкции(Команда)
	
	ПоказыватьИнструкции = Не ПоказыватьИнструкции;
	ПолучитьИнструкции();
	
КонецПроцедуры

// СтандартныеПодсистемы.Печать
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуПечати(Команда)
	
	УправлениеПечатьюКлиент.ВыполнитьПодключаемуюКомандуПечати(Команда, ЭтаФорма, Объект);
	
КонецПроцедуры


// СтандартныеПодсистемы.БазоваяФункциональность
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры


#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Процедура СрокХраненияЗаполнитьСписокВыбора(СписокВыбора, КатегорияДела)
	
	СписокВыбора.Очистить();
	
	Если КатегорияДела = ПредопределенноеЗначение("Перечисление.КатегорииДел.ВременноеДо10") Тогда
		
		СписокВыбора.Добавить(НСтр("ru = '1 год'; en = '1 year'"));
		СписокВыбора.Добавить(НСтр("ru = '3 года'; en = '3 year'"));
		СписокВыбора.Добавить(НСтр("ru = '5 лет'; en = '5 years'"));
		СписокВыбора.Добавить(НСтр("ru = '10 лет'; en = '10 years'"));
		СписокВыбора.Добавить(НСтр("ru = 'До минования надобности'; en = 'Until the need passes'"));
		СписокВыбора.Добавить(НСтр("ru = 'До замены новыми'; en = 'Until replaced with new ones'"));
		СписокВыбора.Добавить(НСтр("ru = '<Произвольный>'; en = '<Arbitrary>'"));
		
	ИначеЕсли КатегорияДела = ПредопределенноеЗначение("Перечисление.КатегорииДел.ВременноеСвыше10") Тогда
		
		СписокВыбора.Добавить(НСтр("ru = '15 лет'; en = '15 years'"));
		СписокВыбора.Добавить(НСтр("ru = '50 лет'; en = '50 years'"));
		СписокВыбора.Добавить(НСтр("ru = '75 лет'; en = '75 years'"));
		СписокВыбора.Добавить(НСтр("ru = 'До замены новыми'; en = 'Until replaced with new ones'"));
		СписокВыбора.Добавить(НСтр("ru = '<Произвольный>'; en = '<Arbitrary>'"));
		
	ИначеЕсли КатегорияДела = ПредопределенноеЗначение("Перечисление.КатегорииДел.Постоянное") Тогда
		
		СписокВыбора.Добавить(НСтр("ru = 'Постоянно'; en = 'Permanently'"));
		
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПодписьЛет()
	
	Если ТипЗнч(Объект.СрокХранения) = Тип("Число") Тогда 
		Элементы.ДекорацияЛет.Заголовок = "(" + ДелопроизводствоКлиентСервер.ПодписьЛет(Объект.СрокХранения) + ")";
	Иначе
		Элементы.ДекорацияЛет.Заголовок = "";
	КонецЕсли;	
	
КонецПроцедуры	

&НаСервере
Процедура ПолучитьИнструкции()
	
	РаботаСИнструкциями.ПолучитьИнструкции(ЭтаФорма, 55, 85);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция СформироватьДанныеВыбораВидаДокументов(Текст)
	
	ДанныеВыбора = Новый СписокЗначений;
	Запрос = Новый Запрос;
	Запрос.Текст = 
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ВидыВнутреннихДокументов.Ссылка
			|ИЗ
			|	Справочник.ВидыВнутреннихДокументов КАК ВидыВнутреннихДокументов
			|ГДЕ
			|	ВидыВнутреннихДокументов.Наименование ПОДОБНО &Текст
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ВидыВходящихДокументов.Ссылка
			|ИЗ
			|	Справочник.ВидыВходящихДокументов КАК ВидыВходящихДокументов
			|ГДЕ
			|	ВидыВходящихДокументов.Наименование ПОДОБНО &Текст
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ВидыИсходящихДокументов.Ссылка
			|ИЗ
			|	Справочник.ВидыИсходящихДокументов КАК ВидыИсходящихДокументов
			|ГДЕ
			|	ВидыИсходящихДокументов.Наименование ПОДОБНО &Текст"; 
				   
	Запрос.УстановитьПараметр("Текст", Текст + "%");

	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ДанныеВыбора.Добавить(Выборка.Ссылка,
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = '%1 (%2)'; en = '%1 (%2)'"), Выборка.Ссылка, ТипЗнч(Выборка.Ссылка)));
	КонецЦикла;
		
	Возврат ДанныеВыбора;

КонецФункции

#КонецОбласти
