
&НаКлиенте
Перем ПерваяАктивизация;

//////////////////////////////////////////////////////////////////////////////// 
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("ТекущаяСтрока") И ЗначениеЗаполнено(Параметры.ТекущаяСтрока) Тогда 
		РазделПриОткрытии = Параметры.ТекущаяСтрока.Раздел;
		ПоказыватьДелаЗа = Параметры.ТекущаяСтрока.Год;
		Организация = Параметры.ТекущаяСтрока.Организация;
		Элементы.Организация.Видимость = Ложь;
		
	Иначе	
		РазделПриОткрытии = Справочники.РазделыНоменклатурыДел.ПустаяСсылка();
		
		Если ЗначениеЗаполнено(Параметры.Год) Тогда 
			ПоказыватьДелаЗа = Параметры.Год;
		Иначе
			ПоказыватьДелаЗа = Год(ТекущаяДата());
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Параметры.Организация) Тогда 
			Организация = Параметры.Организация;
			Элементы.Организация.Видимость = Ложь;
		Иначе
			Организация = РаботаСОрганизациями.ПолучитьОрганизациюПоУмолчанию();
		КонецЕсли;
	КонецЕсли;
	
	Если Параметры.Свойство("Подразделение") И ЗначениеЗаполнено(Параметры.Подразделение) Тогда 
		Подразделение = Параметры.Подразделение;
		Элементы.Подразделение.Видимость = Ложь;
		ВключатьПустоеПодразделение = Истина;
	КонецЕсли;
	
	// раздел
	Элементы.Разделы.ТекущаяСтрока = РазделПриОткрытии;
	Список.Параметры.УстановитьЗначениеПараметра("Раздел", РазделПриОткрытии);
	
	НачальныйТекстЗапроса = Список.ТекстЗапроса;
	
	УстановитьОтборСписка();
	
	Делопроизводство.СписокДокументовУсловноеОформлениеПомеченныхНаУдаление(Список);
	
КонецПроцедуры

//////////////////////////////////////////////////////////////////////////////// 
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

&НаКлиенте
Процедура ПоказыватьДелаЗаПриИзменении(Элемент)
	
	УстановитьОтборСписка();
	
КонецПроцедуры

&НаКлиенте
Процедура РазделыПриАктивизацииСтроки(Элемент)
	
	Если ПерваяАктивизация = Истина Или ПерваяАктивизация = Неопределено Тогда
		ПерваяАктивизация = Ложь;
		Возврат;
	КонецЕсли;
	
	ПодключитьОбработчикОжидания("ОбработкаОжидания", 0.2, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	УстановитьОтборСписка();
	
КонецПроцедуры

&НаКлиенте
Процедура ПодразделениеПриИзменении(Элемент)
	
	УстановитьОтборСписка();

КонецПроцедуры

//////////////////////////////////////////////////////////////////////////////// 
// ПРОЦЕДУРЫ И ФУНКЦИИ  

&НаСервере
Процедура УстановитьОтборСписка()
	
	// год
	Список.Параметры.УстановитьЗначениеПараметра("Год", ПоказыватьДелаЗа);
	Разделы.Параметры.УстановитьЗначениеПараметра("Год", ПоказыватьДелаЗа);
	
	// организация
	Если ЗначениеЗаполнено(Организация) Тогда 
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор, "Организация", Организация);
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Разделы.Отбор, "Организация", Организация);	
	Иначе
		ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбора(Список.Отбор, "Организация");
		ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбора(Разделы.Отбор, "Организация");	
	КонецЕсли;
	
	//
	Для Каждого Элемент Из Список.Отбор.Элементы Цикл
		Если Элемент.Представление = "ГруппаПоиска" Тогда
			Список.Отбор.Элементы.Удалить(Элемент);
			Прервать;
		КонецЕсли;	
	КонецЦикла;	

	Если ЗначениеЗаполнено(Подразделение) Тогда 
		МассивПодразделений = Делопроизводство.ПолучитьПодразделениеИРодителей(Подразделение, ВключатьПустоеПодразделение);
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Разделы.Отбор,
			"Подразделение",
			МассивПодразделений,
			ВидСравненияКомпоновкиДанных.ВСписке);
			
		Группа = Список.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
		Группа.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
		Группа.Представление = "ГруппаПоиска";
		
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Группа, "Раздел",, ВидСравненияКомпоновкиДанных.НеЗаполнено);

		ПустоеИПодразделение = Делопроизводство.ПолучитьПодразделениеИПустуюСсылку(Подразделение);	
		// если для текущего подразделения нет раздела, то даем списывать в родительское
		ТекущееПодразделение = Подразделение;
		Пока ЗначениеЗаполнено(ТекущееПодразделение) Цикл
			Запрос = Новый Запрос;
			Запрос.Текст = 
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
			|	ИСТИНА
			|ИЗ
			|	Справочник.РазделыНоменклатурыДел КАК РазделыНоменклатурыДел
			|ГДЕ
			|	РазделыНоменклатурыДел.Подразделение = &Подразделение
			|	И РазделыНоменклатурыДел.Год = &Год";
			Запрос.УстановитьПараметр("Подразделение", ТекущееПодразделение);
			Запрос.УстановитьПараметр("Год", ПоказыватьДелаЗа);
		
			Если Не Запрос.Выполнить().Пустой() Тогда 
				ПустоеИПодразделение.Добавить(ТекущееПодразделение);
				Прервать;
			КонецЕсли;	
			ТекущееПодразделение = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТекущееПодразделение, "Родитель");
		КонецЦикла;
		
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Группа,
			"Раздел.Подразделение",
			ПустоеИПодразделение,
			ВидСравненияКомпоновкиДанных.ВСписке);

	Иначе
		ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбора(Список.Отбор, "Раздел.Подразделение");
		ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбора(Разделы.Отбор, "Подразделение");
	КонецЕсли;
	
	// 
	Запрос = Новый Запрос;
	Запрос.Текст = "";
	
	ПереданВидДокумента = Ложь;
	Если Параметры.Свойство("ВидДокумента") И ЗначениеЗаполнено(Параметры.ВидДокумента) Тогда 
		Запрос.Текст = Запрос.Текст + 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.НоменклатураДел.ВидыДокументов
		|ГДЕ
		|	ВидДокумента В ИЕРАРХИИ(&ВидДокумента)
		|	И НЕ Ссылка.ПометкаУдаления";
		Запрос.Текст = Запрос.Текст + ";";
		Запрос.УстановитьПараметр("ВидДокумента", Параметры.ВидДокумента);
		
		ПереданВидДокумента = Истина;
	КонецЕсли;	
	
	ПереданКонтрагент = Ложь;
	ПереданМассивКонтрагентов = Ложь;
	Если Параметры.Свойство("Контрагент") И ТипЗнч(Параметры.Контрагент) = Тип("СправочникСсылка.Контрагенты") И ЗначениеЗаполнено(Параметры.Контрагент) Тогда 
		Запрос.Текст = Запрос.Текст + 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.НоменклатураДел.Контрагенты
		|ГДЕ
		|	Контрагент В ИЕРАРХИИ(&Контрагент)
		|	И НЕ Ссылка.ПометкаУдаления";
		Запрос.Текст = Запрос.Текст + ";";
		Запрос.УстановитьПараметр("Контрагент", Параметры.Контрагент);
		
		ПереданКонтрагент = Истина;
	ИначеЕсли Параметры.Свойство("Контрагент") И ТипЗнч(Параметры.Контрагент) = Тип("Массив") И Параметры.Контрагент.Количество() = 1 Тогда 
		Запрос.Текст = Запрос.Текст + 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.НоменклатураДел.Контрагенты
		|ГДЕ
		|	Контрагент В ИЕРАРХИИ(&Контрагент)
		|	И НЕ Ссылка.ПометкаУдаления";
		Запрос.Текст = Запрос.Текст + ";";
		Запрос.УстановитьПараметр("Контрагент", Параметры.Контрагент[0]);
		
		ПереданКонтрагент = Истина;
	ИначеЕсли Параметры.Свойство("Контрагент") И ТипЗнч(Параметры.Контрагент) = Тип("Массив") И Параметры.Контрагент.Количество() > 1 Тогда
		ПереданМассивКонтрагентов = Истина;
	КонецЕсли;	
	
	
	ПереданВопросДеятельности = Ложь;
	Если Параметры.Свойство("ВопросДеятельности") И ЗначениеЗаполнено(Параметры.ВопросДеятельности) Тогда 
		Запрос.Текст = Запрос.Текст + 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.НоменклатураДел.ВопросыДеятельности
		|ГДЕ
		|	ВопросДеятельности В ИЕРАРХИИ(&ВопросДеятельности)
		|	И НЕ Ссылка.ПометкаУдаления";
		Запрос.Текст = Запрос.Текст + ";";
		Запрос.УстановитьПараметр("ВопросДеятельности", Параметры.ВопросДеятельности);
		
		ПереданВопросДеятельности = Истина;
	КонецЕсли;
	
	Если Запрос.Текст <> "" Тогда 
		Если ПолучитьФункциональнуюОпцию("ИспользоватьУчетПоОрганизациям") И ЗначениеЗаполнено(Параметры.Организация) Тогда 
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "НЕ Ссылка.ПометкаУдаления", 
				"НЕ Ссылка.ПометкаУдаления И (Ссылка.Организация = &Организация)");
			Запрос.УстановитьПараметр("Организация", Параметры.Организация);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ПоказыватьДелаЗа) Тогда 
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "НЕ Ссылка.ПометкаУдаления", 
				"НЕ Ссылка.ПометкаУдаления И (Ссылка.Год = &Год)");
			Запрос.УстановитьПараметр("Год", ПоказыватьДелаЗа);
		КонецЕсли; 
		
		
		Результаты = Запрос.ВыполнитьПакет();
		
		НДДляВыбораПоВидуДок = Неопределено;
		Если ПереданВидДокумента Тогда 
			НДДляВыбораПоВидуДок = Результаты[0].Выгрузить().ВыгрузитьКолонку("Ссылка");
		КонецЕсли;	
		
		НДДляВыбораПоКорр = Неопределено;
		Если ПереданКонтрагент Тогда 
			Если ПереданВидДокумента Тогда 
				НДДляВыбораПоКорр = Результаты[1].Выгрузить().ВыгрузитьКолонку("Ссылка");
			Иначе
				НДДляВыбораПоКорр = Результаты[0].Выгрузить().ВыгрузитьКолонку("Ссылка");
			КонецЕсли;	
		КонецЕсли;
		
		НДДляВыбораПоВопрДеят = Неопределено;
		Если ПереданВопросДеятельности Тогда 
			Если ПереданВидДокумента И ПереданКонтрагент Тогда 
				НДДляВыбораПоВопрДеят = Результаты[2].Выгрузить().ВыгрузитьКолонку("Ссылка");
			ИначеЕсли ПереданВидДокумента  Тогда 
				НДДляВыбораПоВопрДеят = Результаты[1].Выгрузить().ВыгрузитьКолонку("Ссылка");
			ИначеЕсли ПереданКонтрагент Тогда 
				НДДляВыбораПоВопрДеят = Результаты[1].Выгрузить().ВыгрузитьКолонку("Ссылка");
			Иначе
				НДДляВыбораПоВопрДеят = Результаты[0].Выгрузить().ВыгрузитьКолонку("Ссылка");
			КонецЕсли;	
		КонецЕсли;
		
	КонецЕсли;	
	
	Если ПереданМассивКонтрагентов Тогда 
		
		Для Поз = 0 По Параметры.Контрагент.ВГраница() Цикл
			
			Запрос = Новый Запрос;
			Запрос.Текст = 
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
			|	Ссылка КАК Ссылка
			|ИЗ
			|	Справочник.НоменклатураДел.Контрагенты
			|		
			|ГДЕ
			|	Контрагент В ИЕРАРХИИ (&Контрагент)
			|	И НЕ Ссылка.ПометкаУдаления";
			
			Если ПолучитьФункциональнуюОпцию("ИспользоватьУчетПоОрганизациям") И ЗначениеЗаполнено(Параметры.Организация) Тогда 
				Запрос.Текст = Запрос.Текст + " И (Ссылка.Организация = &Организация) ";
				Запрос.УстановитьПараметр("Организация", Параметры.Организация);
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ПоказыватьДелаЗа) Тогда 
				Запрос.Текст = Запрос.Текст + " И (Ссылка.Год = &Год) ";
				Запрос.УстановитьПараметр("Год", ПоказыватьДелаЗа);
			КонецЕсли; 
			
			Запрос.УстановитьПараметр("Контрагент", Параметры.Контрагент[Поз]);
			врНДДляВыбораПоКорр = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
			
			Если Поз = 0 Тогда 
				НДДляВыбораПоКорр = Новый Массив;
				Для Инд = 0 По врНДДляВыбораПоКорр.ВГраница() Цикл
					НДДляВыбораПоКорр.Добавить(врНДДляВыбораПоКорр[Инд]);
				КонецЦикла;	
			Иначе
				ВГраница = НДДляВыбораПоКорр.ВГраница();
				Для Инд = 0 По ВГраница Цикл
					Если врНДДляВыбораПоКорр.Найти(НДДляВыбораПоКорр[ВГраница-Инд]) = Неопределено Тогда 
						НДДляВыбораПоКорр.Удалить(ВГраница-Инд);
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;	
			
		КонецЦикла;
		
	КонецЕсли;
	
	
	Если НДДляВыбораПоВидуДок = Неопределено
	   И НДДляВыбораПоКорр = Неопределено 
	   И НДДляВыбораПоВопрДеят = Неопределено Тогда 
		Возврат;
	КонецЕсли;	
		
	Если НДДляВыбораПоВидуДок = Неопределено Тогда 
		НДДляВыбораПоВидуДок = Новый Массив;
	КонецЕсли;
	
	Если НДДляВыбораПоКорр = Неопределено Тогда 
		НДДляВыбораПоКорр = Новый Массив;
	КонецЕсли;
	
	Если НДДляВыбораПоВопрДеят = Неопределено Тогда 
		НДДляВыбораПоВопрДеят = Новый Массив;
	КонецЕсли;
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	1 КАК Номер
	|ИЗ
	|	Справочник.НоменклатураДел КАК НоменклатураДел
	|ГДЕ
	|	НоменклатураДел.Ссылка В(&НДДляВыбораПоВидуДок)
	|	И НоменклатураДел.Ссылка В(&НДДляВыбораПоКорр)
	|	И НоменклатураДел.Ссылка В(&НДДляВыбораПоВопрДеят)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	2
	|ИЗ
	|	Справочник.НоменклатураДел КАК НоменклатураДел
	|ГДЕ
	|	(НоменклатураДел.Ссылка В (&НДДляВыбораПоВидуДок)
	|				И НоменклатураДел.Ссылка В (&НДДляВыбораПоКорр)
	|				И НЕ НоменклатураДел.ВопросыДеятельностиЗаполнены
	|			ИЛИ НоменклатураДел.Ссылка В (&НДДляВыбораПоВидуДок)
	|				И НоменклатураДел.Ссылка В (&НДДляВыбораПоВопрДеят)
	|				И НЕ НоменклатураДел.КонтрагентыЗаполнены
	|			ИЛИ НоменклатураДел.Ссылка В (&НДДляВыбораПоКорр)
	|				И НоменклатураДел.Ссылка В (&НДДляВыбораПоВопрДеят)
	|				И НЕ НоменклатураДел.ВидыДокументовЗаполнены)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	3
	|ИЗ
	|	Справочник.НоменклатураДел КАК НоменклатураДел
	|ГДЕ
	|	(НоменклатураДел.Ссылка В (&НДДляВыбораПоВидуДок)
	|				И НЕ НоменклатураДел.КонтрагентыЗаполнены
	|				И НЕ НоменклатураДел.ВопросыДеятельностиЗаполнены
	|			ИЛИ НоменклатураДел.Ссылка В (&НДДляВыбораПоКорр)
	|				И НЕ НоменклатураДел.ВидыДокументовЗаполнены
	|				И НЕ НоменклатураДел.ВопросыДеятельностиЗаполнены
	|			ИЛИ НоменклатураДел.Ссылка В (&НДДляВыбораПоВопрДеят)
	|				И НЕ НоменклатураДел.ВидыДокументовЗаполнены
	|				И НЕ НоменклатураДел.КонтрагентыЗаполнены)";
	
	Запрос.УстановитьПараметр("НДДляВыбораПоВопрДеят", НДДляВыбораПоВопрДеят);
	Запрос.УстановитьПараметр("НДДляВыбораПоВидуДок", НДДляВыбораПоВидуДок);
	Запрос.УстановитьПараметр("НДДляВыбораПоКорр", НДДляВыбораПоКорр);
	
	Результат = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Номер");
	
	Список.ТекстЗапроса = НачальныйТекстЗапроса;
	Если Результат.Найти(1) <> Неопределено Тогда 
		Список.ТекстЗапроса = Список.ТекстЗапроса + 
		" И НоменклатураДел.Ссылка В (&НДДляВыбораПоВидуДок) 
		| И НоменклатураДел.Ссылка В (&НДДляВыбораПоКорр) 
		| И НоменклатураДел.Ссылка В (&НДДляВыбораПоВопрДеят) ";
		
		Список.Параметры.УстановитьЗначениеПараметра("НДДляВыбораПоВопрДеят", НДДляВыбораПоВопрДеят);
		Список.Параметры.УстановитьЗначениеПараметра("НДДляВыбораПоВидуДок", НДДляВыбораПоВидуДок);
		Список.Параметры.УстановитьЗначениеПараметра("НДДляВыбораПоКорр", НДДляВыбораПоКорр);
		
	ИначеЕсли Результат.Найти(2) <> Неопределено Тогда 
		Список.ТекстЗапроса = Список.ТекстЗапроса + 
		"  И 	(НоменклатураДел.Ссылка В (&НДДляВыбораПоВидуДок)
		|			И НоменклатураДел.Ссылка В (&НДДляВыбораПоКорр)
		|			И НЕ НоменклатураДел.ВопросыДеятельностиЗаполнены
		|		ИЛИ НоменклатураДел.Ссылка В (&НДДляВыбораПоВидуДок)
		|			И НоменклатураДел.Ссылка В (&НДДляВыбораПоВопрДеят)
		|			И НЕ НоменклатураДел.КонтрагентыЗаполнены
		|		ИЛИ НоменклатураДел.Ссылка В (&НДДляВыбораПоКорр)
		|			И НоменклатураДел.Ссылка В (&НДДляВыбораПоВопрДеят)
		|			И НЕ НоменклатураДел.ВидыДокументовЗаполнены) ";
		
		Список.Параметры.УстановитьЗначениеПараметра("НДДляВыбораПоВопрДеят", НДДляВыбораПоВопрДеят);
		Список.Параметры.УстановитьЗначениеПараметра("НДДляВыбораПоВидуДок", НДДляВыбораПоВидуДок);
		Список.Параметры.УстановитьЗначениеПараметра("НДДляВыбораПоКорр", НДДляВыбораПоКорр);
		
	ИначеЕсли Результат.Найти(3) <> Неопределено Тогда 	
		Список.ТекстЗапроса = Список.ТекстЗапроса + 
		"  И	(НоменклатураДел.Ссылка В (&НДДляВыбораПоВидуДок)
		|				И НЕ НоменклатураДел.КонтрагентыЗаполнены
		|				И НЕ НоменклатураДел.ВопросыДеятельностиЗаполнены
		|			ИЛИ НоменклатураДел.Ссылка В (&НДДляВыбораПоКорр)
		|				И НЕ НоменклатураДел.ВидыДокументовЗаполнены
		|				И НЕ НоменклатураДел.ВопросыДеятельностиЗаполнены
		|			ИЛИ НоменклатураДел.Ссылка В (&НДДляВыбораПоВопрДеят)
		|				И НЕ НоменклатураДел.ВидыДокументовЗаполнены
		|				И НЕ НоменклатураДел.КонтрагентыЗаполнены) ";
		
		Список.Параметры.УстановитьЗначениеПараметра("НДДляВыбораПоВопрДеят", НДДляВыбораПоВопрДеят);
		Список.Параметры.УстановитьЗначениеПараметра("НДДляВыбораПоВидуДок", НДДляВыбораПоВидуДок);
		Список.Параметры.УстановитьЗначениеПараметра("НДДляВыбораПоКорр", НДДляВыбораПоКорр);
		
	Иначе
		Список.ТекстЗапроса = Список.ТекстЗапроса + 
		"   И НЕ НоменклатураДел.ВидыДокументовЗаполнены
		|	И НЕ НоменклатураДел.КонтрагентыЗаполнены
		|	И НЕ НоменклатураДел.ВопросыДеятельностиЗаполнены ";
		
	КонецЕсли;
	
КонецПроцедуры	

&НаКлиенте
Процедура ОбработкаОжидания()
	
	Если Элементы.Разделы.ТекущаяСтрока <> Неопределено Тогда 
		Список.Параметры.УстановитьЗначениеПараметра("Раздел", Элементы.Разделы.ТекущаяСтрока);
	КонецЕсли;	
	
КонецПроцедуры

