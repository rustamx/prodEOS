
// Обработка события ПриОткрытии формы
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ВыборКаталогов = Истина;
	ХранитьВерсии = Истина;
	ОбновитьИнформационнуюНадпись();
	
КонецПроцедуры

&НаКлиенте
Функция ВыделитьИмяПапки(ПолныйПуть)
	
	МассивСтрок = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ПолныйПуть, "\");
	
	Если МассивСтрок.Количество() <> 0 Тогда
		
		СтрокаПоследняя = МассивСтрок[МассивСтрок.Количество() - 1];
		Если Не ПустаяСтрока(СтрокаПоследняя) Тогда
			Возврат СтрокаПоследняя;	
		КонецЕсли;	
		
		Если МассивСтрок.Количество() >= 2 Тогда
			
			СтрокаПредПоследняя = МассивСтрок[МассивСтрок.Количество() - 2];
			Если Не ПустаяСтрока(СтрокаПредПоследняя) Тогда
				Возврат СтрокаПредПоследняя;	
			КонецЕсли;	
			
		КонецЕсли;		
		
	КонецЕсли;	
	
	Возврат "";
	
КонецФункции	

&НаКлиенте
Процедура ОбновитьИнформационнуюНадпись()
	
	ИмяНовойПапки = ВыделитьИмяПапки(Каталог);
	
	ЧислоФайлов = 0;
	ЧислоПапок = 0;
	СуммарныйРазмерФайлов = 0;
	Файлы = НайтиФайлы(Каталог, "*.*");
	НайтиЧислоФайловИПапок(Файлы, ЧислоФайлов, ЧислоПапок, СуммарныйРазмерФайлов);	
	
	Элементы.ДекорацияИнфо.Заголовок = СтрШаблон(
		НСтр("ru = 'В папке ""%1"" будет создана папка ""%2"", 
		|которая содержит %3 %4 (%5 Мб) и %6 %7.'; en = 'In the folder ""%1"" will be created folder ""%2 "" that contains %3 %4 (%5 MB) and %5 %7.'"),
		Строка(ПапкаДляДобавления), 
		ИмяНовойПапки,
		Строка(ЧислоФайлов), 
		ПодписьФайлов(ЧислоФайлов),
		ФайловыеФункцииКлиентСервер.ПолучитьСтрокуСРазмеромФайла(СуммарныйРазмерФайлов / (1024 * 1024)),
		Строка(ЧислоПапок),
		ПодписьПодпапок(ЧислоПапок),
	);
	
КонецПроцедуры	

// Подпись к количеству подпапок
&НаКлиенте
Функция ПодписьПодпапок(Количество)
	
	Если Количество > 10 И Количество < 20 Тогда
		Возврат НСтр("ru = 'подпапок'; en = 'subfolders'");
	Иначе
		Срок = Количество - Цел(Количество / 10) * 10;
		Если Срок = 0 Тогда
			Возврат НСтр("ru = 'подпапок'; en = 'subfolders'");
		ИначеЕсли Срок = 1 Тогда
			Возврат НСтр("ru = 'подпапку'; en = 'subfolder'");
		ИначеЕсли Срок < 5 Тогда
			Возврат НСтр("ru = 'подпапки'; en = 'subfolders'");
		Иначе
			Возврат НСтр("ru = 'подпапок'; en = 'subfolders'");
		КонецЕсли;
	КонецЕсли;
	
КонецФункции

// Подпись к количеству файлов
&НаКлиенте
Функция ПодписьФайлов(Количество)
	
	Если Количество > 10 И Количество < 20 Тогда
		Возврат НСтр("ru = 'файлов'; en = 'files'");
	Иначе
		Срок = Количество - Цел(Количество / 10) * 10;
		Если Срок = 0 Тогда
			Возврат НСтр("ru = 'файлов'; en = 'files'");
		ИначеЕсли Срок = 1 Тогда
			Возврат НСтр("ru = 'файл'; en = 'file'");
		ИначеЕсли Срок < 5 Тогда
			Возврат НСтр("ru = 'файла'; en = 'file'");
		Иначе
			Возврат НСтр("ru = 'файлов'; en = 'files'");
		КонецЕсли;
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура НайтиЧислоФайловИПапок(Файлы, ЧислоФайлов, ЧислоПапок, СуммарныйРазмерФайлов)
	
	Для Каждого Файл Из Файлы Цикл
		
		ВыбранКаталог = Ложь;
		Если Файл.Существует() Тогда
			ВыбранКаталог = Файл.ЭтоКаталог();
		КонецЕсли;
		
		Если ВыбранКаталог Тогда
			
			ЧислоПапок = ЧислоПапок + 1;
			ФайлыВПапке = НайтиФайлы(Файл.ПолноеИмя, "*.*");
			НайтиЧислоФайловИПапок(ФайлыВПапке, ЧислоФайлов, ЧислоПапок, СуммарныйРазмерФайлов);	
			
		Иначе
			
			ЧислоФайлов = ЧислоФайлов + 1;
			СуммарныйРазмерФайлов = СуммарныйРазмерФайлов + Файл.Размер();
			
		КонецЕсли;	
		
	КонецЦикла;	
	
КонецПроцедуры	

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	Если ВРег(ИсточникВыбора.ИмяФормы) = ВРег("Справочник.Файлы.Форма.ВыборКодировки") Тогда
		Если ТипЗнч(ВыбранноеЗначение) <> Тип("Структура") Тогда
			Возврат;
		КонецЕсли;
		КодировкаТекстаФайла = ВыбранноеЗначение.Значение;
		КодировкаПредставление = ВыбранноеЗначение.Представление;
		УстановитьПредставлениеКомандыКодировки(КодировкаПредставление);
	КонецЕсли;
КонецПроцедуры

// Обработка нажатия на кнопку Импорт
//
&НаКлиенте
Процедура ИмпортВыполнить()
	
	ОчиститьСообщения();
	
	Если ПустаяСтрока(Каталог) Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Не выбран каталог для импорта.'; en = 'Directory for import is not selected.'"), , "Каталог");
		Возврат;
		
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ПапкаДляДобавления) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Не выбрана папка.'; en = 'Folder is not selected.'"), , "ПапкаДляДобавления");
		Возврат;
	КонецЕсли;
	
	ВыбранныеФайлы = Новый СписокЗначений;
	ВыбранныеФайлы.Добавить(Каталог);
	
	ПсевдоФайловаяСистема = Новый Соответствие; // соответствие путь к директории - файлы и папки в ней 
	ДобавленныеФайлы = Новый Массив;
	ПараметрыРаспознавания = Новый Структура("СтратегияРаспознавания, ЯзыкРаспознавания", 
		СтратегияРаспознавания, ЯзыкРаспознавания);
		
	Обработчик = Новый ОписаниеОповещения("ИмпортЗавершение", ЭтотОбъект);	
	
	ПараметрыВыполнения = РаботаСФайламиКлиент.ПараметрыИмпортаФайлов();
	ПараметрыВыполнения.ОбработчикРезультата = Обработчик;
	ПараметрыВыполнения.Владелец = ПапкаДляДобавления;
	ПараметрыВыполнения.ВыбранныеФайлы = ВыбранныеФайлы; 
	ПараметрыВыполнения.Комментарий = Описание;
	ПараметрыВыполнения.ХранитьВерсии = ХранитьВерсии;
	ПараметрыВыполнения.УдалятьФайлыПослеДобавления = УдалятьФайлыПослеДобавления;
	ПараметрыВыполнения.Рекурсивно = Истина;
	ПараметрыВыполнения.ИдентификаторФормы = УникальныйИдентификатор;
	ПараметрыВыполнения.ДобавленныеФайлы = ДобавленныеФайлы;
	ПараметрыВыполнения.Кодировка = КодировкаТекстаФайла;
	ПараметрыВыполнения.ПараметрыРаспознавания = ПараметрыРаспознавания;
	ПараметрыВыполнения.СписокКатегорий = СписокКатегорий;
	
	РаботаСФайламиКлиент.ВыполнитьИмпортФайлов(ПараметрыВыполнения);
	
КонецПроцедуры

&НаКлиенте
Процедура ИмпортЗавершение(Результат, ПараметрыВыполнения) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Закрыть();
	Оповестить("ИмпортКаталоговЗавершен", Новый Структура, Результат.Владелец);
	
КонецПроцедуры

// Обработка события НачалоВыбора у поля Папка
//
&НаКлиенте
Процедура ВыбранныйКаталогНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	#Если НЕ ВебКлиент Тогда
		Режим = РежимДиалогаВыбораФайла.ВыборКаталога;
		
		ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(Режим);
		
		ДиалогОткрытияФайла.Каталог = Каталог;
		ДиалогОткрытияФайла.ПолноеИмяФайла = "";
		Фильтр = НСтр("ru = 'Все файлы(*.*)|*.*'; en = 'All files (*. *) | *. *'");
		ДиалогОткрытияФайла.Фильтр = Фильтр;
		ДиалогОткрытияФайла.МножественныйВыбор = Ложь;
		ДиалогОткрытияФайла.Заголовок = НСтр("ru = 'Выберите каталог'; en = 'Select a directory'");
		Если ДиалогОткрытияФайла.Выбрать() Тогда
			
			Если ВыборКаталогов = Истина Тогда 
				
				Каталог = ДиалогОткрытияФайла.Каталог;
				ОбновитьИнформационнуюНадпись();
				
			КонецЕсли;
			
		КонецЕсли;
			
		СтандартнаяОбработка = Ложь;
	#КонецЕсли
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ Параметры.Свойство("КаталогНаДиске") Тогда 	
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Данная обработка вызывается из других процедур конфигурации. Вручную ее вызывать запрещено.'; en = 'This data processor is called from other configuration procedures. Opening it manually is forbidden.'")); 
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если Параметры.КаталогНаДиске <> Неопределено Тогда
		Каталог = Параметры.КаталогНаДиске;
	КонецЕсли;
	
	Если Параметры.ПапкаДляДобавления <> Неопределено Тогда
		ПапкаДляДобавления = Параметры.ПапкаДляДобавления;
	КонецЕсли;
	
	ИспользоватьРаспознавание = РаботаСФайламиВызовСервера.ПолучитьИспользоватьРаспознавание();
	Элементы.ГруппаРаспознавание.Видимость = ИспользоватьРаспознавание;
	Если ИспользоватьРаспознавание = Ложь Тогда
		СтратегияРаспознавания = Перечисления.СтратегииРаспознаванияТекста.НеРаспознавать;
	Иначе
		ЯзыкРаспознавания = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("Распознавание", "ЯзыкРаспознавания");
		Если НЕ ЗначениеЗаполнено(ЯзыкРаспознавания) Тогда
			ЯзыкРаспознавания = РаботаСФайламиВызовСервера.ПолучитьЯзыкРаспознавания();
		КонецЕсли;
		
		СтратегияРаспознавания = Перечисления.СтратегииРаспознаванияТекста.ПоместитьТолькоВТекстовыйОбраз;
		
		ПредставлениеНастроекРаспознавания = РаботаСФайламиВызовСервера.ПолучитьПредставлениеНастроекРаспознавания(СтратегияРаспознавания, ЯзыкРаспознавания);
		Команды.Настройка.Подсказка = ПредставлениеНастроекРаспознавания;
	КонецЕсли;	
	
	Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьКатегорииДанных") Тогда
		Элементы.ГруппаКатегории.Видимость = Ложь;
	Иначе
		Если Параметры.Свойство("СписокКатегорий") Тогда
			Для каждого КатегорияВСписке Из Параметры.СписокКатегорий Цикл
				НоваяСтрока = СписокКатегорий.Добавить();
				НоваяСтрока.Значение = КатегорияВСписке;
				НоваяСтрока.ПолноеНаименование = РаботаСКатегориямиДанных.ПолучитьПолныйПутьКатегорииДанных(КатегорияВСписке);
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкиРаспознавания(Команда)
	
	ПараметрыОткрытия = Новый Структура("СтратегияРаспознавания, ЯзыкРаспознавания", СтратегияРаспознавания, ЯзыкРаспознавания);	
	РежимОткрытия = РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс;
	Обработчик = Новый ОписаниеОповещения("ПослеВыбораНастроекРаспознавания", ЭтотОбъект);
	ОткрытьФорму("Справочник.Файлы.Форма.НастройкаРаспознавания", ПараметрыОткрытия, ЭтаФорма,,,,Обработчик, РежимОткрытия);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеВыбораНастроекРаспознавания(РезультатОткрытия, ДополнительныеПараметры) Экспорт
	
	Если ТипЗнч(РезультатОткрытия) = Тип("Структура") Тогда
		СтратегияРаспознавания = РезультатОткрытия.СтратегияРаспознавания;
		ЯзыкРаспознавания = РезультатОткрытия.ЯзыкРаспознавания;
		УстановитьПредставлениеНастроекРаспознавания(СтратегияРаспознавания, ЯзыкРаспознавания);
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура УстановитьПредставлениеНастроекРаспознавания(СтратегияРаспознавания, ЯзыкРаспознавания)
	
	ПредставлениеНастроекРаспознавания = РаботаСФайламиВызовСервера.ПолучитьПредставлениеНастроекРаспознавания(СтратегияРаспознавания, ЯзыкРаспознавания);
	Команды.Настройка.Подсказка = ПредставлениеНастроекРаспознавания;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьКатегории(Команда)
	
	РаботаСКатегориямиДанныхКлиент.ОткрытьФормуПодбораКатегорийДляСпискаКатегорий(СписокКатегорий);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьПредставлениеКомандыКодировки(Представление)
	
	Команды.ВыбратьКодировку.Заголовок = Представление;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьКодировку(Команда)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ТекущаяКодировка", КодировкаТекстаФайла);
	ОткрытьФорму("Справочник.Файлы.Форма.ВыборКодировки", ПараметрыФормы, ЭтаФорма);
	
КонецПроцедуры


