&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	МаксРазмерФайла = ФайловыеФункции.ПолучитьМаксимальныйРазмерФайла();
	
	Если Параметры.Свойство("ВладелецФайла") Тогда 
		Список.Параметры.УстановитьЗначениеПараметра(
		"Владелец", Параметры.ВладелецФайла);
		
		Если ТипЗнч(Параметры.ВладелецФайла) = Тип("СправочникСсылка.ПапкиФайлов") Тогда
			Элементы.Папки.ТекущаяСтрока = Параметры.ВладелецФайла;
			Элементы.Папки.ВыделенныеСтроки.Очистить();
			Элементы.Папки.ВыделенныеСтроки.Добавить(Элементы.Папки.ТекущаяСтрока);
		Иначе
			Элементы.Папки.Видимость = Ложь;
		КонецЕсли;
	Иначе	
		
		Если Параметры.Свойство("ВыборШаблона", ВыборШаблона) И ВыборШаблона Тогда 	
			
			КорневаяПапка = ПолучитьКорневуюПапку(Справочники.ПапкиФайлов.Шаблоны);
			
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
				Группы, "Ссылка", КорневаяПапка,
				ВидСравненияКомпоновкиДанных.ВИерархии, , Истина);
			
			ПапкаПриОткрытии = ХранилищеНастроекДанныхФорм.Загрузить("ВыборФайловВПапках", "ТекущаяПапкаДляВыбораШаблона");    
			Если ПапкаПриОткрытии <> Неопределено И ПапкаПриОткрытии <> Справочники.ПапкиФайлов.ПустаяСсылка() Тогда    
				Элементы.Папки.ТекущаяСтрока = ПапкаПриОткрытии;
			Иначе
				Элементы.Папки.ТекущаяСтрока = Справочники.ПапкиФайлов.Шаблоны;   
			КонецЕсли;
			Элементы.Папки.ВыделенныеСтроки.Очистить();
			Элементы.Папки.ВыделенныеСтроки.Добавить(Элементы.Папки.ТекущаяСтрока);
			
		Иначе
			Группы.Отбор.Элементы.Очистить();
			
			Если Параметры.Свойство("ТекущаяСтрока") Тогда 
				Если ТипЗнч(Параметры.ТекущаяСтрока) = Тип("СправочникСсылка.Файлы") Тогда
					Элементы.Папки.ТекущаяСтрока = Параметры.ТекущаяСтрока.ВладелецФайла;
				КонецЕсли;
			КонецЕсли;
			
		КонецЕсли;
		
		Список.Параметры.УстановитьЗначениеПараметра("Владелец", Элементы.Папки.ТекущаяСтрока);
	КонецЕсли;
	
	Если Параметры.Свойство("ТекущаяСтрока") И НЕ ВыборШаблона Тогда 
		Если ТипЗнч(Параметры.ТекущаяСтрока) = Тип("СправочникСсылка.ПапкиФайлов") Тогда
			Элементы.Папки.ТекущаяСтрока = Параметры.ТекущаяСтрока;
		КонецЕсли;
	КонецЕсли;
	
	ВыборДляПравилАвтозаполнения = Параметры.ВыборДляПравилАвтозаполнения;
	Если ВыборДляПравилАвтозаполнения Тогда
		СписокРасширенийШаблонов = Новый Массив;
		СписокРасширенийШаблонов.Добавить("doc");
		СписокРасширенийШаблонов.Добавить("docx");
		СписокРасширенийШаблонов.Добавить("dot");
		СписокРасширенийШаблонов.Добавить("dotx");
		СписокРасширенийШаблонов.Добавить("txt");
		СписокРасширенийШаблонов.Добавить("odt");
		СписокРасширенийШаблонов.Добавить("html");
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
		Список.Отбор, "ТекущаяВерсияРасширение", СписокРасширенийШаблонов, ВидСравненияКомпоновкиДанных.ВСписке,,Истина);
	КонецЕсли;
	
	Если Не ЭлектроннаяПодпись.ИспользоватьЭлектронныеПодписи()
		И Не ЭлектроннаяПодпись.ИспользоватьШифрование() Тогда
		
		Элементы.ПодписанЭП.Видимость = Ложь;
	КонецЕсли;
	
	Если Параметры.Свойство("ПоказыватьКомандуСоздать") Тогда
		Элементы.СписокСоздать.Видимость = (Параметры.ПоказыватьКомандуСоздать = Истина);
	КонецЕсли;
	
	Если Параметры.Свойство("Заголовок") Тогда
		Заголовок = Параметры.Заголовок;
	Иначе
		
		Если ВыборШаблона Тогда
			Заголовок = НСтр("ru = 'Выбор шаблона файла'; en = 'Select file template'");
		КонецЕсли;
		
	КонецЕсли;
	
	ВыбранныеФайлыНадпись = НСтр("ru = 'Выбранные файлы:'; en = 'The selected files:'");
	
	Если ЗакрыватьПриВыборе Тогда
		Элементы.ВыбранныеФайлыНадпись.Видимость = Ложь;
		Элементы.ВыбранныеЗначения.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ВыборШаблона И Элементы.Папки.ТекущаяСтрока <> Неопределено Тогда
		Элементы.Папки.Развернуть(Элементы.Папки.ТекущаяСтрока, Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ГруппыПриАктивизацииСтроки(Элемент)
	
	Если ТекущаяПапка = Элементы.Папки.ТекущаяСтрока Тогда
		Возврат;
	КонецЕсли;
	ТекущаяПапка = Элементы.Папки.ТекущаяСтрока;
	
	ПодключитьОбработчикОжидания("ОбработкаОжидания", 0.2, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОжидания()
	Если Элементы.Папки.ТекущаяСтрока <> Неопределено Тогда
		Список.Параметры.УстановитьЗначениеПараметра("Владелец", Элементы.Папки.ТекущаяСтрока);
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	Если ОбщегоНазначенияДокументооборотКлиент.ПриЗакрытии(ЗавершениеРаботы) Тогда
		Возврат;
	КонецЕсли;
	
	ПриЗакрытииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ПриЗакрытииНаСервере()
	Если ВыборШаблона Тогда
		ХранилищеНастроекДанныхФорм.Сохранить("ВыборФайловВПапках", "ТекущаяПапкаДляВыбораШаблона",  Элементы.Папки.ТекущаяСтрока);  
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПолучитьПолныйПуть(Ссылка)
	
	УстановитьПривилегированныйРежим(Истина);
	Путь = "";
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	Файлы.ВладелецФайла КАК Папка,
		|	Файлы.ВладелецФайла.Наименование КАК Наименование
		|ИЗ
		|	Справочник.Файлы КАК Файлы
		|ГДЕ
		|	Файлы.Ссылка = &Ссылка");
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	Папка = РезультатЗапроса[0].Папка;
	Пока ЗначениеЗаполнено(Папка) Цикл
		Путь = РезультатЗапроса[0].Наименование + ?(ПустаяСтрока(Путь), "", "\") + Путь;
		Запрос = Новый Запрос(
			"ВЫБРАТЬ
			|	ПапкиФайлов.Родитель КАК Папка,
			|	ПапкиФайлов.Родитель.Наименование КАК Наименование
			|ИЗ
			|	Справочник.ПапкиФайлов КАК ПапкиФайлов
			|ГДЕ
			|	ПапкиФайлов.Ссылка = &Ссылка");
		Запрос.УстановитьПараметр("Ссылка", Папка);
		РезультатЗапроса = Запрос.Выполнить().Выгрузить();
		Папка = РезультатЗапроса[0].Папка;
	КонецЦикла;
	
	Возврат Путь;
	
КонецФункции

&НаКлиенте
Процедура Выбрать(Команда)
	
	Если Элементы.Список.ТекущиеДанные <> Неопределено Тогда
		ПроверитьПредельныйРазмерФайла(МаксРазмерФайла, 
			Элементы.Список.ТекущиеДанные.ТекущаяВерсияРазмер, 
			Элементы.Список.ТекущаяСтрока);
	КонецЕсли;
	
	Если ЗакрыватьПриВыборе Тогда
		Если Элементы.Список.ТекущаяСтрока = Неопределено Тогда
			ПоказатьПредупреждение(, НСтр("ru = 'Не выбрана строка.'; en = 'No row is selected.'"));
			Возврат;
		КонецЕсли;
		Если ВыборДляПравилАвтозаполнения Тогда
			Результат = Новый Структура;
			Результат.Вставить("Файл", Элементы.Список.ТекущаяСтрока);
			Результат.Вставить("Расширение", Элементы.Список.ТекущиеДанные.ТекущаяВерсияРасширение);
			ОповеститьОВыборе(Результат);
		Иначе
			ОповеститьОВыборе(Элементы.Список.ТекущаяСтрока);
		КонецЕсли;
	Иначе
		Если ВыбранныеЗначения.Количество() = 0 Тогда
			Если Элементы.Список.ТекущаяСтрока = Неопределено Тогда
				ПоказатьПредупреждение(, НСтр("ru = 'Не выбран ни один файл.'; en = 'You have not selected any files.'"));
				Возврат;
			КонецЕсли;
			ОповеститьОВыборе(Элементы.Список.ТекущаяСтрока);
		ИначеЕсли ВыбранныеЗначения.Количество() = 1 Тогда
			ОповеститьОВыборе(ВыбранныеЗначения[0].Значение);
		ИначеЕсли ВыбранныеЗначения.Количество() > 1 Тогда
			ОповеститьОВыборе(ВыбранныеЗначения.ВыгрузитьЗначения());
		КонецЕсли;
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбранныеЗначенияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ПоказатьЗначение(, Элемент.ТекущиеДанные.Значение);
КонецПроцедуры

&НаКлиенте
Процедура ВыбранныеЗначенияПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура ВыбранныеЗначенияПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	СтандартнаяОбработка = Ложь;
	Если ТипЗнч(ПараметрыПеретаскивания.Значение) = Тип("СправочникСсылка.Файлы") Тогда
		ВыборЗначенияСервер(ПараметрыПеретаскивания.Значение);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьПредельныйРазмерФайла(МаксРазмерФайла, РазмерФайла, ФайлСсылка)
	
	Если РазмерФайла > МаксРазмерФайла Тогда
		
		РазмерВМб = РазмерФайла / (1024 * 1024);
		РазмерВМбМакс = МаксРазмерФайла / (1024 * 1024);
		
		ВызватьИсключение
			   СтрШаблон(
				 НСтр("ru = 'Размер файла ""%1"" (%2 Мб) превышает максимально допустимый размер файла (%3 Мб).'; en = 'The size of the file ""%1"" (%2 MB) exceeds the maximum allowed file size (%3 MB).'"),
				 Строка(ФайлСсылка), 
				 ФайловыеФункцииКлиентСервер.ПолучитьСтрокуСРазмеромФайла(РазмерВМб), 
				 ФайловыеФункцииКлиентСервер.ПолучитьСтрокуСРазмеромФайла(РазмерВМбМакс));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Элементы.Список.ТекущиеДанные <> Неопределено Тогда
		ПроверитьПредельныйРазмерФайла(МаксРазмерФайла, 
			Элементы.Список.ТекущиеДанные.ТекущаяВерсияРазмер, 
			ВыбраннаяСтрока);
	КонецЕсли;
	
	Если ЗакрыватьПриВыборе Тогда
		Если ВыборДляПравилАвтозаполнения Тогда
			СтандартнаяОбработка = Ложь;
			Результат = Новый Структура;
			Результат.Вставить("Файл", Элементы.Список.ТекущаяСтрока);
			Результат.Вставить("Расширение", Элементы.Список.ТекущиеДанные.ТекущаяВерсияРасширение);
			ОповеститьОВыборе(Результат);
		КонецЕсли;
		Возврат;
	КонецЕсли;
	СтандартнаяОбработка = Ложь;
	ВыборЗначенияСервер(ВыбраннаяСтрока);
	
КонецПроцедуры

&НаСервере
Процедура ВыборЗначенияСервер(Значение)
	
	Элемент = ВыбранныеЗначения.НайтиПоЗначению(Значение);
	Если Элемент = Неопределено Тогда
		ВыбранныеЗначения.Добавить(Значение, ПолучитьПолныйПуть(Значение) + "\" + Значение);
		ВыбранныеЗначения.СортироватьПоПредставлению();
	Иначе
		ВыбранныеЗначения.Удалить(Элемент);
	КонецЕсли;
	
	ОбновитьОтображение();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьОтображение()
	ВыбранныеФайлыНадпись = СтрШаблон(
		НСтр("ru = 'Выбранные файлы (%1):'; en = 'Selected files (%1):'"),
			ВыбранныеЗначения.Количество());
	УсловноеОформление.Элементы[0].Отбор.Элементы[0].ПравоеЗначение = ВыбранныеЗначения;
КонецПроцедуры

&НаКлиенте
Процедура ВыбранныеЗначенияПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ВыбранныеЗначенияПослеУдаления(Элемент)
	ОбновитьОтображение();
КонецПроцедуры

&НаКлиенте
Процедура СоздатьФайл(Команда)
	
	Попытка
		РежимСоздания = 2; // из файла на диске
		РаботаСФайламиКлиент.ДобавитьФайл(Неопределено, Элементы.Папки.ТекущаяСтрока, ЭтотОбъект, РежимСоздания);
	Исключение
		ПоказатьПредупреждение(, ФайловыеФункцииСлужебныйКлиентСервер.ОшибкаСозданияНовогоФайла(
			ИнформацияОбОшибке()));
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_Файл" И Параметр.Событие = "СозданФайл" Тогда
		Элементы.Список.Обновить();
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Функция ПолучитьКорневуюПапку(Папка)
	
	КорневаяПапка = Папка;
	
	ПапкаРодитель = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Папка.Ссылка, "Родитель");
	
	Пока ЗначениеЗаполнено(ПапкаРодитель) Цикл
		
		КорневаяПапка = ПапкаРодитель;
		ПапкаРодитель = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПапкаРодитель, "Родитель");
		Если Не ЗначениеЗаполнено(ПапкаРодитель) Тогда
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат КорневаяПапка;
	
КонецФункции


