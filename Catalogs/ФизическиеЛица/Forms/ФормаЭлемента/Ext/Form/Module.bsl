
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПротоколированиеРаботыПользователей.ЗаписатьОткрытие(Объект.Ссылка);
	
	// СтандартныеПодсистемы.КонтактнаяИнформация
	УправлениеКонтактнойИнформацией.ПриСозданииНаСервере(ЭтаФорма, Объект, 
		"ГруппаКонтактнаяИнформация", ПоложениеЗаголовкаЭлементаФормы.Лево);
	// Конец СтандартныеПодсистемы.КонтактнаяИнформация
	
	// СтандартныеПодсистемы.Печать
	УправлениеПечатью.ПриСозданииНаСервере(ЭтаФорма, Элементы.ГруппаПечать);
	// Конец СтандартныеПодсистемы.Печать
	
	// СтандартныеПодсистемы.БазоваяФункциональность
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.БазоваяФункциональность
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ПараметрыЗаписи.Вставить("ЭтоНовыйОбъект", НЕ ЗначениеЗаполнено(ТекущийОбъект.Ссылка));
	
	// СтандартныеПодсистемы.КонтактнаяИнформация
	УправлениеКонтактнойИнформацией.ПередЗаписьюНаСервере(ЭтаФорма, ТекущийОбъект, Отказ);
	// Конец СтандартныеПодсистемы.КонтактнаяИнформация
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ОтображатьФотографииПерсональнаяНастройка =
		ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
		"НастройкиПрограммы",
		"ОтображатьФотографииПерсональнаяНастройка",
		Истина);
		
	ОтображатьФотографииОбщаяНастройка = ПолучитьФункциональнуюОпцию("ОтображатьФотографииОбщаяНастройка");	
	
	ПолучатьФотографии = Истина;
	
	Если Не ОтображатьФотографииОбщаяНастройка 
		Или Не ОтображатьФотографииПерсональнаяНастройка
		Или ПолучитьСкоростьКлиентскогоСоединения() = СкоростьКлиентскогоСоединения.Низкая Тогда
		ПолучатьФотографии = Ложь;
		Элементы.Фотография.Видимость = Ложь;
	КонецЕсли;	
	
	Если ПолучатьФотографии Тогда
		ФайлФотографии = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Ссылка, "ФайлФотографии");
		ДвоичныеДанные = ФайлФотографии.Получить();
		ЕстьКартинка = ЗначениеЗаполнено(ДвоичныеДанные);
		Фотография = ПолучитьНавигационнуюСсылку(Объект.Ссылка, "ФайлФотографии");
	КонецЕсли;	
	
	Элементы.Фотография.Гиперссылка = Не ЕстьКартинка;
	Элементы.АдресКартинкиКонтекстноеМенюДобавитьИзображение.Доступность = Не ЕстьКартинка;
	Элементы.АдресКартинкиКонтекстноеМенюОчиститьИзображение.Доступность = ЕстьКартинка;
	
	// СтандартныеПодсистемы.КонтактнаяИнформация
	УправлениеКонтактнойИнформацией.ПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.КонтактнаяИнформация
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	// СтандартныеПодсистемы.КонтактнаяИнформация
	УправлениеКонтактнойИнформацией.ОбработкаПроверкиЗаполненияНаСервере(ЭтаФорма, Объект, Отказ);
	// Конец СтандартныеПодсистемы.КонтактнаяИнформация
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	ПротоколированиеРаботыПользователей.ЗаписатьСоздание(Объект.Ссылка, ПараметрыЗаписи.ЭтоНовыйОбъект);
	ПротоколированиеРаботыПользователей.ЗаписатьИзменение(Объект.Ссылка);
	
	// СтандартныеПодсистемы.КонтактнаяИнформация
	УправлениеКонтактнойИнформацией.ПослеЗаписиНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.КонтактнаяИнформация
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("ИзмененоФизическоеЛицо", Объект.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура ПраваДоступа(Команда)
	
	ДокументооборотПраваДоступаКлиент.ОткрытьФормуПравДоступа(ЭтаФорма);
	
КонецПроцедуры

// СтандартныеПодсистемы.КонтактнаяИнформация

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияПриИзменении(Элемент)
	
	УправлениеКонтактнойИнформациейКлиент.ПриИзменении(ЭтотОбъект, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	УправлениеКонтактнойИнформациейКлиент.НачалоВыбора(ЭтотОбъект, Элемент, , СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияПриНажатии(Элемент, СтандартнаяОбработка)
	УправлениеКонтактнойИнформациейКлиент.НачалоВыбора(ЭтотОбъект, Элемент, , СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияОчистка(Элемент, СтандартнаяОбработка)
	
	УправлениеКонтактнойИнформациейКлиент.Очистка(ЭтотОбъект, Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияВыполнитьКоманду(Команда)
	
	УправлениеКонтактнойИнформациейКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда.Имя);
	
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ОбновитьКонтактнуюИнформацию(Результат)
	УправлениеКонтактнойИнформацией.ОбновитьКонтактнуюИнформацию(ЭтотОбъект, Объект, Результат);
КонецПроцедуры

// Конец СтандартныеПодсистемы.КонтактнаяИнформация

// СтандартныеПодсистемы.Печать
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуПечати(Команда)
    УправлениеПечатьюКлиент.ВыполнитьПодключаемуюКомандуПечати(Команда, ЭтотОбъект, Объект);
КонецПроцедуры


// СтандартныеПодсистемы.БазоваяФункциональность
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры


// Определяет список команд заполнения.
//
// Параметры:
//   КомандыЗаполнения - ТаблицаЗначений - Таблица с командами заполнения. Для изменения.
//       См. описание 1 параметра процедуры ЗаполнениеОбъектовПереопределяемый.ПередДобавлениемКомандЗаполнения().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры ЗаполнениеОбъектовПереопределяемый.ПередДобавлениемКомандЗаполнения().
//
Процедура ДобавитьКомандыЗаполнения(КомандыЗаполнения, Параметры) Экспорт
КонецПроцедуры

&НаКлиенте
Процедура АдресКартинкиНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ЗаблокироватьДанныеФормыДляРедактирования();
	ДобавитьИзображениеНаКлиенте();
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьИзображениеНаКлиенте()
	
	ПараметрыОписания = Новый Структура(
		"АдресВременногоХранилищаФайла", 
		"");
		
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"ДобавитьИзображениеНаКлиентеПродолжение",
		ЭтотОбъект,
		ПараметрыОписания);
		
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ТекстВопроса = НСтр("ru='Для выбора изображения необходимо записать объект. Записать?'; en = 'You have to save the object to choose an image. Save it?'");
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	Иначе
		ВыполнитьОбработкуОповещения(ОписаниеОповещения, КодВозвратаДиалога.Да);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьИзображениеНаКлиентеПродолжение(Результат, ДополнительныеПараметры)Экспорт 
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		Записать();
	Иначе
		Возврат;
	КонецЕсли;

	Если Не ЕстьКартинка И ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		ОписаниеОповещения = Новый ОписаниеОповещения(
			"ВыборКартинкиПродолжение",
			ЭтотОбъект,
			ДополнительныеПараметры);

		ФайловыеФункцииКлиент.ВыбратьКартинкуИПоместитьВХранилище(
			ОписаниеОповещения, УникальныйИдентификатор);
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ВыборКартинкиПродолжение(Результат, Параметры) Экспорт 

	Если Результат <> Истина Тогда
		Возврат;
	КонецЕсли;
	
	ЗаписатьИзображение(Параметры.АдресВременногоХранилищаФайла);

	ЕстьКартинка = Истина;
	Элементы.Фотография.Гиперссылка = Не ЕстьКартинка;
	Элементы.АдресКартинкиКонтекстноеМенюДобавитьИзображение.Доступность = Не ЕстьКартинка;
	Элементы.АдресКартинкиКонтекстноеМенюОчиститьИзображение.Доступность = ЕстьКартинка;
	Прочитать();
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьИзображение(АдресВременногоХранилищаФайла)
	
	ЗаблокироватьДанныеДляРедактирования(Объект.Ссылка, , УникальныйИдентификатор);
	ПользовательОбъект = Объект.Ссылка.ПолучитьОбъект();
	ДвоичныеДанные = ПолучитьИзВременногоХранилища(АдресВременногоХранилищаФайла);
	ПользовательОбъект.ФайлФотографии = Новый ХранилищеЗначения(ДвоичныеДанные);
	ПользовательОбъект.Записать();
	РазблокироватьДанныеДляРедактирования(Объект.Ссылка, УникальныйИдентификатор);
	
КонецПроцедуры	

&НаКлиенте
Процедура ОчиститьИзображение(Команда)
	
	ЗаблокироватьДанныеФормыДляРедактирования();
	ОчиститьИзображениеСервер();
	ЕстьКартинка = Ложь;
	Элементы.Фотография.Гиперссылка = Не ЕстьКартинка;
	Элементы.АдресКартинкиКонтекстноеМенюДобавитьИзображение.Доступность = Не ЕстьКартинка;
	Элементы.АдресКартинкиКонтекстноеМенюОчиститьИзображение.Доступность = ЕстьКартинка;
	Прочитать();
	
КонецПроцедуры

&НаСервере
Процедура ОчиститьИзображениеСервер()
	
	ЗаблокироватьДанныеДляРедактирования(Объект.Ссылка, , УникальныйИдентификатор);
	ПользовательОбъект = Объект.Ссылка.ПолучитьОбъект();
	ПользовательОбъект.ФайлФотографии = Новый ХранилищеЗначения(Неопределено);
	ПользовательОбъект.Записать();
	РазблокироватьДанныеДляРедактирования(Объект.Ссылка, УникальныйИдентификатор);
	
КонецПроцедуры	

&НаКлиенте
Процедура ДобавитьИзображение(Команда)
	
	ДобавитьИзображениеНаКлиенте();
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.Печать

