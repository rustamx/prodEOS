#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ОбъектКТ = Параметры.ОбъектКТ;
	
	Заголовок = НСтр("ru = 'Шаблон контрольных точек (" + ОбъектКТ + ")'; en = 'Milestone template (" + ОбъектКТ + ")'");
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор,
		"ОбъектКТ",
		ОбъектКТ,
		ВидСравненияКомпоновкиДанных.Равно);
		
	Элементы.ПоказыватьУдаленные.Пометка = ПоказыватьУдаленные;
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Список, "ПометкаУдаления", Ложь,
		ВидСравненияКомпоновкиДанных.Равно, , Истина);
		
	ЗаполнитьТаблицуГрупп();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_ШаблонКонтрольнойТочки" И Параметр = ОбъектКТ Тогда
		ПеречитатьТаблицуГрупп();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ГруппыКТВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ПоказатьЗначение(, Элементы.ГруппыКТ.ТекущиеДанные.Группа);
	
КонецПроцедуры

&НаКлиенте
Процедура ГруппыКТПередНачаломИзменения(Элемент, Отказ)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ГруппыКТПриАктивизацииСтроки(Элемент)
	
	Если ТекущаяГруппаКТ <> Элементы.ГруппыКТ.ТекущиеДанные.Группа Тогда 
		
		ТекущаяГруппаКТ = Элементы.ГруппыКТ.ТекущиеДанные.Группа;
		
		ПодключитьОбработчикОжидания("ОбработкаОжидания", 0.2, Истина);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ГруппыКТПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	ДобавитьГруппуКлиент();
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ГруппыКТПередУдалением(Элемент, Отказ)
	
	УдалитьГруппу();
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	СоздатьКТ();
	Отказ = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОбновитьГруппы(Команда)
	
	ПеречитатьТаблицуГрупп();
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьГруппу(Команда)
	
	ДобавитьГруппуКлиент();
	
КонецПроцедуры

&НаКлиенте
Процедура Создать(Команда)
	
	СоздатьКТ();
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказыватьУдаленные(Команда)
	
	ПоказыватьУдаленные = Не ПоказыватьУдаленные;
	Элементы.ПоказыватьУдаленные.Пометка = ПоказыватьУдаленные;
	
	Если Не ПоказыватьУдаленные Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
			Список, "ПометкаУдаления", Ложь,
			ВидСравненияКомпоновкиДанных.Равно, , Истина);
	Иначе		
		ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбораДинамическогоСписка(Список, "ПометкаУдаления");
	КонецЕсли;
	
	ПеречитатьТаблицуГрупп();
	
КонецПроцедуры

&НаКлиенте
Процедура Загрузить(Команда)
	
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	Диалог.Заголовок = "Выберите файл";
	Диалог.ПолноеИмяФайла = "";
	Диалог.ПредварительныйПросмотр = Истина;
	Диалог.Фильтр = "XML (*.xml)|*.xml"; 

	Если Диалог.Выбрать() Тогда
		ЧтениеТекста = Новый ЧтениеТекста(Диалог.ПолноеИмяФайла);
		СтрокаXML = ЧтениеТекста.Прочитать();
		ЗагрузитьНаСервере(СтрокаXML, ОбъектКТ);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ДобавитьГруппуКлиент()
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ОбъектКТ", ОбъектКТ);
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"ДобавитьГруппуПродолжение",
		ЭтотОбъект);
	
	ОткрытьФорму(
		"Справочник.ШаблоныГруппКонтрольныхТочек.Форма.ФормаЭлемента", 
		ПараметрыФормы, ЭтаФорма, , , , 
		ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры
	
&НаКлиенте
Процедура ДобавитьГруппуПродолжение(Результат, Параметры) Экспорт	
	
	Если ЗначениеЗаполнено(Результат) Тогда
		
		ПеречитатьТаблицуГрупп();
		
		НайденныеСтроки = ГруппыКТ.НайтиСтроки(Новый Структура("Группа", Результат));
		Элементы.ГруппыКТ.ТекущаяСтрока = НайденныеСтроки[0].ПолучитьИдентификатор();
		
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуГрупп()
	
	ГруппыКТ.Очистить();
	
	Строка = ГруппыКТ.Добавить();
	Строка.Группа = Справочники.ШаблоныГруппКонтрольныхТочек.Все;
	ЧислоКТ = РегистрыСведений.ЧислоКТВКонтейнерах.ПолучитьЧислоКТПоКонтейнеру(ОбъектКТ);;
	Строка.НаименованиеГруппы = Строка(Строка.Группа) + " (" + Строка(ЧислоКТ) + ")";
	Строка.ОтображатьЖирным = Истина;
	Строка.ПометкаУдаления = Ложь;
	
	Строка = ГруппыКТ.Добавить();
	Строка.Группа = Справочники.ШаблоныГруппКонтрольныхТочек.НеВГруппе;
	ЧислоКТ = КонтрольныеТочки.ПолучитьЧислоКТБезГруппы(ОбъектКТ);
	Строка.НаименованиеГруппы = Строка(Строка.Группа) + " (" + Строка(ЧислоКТ) + ")";
	Строка.ОтображатьКрасным = Истина;
	Строка.ПометкаУдаления = Ложь;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ШаблоныГруппКонтрольныхТочек.Ссылка,
		|	ВЫБОР 
		|		КОГДА ЧислоКТВКонтейнерах.ЧислоКТ ЕСТЬ NULL ТОГДА 0
		|		ИНАЧЕ ЧислоКТВКонтейнерах.ЧислоКТ
		|	КОНЕЦ КАК ЧислоКТ,
		|	ШаблоныГруппКонтрольныхТочек.ПометкаУдаления
		|
		|ИЗ
		|	Справочник.ШаблоныГруппКонтрольныхТочек КАК ШаблоныГруппКонтрольныхТочек
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЧислоКТВКонтейнерах КАК ЧислоКТВКонтейнерах
		|		ПО ЧислоКТВКонтейнерах.КонтейнерКТ = ШаблоныГруппКонтрольныхТочек.Ссылка";
		
	Если Не ПоказыватьУдаленные Тогда
		Запрос.Текст = Запрос.Текст +	
			"
			|ГДЕ
			|	ШаблоныГруппКонтрольныхТочек.ПометкаУдаления = &ПометкаУдаления
			|	И ШаблоныГруппКонтрольныхТочек.ОбъектКТ = &ОбъектКТ
			|
			|УПОРЯДОЧИТЬ ПО
			|	ШаблоныГруппКонтрольныхТочек.Наименование";
			
		Запрос.УстановитьПараметр("ПометкаУдаления", ПоказыватьУдаленные);
	Иначе		
		Запрос.Текст = Запрос.Текст +	
			"
			|ГДЕ
			|	ШаблоныГруппКонтрольныхТочек.ОбъектКТ = &ОбъектКТ
			|
			|УПОРЯДОЧИТЬ ПО
			|	ШаблоныГруппКонтрольныхТочек.Наименование";
	КонецЕсли;	

	Запрос.УстановитьПараметр("ОбъектКТ", ОбъектКТ);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		                                                                   
		Строка = ГруппыКТ.Добавить();
		Строка.Группа = Выборка.Ссылка;
		Строка.НаименованиеГруппы = Строка(Выборка.Ссылка) + " (" + Строка(Выборка.ЧислоКТ) + ")";
		Строка.ПометкаУдаления = Выборка.ПометкаУдаления;
		
	КонецЦикла;
	
КонецПроцедуры		
	
&НаКлиенте
Процедура СоздатьКТ()
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ОбъектКТ", ОбъектКТ);
	Если ТекущаяГруппаКТ <> ПредопределенноеЗначение("Справочник.ШаблоныГруппКонтрольныхТочек.Все") 
		И ТекущаяГруппаКТ <> ПредопределенноеЗначение("Справочник.ШаблоныГруппКонтрольныхТочек.НеВГруппе") Тогда
		ПараметрыФормы.Вставить("ГруппаКТ", ТекущаяГруппаКТ);
	КонецЕсли;	
	
	ОткрытьФорму("Справочник.ШаблоныКонтрольныхТочек.Форма.ФормаЭлемента", ПараметрыФормы, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОжидания()
	
	Если ЗначениеЗаполнено(ТекущаяГруппаКТ) Тогда 
		
		Если ТекущаяГруппаКТ = ПредопределенноеЗначение("Справочник.ШаблоныГруппКонтрольныхТочек.НеВГруппе") Тогда
			Список.Параметры.УстановитьЗначениеПараметра("ГруппаКТ", 
				ПредопределенноеЗначение("Справочник.ШаблоныГруппКонтрольныхТочек.ПустаяСсылка"));
		ИначеЕсли ТекущаяГруппаКТ = ПредопределенноеЗначение("Справочник.ШаблоныГруппКонтрольныхТочек.Все") Тогда		
			ОтключитьПараметрОтбора("ГруппаКТ")
		Иначе
			Список.Параметры.УстановитьЗначениеПараметра("ГруппаКТ", 
				ТекущаяГруппаКТ);
		КонецЕсли;			
			
	Иначе
		
		ОтключитьПараметрОтбора("ГруппаКТ")
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтключитьПараметрОтбора(ПараметрОтбора)
	
	Параметр = Список.Параметры.НайтиЗначениеПараметра(
		Новый ПараметрКомпоновкиДанных(ПараметрОтбора));
	Если Параметр <> Неопределено И Параметр.Использование Тогда 
		Параметр.Использование = Ложь;
	КонецЕсли;
		
КонецПроцедуры	

&НаКлиенте
Процедура УдалитьГруппу()
	
	Если Элементы.ГруппыКТ.ВыделенныеСтроки.Количество() > 1 Тогда
		ТекстВопроса = НСтр("ru = 'Пометить на удаление выбранные группы ("
			+ Элементы.ГруппыКТ.ВыделенныеСтроки.Количество() + ") и входящие в них контрольные точки?';
			|en = 'Mark for deletion the selected groups ("
			+ Элементы.ГруппыКТ.ВыделенныеСтроки.Количество() + ") and all their milestones?'");
	Иначе
		ТекстВопроса = НСтр("ru = 'Пометить на удаление выбранную группу и входящие в нее контрольные точки?'; en = 'Mark for deletion the selected group and all its milestones?'");
	КонецЕсли;	
	
	Режим = Новый СписокЗначений;
	Режим.Добавить(КодВозвратаДиалога.Да, НСтр("ru = 'ОК'; en = 'ОК'"));
	Режим.Добавить(КодВозвратаДиалога.Нет, НСтр("ru = 'Отмена'; en = 'Cancel'"));
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"УдалениеГруппПродолжение",
		ЭтотОбъект);
	
	ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, Режим, , КодВозвратаДиалога.Нет);
	
КонецПроцедуры

&НаКлиенте
Процедура УдалениеГруппПродолжение(Ответ, Параметры) Экспорт
	
	Если Ответ <> КодВозвратаДиалога.Да Тогда
	    Возврат;
	КонецЕсли;
	
	Состояние(НСтр("ru = 'Идет удаление групп и контрольных точек. Пожалуйста подождите...'; en = 'Deleting groups and milestones. Please wait ...'"));
	
	УдалениеГруппПродолжениеСервер();
	
	Состояние(НСтр("ru = 'Группы и контрольные точки удалены.'; en = 'Groups and milestones deleted.'"));
	
КонецПроцедуры

&НаСервере
Процедура УдалениеГруппПродолжениеСервер()
	
	НачатьТранзакцию();
	
	Попытка
		
		ВыделенныеСтроки = Элементы.ГруппыКТ.ВыделенныеСтроки;
		Для Каждого Эл Из ВыделенныеСтроки Цикл
			
			Группа = ГруппыКТ.НайтиПоИдентификатору(Эл).Группа.ПолучитьОбъект();
			Если Не Группа.Предопределенный Тогда
				Группа.УстановитьПометкуУдаления(Истина);
			КонецЕсли;
			
			Запрос = Новый Запрос;
			Запрос.Текст = 
				"ВЫБРАТЬ
				|	ШаблоныКонтрольныхТочек.Ссылка
				|ИЗ
				|	Справочник.ШаблоныКонтрольныхТочек КАК ШаблоныКонтрольныхТочек
				|ГДЕ
				|	ШаблоныКонтрольныхТочек.ПометкаУдаления = Ложь
				|	И ШаблоныКонтрольныхТочек.ГруппаКТ = &ГруппаКТ";
			
			Запрос.УстановитьПараметр("ГруппаКТ", Группа.Ссылка);
			
			Выборка = Запрос.Выполнить().Выбрать();
			
			Пока Выборка.Следующий() Цикл
				КТ = Выборка.Ссылка.ПолучитьОбъект();
				КТ.УстановитьПометкуУдаления(Истина);
			КонецЦикла;
	
		КонецЦикла;
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		
		ОтменитьТранзакцию();
		
	КонецПопытки;	
	
	ЗаполнитьТаблицуГрупп();
		
КонецПроцедуры

&НаКлиенте
Процедура ПеречитатьТаблицуГрупп()

	ЗаполнитьТаблицуГрупп();
	
	НайденныеСтроки = ГруппыКТ.НайтиСтроки(Новый Структура("Группа", ТекущаяГруппаКТ));
	Элементы.ГруппыКТ.ТекущаяСтрока = НайденныеСтроки[0].ПолучитьИдентификатор();
		
КонецПроцедуры		

&НаСервере
Процедура ЗагрузитьНаСервере(СтрокаXML, ОбъектКТ)
	
	// Удаление существующих групп и контрольных точек
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ШаблоныКонтрольныхТочек.Ссылка
		|ИЗ
		|	Справочник.ШаблоныКонтрольныхТочек КАК ШаблоныКонтрольныхТочек
		|ГДЕ
		|	ШаблоныКонтрольныхТочек.ОбъектКТ = &ОбъектКТ
		|	И ШаблоныКонтрольныхТочек.ПометкаУдаления = Ложь";
	
	Запрос.УстановитьПараметр("ОбъектКТ", ОбъектКТ);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		КТ = Выборка.Ссылка.ПолучитьОбъект();
		КТ.УстановитьПометкуУдаления(Истина);
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ШаблоныГруппКонтрольныхТочек.Ссылка
		|ИЗ
		|	Справочник.ШаблоныГруппКонтрольныхТочек КАК ШаблоныГруппКонтрольныхТочек
		|ГДЕ
		|	ШаблоныГруппКонтрольныхТочек.ОбъектКТ = &ОбъектКТ
		|	И ШаблоныГруппКонтрольныхТочек.ПометкаУдаления = Ложь";
	
	Запрос.УстановитьПараметр("ОбъектКТ", ОбъектКТ);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		ГруппаКТ = Выборка.Ссылка.ПолучитьОбъект();
		ГруппаКТ.УстановитьПометкуУдаления(Истина);
	КонецЦикла;

	ЧтениеXML = Новый ЧтениеXML;
	ЧтениеXML.УстановитьСтроку(СтрокаXML);
	ТекущаяГруппа = Неопределено;
	Пока ЧтениеXML.Прочитать() Цикл
		
		Если ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента И ЧтениеXML.ЛокальноеИмя = "ГруппаКТ" Тогда
			
			НоваяГруппа = Справочники.ШаблоныГруппКонтрольныхТочек.СоздатьЭлемент();
			
			НоваяГруппа.Наименование = ЧтениеXML.ЗначениеАтрибута("Наименование");
			НоваяГруппа.Комментарий = ЧтениеXML.ЗначениеАтрибута("Комментарий");
			ИД = Новый УникальныйИдентификатор(ЧтениеXML.ЗначениеАтрибута("Ответственный"));
			НоваяГруппа.Ответственный = Справочники.Пользователи.ПолучитьСсылку(ИД);
			НоваяГруппа.ОбъектКТ = ОбъектКТ;
			
			НоваяГруппа.Записать();
			
			ТекущаяГруппа = НоваяГруппа.Ссылка;
			
		ИначеЕсли ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента И ЧтениеXML.ЛокальноеИмя = "КТ" Тогда
			
			НоваяКТ = Справочники.ШаблоныКонтрольныхТочек.СоздатьЭлемент();
			НоваяКТ.ОбъектКТ = ОбъектКТ;
			НоваяКТ.ГруппаКТ = ТекущаяГруппа;
			
			НоваяКТ.Наименование = ЧтениеXML.ЗначениеАтрибута("Наименование");
			НоваяКТ.КодКТ = ЧтениеXML.ЗначениеАтрибута("КодКТ");
			НоваяКТ.Комментарий = ЧтениеXML.ЗначениеАтрибута("Комментарий");
			НоваяКТ.Описание = ЧтениеXML.ЗначениеАтрибута("Описание");
			
			ИД = Новый УникальныйИдентификатор(ЧтениеXML.ЗначениеАтрибута("Ответственный"));
			НоваяКТ.Ответственный = Справочники.Пользователи.ПолучитьСсылку(ИД);
			
			НоваяКТ.ДлительностьДней = ЧтениеXML.ЗначениеАтрибута("ДлительностьДней");
			НоваяКТ.ДлительностьЧасов = ЧтениеXML.ЗначениеАтрибута("ДлительностьЧасов");
			НоваяКТ.ДлительностьМинут = ЧтениеXML.ЗначениеАтрибута("ДлительностьМинут");
			Если НоваяКТ.ДлительностьДней >= 3 Тогда
				НоваяКТ.ДлительностьЧасов = 0;
				НоваяКТ.ДлительностьМинут = 0;
			КонецЕсли;
			
			ИД = Новый УникальныйИдентификатор(ЧтениеXML.ЗначениеАтрибута("Проверяющий"));
			НоваяКТ.Проверяющий = Справочники.Пользователи.ПолучитьСсылку(ИД);
			
			НоваяКТ.Результат = ЧтениеXML.ЗначениеАтрибута("Результат");
			
			ИД = Новый УникальныйИдентификатор(ЧтениеXML.ЗначениеАтрибута("УровеньКТ"));
			НоваяКТ.УровеньКТ = Справочники.УровниКонтроля.ПолучитьСсылку(ИД);
			
			НоваяКТ.Записать();
			
		КонецЕсли;	
		
	КонецЦикла;	
	
	ЗаполнитьТаблицуГрупп();
	
КонецПроцедуры

#КонецОбласти
