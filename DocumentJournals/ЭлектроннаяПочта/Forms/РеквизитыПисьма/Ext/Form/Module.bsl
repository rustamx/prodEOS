#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Ссылка = Параметры.Ссылка;
	ОтобразитьСвязиПисьма();
	
	ВнешнееПисьмоТекстЗаголовка = Параметры.ВнешнееПисьмоТекстЗаголовка; 
	ВнешнееПисьмоТекстСообщения = Параметры.ВнешнееПисьмоТекстСообщения; 
	ВидМаршрутизацииТекстЗаголовка = Параметры.ВидМаршрутизацииТекстЗаголовка; 
	ВидМаршрутизацииТекстСообщения = Параметры.ВидМаршрутизацииТекстСообщения;
	
	РеквизитыПисьма = Неопределено;
	Если ЗначениеЗаполнено(Ссылка) Тогда 
		РеквизитыПисьма = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Ссылка,
			"ДатаОтправки, Дата, УчетнаяЗапись, Папка, Предмет, Проект, Важность");
	Иначе
			
		РеквизитыПисьма = Новый Структура(
			"ДатаОтправки, Дата, УчетнаяЗапись, Папка, Предмет, Проект, Важность", 
			Неопределено, Неопределено, 
			Параметры.УчетнаяЗапись, Параметры.Папка, Параметры.Предмет, 
			Параметры.Проект, Параметры.Важность);
			
	КонецЕсли;	
		
	Если ЗначениеЗаполнено(Параметры.Предмет) Тогда
		РеквизитыПисьма.Предмет = Параметры.Предмет;
	КонецЕсли;	
	Если ЗначениеЗаполнено(Параметры.Проект) Тогда
		РеквизитыПисьма.Проект = Параметры.Проект;
	КонецЕсли;	
	
	ДатаОтправки = РеквизитыПисьма.ДатаОтправки;
	Дата = РеквизитыПисьма.Дата;
	Если ВстроеннаяПочтаКлиентСервер.ЭтоВходящееПисьмо(Ссылка) Тогда
		ДатаПолучения = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка,
			"ДатаПолучения");
	КонецЕсли;	
	УчетнаяЗапись = РеквизитыПисьма.УчетнаяЗапись;
	Папка = РеквизитыПисьма.Папка;
	Предмет = РеквизитыПисьма.Предмет;
	
	Проект = РеквизитыПисьма.Проект;
	
	ВажностьНадпись = РеквизитыПисьма.Важность;
	
	Строка = ИнформацияПисьма.Добавить();
	Строка.Имя = НСтр("ru = 'В ответ на'; en = 'In reply to'");
	Строка.Значение = ПолученоВОтветНаСтрока;
	Строка.ТолькоПросмотр = Истина;
	Строка.ЭтоГиперссылка = ПолученоВОтветНаЭтоГиперссылка;
	
	Строка = ИнформацияПисьма.Добавить();
	Строка.Имя = НСтр("ru = 'Отправлен ответ'; en = 'Sent reply'");
	Строка.Значение = ОтправленОтветСтрока;
	Строка.ЭтоГиперссылка = (ОтправленОтвет.Количество() <> 0);
	
	Строка = ИнформацияПисьма.Добавить();
	Строка.Имя = НСтр("ru = 'Переслано'; en = 'Forwarded'");
	Строка.Значение = ПересланоПисьмомСтрока;
	Строка.ЭтоГиперссылка = ПересланоПисьмомЭтоГиперссылка;
	
	Строка = ИнформацияПисьма.Добавить();
	Строка.Имя = НСтр("ru = 'Переписка'; en = 'Thread'");
	Строка.Значение = ПисемВПереписке;
	Строка.ЭтоГиперссылка = (ЧислоПисемВПереписке > 1);
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьБизнесПроцессыИЗадачи") Тогда
		Строка = ИнформацияПисьма.Добавить();
		Строка.Имя = НСтр("ru = 'Задачи'; en = 'Tasks'");
		Строка.Значение = Задачи;
		КоличествоАктивныхЗадач = АктивныеЗадачиПоПисьму.Количество();
		Строка.ЭтоГиперссылка = (КоличествоАктивныхЗадач > 0);
	КонецЕсли;
	
	Строка = ИнформацияПисьма.Добавить();
	Строка.Имя = НСтр("ru = 'Отправлено'; en = 'Sent'");
	Строка.Значение = РеквизитыПисьма.ДатаОтправки;
	Строка.ТолькоПросмотр = Истина;
	
	Если ВстроеннаяПочтаКлиентСервер.ЭтоВходящееПисьмо(Ссылка) Тогда
		Строка = ИнформацияПисьма.Добавить();
		Строка.Имя = НСтр("ru = 'Получено'; en = 'Received'");
		Строка.Значение = РеквизитыПисьма.Дата;
		Строка.ТолькоПросмотр = Истина;
	КонецЕсли;
	
	Строка = ИнформацияПисьма.Добавить();
	Строка.Имя = НСтр("ru = 'Учетная запись'; en = 'Account'");
	Строка.УчетнаяЗапись = РеквизитыПисьма.УчетнаяЗапись;
	Строка.ЭтоУчетнаяЗапись = Истина;
	
	Строка = ИнформацияПисьма.Добавить();
	Строка.Имя = НСтр("ru = 'Папка'; en = 'Folder'");
	Строка.Папка = Папка;
	Строка.ЭтоПапка = Истина;
	
	Строка = ИнформацияПисьма.Добавить();
	Строка.Имя = НСтр("ru = 'Предмет'; en = 'Subject'");
	Строка.Предмет = РеквизитыПисьма.Предмет;
	Строка.ЭтоПредмет = Истина;
	
	Если ПолучитьФункциональнуюОпцию("ВестиУчетПоПроектам") Тогда
		Строка = ИнформацияПисьма.Добавить();
		Строка.Имя = НСтр("ru = 'Проект'; en = 'Project'");
		Строка.Проект = РеквизитыПисьма.Проект;
		Строка.ЭтоПроект = Истина;
	КонецЕсли;
	
	ИспользоватьВнутреннююМаршрутизацию = Константы.ИспользоватьВнутреннююМаршрутизацию.Получить();
	Если ИспользоватьВнутреннююМаршрутизацию Тогда 
		
		Строка = ИнформацияПисьма.Добавить();
		Строка.Имя = НСтр("ru = 'Вид маршрутизации'; en = 'Routing type'");
		Строка.Значение = Параметры.ВидМаршрутизации;
		Строка.ЭтоГиперссылка = Истина;
		
	КонецЕсли;	
	
	Строка = ИнформацияПисьма.Добавить();
	Строка.Имя = НСтр("ru = 'Адресация'; en = 'Addressing'");
	Строка.Значение = Параметры.ВнешнееПисьмо;
	Строка.ЭтоГиперссылка = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОК(Команда)
	
	Для Каждого Строка Из ИнформацияПисьма Цикл
		
		Если Строка.Имя = НСтр("ru = 'Учетная запись'; en = 'Account'") Тогда
			УчетнаяЗапись = Строка.УчетнаяЗапись;
		КонецЕсли;	
		Если Строка.Имя = НСтр("ru = 'Папка'; en = 'Folder'") Тогда
			Папка = Строка.Папка;
		КонецЕсли;	
		Если Строка.Имя = НСтр("ru = 'Предмет'; en = 'Subject'") Тогда
			Предмет = Строка.Предмет;
		КонецЕсли;	
		Если Строка.Имя = НСтр("ru = 'Проект'; en = 'Project'") Тогда
			Проект = Строка.Проект;
		КонецЕсли;	
		
	КонецЦикла;	
	
	ПараметрыВозврата = Новый Структура("Письмо, Предмет, Проект, УчетнаяЗапись, Папка",
		Ссылка, Предмет, Проект, УчетнаяЗапись, Папка);

	Закрыть(ПараметрыВозврата);
	
КонецПроцедуры


&НаКлиенте
Процедура ИнфаПисьмаВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Данные = ИнформацияПисьма.НайтиПоИдентификатору(ВыбраннаяСтрока);
	
	Если Данные.Имя = "Переписка" Тогда
		СтандартнаяОбработка = Ложь;
		Если ЗначениеЗаполнено(Ссылка) Тогда
			ВстроеннаяПочтаКлиент.ОткрытьДеревоПереписки(Ссылка);
		КонецЕсли;	
	КонецЕсли;
	
	Если Данные.Имя = НСтр("ru = 'В ответ на'; en = 'In reply to'") Тогда 
		
		СтандартнаяОбработка = Ложь;
		Если ЗначениеЗаполнено(ПолученоВОтветНа) Тогда
			ПоказатьЗначение(,ПолученоВОтветНа);
		КонецЕсли;	
		
	КонецЕсли;
	
	Если Данные.Имя = НСтр("ru = 'Отправлен ответ'; en = 'Sent reply'") Тогда
		
		СтандартнаяОбработка = Ложь;
		
		Если ОтправленОтвет.Количество() = 1 Тогда
			ПоказатьЗначение(, ОтправленОтвет[0].Значение);
		ИначеЕсли ОтправленОтвет.Количество() > 1 Тогда
			ВстроеннаяПочтаКлиент.ОткрытьДеревоПереписки(Ссылка);
		КонецЕсли;
		
	КонецЕсли;
	
	Если Данные.Имя = НСтр("ru = 'Переслано'; en = 'Forwarded'") Тогда
		
		СтандартнаяОбработка = Ложь;
		
		Если ПересланоПисьмом.Количество() = 1 Тогда
			ПоказатьЗначение(, ПересланоПисьмом[0].Значение);
		ИначеЕсли ПересланоПисьмом.Количество() > 1 Тогда
			ВстроеннаяПочтаКлиент.ОткрытьДеревоПереписки(Ссылка);
		КонецЕсли;
	КонецЕсли;
	
	Если Данные.Имя = НСтр("ru = 'Задачи'; en = 'Tasks'") Тогда
		
		СтандартнаяОбработка = Ложь;
		
		Если АктивныеЗадачиПоПисьму.Количество() = 1 Тогда
			ПоказатьЗначение(, АктивныеЗадачиПоПисьму[0].Значение);
		ИначеЕсли АктивныеЗадачиПоПисьму.Количество() > 1 Тогда
			ОткрытьОбщуюФормуБизнесПроцессыИЗадачиПоПредмету();
		КонецЕсли;
		
	КонецЕсли;
	
	Если Данные.Имя = НСтр("ru = 'Вид маршрутизации'; en = 'Routing type'") Тогда
		
		СтандартнаяОбработка = Ложь;
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Заголовок", ВидМаршрутизацииТекстЗаголовка);
		ПараметрыФормы.Вставить("ТекстСообщения", ВидМаршрутизацииТекстСообщения);
		
		ОткрытьФорму("ОбщаяФорма.ФорматированноеСообщение", ПараметрыФормы, ЭтаФорма);
		
	КонецЕсли;
	
	Если Данные.Имя = НСтр("ru = 'Адресация'; en = 'Addressing'") Тогда
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Заголовок", ВнешнееПисьмоТекстЗаголовка);
		ПараметрыФормы.Вставить("ТекстСообщения", ВнешнееПисьмоТекстСообщения);
		
		ОткрытьФорму("ОбщаяФорма.ФорматированноеСообщение", ПараметрыФормы, ЭтаФорма);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИнфаПисьмаПередНачаломИзменения(Элемент, Отказ)
	
	Данные = ИнформацияПисьма.НайтиПоИдентификатору(Элементы.ИнформацияПисьма.ТекущаяСтрока);
	
	Если Данные.Имя <> НСтр("ru = 'Учетная запись'; en = 'Account'") И Данные.Имя <> НСтр("ru = 'Папка'; en = 'Folder'")
		И Данные.Имя <> НСтр("ru = 'Предмет'; en = 'Subject'") И Данные.Имя <> НСтр("ru = 'Проект'; en = 'Project'") Тогда
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИнфаПисьмаПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ИнфаПисьмаПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОтобразитьСвязиПисьма()
	
	ПолучатьПомеченныеНаУдаление = Ложь; 
	ВсеСвязиДокумента = СвязиДокументов.ПолучитьВсеСвязиДокумента(Ссылка, ПолучатьПомеченныеНаУдаление);
	Если ВсеСвязиДокумента.Количество() > 0 Тогда
		
		// ПолученоВОтветНаДокумент
		НайденнаяСтрока = ВсеСвязиДокумента.Найти(
			Справочники.ТипыСвязей.ПолученоВОтветНаДокумент,
			"ТипСвязи");
		Если НайденнаяСтрока <> Неопределено Тогда
			ПолученоВОтветНаДокумент = НайденнаяСтрока.СвязанныйДокумент;			
			ПолученоВОтветНа = ПолученоВОтветНаДокумент;
		Иначе
			// ПолученоВОтветНаПисьмо
			НайденнаяСтрока = ВсеСвязиДокумента.Найти(
				Справочники.ТипыСвязей.ПолученоВОтветНаПисьмо,
				"ТипСвязи");
				
			Если НайденнаяСтрока <> Неопределено Тогда
				ПолученоВОтветНаПисьмо = НайденнаяСтрока.СвязанныйДокумент;
				ПолученоВОтветНа = ПолученоВОтветНаПисьмо;
			КонецЕсли;
			
		КонецЕсли;
		
		ОтправленОтвет.Очистить();
		СтруктураОтбора = Новый Структура("ТипСвязи", Справочники.ТипыСвязей.ОтправленоОтветноеПисьмо);
		НайденныеСтроки = ВсеСвязиДокумента.НайтиСтроки(СтруктураОтбора);
		Для каждого Строка Из НайденныеСтроки Цикл
			ОтправленОтвет.Добавить(Строка.СвязанныйДокумент);
		КонецЦикла;
		
		СтруктураОтбора = Новый Структура("ТипСвязи", Справочники.ТипыСвязей.ОтправленОтветныйДокумент);
		НайденныеСтроки = ВсеСвязиДокумента.НайтиСтроки(СтруктураОтбора);
		Для каждого Строка Из НайденныеСтроки Цикл
			ОтправленОтвет.Добавить(Строка.СвязанныйДокумент);
		КонецЦикла;
		
		СтруктураОтбора = Новый Структура("ТипСвязи", Справочники.ТипыСвязей.ПересланоПисьмом);
		НайденныеСтроки = ВсеСвязиДокумента.НайтиСтроки(СтруктураОтбора);
		Для каждого Строка Из НайденныеСтроки Цикл
			ПересланоПисьмом.Добавить(Строка.СвязанныйДокумент);
		КонецЦикла;
		
	КонецЕсли;
	
	// Обработка связи письма ПолученоВОтветНа
	Если ЗначениеЗаполнено(ПолученоВОтветНа) Тогда
		Если ВстроеннаяПочтаКлиентСервер.ЭтоПисьмо(ПолученоВОтветНа) Тогда
			ПолученоВОтветНаСтрока = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПолученоВОтветНа, "Тема");
			ПолученоВОтветНаЭтоГиперссылка = Истина;
		ИначеЕсли ДелопроизводствоКлиентСервер.ЭтоИсходящийДокумент(ПолученоВОтветНа) ТОгда
			ПолученоВОтветНаСтрока = Строка(ПолученоВОтветНа);
			ПолученоВОтветНаЭтоГиперссылка = Истина;
		Иначе
			ПолученоВОтветНаСтрока = НСтр("ru = 'Нет'; en = 'No'");
			ПолученоВОтветНаЭтоГиперссылка = Ложь;
		КонецЕсли;
	Иначе
		ПолученоВОтветНаСтрока = НСтр("ru = 'Нет'; en = 'No'");
		ПолученоВОтветНаЭтоГиперссылка = Ложь;
	КонецЕсли;
	
	// Обработка связи письма ОтправленОтвет
	Если ОтправленОтвет.Количество() = 0 Тогда
		ОтправленОтветСтрока = НСтр("ru = 'Нет'; en = 'No'");
	Иначе
		ОтправленОтветСтрока = "";
		Для каждого Ответ Из ОтправленОтвет Цикл
			Если ДелопроизводствоКлиентСервер.ЭтоИсходящийДокумент(Ответ.Значение) Тогда
				ОтправленОтветСтрока = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(
					Ответ.Значение,
					"Заголовок");
				Если Не ЗначениеЗаполнено(ОтправленОтветСтрока) Тогда
					ОтправленОтветСтрока = НСтр("ru = 'Документ без заголовка'; en = 'Untitled document'");
				КонецЕсли;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		Если Не ЗначениеЗаполнено(ОтправленОтветСтрока) Тогда
			Для каждого Ответ Из ОтправленОтвет Цикл
				Если ВстроеннаяПочтаКлиентСервер.ЭтоИсходящееПисьмо(Ответ.Значение) Тогда
					ОтправленОтветСтрока = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(
						Ответ.Значение,
						"Тема");
					Если Не ЗначениеЗаполнено(ОтправленОтветСтрока) Тогда
						ОтправленОтветСтрока = НСтр("ru = 'Письмо без темы'; en = 'Email without subject'");
					КонецЕсли;
					Прервать;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
	// Обработка связи письма ПересланоПисьмом
	Если ПересланоПисьмом.Количество() = 0 Тогда
		ПересланоПисьмомСтрока = НСтр("ru = 'Нет'; en = 'No'");
		ПересланоПисьмомЭтоГиперссылка = Ложь;
	Иначе
		ПересланоПисьмомТема = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(
			ПересланоПисьмом[0].Значение,
			"Тема");
		ПересланоПисьмомСтрока = ПересланоПисьмомТема;
		ПересланоПисьмомЭтоГиперссылка = Истина;
	КонецЕсли;
	
	ЧислоПисемВПереписке = ВстроеннаяПочтаСервер.ПолучитьКоличествоПисемВПереписке(Ссылка);
	Если ЧислоПисемВПереписке > 1 Тогда
		ПисемВПереписке = Формат(ЧислоПисемВПереписке, "ЧН=0") +
			" " +
			ВстроеннаяПочтаКлиентСервер.ПодписьКЧислуПисемСтрокой(ЧислоПисемВПереписке);
	Иначе
		ПисемВПереписке = НСтр("ru = 'Писем нет'; en = 'No emails'");
	КонецЕсли;
	
	АктивныеЗадачиПоПисьму.ЗагрузитьЗначения(ПолучитьАктивныеЗадачиПоПисьму(Ссылка)); 
	КоличествоАктивныхЗадач = АктивныеЗадачиПоПисьму.Количество();
	Если КоличествоАктивныхЗадач > 1 Тогда
		Задачи = Формат(КоличествоАктивныхЗадач, "ЧН=0") +
			" " +
			ВстроеннаяПочтаКлиентСервер.ПодписьКЧислуЗадачСтрокой(КоличествоАктивныхЗадач);
		
	ИначеЕсли КоличествоАктивныхЗадач = 1 Тогда
		Задачи = АктивныеЗадачиПоПисьму[0];
	Иначе
		Задачи = НСтр("ru = 'Нет задач'; en = 'No tasks'");
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьАктивныеЗадачиПоПисьму(Письмо)
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ЗадачаИсполнителя.Ссылка КАК Ссылка
		|ИЗ
		|	Задача.ЗадачаИсполнителя КАК ЗадачаИсполнителя
		|ГДЕ
		|	ЗадачаИсполнителя.Предметы.Предмет = &Предмет
		|	И НЕ ЗадачаИсполнителя.ПометкаУдаления
		|	И НЕ ЗадачаИсполнителя.Отменена
		|	И НЕ ЗадачаИсполнителя.Выполнена
		|	И ЗадачаИсполнителя.СостояниеБизнесПроцесса = ЗНАЧЕНИЕ(Перечисление.СостоянияБизнесПроцессов.Активен)");
	Запрос.УстановитьПараметр("Предмет", Письмо);
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
КонецФункции

&НаКлиенте
Процедура ОткрытьОбщуюФормуБизнесПроцессыИЗадачиПоПредмету()
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Предмет", Ссылка);
	ПараметрыФормы.Вставить(
		"Заголовок",
		СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Процессы и задачи по предмету: ""%1""'; en = 'Processes and tasks for the subject ""%1""'"),
			Заголовок));
	ОткрытьФорму(
		"ОбщаяФорма.ПроцессыИЗадачи",
		ПараметрыФормы);
	
КонецПроцедуры

#КонецОбласти
